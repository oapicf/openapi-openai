--  OpenAI API
--  APIs for sampling from and fine_tuning language models
--
--  The version of the OpenAPI document: 2.0.0
--  Contact: blah+oapicf@cliffano.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.4.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

package body .Models is
   pragma Style_Checks ("-bmrIu");

   pragma Warnings (Off, "*use clause for package*");

   use Swagger.Streams;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ChatCompletionRequestMessageFunctionCall_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      if not Value.Arguments.Is_Null then
         Into.Write_Entity ("arguments", Value.Arguments);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ChatCompletionRequestMessageFunctionCall_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ChatCompletionRequestMessageFunctionCall_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "arguments", Value.Arguments);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ChatCompletionRequestMessageFunctionCall_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ChatCompletionRequestMessageFunctionCall_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateChatCompletionRequestFunctionCallOneOf_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateChatCompletionRequestFunctionCallOneOf_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateChatCompletionRequestFunctionCallOneOf_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateChatCompletionRequestFunctionCallOneOf_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateChatCompletionRequestFunctionCallOneOf_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateChatCompletionRequestFunctionCall_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateChatCompletionRequestFunctionCall_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateChatCompletionRequestFunctionCall_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateChatCompletionRequestFunctionCall_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateChatCompletionRequestFunctionCall_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateChatCompletionRequestModel_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateChatCompletionRequestModel_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateChatCompletionRequestModel_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateChatCompletionRequestModel_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateChatCompletionRequestModel_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateChatCompletionRequestStop_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateChatCompletionRequestStop_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateChatCompletionRequestStop_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateChatCompletionRequestStop_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateChatCompletionRequestStop_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateCompletionRequestModel_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateCompletionRequestModel_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateCompletionRequestModel_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateCompletionRequestModel_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateCompletionRequestModel_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateCompletionRequestPrompt_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateCompletionRequestPrompt_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateCompletionRequestPrompt_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateCompletionRequestPrompt_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateCompletionRequestPrompt_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateCompletionRequestStop_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateCompletionRequestStop_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateCompletionRequestStop_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateCompletionRequestStop_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateCompletionRequestStop_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateCompletionResponseUsage_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("prompt_tokens", Value.Prompt_Tokens);
      Into.Write_Entity ("completion_tokens", Value.Completion_Tokens);
      Into.Write_Entity ("total_tokens", Value.Total_Tokens);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateCompletionResponseUsage_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateCompletionResponseUsage_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "prompt_tokens", Value.Prompt_Tokens);
      Swagger.Streams.Deserialize (Object, "completion_tokens", Value.Completion_Tokens);
      Swagger.Streams.Deserialize (Object, "total_tokens", Value.Total_Tokens);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateCompletionResponseUsage_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateCompletionResponseUsage_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateEditRequestModel_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateEditRequestModel_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateEditRequestModel_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateEditRequestModel_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateEditRequestModel_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateEmbeddingRequestInput_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateEmbeddingRequestInput_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateEmbeddingRequestInput_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateEmbeddingRequestInput_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateEmbeddingRequestInput_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateEmbeddingRequestModel_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateEmbeddingRequestModel_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateEmbeddingRequestModel_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateEmbeddingRequestModel_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateEmbeddingRequestModel_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateEmbeddingResponseDataInner_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("index", Value.Index);
      Into.Write_Entity ("object", Value.Object);
      Serialize (Into, "embedding", Value.Embedding);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateEmbeddingResponseDataInner_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateEmbeddingResponseDataInner_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "index", Value.Index);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "embedding", Value.Embedding);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateEmbeddingResponseDataInner_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateEmbeddingResponseDataInner_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateEmbeddingResponseUsage_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("prompt_tokens", Value.Prompt_Tokens);
      Into.Write_Entity ("total_tokens", Value.Total_Tokens);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateEmbeddingResponseUsage_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateEmbeddingResponseUsage_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "prompt_tokens", Value.Prompt_Tokens);
      Swagger.Streams.Deserialize (Object, "total_tokens", Value.Total_Tokens);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateEmbeddingResponseUsage_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateEmbeddingResponseUsage_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateFineTuneRequestModel_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateFineTuneRequestModel_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateFineTuneRequestModel_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateFineTuneRequestModel_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateFineTuneRequestModel_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateImageRequest_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("prompt", Value.Prompt);
      Into.Write_Entity ("n", Value.N);
      Into.Write_Entity ("size", Value.Size);
      Into.Write_Entity ("response_format", Value.Response_Format);
      if not Value.User.Is_Null then
         Into.Write_Entity ("user", Value.User);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateImageRequest_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateImageRequest_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "prompt", Value.Prompt);
      Swagger.Streams.Deserialize (Object, "n", Value.N);
      Swagger.Streams.Deserialize (Object, "size", Value.Size);
      Swagger.Streams.Deserialize (Object, "response_format", Value.Response_Format);
      Swagger.Streams.Deserialize (Object, "user", Value.User);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateImageRequest_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateImageRequest_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateModerationRequestInput_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateModerationRequestInput_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateModerationRequestInput_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateModerationRequestInput_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateModerationRequestInput_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateModerationRequestModel_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateModerationRequestModel_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateModerationRequestModel_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateModerationRequestModel_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateModerationRequestModel_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateModerationResponseResultsInnerCategories_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("hate", Value.Hate);
      Into.Write_Entity ("hate/threatening", Value.Hate_Threatening);
      Into.Write_Entity ("self-harm", Value.Self_Harm);
      Into.Write_Entity ("sexual", Value.Sexual);
      Into.Write_Entity ("sexual/minors", Value.Sexual_Minors);
      Into.Write_Entity ("violence", Value.Violence);
      Into.Write_Entity ("violence/graphic", Value.Violence_Graphic);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateModerationResponseResultsInnerCategories_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateModerationResponseResultsInnerCategories_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "hate", Value.Hate);
      Swagger.Streams.Deserialize (Object, "hate/threatening", Value.Hate_Threatening);
      Swagger.Streams.Deserialize (Object, "self-harm", Value.Self_Harm);
      Swagger.Streams.Deserialize (Object, "sexual", Value.Sexual);
      Swagger.Streams.Deserialize (Object, "sexual/minors", Value.Sexual_Minors);
      Swagger.Streams.Deserialize (Object, "violence", Value.Violence);
      Swagger.Streams.Deserialize (Object, "violence/graphic", Value.Violence_Graphic);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateModerationResponseResultsInnerCategories_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateModerationResponseResultsInnerCategories_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateModerationResponseResultsInnerCategoryScores_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "hate", Value.Hate);
      Serialize (Into, "hate/threatening", Value.Hate_Threatening);
      Serialize (Into, "self-harm", Value.Self_Harm);
      Serialize (Into, "sexual", Value.Sexual);
      Serialize (Into, "sexual/minors", Value.Sexual_Minors);
      Serialize (Into, "violence", Value.Violence);
      Serialize (Into, "violence/graphic", Value.Violence_Graphic);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateModerationResponseResultsInnerCategoryScores_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateModerationResponseResultsInnerCategoryScores_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "hate", Value.Hate);
      Swagger.Streams.Deserialize (Object, "hate/threatening", Value.Hate_Threatening);
      Swagger.Streams.Deserialize (Object, "self-harm", Value.Self_Harm);
      Swagger.Streams.Deserialize (Object, "sexual", Value.Sexual);
      Swagger.Streams.Deserialize (Object, "sexual/minors", Value.Sexual_Minors);
      Swagger.Streams.Deserialize (Object, "violence", Value.Violence);
      Swagger.Streams.Deserialize (Object, "violence/graphic", Value.Violence_Graphic);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateModerationResponseResultsInnerCategoryScores_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateModerationResponseResultsInnerCategoryScores_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateTranscriptionRequestModel_Type) is
   begin
      Into.Start_Entity (Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateTranscriptionRequestModel_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateTranscriptionRequestModel_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateTranscriptionRequestModel_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateTranscriptionRequestModel_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateTranscriptionResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("text", Value.Text);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateTranscriptionResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateTranscriptionResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "text", Value.Text);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateTranscriptionResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateTranscriptionResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateTranslationResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("text", Value.Text);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateTranslationResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateTranslationResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "text", Value.Text);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateTranslationResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateTranslationResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeleteFileResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("deleted", Value.Deleted);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeleteFileResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeleteFileResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "deleted", Value.Deleted);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeleteFileResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.DeleteFileResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeleteModelResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("deleted", Value.Deleted);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeleteModelResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeleteModelResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "deleted", Value.Deleted);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeleteModelResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.DeleteModelResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Error_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("message", Value.Message);
      Into.Write_Entity ("param", Value.Param);
      Into.Write_Entity ("code", Value.Code);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Error_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Error_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "message", Value.Message);
      Swagger.Streams.Deserialize (Object, "param", Value.Param);
      Swagger.Streams.Deserialize (Object, "code", Value.Code);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Error_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.Error_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FineTuneEvent_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("created_at", Value.Created_At);
      Into.Write_Entity ("level", Value.Level);
      Into.Write_Entity ("message", Value.Message);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FineTuneEvent_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FineTuneEvent_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "created_at", Value.Created_At);
      Swagger.Streams.Deserialize (Object, "level", Value.Level);
      Swagger.Streams.Deserialize (Object, "message", Value.Message);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FineTuneEvent_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.FineTuneEvent_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ImagesResponseDataInner_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Url.Is_Null then
         Into.Write_Entity ("url", Value.Url);
      end if;
      if not Value.B_64_Json.Is_Null then
         Into.Write_Entity ("b64_json", Value.B_64_Json);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ImagesResponseDataInner_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ImagesResponseDataInner_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
      Swagger.Streams.Deserialize (Object, "b64_json", Value.B_64_Json);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ImagesResponseDataInner_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ImagesResponseDataInner_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Model_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("created", Value.Created);
      Into.Write_Entity ("owned_by", Value.Owned_By);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Model_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Model_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "created", Value.Created);
      Swagger.Streams.Deserialize (Object, "owned_by", Value.Owned_By);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Model_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.Model_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OpenAIFile_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("bytes", Value.Bytes);
      Into.Write_Entity ("created_at", Value.Created_At);
      Into.Write_Entity ("filename", Value.Filename);
      Into.Write_Entity ("purpose", Value.Purpose);
      if not Value.Status.Is_Null then
         Into.Write_Entity ("status", Value.Status);
      end if;
      Into.Write_Entity ("status_details", Value.Status_Details);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OpenAIFile_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OpenAIFile_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "bytes", Value.Bytes);
      Swagger.Streams.Deserialize (Object, "created_at", Value.Created_At);
      Swagger.Streams.Deserialize (Object, "filename", Value.Filename);
      Swagger.Streams.Deserialize (Object, "purpose", Value.Purpose);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Swagger.Streams.Deserialize (Object, "status_details", Value.Status_Details);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OpenAIFile_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.OpenAIFile_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ChatCompletionFunctions_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      if not Value.Description.Is_Null then
         Into.Write_Entity ("description", Value.Description);
      end if;
      Serialize (Into, "parameters", Value.Parameters);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ChatCompletionFunctions_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ChatCompletionFunctions_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "parameters", Value.Parameters);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ChatCompletionFunctions_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ChatCompletionFunctions_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ChatCompletionRequestMessage_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("role", Value.Role);
      if not Value.Content.Is_Null then
         Into.Write_Entity ("content", Value.Content);
      end if;
      if not Value.Name.Is_Null then
         Into.Write_Entity ("name", Value.Name);
      end if;
      Serialize (Into, "function_call", Value.Function_Call);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ChatCompletionRequestMessage_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ChatCompletionRequestMessage_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "role", Value.Role);
      Swagger.Streams.Deserialize (Object, "content", Value.Content);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Deserialize (Object, "function_call", Value.Function_Call);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ChatCompletionRequestMessage_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ChatCompletionRequestMessage_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ChatCompletionResponseMessage_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("role", Value.Role);
      Into.Write_Entity ("content", Value.Content);
      Serialize (Into, "function_call", Value.Function_Call);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ChatCompletionResponseMessage_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ChatCompletionResponseMessage_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "role", Value.Role);
      Swagger.Streams.Deserialize (Object, "content", Value.Content);
      Deserialize (Object, "function_call", Value.Function_Call);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ChatCompletionResponseMessage_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ChatCompletionResponseMessage_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ChatCompletionStreamResponseDelta_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Role.Is_Null then
         Into.Write_Entity ("role", Value.Role);
      end if;
      Into.Write_Entity ("content", Value.Content);
      Serialize (Into, "function_call", Value.Function_Call);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ChatCompletionStreamResponseDelta_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ChatCompletionStreamResponseDelta_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "role", Value.Role);
      Swagger.Streams.Deserialize (Object, "content", Value.Content);
      Deserialize (Object, "function_call", Value.Function_Call);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ChatCompletionStreamResponseDelta_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ChatCompletionStreamResponseDelta_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateChatCompletionResponseChoicesInner_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Index.Is_Null then
         Into.Write_Entity ("index", Value.Index);
      end if;
      Serialize (Into, "message", Value.Message);
      if not Value.Finish_Reason.Is_Null then
         Into.Write_Entity ("finish_reason", Value.Finish_Reason);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateChatCompletionResponseChoicesInner_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateChatCompletionResponseChoicesInner_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "index", Value.Index);
      Deserialize (Object, "message", Value.Message);
      Swagger.Streams.Deserialize (Object, "finish_reason", Value.Finish_Reason);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateChatCompletionResponseChoicesInner_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateChatCompletionResponseChoicesInner_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateChatCompletionStreamResponseChoicesInner_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Index.Is_Null then
         Into.Write_Entity ("index", Value.Index);
      end if;
      Serialize (Into, "delta", Value.Delta);
      if not Value.Finish_Reason.Is_Null then
         Into.Write_Entity ("finish_reason", Value.Finish_Reason);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateChatCompletionStreamResponseChoicesInner_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateChatCompletionStreamResponseChoicesInner_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "index", Value.Index);
      Deserialize (Object, "delta", Value.Delta);
      Swagger.Streams.Deserialize (Object, "finish_reason", Value.Finish_Reason);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateChatCompletionStreamResponseChoicesInner_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateChatCompletionStreamResponseChoicesInner_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateChatCompletionStreamResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("created", Value.Created);
      Into.Write_Entity ("model", Value.Model);
      Serialize (Into, "choices", Value.Choices);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateChatCompletionStreamResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateChatCompletionStreamResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "created", Value.Created);
      Swagger.Streams.Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "choices", Value.Choices);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateChatCompletionStreamResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateChatCompletionStreamResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateCompletionResponseChoicesInnerLogprobs_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "tokens", Value.Tokens);
      Serialize (Into, "token_logprobs", Value.Token_Logprobs);
      Serialize (Into, "top_logprobs", Value.Top_Logprobs);
      Serialize (Into, "text_offset", Value.Text_Offset);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateCompletionResponseChoicesInnerLogprobs_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateCompletionResponseChoicesInnerLogprobs_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "tokens", Value.Tokens);
      Swagger.Streams.Deserialize (Object, "token_logprobs", Value.Token_Logprobs);
      Deserialize (Object, "top_logprobs", Value.Top_Logprobs);
      Swagger.Streams.Deserialize (Object, "text_offset", Value.Text_Offset);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateCompletionResponseChoicesInnerLogprobs_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateCompletionResponseChoicesInnerLogprobs_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateCompletionResponseChoicesInner_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("text", Value.Text);
      Into.Write_Entity ("index", Value.Index);
      Serialize (Into, "logprobs", Value.Logprobs);
      Into.Write_Entity ("finish_reason", Value.Finish_Reason);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateCompletionResponseChoicesInner_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateCompletionResponseChoicesInner_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "text", Value.Text);
      Swagger.Streams.Deserialize (Object, "index", Value.Index);
      Deserialize (Object, "logprobs", Value.Logprobs);
      Swagger.Streams.Deserialize (Object, "finish_reason", Value.Finish_Reason);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateCompletionResponseChoicesInner_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateCompletionResponseChoicesInner_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateEditRequest_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "model", Value.Model);
      Into.Write_Entity ("input", Value.Input);
      Into.Write_Entity ("instruction", Value.Instruction);
      Into.Write_Entity ("n", Value.N);
      Serialize (Into, "temperature", Value.Temperature);
      Serialize (Into, "top_p", Value.Top_P);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateEditRequest_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateEditRequest_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "model", Value.Model);
      Swagger.Streams.Deserialize (Object, "input", Value.Input);
      Swagger.Streams.Deserialize (Object, "instruction", Value.Instruction);
      Swagger.Streams.Deserialize (Object, "n", Value.N);
      Swagger.Streams.Deserialize (Object, "temperature", Value.Temperature);
      Swagger.Streams.Deserialize (Object, "top_p", Value.Top_P);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateEditRequest_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateEditRequest_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateEditResponseChoicesInner_Type) is
   begin
      Into.Start_Entity (Name);
      if not Value.Text.Is_Null then
         Into.Write_Entity ("text", Value.Text);
      end if;
      if not Value.Index.Is_Null then
         Into.Write_Entity ("index", Value.Index);
      end if;
      Serialize (Into, "logprobs", Value.Logprobs);
      if not Value.Finish_Reason.Is_Null then
         Into.Write_Entity ("finish_reason", Value.Finish_Reason);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateEditResponseChoicesInner_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateEditResponseChoicesInner_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "text", Value.Text);
      Swagger.Streams.Deserialize (Object, "index", Value.Index);
      Deserialize (Object, "logprobs", Value.Logprobs);
      Swagger.Streams.Deserialize (Object, "finish_reason", Value.Finish_Reason);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateEditResponseChoicesInner_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateEditResponseChoicesInner_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateFineTuneRequest_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("training_file", Value.Training_File);
      Into.Write_Entity ("validation_file", Value.Validation_File);
      Serialize (Into, "model", Value.Model);
      Into.Write_Entity ("n_epochs", Value.N_Epochs);
      Into.Write_Entity ("batch_size", Value.Batch_Size);
      Serialize (Into, "learning_rate_multiplier", Value.Learning_Rate_Multiplier);
      Serialize (Into, "prompt_loss_weight", Value.Prompt_Loss_Weight);
      Into.Write_Entity ("compute_classification_metrics", Value.Compute_Classification_Metrics);
      Into.Write_Entity ("classification_n_classes", Value.Classification_N_Classes);
      Into.Write_Entity ("classification_positive_class", Value.Classification_Positive_Class);
      Serialize (Into, "classification_betas", Value.Classification_Betas);
      Into.Write_Entity ("suffix", Value.Suffix);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateFineTuneRequest_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateFineTuneRequest_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "training_file", Value.Training_File);
      Swagger.Streams.Deserialize (Object, "validation_file", Value.Validation_File);
      Deserialize (Object, "model", Value.Model);
      Swagger.Streams.Deserialize (Object, "n_epochs", Value.N_Epochs);
      Swagger.Streams.Deserialize (Object, "batch_size", Value.Batch_Size);
      Swagger.Streams.Deserialize (Object, "learning_rate_multiplier", Value.Learning_Rate_Multiplier);
      Swagger.Streams.Deserialize (Object, "prompt_loss_weight", Value.Prompt_Loss_Weight);
      Swagger.Streams.Deserialize (Object, "compute_classification_metrics", Value.Compute_Classification_Metrics);
      Swagger.Streams.Deserialize (Object, "classification_n_classes", Value.Classification_N_Classes);
      Swagger.Streams.Deserialize (Object, "classification_positive_class", Value.Classification_Positive_Class);
      Swagger.Streams.Deserialize (Object, "classification_betas", Value.Classification_Betas);
      Swagger.Streams.Deserialize (Object, "suffix", Value.Suffix);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateFineTuneRequest_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateFineTuneRequest_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateModerationResponseResultsInner_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("flagged", Value.Flagged);
      Serialize (Into, "categories", Value.Categories);
      Serialize (Into, "category_scores", Value.Category_Scores);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateModerationResponseResultsInner_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateModerationResponseResultsInner_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "flagged", Value.Flagged);
      Deserialize (Object, "categories", Value.Categories);
      Deserialize (Object, "category_scores", Value.Category_Scores);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateModerationResponseResultsInner_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateModerationResponseResultsInner_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateModerationResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("model", Value.Model);
      Serialize (Into, "results", Value.Results);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateModerationResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateModerationResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "results", Value.Results);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateModerationResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateModerationResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ErrorResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "error", Value.Error);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ErrorResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ErrorResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "error", Value.Error);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ErrorResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ErrorResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ImagesResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("created", Value.Created);
      Serialize (Into, "data", Value.Data);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ImagesResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ImagesResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "created", Value.Created);
      Deserialize (Object, "data", Value.Data);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ImagesResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ImagesResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ListFilesResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("object", Value.Object);
      Serialize (Into, "data", Value.Data);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ListFilesResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ListFilesResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Deserialize (Object, "data", Value.Data);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ListFilesResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ListFilesResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ListFineTuneEventsResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("object", Value.Object);
      Serialize (Into, "data", Value.Data);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ListFineTuneEventsResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ListFineTuneEventsResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Deserialize (Object, "data", Value.Data);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ListFineTuneEventsResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ListFineTuneEventsResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ListModelsResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("object", Value.Object);
      Serialize (Into, "data", Value.Data);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ListModelsResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ListModelsResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Deserialize (Object, "data", Value.Data);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ListModelsResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ListModelsResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateChatCompletionResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("created", Value.Created);
      Into.Write_Entity ("model", Value.Model);
      Serialize (Into, "choices", Value.Choices);
      Serialize (Into, "usage", Value.Usage);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateChatCompletionResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateChatCompletionResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "created", Value.Created);
      Swagger.Streams.Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "choices", Value.Choices);
      Deserialize (Object, "usage", Value.Usage);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateChatCompletionResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateChatCompletionResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateCompletionResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("created", Value.Created);
      Into.Write_Entity ("model", Value.Model);
      Serialize (Into, "choices", Value.Choices);
      Serialize (Into, "usage", Value.Usage);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateCompletionResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateCompletionResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "created", Value.Created);
      Swagger.Streams.Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "choices", Value.Choices);
      Deserialize (Object, "usage", Value.Usage);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateCompletionResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateCompletionResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateEditResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("created", Value.Created);
      Serialize (Into, "choices", Value.Choices);
      Serialize (Into, "usage", Value.Usage);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateEditResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateEditResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "created", Value.Created);
      Deserialize (Object, "choices", Value.Choices);
      Deserialize (Object, "usage", Value.Usage);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateEditResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateEditResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateEmbeddingRequest_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "model", Value.Model);
      Serialize (Into, "input", Value.Input);
      if not Value.User.Is_Null then
         Into.Write_Entity ("user", Value.User);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateEmbeddingRequest_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateEmbeddingRequest_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "input", Value.Input);
      Swagger.Streams.Deserialize (Object, "user", Value.User);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateEmbeddingRequest_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateEmbeddingRequest_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateEmbeddingResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("model", Value.Model);
      Serialize (Into, "data", Value.Data);
      Serialize (Into, "usage", Value.Usage);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateEmbeddingResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateEmbeddingResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "data", Value.Data);
      Deserialize (Object, "usage", Value.Usage);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateEmbeddingResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateEmbeddingResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateModerationRequest_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "input", Value.Input);
      Serialize (Into, "model", Value.Model);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateModerationRequest_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateModerationRequest_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "input", Value.Input);
      Deserialize (Object, "model", Value.Model);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateModerationRequest_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateModerationRequest_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FineTune_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("object", Value.Object);
      Into.Write_Entity ("created_at", Value.Created_At);
      Into.Write_Entity ("updated_at", Value.Updated_At);
      Into.Write_Entity ("model", Value.Model);
      Into.Write_Entity ("fine_tuned_model", Value.Fine_Tuned_Model);
      Into.Write_Entity ("organization_id", Value.Organization_Id);
      Into.Write_Entity ("status", Value.Status);
      Into.Write_Entity ("hyperparams", Value.Hyperparams);
      Serialize (Into, "training_files", Value.Training_Files);
      Serialize (Into, "validation_files", Value.Validation_Files);
      Serialize (Into, "result_files", Value.Result_Files);
      Serialize (Into, "events", Value.Events);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FineTune_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FineTune_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Swagger.Streams.Deserialize (Object, "created_at", Value.Created_At);
      Swagger.Streams.Deserialize (Object, "updated_at", Value.Updated_At);
      Swagger.Streams.Deserialize (Object, "model", Value.Model);
      Swagger.Streams.Deserialize (Object, "fine_tuned_model", Value.Fine_Tuned_Model);
      Swagger.Streams.Deserialize (Object, "organization_id", Value.Organization_Id);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Swagger.Streams.Deserialize (Object, "hyperparams", Value.Hyperparams);
      Deserialize (Object, "training_files", Value.Training_Files);
      Deserialize (Object, "validation_files", Value.Validation_Files);
      Deserialize (Object, "result_files", Value.Result_Files);
      Deserialize (Object, "events", Value.Events);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FineTune_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.FineTune_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ListFineTunesResponse_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("object", Value.Object);
      Serialize (Into, "data", Value.Data);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ListFineTunesResponse_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ListFineTunesResponse_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "object", Value.Object);
      Deserialize (Object, "data", Value.Data);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ListFineTunesResponse_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.ListFineTunesResponse_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateCompletionRequest_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "model", Value.Model);
      Serialize (Into, "prompt", Value.Prompt);
      Into.Write_Entity ("suffix", Value.Suffix);
      Into.Write_Entity ("max_tokens", Value.Max_Tokens);
      Serialize (Into, "temperature", Value.Temperature);
      Serialize (Into, "top_p", Value.Top_P);
      Into.Write_Entity ("n", Value.N);
      Into.Write_Entity ("stream", Value.Stream);
      Into.Write_Entity ("logprobs", Value.Logprobs);
      Into.Write_Entity ("echo", Value.Echo);
      Serialize (Into, "stop", Value.Stop);
      Serialize (Into, "presence_penalty", Value.Presence_Penalty);
      Serialize (Into, "frequency_penalty", Value.Frequency_Penalty);
      Into.Write_Entity ("best_of", Value.Best_Of);
      Into.Write_Entity ("logit_bias", Value.Logit_Bias);
      if not Value.User.Is_Null then
         Into.Write_Entity ("user", Value.User);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateCompletionRequest_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateCompletionRequest_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "prompt", Value.Prompt);
      Swagger.Streams.Deserialize (Object, "suffix", Value.Suffix);
      Swagger.Streams.Deserialize (Object, "max_tokens", Value.Max_Tokens);
      Swagger.Streams.Deserialize (Object, "temperature", Value.Temperature);
      Swagger.Streams.Deserialize (Object, "top_p", Value.Top_P);
      Swagger.Streams.Deserialize (Object, "n", Value.N);
      Swagger.Streams.Deserialize (Object, "stream", Value.Stream);
      Swagger.Streams.Deserialize (Object, "logprobs", Value.Logprobs);
      Swagger.Streams.Deserialize (Object, "echo", Value.Echo);
      Deserialize (Object, "stop", Value.Stop);
      Swagger.Streams.Deserialize (Object, "presence_penalty", Value.Presence_Penalty);
      Swagger.Streams.Deserialize (Object, "frequency_penalty", Value.Frequency_Penalty);
      Swagger.Streams.Deserialize (Object, "best_of", Value.Best_Of);
      Swagger.Streams.Deserialize (Object, "logit_bias", Value.Logit_Bias);
      Swagger.Streams.Deserialize (Object, "user", Value.User);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateCompletionRequest_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateCompletionRequest_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateChatCompletionRequest_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "model", Value.Model);
      Serialize (Into, "messages", Value.Messages);
      Serialize (Into, "functions", Value.Functions);
      Serialize (Into, "function_call", Value.Function_Call);
      Serialize (Into, "temperature", Value.Temperature);
      Serialize (Into, "top_p", Value.Top_P);
      Into.Write_Entity ("n", Value.N);
      Into.Write_Entity ("stream", Value.Stream);
      Serialize (Into, "stop", Value.Stop);
      if not Value.Max_Tokens.Is_Null then
         Into.Write_Entity ("max_tokens", Value.Max_Tokens);
      end if;
      Serialize (Into, "presence_penalty", Value.Presence_Penalty);
      Serialize (Into, "frequency_penalty", Value.Frequency_Penalty);
      Into.Write_Entity ("logit_bias", Value.Logit_Bias);
      if not Value.User.Is_Null then
         Into.Write_Entity ("user", Value.User);
      end if;
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateChatCompletionRequest_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateChatCompletionRequest_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "model", Value.Model);
      Deserialize (Object, "messages", Value.Messages);
      Deserialize (Object, "functions", Value.Functions);
      Deserialize (Object, "function_call", Value.Function_Call);
      Swagger.Streams.Deserialize (Object, "temperature", Value.Temperature);
      Swagger.Streams.Deserialize (Object, "top_p", Value.Top_P);
      Swagger.Streams.Deserialize (Object, "n", Value.N);
      Swagger.Streams.Deserialize (Object, "stream", Value.Stream);
      Deserialize (Object, "stop", Value.Stop);
      Swagger.Streams.Deserialize (Object, "max_tokens", Value.Max_Tokens);
      Swagger.Streams.Deserialize (Object, "presence_penalty", Value.Presence_Penalty);
      Swagger.Streams.Deserialize (Object, "frequency_penalty", Value.Frequency_Penalty);
      Swagger.Streams.Deserialize (Object, "logit_bias", Value.Logit_Bias);
      Swagger.Streams.Deserialize (Object, "user", Value.User);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateChatCompletionRequest_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : .Models.CreateChatCompletionRequest_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;


end .Models;
