--  OpenAI API
--  The OpenAI REST API. Please see https://platform.openai.com/docs/api_reference for more details.
--
--  The version of the OpenAPI document: 2.0.0
--  Contact: blah+oapicf@cliffano.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.4.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
pragma Warnings (Off, "*no entities of*are referenced");
with Swagger.Servers;
with .Models;
with Security.Permissions;
with Swagger.UString_Vectors;
with Swagger.UString_Vectors;
with Swagger.UString_Vectors;
with Swagger.UString_Vectors;
with Swagger.UString_Vectors;
with Swagger.UString_Vectors;
with Swagger.UString_Vectors;
with Swagger.UString_Vectors;
with Swagger.UString_Vectors;
package .Skeletons is
   pragma Style_Checks ("-bmrIu");
   pragma Warnings (Off, "*use clause for package*");
   use .Models;
   type Server_Type is limited interface;



   --  Cancels a run that is `in_progress`.
   procedure Cancel_Run
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Run_Id : in Swagger.UString;
       Result  : out .Models.RunObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Create an assistant with a model and instructions.
   procedure Create_Assistant
      (Server : in out Server_Type;
       Create_Assistant_Request_Type : in CreateAssistantRequest_Type;
       Result  : out .Models.AssistantObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Create an assistant file by attaching a [File](/docs/api_reference/files) to an [assistant](/docs/api_reference/assistants).
   procedure Create_Assistant_File
      (Server : in out Server_Type;
       Assistant_Id : in Swagger.UString;
       Create_Assistant_File_Request_Type : in CreateAssistantFileRequest_Type;
       Result  : out .Models.AssistantFileObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Create a message.
   procedure Create_Message
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Create_Message_Request_Type : in CreateMessageRequest_Type;
       Result  : out .Models.MessageObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Create a run.
   procedure Create_Run
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Create_Run_Request_Type : in CreateRunRequest_Type;
       Result  : out .Models.RunObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Create a thread.
   procedure Create_Thread
      (Server : in out Server_Type;
       Create_Thread_Request_Type : in CreateThreadRequest_Type;
       Result  : out .Models.ThreadObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Create a thread and run it in one request.
   procedure Create_Thread_And_Run
      (Server : in out Server_Type;
       Create_Thread_And_Run_Request_Type : in CreateThreadAndRunRequest_Type;
       Result  : out .Models.RunObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Delete an assistant.
   procedure Delete_Assistant
      (Server : in out Server_Type;
       Assistant_Id : in Swagger.UString;
       Result  : out .Models.DeleteAssistantResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Delete an assistant file.
   procedure Delete_Assistant_File
      (Server : in out Server_Type;
       Assistant_Id : in Swagger.UString;
       File_Id : in Swagger.UString;
       Result  : out .Models.DeleteAssistantFileResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Delete a thread.
   procedure Delete_Thread
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Result  : out .Models.DeleteThreadResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Retrieves an assistant.
   procedure Get_Assistant
      (Server : in out Server_Type;
       Assistant_Id : in Swagger.UString;
       Result  : out .Models.AssistantObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Retrieves an AssistantFile.
   procedure Get_Assistant_File
      (Server : in out Server_Type;
       Assistant_Id : in Swagger.UString;
       File_Id : in Swagger.UString;
       Result  : out .Models.AssistantFileObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Retrieve a message.
   procedure Get_Message
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Message_Id : in Swagger.UString;
       Result  : out .Models.MessageObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Retrieves a message file.
   procedure Get_Message_File
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Message_Id : in Swagger.UString;
       File_Id : in Swagger.UString;
       Result  : out .Models.MessageFileObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Retrieves a run.
   procedure Get_Run
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Run_Id : in Swagger.UString;
       Result  : out .Models.RunObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Retrieves a run step.
   procedure Get_Run_Step
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Run_Id : in Swagger.UString;
       Step_Id : in Swagger.UString;
       Result  : out .Models.RunStepObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Retrieves a thread.
   procedure Get_Thread
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Result  : out .Models.ThreadObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Returns a list of assistant files.
   procedure List_Assistant_Files
      (Server : in out Server_Type;
       Assistant_Id : in Swagger.UString;
       Limit : in Swagger.Nullable_Integer;
       Order : in Swagger.Nullable_UString;
       After : in Swagger.Nullable_UString;
       Before : in Swagger.Nullable_UString;
       Result  : out .Models.ListAssistantFilesResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Returns a list of assistants.
   procedure List_Assistants
      (Server : in out Server_Type;
       Limit : in Swagger.Nullable_Integer;
       Order : in Swagger.Nullable_UString;
       After : in Swagger.Nullable_UString;
       Before : in Swagger.Nullable_UString;
       Result  : out .Models.ListAssistantsResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Returns a list of message files.
   procedure List_Message_Files
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Message_Id : in Swagger.UString;
       Limit : in Swagger.Nullable_Integer;
       Order : in Swagger.Nullable_UString;
       After : in Swagger.Nullable_UString;
       Before : in Swagger.Nullable_UString;
       Result  : out .Models.ListMessageFilesResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Returns a list of messages for a given thread.
   procedure List_Messages
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Limit : in Swagger.Nullable_Integer;
       Order : in Swagger.Nullable_UString;
       After : in Swagger.Nullable_UString;
       Before : in Swagger.Nullable_UString;
       Run_Id : in Swagger.Nullable_UString;
       Result  : out .Models.ListMessagesResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Returns a list of run steps belonging to a run.
   procedure List_Run_Steps
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Run_Id : in Swagger.UString;
       Limit : in Swagger.Nullable_Integer;
       Order : in Swagger.Nullable_UString;
       After : in Swagger.Nullable_UString;
       Before : in Swagger.Nullable_UString;
       Result  : out .Models.ListRunStepsResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Returns a list of runs belonging to a thread.
   procedure List_Runs
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Limit : in Swagger.Nullable_Integer;
       Order : in Swagger.Nullable_UString;
       After : in Swagger.Nullable_UString;
       Before : in Swagger.Nullable_UString;
       Result  : out .Models.ListRunsResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Modifies an assistant.
   procedure Modify_Assistant
      (Server : in out Server_Type;
       Assistant_Id : in Swagger.UString;
       Modify_Assistant_Request_Type : in ModifyAssistantRequest_Type;
       Result  : out .Models.AssistantObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Modifies a message.
   procedure Modify_Message
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Message_Id : in Swagger.UString;
       Modify_Message_Request_Type : in ModifyMessageRequest_Type;
       Result  : out .Models.MessageObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Modifies a run.
   procedure Modify_Run
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Run_Id : in Swagger.UString;
       Modify_Run_Request_Type : in ModifyRunRequest_Type;
       Result  : out .Models.RunObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Modifies a thread.
   procedure Modify_Thread
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Modify_Thread_Request_Type : in ModifyThreadRequest_Type;
       Result  : out .Models.ThreadObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  When a run has the `status: \"requires_action\"` and `required_action.type` is `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request.
   procedure Submit_Tool_Ouputs_To_Run
      (Server : in out Server_Type;
       Thread_Id : in Swagger.UString;
       Run_Id : in Swagger.UString;
       Submit_Tool_Outputs_Run_Request_Type : in SubmitToolOutputsRunRequest_Type;
       Result  : out .Models.RunObject_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Generates audio from the input text.
   procedure Create_Speech
      (Server : in out Server_Type;
       Create_Speech_Request_Type : in CreateSpeechRequest_Type;
       Result  : out Swagger.Blob_Ref;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Transcribes audio into the input language.
   procedure Create_Transcription
      (Server : in out Server_Type;
       File : in Swagger.File_Part_Type;
       Model : in .Models.CreateTranscriptionRequestModel_Type;
       Language : in Swagger.Nullable_UString;
       Prompt : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Temperature : in Swagger.Number;
       Timestamp_Granularities_Left_Square_Bracket_Right_Square_Bracket : in Swagger.UString_Vectors.Vector;
       Result  : out .Models.CreateTranscription200Response_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Translates audio into English.
   procedure Create_Translation
      (Server : in out Server_Type;
       File : in Swagger.File_Part_Type;
       Model : in .Models.CreateTranscriptionRequestModel_Type;
       Prompt : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Temperature : in Swagger.Number;
       Result  : out .Models.CreateTranslation200Response_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Creates a model response for the given chat conversation.
   procedure Create_Chat_Completion
      (Server : in out Server_Type;
       Create_Chat_Completion_Request_Type : in CreateChatCompletionRequest_Type;
       Result  : out .Models.CreateChatCompletionResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Creates a completion for the provided prompt and parameters.
   procedure Create_Completion
      (Server : in out Server_Type;
       Create_Completion_Request_Type : in CreateCompletionRequest_Type;
       Result  : out .Models.CreateCompletionResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Creates an embedding vector representing the input text.
   procedure Create_Embedding
      (Server : in out Server_Type;
       Create_Embedding_Request_Type : in CreateEmbeddingRequest_Type;
       Result  : out .Models.CreateEmbeddingResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.  The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine_tuning API only supports `.jsonl` files.  Please [contact us](https://help.openai.com/) if you need to increase these storage limits.
   procedure Create_File
      (Server : in out Server_Type;
       File : in Swagger.File_Part_Type;
       Purpose : in Swagger.UString;
       Result  : out .Models.OpenAIFile_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Delete a file.
   procedure Delete_File
      (Server : in out Server_Type;
       File_Id : in Swagger.UString;
       Result  : out .Models.DeleteFileResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Returns the contents of the specified file.
   procedure Download_File
      (Server : in out Server_Type;
       File_Id : in Swagger.UString;
       Result  : out Swagger.UString;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Returns a list of files that belong to the user's organization.
   procedure List_Files
      (Server : in out Server_Type;
       Purpose : in Swagger.Nullable_UString;
       Result  : out .Models.ListFilesResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Returns information about a specific file.
   procedure Retrieve_File
      (Server : in out Server_Type;
       File_Id : in Swagger.UString;
       Result  : out .Models.OpenAIFile_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Immediately cancel a fine_tune job.
   procedure Cancel_Fine_Tuning_Job
      (Server : in out Server_Type;
       Fine_Tuning_Job_Id : in Swagger.UString;
       Result  : out .Models.FineTuningJob_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Creates a fine_tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine_tuned models once complete.  [Learn more about fine_tuning](/docs/guides/fine_tuning)
   procedure Create_Fine_Tuning_Job
      (Server : in out Server_Type;
       Create_Fine_Tuning_Job_Request_Type : in CreateFineTuningJobRequest_Type;
       Result  : out .Models.FineTuningJob_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Get status updates for a fine_tuning job.
   procedure List_Fine_Tuning_Events
      (Server : in out Server_Type;
       Fine_Tuning_Job_Id : in Swagger.UString;
       After : in Swagger.Nullable_UString;
       Limit : in Swagger.Nullable_Integer;
       Result  : out .Models.ListFineTuningJobEventsResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  List checkpoints for a fine_tuning job.
   procedure List_Fine_Tuning_Job_Checkpoints
      (Server : in out Server_Type;
       Fine_Tuning_Job_Id : in Swagger.UString;
       After : in Swagger.Nullable_UString;
       Limit : in Swagger.Nullable_Integer;
       Result  : out .Models.ListFineTuningJobCheckpointsResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  List your organization's fine_tuning jobs
   procedure List_Paginated_Fine_Tuning_Jobs
      (Server : in out Server_Type;
       After : in Swagger.Nullable_UString;
       Limit : in Swagger.Nullable_Integer;
       Result  : out .Models.ListPaginatedFineTuningJobsResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Get info about a fine_tuning job.  [Learn more about fine_tuning](/docs/guides/fine_tuning)
   procedure Retrieve_Fine_Tuning_Job
      (Server : in out Server_Type;
       Fine_Tuning_Job_Id : in Swagger.UString;
       Result  : out .Models.FineTuningJob_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Creates an image given a prompt.
   procedure Create_Image
      (Server : in out Server_Type;
       Create_Image_Request_Type : in CreateImageRequest_Type;
       Result  : out .Models.ImagesResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Creates an edited or extended image given an original image and a prompt.
   procedure Create_Image_Edit
      (Server : in out Server_Type;
       Image : in Swagger.File_Part_Type;
       Prompt : in Swagger.UString;
       Mask : in Swagger.File_Part_Type;
       Model : in .Models.CreateImageEditRequestModel_Type;
       N : in Swagger.Nullable_Integer;
       Size : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       User : in Swagger.Nullable_UString;
       Result  : out .Models.ImagesResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Creates a variation of a given image.
   procedure Create_Image_Variation
      (Server : in out Server_Type;
       Image : in Swagger.File_Part_Type;
       Model : in .Models.CreateImageEditRequestModel_Type;
       N : in Swagger.Nullable_Integer;
       Response_Format : in Swagger.Nullable_UString;
       Size : in Swagger.Nullable_UString;
       User : in Swagger.Nullable_UString;
       Result  : out .Models.ImagesResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Delete a fine_tuned model. You must have the Owner role in your organization to delete a model.
   procedure Delete_Model
      (Server : in out Server_Type;
       Model : in Swagger.UString;
       Result  : out .Models.DeleteModelResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Lists the currently available models, and provides basic information about each one such as the owner and availability.
   procedure List_Models
      (Server : in out Server_Type
       ;
       Result  : out .Models.ListModelsResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
   procedure Retrieve_Model
      (Server : in out Server_Type;
       Model : in Swagger.UString;
       Result  : out .Models.Model_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  Classifies if text is potentially harmful.
   procedure Create_Moderation
      (Server : in out Server_Type;
       Create_Moderation_Request_Type : in CreateModerationRequest_Type;
       Result  : out .Models.CreateModerationResponse_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   generic
      type Implementation_Type is limited new Server_Type with private;
      URI_Prefix : String := "";
   package Skeleton is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  Cancels a run that is `in_progress`.
      procedure Cancel_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create an assistant with a model and instructions.
      procedure Create_Assistant
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create an assistant file by attaching a [File](/docs/api_reference/files) to an [assistant](/docs/api_reference/assistants).
      procedure Create_Assistant_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create a message.
      procedure Create_Message
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create a run.
      procedure Create_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create a thread.
      procedure Create_Thread
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create a thread and run it in one request.
      procedure Create_Thread_And_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete an assistant.
      procedure Delete_Assistant
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete an assistant file.
      procedure Delete_Assistant_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete a thread.
      procedure Delete_Thread
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves an assistant.
      procedure Get_Assistant
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves an AssistantFile.
      procedure Get_Assistant_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieve a message.
      procedure Get_Message
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves a message file.
      procedure Get_Message_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves a run.
      procedure Get_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves a run step.
      procedure Get_Run_Step
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves a thread.
      procedure Get_Thread
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of assistant files.
      procedure List_Assistant_Files
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of assistants.
      procedure List_Assistants
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of message files.
      procedure List_Message_Files
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of messages for a given thread.
      procedure List_Messages
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of run steps belonging to a run.
      procedure List_Run_Steps
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of runs belonging to a thread.
      procedure List_Runs
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Modifies an assistant.
      procedure Modify_Assistant
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Modifies a message.
      procedure Modify_Message
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Modifies a run.
      procedure Modify_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Modifies a thread.
      procedure Modify_Thread
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  When a run has the `status: \"requires_action\"` and `required_action.type` is `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request.
      procedure Submit_Tool_Ouputs_To_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Generates audio from the input text.
      procedure Create_Speech
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Transcribes audio into the input language.
      procedure Create_Transcription
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Translates audio into English.
      procedure Create_Translation
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates a model response for the given chat conversation.
      procedure Create_Chat_Completion
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates a completion for the provided prompt and parameters.
      procedure Create_Completion
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates an embedding vector representing the input text.
      procedure Create_Embedding
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.  The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine_tuning API only supports `.jsonl` files.  Please [contact us](https://help.openai.com/) if you need to increase these storage limits.
      procedure Create_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete a file.
      procedure Delete_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns the contents of the specified file.
      procedure Download_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of files that belong to the user's organization.
      procedure List_Files
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns information about a specific file.
      procedure Retrieve_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Immediately cancel a fine_tune job.
      procedure Cancel_Fine_Tuning_Job
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates a fine_tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine_tuned models once complete.  [Learn more about fine_tuning](/docs/guides/fine_tuning)
      procedure Create_Fine_Tuning_Job
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Get status updates for a fine_tuning job.
      procedure List_Fine_Tuning_Events
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  List checkpoints for a fine_tuning job.
      procedure List_Fine_Tuning_Job_Checkpoints
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  List your organization's fine_tuning jobs
      procedure List_Paginated_Fine_Tuning_Jobs
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Get info about a fine_tuning job.  [Learn more about fine_tuning](/docs/guides/fine_tuning)
      procedure Retrieve_Fine_Tuning_Job
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates an image given a prompt.
      procedure Create_Image
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates an edited or extended image given an original image and a prompt.
      procedure Create_Image_Edit
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates a variation of a given image.
      procedure Create_Image_Variation
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete a fine_tuned model. You must have the Owner role in your organization to delete a model.
      procedure Delete_Model
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Lists the currently available models, and provides basic information about each one such as the owner and availability.
      procedure List_Models
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
      procedure Retrieve_Model
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Classifies if text is potentially harmful.
      procedure Create_Moderation
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);

   end Skeleton;

   generic
      type Implementation_Type is limited new Server_Type with private;
      URI_Prefix : String := "";
   package Shared_Instance is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  Cancels a run that is `in_progress`.
      procedure Cancel_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create an assistant with a model and instructions.
      procedure Create_Assistant
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create an assistant file by attaching a [File](/docs/api_reference/files) to an [assistant](/docs/api_reference/assistants).
      procedure Create_Assistant_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create a message.
      procedure Create_Message
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create a run.
      procedure Create_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create a thread.
      procedure Create_Thread
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Create a thread and run it in one request.
      procedure Create_Thread_And_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete an assistant.
      procedure Delete_Assistant
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete an assistant file.
      procedure Delete_Assistant_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete a thread.
      procedure Delete_Thread
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves an assistant.
      procedure Get_Assistant
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves an AssistantFile.
      procedure Get_Assistant_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieve a message.
      procedure Get_Message
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves a message file.
      procedure Get_Message_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves a run.
      procedure Get_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves a run step.
      procedure Get_Run_Step
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves a thread.
      procedure Get_Thread
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of assistant files.
      procedure List_Assistant_Files
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of assistants.
      procedure List_Assistants
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of message files.
      procedure List_Message_Files
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of messages for a given thread.
      procedure List_Messages
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of run steps belonging to a run.
      procedure List_Run_Steps
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of runs belonging to a thread.
      procedure List_Runs
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Modifies an assistant.
      procedure Modify_Assistant
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Modifies a message.
      procedure Modify_Message
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Modifies a run.
      procedure Modify_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Modifies a thread.
      procedure Modify_Thread
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  When a run has the `status: \"requires_action\"` and `required_action.type` is `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request.
      procedure Submit_Tool_Ouputs_To_Run
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Generates audio from the input text.
      procedure Create_Speech
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Transcribes audio into the input language.
      procedure Create_Transcription
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Translates audio into English.
      procedure Create_Translation
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates a model response for the given chat conversation.
      procedure Create_Chat_Completion
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates a completion for the provided prompt and parameters.
      procedure Create_Completion
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates an embedding vector representing the input text.
      procedure Create_Embedding
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.  The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine_tuning API only supports `.jsonl` files.  Please [contact us](https://help.openai.com/) if you need to increase these storage limits.
      procedure Create_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete a file.
      procedure Delete_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns the contents of the specified file.
      procedure Download_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns a list of files that belong to the user's organization.
      procedure List_Files
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Returns information about a specific file.
      procedure Retrieve_File
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Immediately cancel a fine_tune job.
      procedure Cancel_Fine_Tuning_Job
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates a fine_tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine_tuned models once complete.  [Learn more about fine_tuning](/docs/guides/fine_tuning)
      procedure Create_Fine_Tuning_Job
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Get status updates for a fine_tuning job.
      procedure List_Fine_Tuning_Events
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  List checkpoints for a fine_tuning job.
      procedure List_Fine_Tuning_Job_Checkpoints
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  List your organization's fine_tuning jobs
      procedure List_Paginated_Fine_Tuning_Jobs
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Get info about a fine_tuning job.  [Learn more about fine_tuning](/docs/guides/fine_tuning)
      procedure Retrieve_Fine_Tuning_Job
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates an image given a prompt.
      procedure Create_Image
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates an edited or extended image given an original image and a prompt.
      procedure Create_Image_Edit
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Creates a variation of a given image.
      procedure Create_Image_Variation
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Delete a fine_tuned model. You must have the Owner role in your organization to delete a model.
      procedure Delete_Model
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Lists the currently available models, and provides basic information about each one such as the owner and availability.
      procedure List_Models
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
      procedure Retrieve_Model
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  Classifies if text is potentially harmful.
      procedure Create_Moderation
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


   private
      protected Server is

         --  Cancels a run that is `in_progress`.
         procedure Cancel_Run
            (Thread_Id : in Swagger.UString;
             Run_Id : in Swagger.UString;
       Result  : out .Models.RunObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Create an assistant with a model and instructions.
         procedure Create_Assistant
            (Create_Assistant_Request_Type : in CreateAssistantRequest_Type;
       Result  : out .Models.AssistantObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Create an assistant file by attaching a [File](/docs/api_reference/files) to an [assistant](/docs/api_reference/assistants).
         procedure Create_Assistant_File
            (Assistant_Id : in Swagger.UString;
             Create_Assistant_File_Request_Type : in CreateAssistantFileRequest_Type;
       Result  : out .Models.AssistantFileObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Create a message.
         procedure Create_Message
            (Thread_Id : in Swagger.UString;
             Create_Message_Request_Type : in CreateMessageRequest_Type;
       Result  : out .Models.MessageObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Create a run.
         procedure Create_Run
            (Thread_Id : in Swagger.UString;
             Create_Run_Request_Type : in CreateRunRequest_Type;
       Result  : out .Models.RunObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Create a thread.
         procedure Create_Thread
            (Create_Thread_Request_Type : in CreateThreadRequest_Type;
       Result  : out .Models.ThreadObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Create a thread and run it in one request.
         procedure Create_Thread_And_Run
            (Create_Thread_And_Run_Request_Type : in CreateThreadAndRunRequest_Type;
       Result  : out .Models.RunObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Delete an assistant.
         procedure Delete_Assistant
            (Assistant_Id : in Swagger.UString;
       Result  : out .Models.DeleteAssistantResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Delete an assistant file.
         procedure Delete_Assistant_File
            (Assistant_Id : in Swagger.UString;
             File_Id : in Swagger.UString;
       Result  : out .Models.DeleteAssistantFileResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Delete a thread.
         procedure Delete_Thread
            (Thread_Id : in Swagger.UString;
       Result  : out .Models.DeleteThreadResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Retrieves an assistant.
         procedure Get_Assistant
            (Assistant_Id : in Swagger.UString;
       Result  : out .Models.AssistantObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Retrieves an AssistantFile.
         procedure Get_Assistant_File
            (Assistant_Id : in Swagger.UString;
             File_Id : in Swagger.UString;
       Result  : out .Models.AssistantFileObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Retrieve a message.
         procedure Get_Message
            (Thread_Id : in Swagger.UString;
             Message_Id : in Swagger.UString;
       Result  : out .Models.MessageObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Retrieves a message file.
         procedure Get_Message_File
            (Thread_Id : in Swagger.UString;
             Message_Id : in Swagger.UString;
             File_Id : in Swagger.UString;
       Result  : out .Models.MessageFileObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Retrieves a run.
         procedure Get_Run
            (Thread_Id : in Swagger.UString;
             Run_Id : in Swagger.UString;
       Result  : out .Models.RunObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Retrieves a run step.
         procedure Get_Run_Step
            (Thread_Id : in Swagger.UString;
             Run_Id : in Swagger.UString;
             Step_Id : in Swagger.UString;
       Result  : out .Models.RunStepObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Retrieves a thread.
         procedure Get_Thread
            (Thread_Id : in Swagger.UString;
       Result  : out .Models.ThreadObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Returns a list of assistant files.
         procedure List_Assistant_Files
            (Assistant_Id : in Swagger.UString;
             Limit : in Swagger.Nullable_Integer;
             Order : in Swagger.Nullable_UString;
             After : in Swagger.Nullable_UString;
             Before : in Swagger.Nullable_UString;
       Result  : out .Models.ListAssistantFilesResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Returns a list of assistants.
         procedure List_Assistants
            (Limit : in Swagger.Nullable_Integer;
             Order : in Swagger.Nullable_UString;
             After : in Swagger.Nullable_UString;
             Before : in Swagger.Nullable_UString;
       Result  : out .Models.ListAssistantsResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Returns a list of message files.
         procedure List_Message_Files
            (Thread_Id : in Swagger.UString;
             Message_Id : in Swagger.UString;
             Limit : in Swagger.Nullable_Integer;
             Order : in Swagger.Nullable_UString;
             After : in Swagger.Nullable_UString;
             Before : in Swagger.Nullable_UString;
       Result  : out .Models.ListMessageFilesResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Returns a list of messages for a given thread.
         procedure List_Messages
            (Thread_Id : in Swagger.UString;
             Limit : in Swagger.Nullable_Integer;
             Order : in Swagger.Nullable_UString;
             After : in Swagger.Nullable_UString;
             Before : in Swagger.Nullable_UString;
             Run_Id : in Swagger.Nullable_UString;
       Result  : out .Models.ListMessagesResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Returns a list of run steps belonging to a run.
         procedure List_Run_Steps
            (Thread_Id : in Swagger.UString;
             Run_Id : in Swagger.UString;
             Limit : in Swagger.Nullable_Integer;
             Order : in Swagger.Nullable_UString;
             After : in Swagger.Nullable_UString;
             Before : in Swagger.Nullable_UString;
       Result  : out .Models.ListRunStepsResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Returns a list of runs belonging to a thread.
         procedure List_Runs
            (Thread_Id : in Swagger.UString;
             Limit : in Swagger.Nullable_Integer;
             Order : in Swagger.Nullable_UString;
             After : in Swagger.Nullable_UString;
             Before : in Swagger.Nullable_UString;
       Result  : out .Models.ListRunsResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Modifies an assistant.
         procedure Modify_Assistant
            (Assistant_Id : in Swagger.UString;
             Modify_Assistant_Request_Type : in ModifyAssistantRequest_Type;
       Result  : out .Models.AssistantObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Modifies a message.
         procedure Modify_Message
            (Thread_Id : in Swagger.UString;
             Message_Id : in Swagger.UString;
             Modify_Message_Request_Type : in ModifyMessageRequest_Type;
       Result  : out .Models.MessageObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Modifies a run.
         procedure Modify_Run
            (Thread_Id : in Swagger.UString;
             Run_Id : in Swagger.UString;
             Modify_Run_Request_Type : in ModifyRunRequest_Type;
       Result  : out .Models.RunObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Modifies a thread.
         procedure Modify_Thread
            (Thread_Id : in Swagger.UString;
             Modify_Thread_Request_Type : in ModifyThreadRequest_Type;
       Result  : out .Models.ThreadObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  When a run has the `status: \"requires_action\"` and `required_action.type` is `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request.
         procedure Submit_Tool_Ouputs_To_Run
            (Thread_Id : in Swagger.UString;
             Run_Id : in Swagger.UString;
             Submit_Tool_Outputs_Run_Request_Type : in SubmitToolOutputsRunRequest_Type;
       Result  : out .Models.RunObject_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Generates audio from the input text.
         procedure Create_Speech
            (Create_Speech_Request_Type : in CreateSpeechRequest_Type;
       Result  : out Swagger.Blob_Ref;
             Context : in out Swagger.Servers.Context_Type);

         --  Transcribes audio into the input language.
         procedure Create_Transcription
            (File : in Swagger.File_Part_Type;
             Model : in .Models.CreateTranscriptionRequestModel_Type;
             Language : in Swagger.Nullable_UString;
             Prompt : in Swagger.Nullable_UString;
             Response_Format : in Swagger.Nullable_UString;
             Temperature : in Swagger.Number;
             Timestamp_Granularities_Left_Square_Bracket_Right_Square_Bracket : in Swagger.UString_Vectors.Vector;
       Result  : out .Models.CreateTranscription200Response_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Translates audio into English.
         procedure Create_Translation
            (File : in Swagger.File_Part_Type;
             Model : in .Models.CreateTranscriptionRequestModel_Type;
             Prompt : in Swagger.Nullable_UString;
             Response_Format : in Swagger.Nullable_UString;
             Temperature : in Swagger.Number;
       Result  : out .Models.CreateTranslation200Response_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Creates a model response for the given chat conversation.
         procedure Create_Chat_Completion
            (Create_Chat_Completion_Request_Type : in CreateChatCompletionRequest_Type;
       Result  : out .Models.CreateChatCompletionResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Creates a completion for the provided prompt and parameters.
         procedure Create_Completion
            (Create_Completion_Request_Type : in CreateCompletionRequest_Type;
       Result  : out .Models.CreateCompletionResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Creates an embedding vector representing the input text.
         procedure Create_Embedding
            (Create_Embedding_Request_Type : in CreateEmbeddingRequest_Type;
       Result  : out .Models.CreateEmbeddingResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.  The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine_tuning API only supports `.jsonl` files.  Please [contact us](https://help.openai.com/) if you need to increase these storage limits.
         procedure Create_File
            (File : in Swagger.File_Part_Type;
             Purpose : in Swagger.UString;
       Result  : out .Models.OpenAIFile_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Delete a file.
         procedure Delete_File
            (File_Id : in Swagger.UString;
       Result  : out .Models.DeleteFileResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Returns the contents of the specified file.
         procedure Download_File
            (File_Id : in Swagger.UString;
       Result  : out Swagger.UString;
             Context : in out Swagger.Servers.Context_Type);

         --  Returns a list of files that belong to the user's organization.
         procedure List_Files
            (Purpose : in Swagger.Nullable_UString;
       Result  : out .Models.ListFilesResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Returns information about a specific file.
         procedure Retrieve_File
            (File_Id : in Swagger.UString;
       Result  : out .Models.OpenAIFile_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Immediately cancel a fine_tune job.
         procedure Cancel_Fine_Tuning_Job
            (Fine_Tuning_Job_Id : in Swagger.UString;
       Result  : out .Models.FineTuningJob_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Creates a fine_tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine_tuned models once complete.  [Learn more about fine_tuning](/docs/guides/fine_tuning)
         procedure Create_Fine_Tuning_Job
            (Create_Fine_Tuning_Job_Request_Type : in CreateFineTuningJobRequest_Type;
       Result  : out .Models.FineTuningJob_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Get status updates for a fine_tuning job.
         procedure List_Fine_Tuning_Events
            (Fine_Tuning_Job_Id : in Swagger.UString;
             After : in Swagger.Nullable_UString;
             Limit : in Swagger.Nullable_Integer;
       Result  : out .Models.ListFineTuningJobEventsResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  List checkpoints for a fine_tuning job.
         procedure List_Fine_Tuning_Job_Checkpoints
            (Fine_Tuning_Job_Id : in Swagger.UString;
             After : in Swagger.Nullable_UString;
             Limit : in Swagger.Nullable_Integer;
       Result  : out .Models.ListFineTuningJobCheckpointsResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  List your organization's fine_tuning jobs
         procedure List_Paginated_Fine_Tuning_Jobs
            (After : in Swagger.Nullable_UString;
             Limit : in Swagger.Nullable_Integer;
       Result  : out .Models.ListPaginatedFineTuningJobsResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Get info about a fine_tuning job.  [Learn more about fine_tuning](/docs/guides/fine_tuning)
         procedure Retrieve_Fine_Tuning_Job
            (Fine_Tuning_Job_Id : in Swagger.UString;
       Result  : out .Models.FineTuningJob_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Creates an image given a prompt.
         procedure Create_Image
            (Create_Image_Request_Type : in CreateImageRequest_Type;
       Result  : out .Models.ImagesResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Creates an edited or extended image given an original image and a prompt.
         procedure Create_Image_Edit
            (Image : in Swagger.File_Part_Type;
             Prompt : in Swagger.UString;
             Mask : in Swagger.File_Part_Type;
             Model : in .Models.CreateImageEditRequestModel_Type;
             N : in Swagger.Nullable_Integer;
             Size : in Swagger.Nullable_UString;
             Response_Format : in Swagger.Nullable_UString;
             User : in Swagger.Nullable_UString;
       Result  : out .Models.ImagesResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Creates a variation of a given image.
         procedure Create_Image_Variation
            (Image : in Swagger.File_Part_Type;
             Model : in .Models.CreateImageEditRequestModel_Type;
             N : in Swagger.Nullable_Integer;
             Response_Format : in Swagger.Nullable_UString;
             Size : in Swagger.Nullable_UString;
             User : in Swagger.Nullable_UString;
       Result  : out .Models.ImagesResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Delete a fine_tuned model. You must have the Owner role in your organization to delete a model.
         procedure Delete_Model
            (Model : in Swagger.UString;
       Result  : out .Models.DeleteModelResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Lists the currently available models, and provides basic information about each one such as the owner and availability.
         procedure List_Models
            (Result  : out .Models.ListModelsResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
         procedure Retrieve_Model
            (Model : in Swagger.UString;
       Result  : out .Models.Model_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  Classifies if text is potentially harmful.
         procedure Create_Moderation
            (Create_Moderation_Request_Type : in CreateModerationRequest_Type;
       Result  : out .Models.CreateModerationResponse_Type;
             Context : in out Swagger.Servers.Context_Type);

      private
         Impl : Implementation_Type;
      end Server;
   end Shared_Instance;

end .Skeletons;
