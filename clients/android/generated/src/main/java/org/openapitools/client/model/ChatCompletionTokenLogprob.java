/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import java.util.*;
import org.openapitools.client.model.ChatCompletionTokenLogprobTopLogprobsInner;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ChatCompletionTokenLogprob {
  
  @SerializedName("token")
  private String token = null;
  @SerializedName("logprob")
  private BigDecimal logprob = null;
  @SerializedName("bytes")
  private List<Integer> bytes = null;
  @SerializedName("top_logprobs")
  private List<ChatCompletionTokenLogprobTopLogprobsInner> topLogprobs = null;

  /**
   * The token.
   **/
  @ApiModelProperty(required = true, value = "The token.")
  public String getToken() {
    return token;
  }
  public void setToken(String token) {
    this.token = token;
  }

  /**
   * The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely.
   **/
  @ApiModelProperty(required = true, value = "The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely.")
  public BigDecimal getLogprob() {
    return logprob;
  }
  public void setLogprob(BigDecimal logprob) {
    this.logprob = logprob;
  }

  /**
   * A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.
   **/
  @ApiModelProperty(required = true, value = "A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.")
  public List<Integer> getBytes() {
    return bytes;
  }
  public void setBytes(List<Integer> bytes) {
    this.bytes = bytes;
  }

  /**
   * List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested `top_logprobs` returned.
   **/
  @ApiModelProperty(required = true, value = "List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested `top_logprobs` returned.")
  public List<ChatCompletionTokenLogprobTopLogprobsInner> getTopLogprobs() {
    return topLogprobs;
  }
  public void setTopLogprobs(List<ChatCompletionTokenLogprobTopLogprobsInner> topLogprobs) {
    this.topLogprobs = topLogprobs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatCompletionTokenLogprob chatCompletionTokenLogprob = (ChatCompletionTokenLogprob) o;
    return (this.token == null ? chatCompletionTokenLogprob.token == null : this.token.equals(chatCompletionTokenLogprob.token)) &&
        (this.logprob == null ? chatCompletionTokenLogprob.logprob == null : this.logprob.equals(chatCompletionTokenLogprob.logprob)) &&
        (this.bytes == null ? chatCompletionTokenLogprob.bytes == null : this.bytes.equals(chatCompletionTokenLogprob.bytes)) &&
        (this.topLogprobs == null ? chatCompletionTokenLogprob.topLogprobs == null : this.topLogprobs.equals(chatCompletionTokenLogprob.topLogprobs));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.token == null ? 0: this.token.hashCode());
    result = 31 * result + (this.logprob == null ? 0: this.logprob.hashCode());
    result = 31 * result + (this.bytes == null ? 0: this.bytes.hashCode());
    result = 31 * result + (this.topLogprobs == null ? 0: this.topLogprobs.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatCompletionTokenLogprob {\n");
    
    sb.append("  token: ").append(token).append("\n");
    sb.append("  logprob: ").append(logprob).append("\n");
    sb.append("  bytes: ").append(bytes).append("\n");
    sb.append("  topLogprobs: ").append(topLogprobs).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
