/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.CreateChatCompletionStreamResponseChoicesInner;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents a streamed chunk of a chat completion response returned by model, based on the provided input.
 **/
@ApiModel(description = "Represents a streamed chunk of a chat completion response returned by model, based on the provided input.")
public class CreateChatCompletionStreamResponse {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("choices")
  private List<CreateChatCompletionStreamResponseChoicesInner> choices = null;
  @SerializedName("created")
  private Integer created = null;
  @SerializedName("model")
  private String model = null;
  @SerializedName("system_fingerprint")
  private String systemFingerprint = null;
  public enum _objectEnum {
     chat.completion.chunk, 
  };
  @SerializedName("object")
  private _objectEnum _object = null;

  /**
   * A unique identifier for the chat completion. Each chunk has the same ID.
   **/
  @ApiModelProperty(required = true, value = "A unique identifier for the chat completion. Each chunk has the same ID.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * A list of chat completion choices. Can be more than one if `n` is greater than 1.
   **/
  @ApiModelProperty(required = true, value = "A list of chat completion choices. Can be more than one if `n` is greater than 1.")
  public List<CreateChatCompletionStreamResponseChoicesInner> getChoices() {
    return choices;
  }
  public void setChoices(List<CreateChatCompletionStreamResponseChoicesInner> choices) {
    this.choices = choices;
  }

  /**
   * The Unix timestamp (in seconds) of when the chat completion was created. Each chunk has the same timestamp.
   **/
  @ApiModelProperty(required = true, value = "The Unix timestamp (in seconds) of when the chat completion was created. Each chunk has the same timestamp.")
  public Integer getCreated() {
    return created;
  }
  public void setCreated(Integer created) {
    this.created = created;
  }

  /**
   * The model to generate the completion.
   **/
  @ApiModelProperty(required = true, value = "The model to generate the completion.")
  public String getModel() {
    return model;
  }
  public void setModel(String model) {
    this.model = model;
  }

  /**
   * This fingerprint represents the backend configuration that the model runs with. Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism. 
   **/
  @ApiModelProperty(value = "This fingerprint represents the backend configuration that the model runs with. Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism. ")
  public String getSystemFingerprint() {
    return systemFingerprint;
  }
  public void setSystemFingerprint(String systemFingerprint) {
    this.systemFingerprint = systemFingerprint;
  }

  /**
   * The object type, which is always `chat.completion.chunk`.
   **/
  @ApiModelProperty(required = true, value = "The object type, which is always `chat.completion.chunk`.")
  public _objectEnum getObject() {
    return _object;
  }
  public void setObject(_objectEnum _object) {
    this._object = _object;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateChatCompletionStreamResponse createChatCompletionStreamResponse = (CreateChatCompletionStreamResponse) o;
    return (this.id == null ? createChatCompletionStreamResponse.id == null : this.id.equals(createChatCompletionStreamResponse.id)) &&
        (this.choices == null ? createChatCompletionStreamResponse.choices == null : this.choices.equals(createChatCompletionStreamResponse.choices)) &&
        (this.created == null ? createChatCompletionStreamResponse.created == null : this.created.equals(createChatCompletionStreamResponse.created)) &&
        (this.model == null ? createChatCompletionStreamResponse.model == null : this.model.equals(createChatCompletionStreamResponse.model)) &&
        (this.systemFingerprint == null ? createChatCompletionStreamResponse.systemFingerprint == null : this.systemFingerprint.equals(createChatCompletionStreamResponse.systemFingerprint)) &&
        (this._object == null ? createChatCompletionStreamResponse._object == null : this._object.equals(createChatCompletionStreamResponse._object));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.choices == null ? 0: this.choices.hashCode());
    result = 31 * result + (this.created == null ? 0: this.created.hashCode());
    result = 31 * result + (this.model == null ? 0: this.model.hashCode());
    result = 31 * result + (this.systemFingerprint == null ? 0: this.systemFingerprint.hashCode());
    result = 31 * result + (this._object == null ? 0: this._object.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateChatCompletionStreamResponse {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  choices: ").append(choices).append("\n");
    sb.append("  created: ").append(created).append("\n");
    sb.append("  model: ").append(model).append("\n");
    sb.append("  systemFingerprint: ").append(systemFingerprint).append("\n");
    sb.append("  _object: ").append(_object).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
