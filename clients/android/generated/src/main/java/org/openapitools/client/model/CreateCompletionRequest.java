/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import java.util.Map;
import org.openapitools.client.model.CreateCompletionRequestModel;
import org.openapitools.client.model.CreateCompletionRequestPrompt;
import org.openapitools.client.model.CreateCompletionRequestStop;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CreateCompletionRequest {
  
  @SerializedName("model")
  private CreateCompletionRequestModel model = null;
  @SerializedName("prompt")
  private CreateCompletionRequestPrompt prompt = null;
  @SerializedName("best_of")
  private Integer bestOf = 1;
  @SerializedName("echo")
  private Boolean echo = false;
  @SerializedName("frequency_penalty")
  private BigDecimal frequencyPenalty = 0;
  @SerializedName("logit_bias")
  private Map<String, Integer> logitBias = null;
  @SerializedName("logprobs")
  private Integer logprobs = null;
  @SerializedName("max_tokens")
  private Integer maxTokens = 16;
  @SerializedName("n")
  private Integer n = 1;
  @SerializedName("presence_penalty")
  private BigDecimal presencePenalty = 0;
  @SerializedName("seed")
  private Integer seed = null;
  @SerializedName("stop")
  private CreateCompletionRequestStop stop = null;
  @SerializedName("stream")
  private Boolean stream = false;
  @SerializedName("suffix")
  private String suffix = null;
  @SerializedName("temperature")
  private BigDecimal temperature = 1;
  @SerializedName("top_p")
  private BigDecimal topP = 1;
  @SerializedName("user")
  private String user = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public CreateCompletionRequestModel getModel() {
    return model;
  }
  public void setModel(CreateCompletionRequestModel model) {
    this.model = model;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public CreateCompletionRequestPrompt getPrompt() {
    return prompt;
  }
  public void setPrompt(CreateCompletionRequestPrompt prompt) {
    this.prompt = prompt;
  }

  /**
   * Generates `best_of` completions server-side and returns the \"best\" (the one with the highest log probability per token). Results cannot be streamed.  When used with `n`, `best_of` controls the number of candidate completions and `n` specifies how many to return – `best_of` must be greater than `n`.  **Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`. 
   * minimum: 0
   * maximum: 20
   **/
  @ApiModelProperty(value = "Generates `best_of` completions server-side and returns the \"best\" (the one with the highest log probability per token). Results cannot be streamed.  When used with `n`, `best_of` controls the number of candidate completions and `n` specifies how many to return – `best_of` must be greater than `n`.  **Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`. ")
  public Integer getBestOf() {
    return bestOf;
  }
  public void setBestOf(Integer bestOf) {
    this.bestOf = bestOf;
  }

  /**
   * Echo back the prompt in addition to the completion 
   **/
  @ApiModelProperty(value = "Echo back the prompt in addition to the completion ")
  public Boolean getEcho() {
    return echo;
  }
  public void setEcho(Boolean echo) {
    this.echo = echo;
  }

  /**
   * Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.  [See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details) 
   * minimum: -2
   * maximum: 2
   **/
  @ApiModelProperty(value = "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.  [See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details) ")
  public BigDecimal getFrequencyPenalty() {
    return frequencyPenalty;
  }
  public void setFrequencyPenalty(BigDecimal frequencyPenalty) {
    this.frequencyPenalty = frequencyPenalty;
  }

  /**
   * Modify the likelihood of specified tokens appearing in the completion.  Accepts a JSON object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.  As an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token from being generated. 
   **/
  @ApiModelProperty(value = "Modify the likelihood of specified tokens appearing in the completion.  Accepts a JSON object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.  As an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token from being generated. ")
  public Map<String, Integer> getLogitBias() {
    return logitBias;
  }
  public void setLogitBias(Map<String, Integer> logitBias) {
    this.logitBias = logitBias;
  }

  /**
   * Include the log probabilities on the `logprobs` most likely output tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response.  The maximum value for `logprobs` is 5. 
   * minimum: 0
   * maximum: 5
   **/
  @ApiModelProperty(value = "Include the log probabilities on the `logprobs` most likely output tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response.  The maximum value for `logprobs` is 5. ")
  public Integer getLogprobs() {
    return logprobs;
  }
  public void setLogprobs(Integer logprobs) {
    this.logprobs = logprobs;
  }

  /**
   * The maximum number of [tokens](/tokenizer) that can be generated in the completion.  The token count of your prompt plus `max_tokens` cannot exceed the model's context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens. 
   * minimum: 0
   **/
  @ApiModelProperty(value = "The maximum number of [tokens](/tokenizer) that can be generated in the completion.  The token count of your prompt plus `max_tokens` cannot exceed the model's context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens. ")
  public Integer getMaxTokens() {
    return maxTokens;
  }
  public void setMaxTokens(Integer maxTokens) {
    this.maxTokens = maxTokens;
  }

  /**
   * How many completions to generate for each prompt.  **Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`. 
   * minimum: 1
   * maximum: 128
   **/
  @ApiModelProperty(value = "How many completions to generate for each prompt.  **Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`. ")
  public Integer getN() {
    return n;
  }
  public void setN(Integer n) {
    this.n = n;
  }

  /**
   * Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.  [See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details) 
   * minimum: -2
   * maximum: 2
   **/
  @ApiModelProperty(value = "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.  [See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details) ")
  public BigDecimal getPresencePenalty() {
    return presencePenalty;
  }
  public void setPresencePenalty(BigDecimal presencePenalty) {
    this.presencePenalty = presencePenalty;
  }

  /**
   * If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result.  Determinism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend. 
   * minimum: -9223372036854775808
   * maximum: 9223372036854775807
   **/
  @ApiModelProperty(value = "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result.  Determinism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend. ")
  public Integer getSeed() {
    return seed;
  }
  public void setSeed(Integer seed) {
    this.seed = seed;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CreateCompletionRequestStop getStop() {
    return stop;
  }
  public void setStop(CreateCompletionRequestStop stop) {
    this.stop = stop;
  }

  /**
   * Whether to stream back partial progress. If set, tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a `data: [DONE]` message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions). 
   **/
  @ApiModelProperty(value = "Whether to stream back partial progress. If set, tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a `data: [DONE]` message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions). ")
  public Boolean getStream() {
    return stream;
  }
  public void setStream(Boolean stream) {
    this.stream = stream;
  }

  /**
   * The suffix that comes after a completion of inserted text.  This parameter is only supported for `gpt-3.5-turbo-instruct`. 
   **/
  @ApiModelProperty(value = "The suffix that comes after a completion of inserted text.  This parameter is only supported for `gpt-3.5-turbo-instruct`. ")
  public String getSuffix() {
    return suffix;
  }
  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }

  /**
   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.  We generally recommend altering this or `top_p` but not both. 
   * minimum: 0
   * maximum: 2
   **/
  @ApiModelProperty(value = "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.  We generally recommend altering this or `top_p` but not both. ")
  public BigDecimal getTemperature() {
    return temperature;
  }
  public void setTemperature(BigDecimal temperature) {
    this.temperature = temperature;
  }

  /**
   * An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or `temperature` but not both. 
   * minimum: 0
   * maximum: 1
   **/
  @ApiModelProperty(value = "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or `temperature` but not both. ")
  public BigDecimal getTopP() {
    return topP;
  }
  public void setTopP(BigDecimal topP) {
    this.topP = topP;
  }

  /**
   * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
   **/
  @ApiModelProperty(value = "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). ")
  public String getUser() {
    return user;
  }
  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCompletionRequest createCompletionRequest = (CreateCompletionRequest) o;
    return (this.model == null ? createCompletionRequest.model == null : this.model.equals(createCompletionRequest.model)) &&
        (this.prompt == null ? createCompletionRequest.prompt == null : this.prompt.equals(createCompletionRequest.prompt)) &&
        (this.bestOf == null ? createCompletionRequest.bestOf == null : this.bestOf.equals(createCompletionRequest.bestOf)) &&
        (this.echo == null ? createCompletionRequest.echo == null : this.echo.equals(createCompletionRequest.echo)) &&
        (this.frequencyPenalty == null ? createCompletionRequest.frequencyPenalty == null : this.frequencyPenalty.equals(createCompletionRequest.frequencyPenalty)) &&
        (this.logitBias == null ? createCompletionRequest.logitBias == null : this.logitBias.equals(createCompletionRequest.logitBias)) &&
        (this.logprobs == null ? createCompletionRequest.logprobs == null : this.logprobs.equals(createCompletionRequest.logprobs)) &&
        (this.maxTokens == null ? createCompletionRequest.maxTokens == null : this.maxTokens.equals(createCompletionRequest.maxTokens)) &&
        (this.n == null ? createCompletionRequest.n == null : this.n.equals(createCompletionRequest.n)) &&
        (this.presencePenalty == null ? createCompletionRequest.presencePenalty == null : this.presencePenalty.equals(createCompletionRequest.presencePenalty)) &&
        (this.seed == null ? createCompletionRequest.seed == null : this.seed.equals(createCompletionRequest.seed)) &&
        (this.stop == null ? createCompletionRequest.stop == null : this.stop.equals(createCompletionRequest.stop)) &&
        (this.stream == null ? createCompletionRequest.stream == null : this.stream.equals(createCompletionRequest.stream)) &&
        (this.suffix == null ? createCompletionRequest.suffix == null : this.suffix.equals(createCompletionRequest.suffix)) &&
        (this.temperature == null ? createCompletionRequest.temperature == null : this.temperature.equals(createCompletionRequest.temperature)) &&
        (this.topP == null ? createCompletionRequest.topP == null : this.topP.equals(createCompletionRequest.topP)) &&
        (this.user == null ? createCompletionRequest.user == null : this.user.equals(createCompletionRequest.user));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.model == null ? 0: this.model.hashCode());
    result = 31 * result + (this.prompt == null ? 0: this.prompt.hashCode());
    result = 31 * result + (this.bestOf == null ? 0: this.bestOf.hashCode());
    result = 31 * result + (this.echo == null ? 0: this.echo.hashCode());
    result = 31 * result + (this.frequencyPenalty == null ? 0: this.frequencyPenalty.hashCode());
    result = 31 * result + (this.logitBias == null ? 0: this.logitBias.hashCode());
    result = 31 * result + (this.logprobs == null ? 0: this.logprobs.hashCode());
    result = 31 * result + (this.maxTokens == null ? 0: this.maxTokens.hashCode());
    result = 31 * result + (this.n == null ? 0: this.n.hashCode());
    result = 31 * result + (this.presencePenalty == null ? 0: this.presencePenalty.hashCode());
    result = 31 * result + (this.seed == null ? 0: this.seed.hashCode());
    result = 31 * result + (this.stop == null ? 0: this.stop.hashCode());
    result = 31 * result + (this.stream == null ? 0: this.stream.hashCode());
    result = 31 * result + (this.suffix == null ? 0: this.suffix.hashCode());
    result = 31 * result + (this.temperature == null ? 0: this.temperature.hashCode());
    result = 31 * result + (this.topP == null ? 0: this.topP.hashCode());
    result = 31 * result + (this.user == null ? 0: this.user.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCompletionRequest {\n");
    
    sb.append("  model: ").append(model).append("\n");
    sb.append("  prompt: ").append(prompt).append("\n");
    sb.append("  bestOf: ").append(bestOf).append("\n");
    sb.append("  echo: ").append(echo).append("\n");
    sb.append("  frequencyPenalty: ").append(frequencyPenalty).append("\n");
    sb.append("  logitBias: ").append(logitBias).append("\n");
    sb.append("  logprobs: ").append(logprobs).append("\n");
    sb.append("  maxTokens: ").append(maxTokens).append("\n");
    sb.append("  n: ").append(n).append("\n");
    sb.append("  presencePenalty: ").append(presencePenalty).append("\n");
    sb.append("  seed: ").append(seed).append("\n");
    sb.append("  stop: ").append(stop).append("\n");
    sb.append("  stream: ").append(stream).append("\n");
    sb.append("  suffix: ").append(suffix).append("\n");
    sb.append("  temperature: ").append(temperature).append("\n");
    sb.append("  topP: ").append(topP).append("\n");
    sb.append("  user: ").append(user).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
