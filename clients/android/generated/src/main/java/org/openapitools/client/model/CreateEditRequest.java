/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import org.openapitools.client.model.CreateEditRequestModel;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CreateEditRequest {
  
  @SerializedName("model")
  private CreateEditRequestModel model = null;
  @SerializedName("input")
  private String input = ;
  @SerializedName("instruction")
  private String instruction = null;
  @SerializedName("n")
  private Integer n = 1;
  @SerializedName("temperature")
  private BigDecimal temperature = 1;
  @SerializedName("top_p")
  private BigDecimal topP = 1;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public CreateEditRequestModel getModel() {
    return model;
  }
  public void setModel(CreateEditRequestModel model) {
    this.model = model;
  }

  /**
   * The input text to use as a starting point for the edit.
   **/
  @ApiModelProperty(value = "The input text to use as a starting point for the edit.")
  public String getInput() {
    return input;
  }
  public void setInput(String input) {
    this.input = input;
  }

  /**
   * The instruction that tells the model how to edit the prompt.
   **/
  @ApiModelProperty(required = true, value = "The instruction that tells the model how to edit the prompt.")
  public String getInstruction() {
    return instruction;
  }
  public void setInstruction(String instruction) {
    this.instruction = instruction;
  }

  /**
   * How many edits to generate for the input and instruction.
   * minimum: 1
   * maximum: 20
   **/
  @ApiModelProperty(value = "How many edits to generate for the input and instruction.")
  public Integer getN() {
    return n;
  }
  public void setN(Integer n) {
    this.n = n;
  }

  /**
   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.  We generally recommend altering this or `top_p` but not both. 
   * minimum: 0
   * maximum: 2
   **/
  @ApiModelProperty(value = "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.  We generally recommend altering this or `top_p` but not both. ")
  public BigDecimal getTemperature() {
    return temperature;
  }
  public void setTemperature(BigDecimal temperature) {
    this.temperature = temperature;
  }

  /**
   * An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or `temperature` but not both. 
   * minimum: 0
   * maximum: 1
   **/
  @ApiModelProperty(value = "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or `temperature` but not both. ")
  public BigDecimal getTopP() {
    return topP;
  }
  public void setTopP(BigDecimal topP) {
    this.topP = topP;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateEditRequest createEditRequest = (CreateEditRequest) o;
    return (this.model == null ? createEditRequest.model == null : this.model.equals(createEditRequest.model)) &&
        (this.input == null ? createEditRequest.input == null : this.input.equals(createEditRequest.input)) &&
        (this.instruction == null ? createEditRequest.instruction == null : this.instruction.equals(createEditRequest.instruction)) &&
        (this.n == null ? createEditRequest.n == null : this.n.equals(createEditRequest.n)) &&
        (this.temperature == null ? createEditRequest.temperature == null : this.temperature.equals(createEditRequest.temperature)) &&
        (this.topP == null ? createEditRequest.topP == null : this.topP.equals(createEditRequest.topP));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.model == null ? 0: this.model.hashCode());
    result = 31 * result + (this.input == null ? 0: this.input.hashCode());
    result = 31 * result + (this.instruction == null ? 0: this.instruction.hashCode());
    result = 31 * result + (this.n == null ? 0: this.n.hashCode());
    result = 31 * result + (this.temperature == null ? 0: this.temperature.hashCode());
    result = 31 * result + (this.topP == null ? 0: this.topP.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateEditRequest {\n");
    
    sb.append("  model: ").append(model).append("\n");
    sb.append("  input: ").append(input).append("\n");
    sb.append("  instruction: ").append(instruction).append("\n");
    sb.append("  n: ").append(n).append("\n");
    sb.append("  temperature: ").append(temperature).append("\n");
    sb.append("  topP: ").append(topP).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
