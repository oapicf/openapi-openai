/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.CreateEmbeddingRequestInput;
import org.openapitools.client.model.CreateEmbeddingRequestModel;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CreateEmbeddingRequest {
  
  @SerializedName("input")
  private CreateEmbeddingRequestInput input = null;
  @SerializedName("model")
  private CreateEmbeddingRequestModel model = null;
  public enum EncodingFormatEnum {
     float,  base64, 
  };
  @SerializedName("encoding_format")
  private EncodingFormatEnum encodingFormat = float;
  @SerializedName("dimensions")
  private Integer dimensions = null;
  @SerializedName("user")
  private String user = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public CreateEmbeddingRequestInput getInput() {
    return input;
  }
  public void setInput(CreateEmbeddingRequestInput input) {
    this.input = input;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public CreateEmbeddingRequestModel getModel() {
    return model;
  }
  public void setModel(CreateEmbeddingRequestModel model) {
    this.model = model;
  }

  /**
   * The format to return the embeddings in. Can be either `float` or [`base64`](https://pypi.org/project/pybase64/).
   **/
  @ApiModelProperty(value = "The format to return the embeddings in. Can be either `float` or [`base64`](https://pypi.org/project/pybase64/).")
  public EncodingFormatEnum getEncodingFormat() {
    return encodingFormat;
  }
  public void setEncodingFormat(EncodingFormatEnum encodingFormat) {
    this.encodingFormat = encodingFormat;
  }

  /**
   * The number of dimensions the resulting output embeddings should have. Only supported in `text-embedding-3` and later models. 
   * minimum: 1
   **/
  @ApiModelProperty(value = "The number of dimensions the resulting output embeddings should have. Only supported in `text-embedding-3` and later models. ")
  public Integer getDimensions() {
    return dimensions;
  }
  public void setDimensions(Integer dimensions) {
    this.dimensions = dimensions;
  }

  /**
   * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
   **/
  @ApiModelProperty(value = "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). ")
  public String getUser() {
    return user;
  }
  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateEmbeddingRequest createEmbeddingRequest = (CreateEmbeddingRequest) o;
    return (this.input == null ? createEmbeddingRequest.input == null : this.input.equals(createEmbeddingRequest.input)) &&
        (this.model == null ? createEmbeddingRequest.model == null : this.model.equals(createEmbeddingRequest.model)) &&
        (this.encodingFormat == null ? createEmbeddingRequest.encodingFormat == null : this.encodingFormat.equals(createEmbeddingRequest.encodingFormat)) &&
        (this.dimensions == null ? createEmbeddingRequest.dimensions == null : this.dimensions.equals(createEmbeddingRequest.dimensions)) &&
        (this.user == null ? createEmbeddingRequest.user == null : this.user.equals(createEmbeddingRequest.user));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.input == null ? 0: this.input.hashCode());
    result = 31 * result + (this.model == null ? 0: this.model.hashCode());
    result = 31 * result + (this.encodingFormat == null ? 0: this.encodingFormat.hashCode());
    result = 31 * result + (this.dimensions == null ? 0: this.dimensions.hashCode());
    result = 31 * result + (this.user == null ? 0: this.user.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateEmbeddingRequest {\n");
    
    sb.append("  input: ").append(input).append("\n");
    sb.append("  model: ").append(model).append("\n");
    sb.append("  encodingFormat: ").append(encodingFormat).append("\n");
    sb.append("  dimensions: ").append(dimensions).append("\n");
    sb.append("  user: ").append(user).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
