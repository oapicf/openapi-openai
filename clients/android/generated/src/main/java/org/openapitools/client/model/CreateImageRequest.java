/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.CreateImageRequestModel;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CreateImageRequest {
  
  @SerializedName("prompt")
  private String prompt = null;
  @SerializedName("model")
  private CreateImageRequestModel model = null;
  @SerializedName("n")
  private Integer n = 1;
  public enum QualityEnum {
     standard,  hd, 
  };
  @SerializedName("quality")
  private QualityEnum quality = standard;
  public enum ResponseFormatEnum {
     url,  b64_json, 
  };
  @SerializedName("response_format")
  private ResponseFormatEnum responseFormat = url;
  public enum SizeEnum {
     256x256,  512x512,  1024x1024,  1792x1024,  1024x1792, 
  };
  @SerializedName("size")
  private SizeEnum size = 1024x1024;
  public enum StyleEnum {
     vivid,  natural, 
  };
  @SerializedName("style")
  private StyleEnum style = vivid;
  @SerializedName("user")
  private String user = null;

  /**
   * A text description of the desired image(s). The maximum length is 1000 characters for `dall-e-2` and 4000 characters for `dall-e-3`.
   **/
  @ApiModelProperty(required = true, value = "A text description of the desired image(s). The maximum length is 1000 characters for `dall-e-2` and 4000 characters for `dall-e-3`.")
  public String getPrompt() {
    return prompt;
  }
  public void setPrompt(String prompt) {
    this.prompt = prompt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CreateImageRequestModel getModel() {
    return model;
  }
  public void setModel(CreateImageRequestModel model) {
    this.model = model;
  }

  /**
   * The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is supported.
   * minimum: 1
   * maximum: 10
   **/
  @ApiModelProperty(value = "The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is supported.")
  public Integer getN() {
    return n;
  }
  public void setN(Integer n) {
    this.n = n;
  }

  /**
   * The quality of the image that will be generated. `hd` creates images with finer details and greater consistency across the image. This param is only supported for `dall-e-3`.
   **/
  @ApiModelProperty(value = "The quality of the image that will be generated. `hd` creates images with finer details and greater consistency across the image. This param is only supported for `dall-e-3`.")
  public QualityEnum getQuality() {
    return quality;
  }
  public void setQuality(QualityEnum quality) {
    this.quality = quality;
  }

  /**
   * The format in which the generated images are returned. Must be one of `url` or `b64_json`. URLs are only valid for 60 minutes after the image has been generated.
   **/
  @ApiModelProperty(value = "The format in which the generated images are returned. Must be one of `url` or `b64_json`. URLs are only valid for 60 minutes after the image has been generated.")
  public ResponseFormatEnum getResponseFormat() {
    return responseFormat;
  }
  public void setResponseFormat(ResponseFormatEnum responseFormat) {
    this.responseFormat = responseFormat;
  }

  /**
   * The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`. Must be one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3` models.
   **/
  @ApiModelProperty(value = "The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`. Must be one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3` models.")
  public SizeEnum getSize() {
    return size;
  }
  public void setSize(SizeEnum size) {
    this.size = size;
  }

  /**
   * The style of the generated images. Must be one of `vivid` or `natural`. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for `dall-e-3`.
   **/
  @ApiModelProperty(value = "The style of the generated images. Must be one of `vivid` or `natural`. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for `dall-e-3`.")
  public StyleEnum getStyle() {
    return style;
  }
  public void setStyle(StyleEnum style) {
    this.style = style;
  }

  /**
   * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
   **/
  @ApiModelProperty(value = "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). ")
  public String getUser() {
    return user;
  }
  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateImageRequest createImageRequest = (CreateImageRequest) o;
    return (this.prompt == null ? createImageRequest.prompt == null : this.prompt.equals(createImageRequest.prompt)) &&
        (this.model == null ? createImageRequest.model == null : this.model.equals(createImageRequest.model)) &&
        (this.n == null ? createImageRequest.n == null : this.n.equals(createImageRequest.n)) &&
        (this.quality == null ? createImageRequest.quality == null : this.quality.equals(createImageRequest.quality)) &&
        (this.responseFormat == null ? createImageRequest.responseFormat == null : this.responseFormat.equals(createImageRequest.responseFormat)) &&
        (this.size == null ? createImageRequest.size == null : this.size.equals(createImageRequest.size)) &&
        (this.style == null ? createImageRequest.style == null : this.style.equals(createImageRequest.style)) &&
        (this.user == null ? createImageRequest.user == null : this.user.equals(createImageRequest.user));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.prompt == null ? 0: this.prompt.hashCode());
    result = 31 * result + (this.model == null ? 0: this.model.hashCode());
    result = 31 * result + (this.n == null ? 0: this.n.hashCode());
    result = 31 * result + (this.quality == null ? 0: this.quality.hashCode());
    result = 31 * result + (this.responseFormat == null ? 0: this.responseFormat.hashCode());
    result = 31 * result + (this.size == null ? 0: this.size.hashCode());
    result = 31 * result + (this.style == null ? 0: this.style.hashCode());
    result = 31 * result + (this.user == null ? 0: this.user.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateImageRequest {\n");
    
    sb.append("  prompt: ").append(prompt).append("\n");
    sb.append("  model: ").append(model).append("\n");
    sb.append("  n: ").append(n).append("\n");
    sb.append("  quality: ").append(quality).append("\n");
    sb.append("  responseFormat: ").append(responseFormat).append("\n");
    sb.append("  size: ").append(size).append("\n");
    sb.append("  style: ").append(style).append("\n");
    sb.append("  user: ").append(user).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
