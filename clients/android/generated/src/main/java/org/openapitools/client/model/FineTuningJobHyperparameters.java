/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.FineTuningJobHyperparametersNEpochs;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * The hyperparameters used for the fine-tuning job. See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.
 **/
@ApiModel(description = "The hyperparameters used for the fine-tuning job. See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.")
public class FineTuningJobHyperparameters {
  
  @SerializedName("n_epochs")
  private FineTuningJobHyperparametersNEpochs nEpochs = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public FineTuningJobHyperparametersNEpochs getNEpochs() {
    return nEpochs;
  }
  public void setNEpochs(FineTuningJobHyperparametersNEpochs nEpochs) {
    this.nEpochs = nEpochs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FineTuningJobHyperparameters fineTuningJobHyperparameters = (FineTuningJobHyperparameters) o;
    return (this.nEpochs == null ? fineTuningJobHyperparameters.nEpochs == null : this.nEpochs.equals(fineTuningJobHyperparameters.nEpochs));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.nEpochs == null ? 0: this.nEpochs.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FineTuningJobHyperparameters {\n");
    
    sb.append("  nEpochs: ").append(nEpochs).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
