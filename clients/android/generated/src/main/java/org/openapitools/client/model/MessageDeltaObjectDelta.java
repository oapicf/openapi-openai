/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.MessageDeltaObjectDeltaContentInner;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * The delta containing the fields that have changed on the Message.
 **/
@ApiModel(description = "The delta containing the fields that have changed on the Message.")
public class MessageDeltaObjectDelta {
  
  public enum RoleEnum {
     user,  assistant, 
  };
  @SerializedName("role")
  private RoleEnum role = null;
  @SerializedName("content")
  private List<MessageDeltaObjectDeltaContentInner> content = null;
  @SerializedName("file_ids")
  private List<String> fileIds = [];

  /**
   * The entity that produced the message. One of `user` or `assistant`.
   **/
  @ApiModelProperty(value = "The entity that produced the message. One of `user` or `assistant`.")
  public RoleEnum getRole() {
    return role;
  }
  public void setRole(RoleEnum role) {
    this.role = role;
  }

  /**
   * The content of the message in array of text and/or images.
   **/
  @ApiModelProperty(value = "The content of the message in array of text and/or images.")
  public List<MessageDeltaObjectDeltaContentInner> getContent() {
    return content;
  }
  public void setContent(List<MessageDeltaObjectDeltaContentInner> content) {
    this.content = content;
  }

  /**
   * A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
   **/
  @ApiModelProperty(value = "A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.")
  public List<String> getFileIds() {
    return fileIds;
  }
  public void setFileIds(List<String> fileIds) {
    this.fileIds = fileIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageDeltaObjectDelta messageDeltaObjectDelta = (MessageDeltaObjectDelta) o;
    return (this.role == null ? messageDeltaObjectDelta.role == null : this.role.equals(messageDeltaObjectDelta.role)) &&
        (this.content == null ? messageDeltaObjectDelta.content == null : this.content.equals(messageDeltaObjectDelta.content)) &&
        (this.fileIds == null ? messageDeltaObjectDelta.fileIds == null : this.fileIds.equals(messageDeltaObjectDelta.fileIds));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.role == null ? 0: this.role.hashCode());
    result = 31 * result + (this.content == null ? 0: this.content.hashCode());
    result = 31 * result + (this.fileIds == null ? 0: this.fileIds.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageDeltaObjectDelta {\n");
    
    sb.append("  role: ").append(role).append("\n");
    sb.append("  content: ").append(content).append("\n");
    sb.append("  fileIds: ").append(fileIds).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
