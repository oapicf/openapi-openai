/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.RunStepCompletionUsage;
import org.openapitools.client.model.RunStepObjectLastError;
import org.openapitools.client.model.RunStepObjectStepDetails;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents a step in execution of a run. 
 **/
@ApiModel(description = "Represents a step in execution of a run. ")
public class RunStepObject {
  
  @SerializedName("id")
  private String id = null;
  public enum _objectEnum {
     thread.run.step, 
  };
  @SerializedName("object")
  private _objectEnum _object = null;
  @SerializedName("created_at")
  private Integer createdAt = null;
  @SerializedName("assistant_id")
  private String assistantId = null;
  @SerializedName("thread_id")
  private String threadId = null;
  @SerializedName("run_id")
  private String runId = null;
  public enum TypeEnum {
     message_creation,  tool_calls, 
  };
  @SerializedName("type")
  private TypeEnum type = null;
  public enum StatusEnum {
     in_progress,  cancelled,  failed,  completed,  expired, 
  };
  @SerializedName("status")
  private StatusEnum status = null;
  @SerializedName("step_details")
  private RunStepObjectStepDetails stepDetails = null;
  @SerializedName("last_error")
  private RunStepObjectLastError lastError = null;
  @SerializedName("expired_at")
  private Integer expiredAt = null;
  @SerializedName("cancelled_at")
  private Integer cancelledAt = null;
  @SerializedName("failed_at")
  private Integer failedAt = null;
  @SerializedName("completed_at")
  private Integer completedAt = null;
  @SerializedName("metadata")
  private Object metadata = null;
  @SerializedName("usage")
  private RunStepCompletionUsage usage = null;

  /**
   * The identifier of the run step, which can be referenced in API endpoints.
   **/
  @ApiModelProperty(required = true, value = "The identifier of the run step, which can be referenced in API endpoints.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * The object type, which is always `thread.run.step`.
   **/
  @ApiModelProperty(required = true, value = "The object type, which is always `thread.run.step`.")
  public _objectEnum getObject() {
    return _object;
  }
  public void setObject(_objectEnum _object) {
    this._object = _object;
  }

  /**
   * The Unix timestamp (in seconds) for when the run step was created.
   **/
  @ApiModelProperty(required = true, value = "The Unix timestamp (in seconds) for when the run step was created.")
  public Integer getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * The ID of the [assistant](/docs/api-reference/assistants) associated with the run step.
   **/
  @ApiModelProperty(required = true, value = "The ID of the [assistant](/docs/api-reference/assistants) associated with the run step.")
  public String getAssistantId() {
    return assistantId;
  }
  public void setAssistantId(String assistantId) {
    this.assistantId = assistantId;
  }

  /**
   * The ID of the [thread](/docs/api-reference/threads) that was run.
   **/
  @ApiModelProperty(required = true, value = "The ID of the [thread](/docs/api-reference/threads) that was run.")
  public String getThreadId() {
    return threadId;
  }
  public void setThreadId(String threadId) {
    this.threadId = threadId;
  }

  /**
   * The ID of the [run](/docs/api-reference/runs) that this run step is a part of.
   **/
  @ApiModelProperty(required = true, value = "The ID of the [run](/docs/api-reference/runs) that this run step is a part of.")
  public String getRunId() {
    return runId;
  }
  public void setRunId(String runId) {
    this.runId = runId;
  }

  /**
   * The type of run step, which can be either `message_creation` or `tool_calls`.
   **/
  @ApiModelProperty(required = true, value = "The type of run step, which can be either `message_creation` or `tool_calls`.")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   * The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.
   **/
  @ApiModelProperty(required = true, value = "The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.")
  public StatusEnum getStatus() {
    return status;
  }
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public RunStepObjectStepDetails getStepDetails() {
    return stepDetails;
  }
  public void setStepDetails(RunStepObjectStepDetails stepDetails) {
    this.stepDetails = stepDetails;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public RunStepObjectLastError getLastError() {
    return lastError;
  }
  public void setLastError(RunStepObjectLastError lastError) {
    this.lastError = lastError;
  }

  /**
   * The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.
   **/
  @ApiModelProperty(required = true, value = "The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.")
  public Integer getExpiredAt() {
    return expiredAt;
  }
  public void setExpiredAt(Integer expiredAt) {
    this.expiredAt = expiredAt;
  }

  /**
   * The Unix timestamp (in seconds) for when the run step was cancelled.
   **/
  @ApiModelProperty(required = true, value = "The Unix timestamp (in seconds) for when the run step was cancelled.")
  public Integer getCancelledAt() {
    return cancelledAt;
  }
  public void setCancelledAt(Integer cancelledAt) {
    this.cancelledAt = cancelledAt;
  }

  /**
   * The Unix timestamp (in seconds) for when the run step failed.
   **/
  @ApiModelProperty(required = true, value = "The Unix timestamp (in seconds) for when the run step failed.")
  public Integer getFailedAt() {
    return failedAt;
  }
  public void setFailedAt(Integer failedAt) {
    this.failedAt = failedAt;
  }

  /**
   * The Unix timestamp (in seconds) for when the run step completed.
   **/
  @ApiModelProperty(required = true, value = "The Unix timestamp (in seconds) for when the run step completed.")
  public Integer getCompletedAt() {
    return completedAt;
  }
  public void setCompletedAt(Integer completedAt) {
    this.completedAt = completedAt;
  }

  /**
   * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
   **/
  @ApiModelProperty(required = true, value = "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. ")
  public Object getMetadata() {
    return metadata;
  }
  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public RunStepCompletionUsage getUsage() {
    return usage;
  }
  public void setUsage(RunStepCompletionUsage usage) {
    this.usage = usage;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunStepObject runStepObject = (RunStepObject) o;
    return (this.id == null ? runStepObject.id == null : this.id.equals(runStepObject.id)) &&
        (this._object == null ? runStepObject._object == null : this._object.equals(runStepObject._object)) &&
        (this.createdAt == null ? runStepObject.createdAt == null : this.createdAt.equals(runStepObject.createdAt)) &&
        (this.assistantId == null ? runStepObject.assistantId == null : this.assistantId.equals(runStepObject.assistantId)) &&
        (this.threadId == null ? runStepObject.threadId == null : this.threadId.equals(runStepObject.threadId)) &&
        (this.runId == null ? runStepObject.runId == null : this.runId.equals(runStepObject.runId)) &&
        (this.type == null ? runStepObject.type == null : this.type.equals(runStepObject.type)) &&
        (this.status == null ? runStepObject.status == null : this.status.equals(runStepObject.status)) &&
        (this.stepDetails == null ? runStepObject.stepDetails == null : this.stepDetails.equals(runStepObject.stepDetails)) &&
        (this.lastError == null ? runStepObject.lastError == null : this.lastError.equals(runStepObject.lastError)) &&
        (this.expiredAt == null ? runStepObject.expiredAt == null : this.expiredAt.equals(runStepObject.expiredAt)) &&
        (this.cancelledAt == null ? runStepObject.cancelledAt == null : this.cancelledAt.equals(runStepObject.cancelledAt)) &&
        (this.failedAt == null ? runStepObject.failedAt == null : this.failedAt.equals(runStepObject.failedAt)) &&
        (this.completedAt == null ? runStepObject.completedAt == null : this.completedAt.equals(runStepObject.completedAt)) &&
        (this.metadata == null ? runStepObject.metadata == null : this.metadata.equals(runStepObject.metadata)) &&
        (this.usage == null ? runStepObject.usage == null : this.usage.equals(runStepObject.usage));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this._object == null ? 0: this._object.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.assistantId == null ? 0: this.assistantId.hashCode());
    result = 31 * result + (this.threadId == null ? 0: this.threadId.hashCode());
    result = 31 * result + (this.runId == null ? 0: this.runId.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.stepDetails == null ? 0: this.stepDetails.hashCode());
    result = 31 * result + (this.lastError == null ? 0: this.lastError.hashCode());
    result = 31 * result + (this.expiredAt == null ? 0: this.expiredAt.hashCode());
    result = 31 * result + (this.cancelledAt == null ? 0: this.cancelledAt.hashCode());
    result = 31 * result + (this.failedAt == null ? 0: this.failedAt.hashCode());
    result = 31 * result + (this.completedAt == null ? 0: this.completedAt.hashCode());
    result = 31 * result + (this.metadata == null ? 0: this.metadata.hashCode());
    result = 31 * result + (this.usage == null ? 0: this.usage.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunStepObject {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  _object: ").append(_object).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  assistantId: ").append(assistantId).append("\n");
    sb.append("  threadId: ").append(threadId).append("\n");
    sb.append("  runId: ").append(runId).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  stepDetails: ").append(stepDetails).append("\n");
    sb.append("  lastError: ").append(lastError).append("\n");
    sb.append("  expiredAt: ").append(expiredAt).append("\n");
    sb.append("  cancelledAt: ").append(cancelledAt).append("\n");
    sb.append("  failedAt: ").append(failedAt).append("\n");
    sb.append("  completedAt: ").append(completedAt).append("\n");
    sb.append("  metadata: ").append(metadata).append("\n");
    sb.append("  usage: ").append(usage).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
