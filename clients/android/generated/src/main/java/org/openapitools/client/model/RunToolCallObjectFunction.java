/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * The function definition.
 **/
@ApiModel(description = "The function definition.")
public class RunToolCallObjectFunction {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("arguments")
  private String arguments = null;

  /**
   * The name of the function.
   **/
  @ApiModelProperty(required = true, value = "The name of the function.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * The arguments that the model expects you to pass to the function.
   **/
  @ApiModelProperty(required = true, value = "The arguments that the model expects you to pass to the function.")
  public String getArguments() {
    return arguments;
  }
  public void setArguments(String arguments) {
    this.arguments = arguments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunToolCallObjectFunction runToolCallObjectFunction = (RunToolCallObjectFunction) o;
    return (this.name == null ? runToolCallObjectFunction.name == null : this.name.equals(runToolCallObjectFunction.name)) &&
        (this.arguments == null ? runToolCallObjectFunction.arguments == null : this.arguments.equals(runToolCallObjectFunction.arguments));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.arguments == null ? 0: this.arguments.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunToolCallObjectFunction {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  arguments: ").append(arguments).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
