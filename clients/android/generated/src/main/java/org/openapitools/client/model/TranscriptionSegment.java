/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class TranscriptionSegment {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("seek")
  private Integer seek = null;
  @SerializedName("start")
  private Float start = null;
  @SerializedName("end")
  private Float end = null;
  @SerializedName("text")
  private String text = null;
  @SerializedName("tokens")
  private List<Integer> tokens = null;
  @SerializedName("temperature")
  private Float temperature = null;
  @SerializedName("avg_logprob")
  private Float avgLogprob = null;
  @SerializedName("compression_ratio")
  private Float compressionRatio = null;
  @SerializedName("no_speech_prob")
  private Float noSpeechProb = null;

  /**
   * Unique identifier of the segment.
   **/
  @ApiModelProperty(required = true, value = "Unique identifier of the segment.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * Seek offset of the segment.
   **/
  @ApiModelProperty(required = true, value = "Seek offset of the segment.")
  public Integer getSeek() {
    return seek;
  }
  public void setSeek(Integer seek) {
    this.seek = seek;
  }

  /**
   * Start time of the segment in seconds.
   **/
  @ApiModelProperty(required = true, value = "Start time of the segment in seconds.")
  public Float getStart() {
    return start;
  }
  public void setStart(Float start) {
    this.start = start;
  }

  /**
   * End time of the segment in seconds.
   **/
  @ApiModelProperty(required = true, value = "End time of the segment in seconds.")
  public Float getEnd() {
    return end;
  }
  public void setEnd(Float end) {
    this.end = end;
  }

  /**
   * Text content of the segment.
   **/
  @ApiModelProperty(required = true, value = "Text content of the segment.")
  public String getText() {
    return text;
  }
  public void setText(String text) {
    this.text = text;
  }

  /**
   * Array of token IDs for the text content.
   **/
  @ApiModelProperty(required = true, value = "Array of token IDs for the text content.")
  public List<Integer> getTokens() {
    return tokens;
  }
  public void setTokens(List<Integer> tokens) {
    this.tokens = tokens;
  }

  /**
   * Temperature parameter used for generating the segment.
   **/
  @ApiModelProperty(required = true, value = "Temperature parameter used for generating the segment.")
  public Float getTemperature() {
    return temperature;
  }
  public void setTemperature(Float temperature) {
    this.temperature = temperature;
  }

  /**
   * Average logprob of the segment. If the value is lower than -1, consider the logprobs failed.
   **/
  @ApiModelProperty(required = true, value = "Average logprob of the segment. If the value is lower than -1, consider the logprobs failed.")
  public Float getAvgLogprob() {
    return avgLogprob;
  }
  public void setAvgLogprob(Float avgLogprob) {
    this.avgLogprob = avgLogprob;
  }

  /**
   * Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed.
   **/
  @ApiModelProperty(required = true, value = "Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed.")
  public Float getCompressionRatio() {
    return compressionRatio;
  }
  public void setCompressionRatio(Float compressionRatio) {
    this.compressionRatio = compressionRatio;
  }

  /**
   * Probability of no speech in the segment. If the value is higher than 1.0 and the `avg_logprob` is below -1, consider this segment silent.
   **/
  @ApiModelProperty(required = true, value = "Probability of no speech in the segment. If the value is higher than 1.0 and the `avg_logprob` is below -1, consider this segment silent.")
  public Float getNoSpeechProb() {
    return noSpeechProb;
  }
  public void setNoSpeechProb(Float noSpeechProb) {
    this.noSpeechProb = noSpeechProb;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TranscriptionSegment transcriptionSegment = (TranscriptionSegment) o;
    return (this.id == null ? transcriptionSegment.id == null : this.id.equals(transcriptionSegment.id)) &&
        (this.seek == null ? transcriptionSegment.seek == null : this.seek.equals(transcriptionSegment.seek)) &&
        (this.start == null ? transcriptionSegment.start == null : this.start.equals(transcriptionSegment.start)) &&
        (this.end == null ? transcriptionSegment.end == null : this.end.equals(transcriptionSegment.end)) &&
        (this.text == null ? transcriptionSegment.text == null : this.text.equals(transcriptionSegment.text)) &&
        (this.tokens == null ? transcriptionSegment.tokens == null : this.tokens.equals(transcriptionSegment.tokens)) &&
        (this.temperature == null ? transcriptionSegment.temperature == null : this.temperature.equals(transcriptionSegment.temperature)) &&
        (this.avgLogprob == null ? transcriptionSegment.avgLogprob == null : this.avgLogprob.equals(transcriptionSegment.avgLogprob)) &&
        (this.compressionRatio == null ? transcriptionSegment.compressionRatio == null : this.compressionRatio.equals(transcriptionSegment.compressionRatio)) &&
        (this.noSpeechProb == null ? transcriptionSegment.noSpeechProb == null : this.noSpeechProb.equals(transcriptionSegment.noSpeechProb));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.seek == null ? 0: this.seek.hashCode());
    result = 31 * result + (this.start == null ? 0: this.start.hashCode());
    result = 31 * result + (this.end == null ? 0: this.end.hashCode());
    result = 31 * result + (this.text == null ? 0: this.text.hashCode());
    result = 31 * result + (this.tokens == null ? 0: this.tokens.hashCode());
    result = 31 * result + (this.temperature == null ? 0: this.temperature.hashCode());
    result = 31 * result + (this.avgLogprob == null ? 0: this.avgLogprob.hashCode());
    result = 31 * result + (this.compressionRatio == null ? 0: this.compressionRatio.hashCode());
    result = 31 * result + (this.noSpeechProb == null ? 0: this.noSpeechProb.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TranscriptionSegment {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  seek: ").append(seek).append("\n");
    sb.append("  start: ").append(start).append("\n");
    sb.append("  end: ").append(end).append("\n");
    sb.append("  text: ").append(text).append("\n");
    sb.append("  tokens: ").append(tokens).append("\n");
    sb.append("  temperature: ").append(temperature).append("\n");
    sb.append("  avgLogprob: ").append(avgLogprob).append("\n");
    sb.append("  compressionRatio: ").append(compressionRatio).append("\n");
    sb.append("  noSpeechProb: ").append(noSpeechProb).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
