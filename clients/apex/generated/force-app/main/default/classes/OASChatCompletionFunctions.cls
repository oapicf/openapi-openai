/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASChatCompletionFunctions
 */
public class OASChatCompletionFunctions {
    /**
     * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
     * @return name
     */
    public String name { get; set; }

    /**
     * The description of what the function does.
     * @return description
     */
    public String description { get; set; }

    /**
     * The parameters the functions accepts, described as a JSON Schema object. See the [guide](/docs/guides/gpt/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation about the format.
     * @return parameters
     */
    public Map<String, oas_any_type_not_mapped> parameters { get; set; }

    public OASChatCompletionFunctions() {
        parameters = new Map<String, oas_any_type_not_mapped>();
    }

    public static OASChatCompletionFunctions getExample() {
        OASChatCompletionFunctions chatCompletionFunctions = new OASChatCompletionFunctions();
          chatCompletionFunctions.name = '';
          chatCompletionFunctions.description = '';
          chatCompletionFunctions.parameters = new Map<String, oas_any_type_not_mapped>{'key'=>oas_any_type_not_mapped.getExample()};
        return chatCompletionFunctions;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASChatCompletionFunctions) {           
            OASChatCompletionFunctions chatCompletionFunctions = (OASChatCompletionFunctions) obj;
            return this.name == chatCompletionFunctions.name
                && this.description == chatCompletionFunctions.description
                && this.parameters == chatCompletionFunctions.parameters;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (parameters == null ? 0 : System.hashCode(parameters));
        return hashCode;
    }
}

