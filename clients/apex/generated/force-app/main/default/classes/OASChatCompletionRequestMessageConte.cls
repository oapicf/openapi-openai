/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASChatCompletionRequestMessageConte
 */
public class OASChatCompletionRequestMessageConte {
    /**
     * Either a URL of the image or the base64 encoded image data.
     * @return url
     */
    public String url { get; set; }

    /**
     * Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding).
     */
    public enum DetailEnum {
        AUTO,
        LOW,
        HIGH
    }

    /**
     * Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding).
     * @return detail
     */
    public DetailEnum detail { get; set; }

    public OASChatCompletionRequestMessageConte() {
        detail = DetailEnum.AUTO;
    }

    public static OASChatCompletionRequestMessageConte getExample() {
        OASChatCompletionRequestMessageConte chatCompletionRequestMessageContentPartImageImageUrl = new OASChatCompletionRequestMessageConte();
          chatCompletionRequestMessageContentPartImageImageUrl.url = '';
          chatCompletionRequestMessageContentPartImageImageUrl.detail = DetailEnum.AUTO;
        return chatCompletionRequestMessageContentPartImageImageUrl;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASChatCompletionRequestMessageConte) {           
            OASChatCompletionRequestMessageConte chatCompletionRequestMessageContentPartImageImageUrl = (OASChatCompletionRequestMessageConte) obj;
            return this.url == chatCompletionRequestMessageContentPartImageImageUrl.url
                && this.detail == chatCompletionRequestMessageContentPartImageImageUrl.detail;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        hashCode = (17 * hashCode) + (detail == null ? 0 : System.hashCode(detail));
        return hashCode;
    }
}

