/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASChatCompletionTokenLogprobTopLogp
 */
public class OASChatCompletionTokenLogprobTopLogp {
    /**
     * The token.
     * @return token
     */
    public String token { get; set; }

    /**
     * The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely.
     * @return logprob
     */
    public Double logprob { get; set; }

    /**
     * A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.
     * @return bytes
     */
    public List<Integer> bytes { get; set; }

    public OASChatCompletionTokenLogprobTopLogp() {
        bytes = new List<Integer>();
    }

    public static OASChatCompletionTokenLogprobTopLogp getExample() {
        OASChatCompletionTokenLogprobTopLogp chatCompletionTokenLogprobTopLogprobsInner = new OASChatCompletionTokenLogprobTopLogp();
          chatCompletionTokenLogprobTopLogprobsInner.token = '';
          chatCompletionTokenLogprobTopLogprobsInner.logprob = 1.3579;
          chatCompletionTokenLogprobTopLogprobsInner.bytes = new List<Integer>{0};
        return chatCompletionTokenLogprobTopLogprobsInner;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASChatCompletionTokenLogprobTopLogp) {           
            OASChatCompletionTokenLogprobTopLogp chatCompletionTokenLogprobTopLogprobsInner = (OASChatCompletionTokenLogprobTopLogp) obj;
            return this.token == chatCompletionTokenLogprobTopLogprobsInner.token
                && this.logprob == chatCompletionTokenLogprobTopLogprobsInner.logprob
                && this.bytes == chatCompletionTokenLogprobTopLogprobsInner.bytes;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (token == null ? 0 : System.hashCode(token));
        hashCode = (17 * hashCode) + (logprob == null ? 0 : System.hashCode(logprob));
        hashCode = (17 * hashCode) + (bytes == null ? 0 : System.hashCode(bytes));
        return hashCode;
    }
}

