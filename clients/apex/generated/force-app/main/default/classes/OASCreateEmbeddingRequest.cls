/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCreateEmbeddingRequest
 */
public class OASCreateEmbeddingRequest {
    /**
     * Get model
     * @return model
     */
    public OASCreateEmbeddingRequestModel model { get; set; }

    /**
     * Get input
     * @return input
     */
    public OASCreateEmbeddingRequestInput input { get; set; }

    /**
     * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n
     * @return user
     */
    public String user { get; set; }

    public static OASCreateEmbeddingRequest getExample() {
        OASCreateEmbeddingRequest createEmbeddingRequest = new OASCreateEmbeddingRequest();
          createEmbeddingRequest.model = OASCreateEmbeddingRequestModel.getExample();
          createEmbeddingRequest.input = OASCreateEmbeddingRequestInput.getExample();
          createEmbeddingRequest.user = 'user-1234';
        return createEmbeddingRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCreateEmbeddingRequest) {           
            OASCreateEmbeddingRequest createEmbeddingRequest = (OASCreateEmbeddingRequest) obj;
            return this.model == createEmbeddingRequest.model
                && this.input == createEmbeddingRequest.input
                && this.user == createEmbeddingRequest.user;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (model == null ? 0 : System.hashCode(model));
        hashCode = (17 * hashCode) + (input == null ? 0 : System.hashCode(input));
        hashCode = (17 * hashCode) + (user == null ? 0 : System.hashCode(user));
        return hashCode;
    }
}

