/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCreateMessageRequest
 */
public class OASCreateMessageRequest implements OAS.MappedProperties {
    /**
     * The role of the entity that is creating the message. Allowed values include:\n- `user`: Indicates the message is sent by an actual user and should be used in most cases to represent user-generated messages.\n- `assistant`: Indicates the message is generated by the assistant. Use this value to insert messages from the assistant into the conversation.\n
     */
    public enum RoleEnum {
        USER,
        ASSISTANT
    }

    /**
     * The role of the entity that is creating the message. Allowed values include:\n- `user`: Indicates the message is sent by an actual user and should be used in most cases to represent user-generated messages.\n- `assistant`: Indicates the message is generated by the assistant. Use this value to insert messages from the assistant into the conversation.\n
     * @return role
     */
    public RoleEnum role { get; set; }

    /**
     * The content of the message.
     * @return content
     */
    public String content { get; set; }

    /**
     * A list of [File](/docs/api-reference/files) IDs that the message should use. There can be a maximum of 10 files attached to a message. Useful for tools like `retrieval` and `code_interpreter` that can access and use files.
     * @return fileIds
     */
    public List<String> fileIds { get; set; }

    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n
     * @return metadata
     */
    public Object metadata { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'file_ids' => 'fileIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASCreateMessageRequest() {
        fileIds = new List<String>();
    }

    public static OASCreateMessageRequest getExample() {
        OASCreateMessageRequest createMessageRequest = new OASCreateMessageRequest();
          createMessageRequest.role = RoleEnum.USER;
          createMessageRequest.content = '';
          createMessageRequest.fileIds = new List<String>{''};
          createMessageRequest.metadata = null;
        return createMessageRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCreateMessageRequest) {           
            OASCreateMessageRequest createMessageRequest = (OASCreateMessageRequest) obj;
            return this.role == createMessageRequest.role
                && this.content == createMessageRequest.content
                && this.fileIds == createMessageRequest.fileIds
                && this.metadata == createMessageRequest.metadata;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (role == null ? 0 : System.hashCode(role));
        hashCode = (17 * hashCode) + (content == null ? 0 : System.hashCode(content));
        hashCode = (17 * hashCode) + (fileIds == null ? 0 : System.hashCode(fileIds));
        hashCode = (17 * hashCode) + (metadata == null ? 0 : System.hashCode(metadata));
        return hashCode;
    }
}

