/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCreateThreadRequest
 */
public class OASCreateThreadRequest {
    /**
     * A list of [messages](/docs/api-reference/messages) to start the thread with.
     * @return messages
     */
    public List<OASCreateMessageRequest> messages { get; set; }

    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n
     * @return metadata
     */
    public Object metadata { get; set; }

    public OASCreateThreadRequest() {
        messages = new List<OASCreateMessageRequest>();
    }

    public static OASCreateThreadRequest getExample() {
        OASCreateThreadRequest createThreadRequest = new OASCreateThreadRequest();
          createThreadRequest.messages = new List<OASCreateMessageRequest>{OASCreateMessageRequest.getExample()};
          createThreadRequest.metadata = null;
        return createThreadRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCreateThreadRequest) {           
            OASCreateThreadRequest createThreadRequest = (OASCreateThreadRequest) obj;
            return this.messages == createThreadRequest.messages
                && this.metadata == createThreadRequest.metadata;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (messages == null ? 0 : System.hashCode(messages));
        hashCode = (17 * hashCode) + (metadata == null ? 0 : System.hashCode(metadata));
        return hashCode;
    }
}

