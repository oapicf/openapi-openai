/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASFilesApi {
    OASClient client;

    public OASFilesApi(OASClient client) {
        this.client = client;
    }

    public OASFilesApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.\n\nThe size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine-tuning API only supports &#x60;.jsonl&#x60; files.\n\nPlease [contact us](https://help.openai.com/) if you need to increase these storage limits.\n
     * 
     * @param file The File object (not file name) to be uploaded.\n (required)
     * @param purpose The intended purpose of the uploaded file.\n\nUse &quot;fine-tune&quot; for [Fine-tuning](/docs/api-reference/fine-tuning) and &quot;assistants&quot; for [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages). This allows us to validate the format of the uploaded file is correct for fine-tuning.\n (required)
     * @return OASOpenAIFile
     * @throws OAS.ApiException if fails to make API call
     */
    public OASOpenAIFile createFile(Map<String, Object> params) {
        client.assertNotNull(params.get('file'), 'file');
        client.assertNotNull(params.get('purpose'), 'purpose');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        // cast form params to verify their expected type
        form.addAll(client.makeParam('file', (Blob) params.get('file')));
        form.addAll(client.makeParam('purpose', (String) params.get('purpose')));

        return (OASOpenAIFile) client.invoke(
            'POST', '/files', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'multipart/form-data' },
            new List<String> { 'ApiKeyAuth' },
            OASOpenAIFile.class
        );
    }
    /**
     * Delete a file.
     * 
     * @param fileId The ID of the file to use for this request. (required)
     * @return OASDeleteFileResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeleteFileResponse deleteFile(Map<String, Object> params) {
        client.assertNotNull(params.get('fileId'), 'fileId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeleteFileResponse) client.invoke(
            'DELETE', '/files/{file_id}', '',
            query, form,
            new Map<String, Object>{
                'file_id' => (String) params.get('fileId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'ApiKeyAuth' },
            OASDeleteFileResponse.class
        );
    }
    /**
     * Returns the contents of the specified file.
     * 
     * @param fileId The ID of the file to use for this request. (required)
     * @return String
     * @throws OAS.ApiException if fails to make API call
     */
    public String downloadFile(Map<String, Object> params) {
        client.assertNotNull(params.get('fileId'), 'fileId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (String) client.invoke(
            'GET', '/files/{file_id}/content', '',
            query, form,
            new Map<String, Object>{
                'file_id' => (String) params.get('fileId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'ApiKeyAuth' },
            String.class
        );
    }
    /**
     * Returns a list of files that belong to the user\&#39;s organization.
     * 
     * @param purpose Only return files with the given purpose. (optional)
     * @return OASListFilesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASListFilesResponse listFiles(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('purpose', (String) params.get('purpose')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASListFilesResponse) client.invoke(
            'GET', '/files', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'ApiKeyAuth' },
            OASListFilesResponse.class
        );
    }
    /**
     * Returns information about a specific file.
     * 
     * @param fileId The ID of the file to use for this request. (required)
     * @return OASOpenAIFile
     * @throws OAS.ApiException if fails to make API call
     */
    public OASOpenAIFile retrieveFile(Map<String, Object> params) {
        client.assertNotNull(params.get('fileId'), 'fileId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASOpenAIFile) client.invoke(
            'GET', '/files/{file_id}', '',
            query, form,
            new Map<String, Object>{
                'file_id' => (String) params.get('fileId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'ApiKeyAuth' },
            OASOpenAIFile.class
        );
    }
}
