/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents the url or the content of an image generated by the OpenAI API.
 */
public class OASImage implements OAS.MappedProperties {
    /**
     * The base64-encoded JSON of the generated image, if `response_format` is `b64_json`.
     * @return b64Json
     */
    public String b64Json { get; set; }

    /**
     * The URL of the generated image, if `response_format` is `url` (default).
     * @return url
     */
    public String url { get; set; }

    /**
     * The prompt that was used to generate the image, if there was any revision to the prompt.
     * @return revisedPrompt
     */
    public String revisedPrompt { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'b64_json' => 'b64Json',
        'revised_prompt' => 'revisedPrompt'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'b64_json' => 'b64Json',
        'revised_prompt' => 'revisedPrompt'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASImage getExample() {
        OASImage image = new OASImage();
          image.b64Json = '';
          image.url = '';
          image.revisedPrompt = '';
        return image;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASImage) {           
            OASImage image = (OASImage) obj;
            return this.b64Json == image.b64Json
                && this.url == image.url
                && this.revisedPrompt == image.revisedPrompt;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (b64Json == null ? 0 : System.hashCode(b64Json));
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        hashCode = (17 * hashCode) + (revisedPrompt == null ? 0 : System.hashCode(revisedPrompt));
        return hashCode;
    }
}

