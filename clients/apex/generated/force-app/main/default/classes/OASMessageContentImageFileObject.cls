/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * References an image [File](/docs/api-reference/files) in the content of a message.
 */
public class OASMessageContentImageFileObject implements OAS.MappedProperties {
    /**
     * Always `image_file`.
     */
    public enum TypeEnum {
        IMAGE_FILE
    }

    /**
     * Always `image_file`.
     * @return type
     */
    public TypeEnum type { get; set; }

    /**
     * Get imageFile
     * @return imageFile
     */
    public OASMessageContentImageFileObjectImag imageFile { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'image_file' => 'imageFile'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASMessageContentImageFileObject getExample() {
        OASMessageContentImageFileObject messageContentImageFileObject = new OASMessageContentImageFileObject();
          messageContentImageFileObject.type = TypeEnum.IMAGE_FILE;
          messageContentImageFileObject.imageFile = OASMessageContentImageFileObjectImag.getExample();
        return messageContentImageFileObject;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMessageContentImageFileObject) {           
            OASMessageContentImageFileObject messageContentImageFileObject = (OASMessageContentImageFileObject) obj;
            return this.type == messageContentImageFileObject.type
                && this.imageFile == messageContentImageFileObject.imageFile;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (imageFile == null ? 0 : System.hashCode(imageFile));
        return hashCode;
    }
}

