/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents a message within a [thread](/docs/api-reference/threads).
 */
public class OASMessageObject implements OAS.MappedProperties {
    /**
     * The identifier, which can be referenced in API endpoints.
     * @return id
     */
    public String id { get; set; }

    /**
     * The object type, which is always `thread.message`.
     */
    public enum RObjectEnum {
        THREAD_MESSAGE
    }

    /**
     * The object type, which is always `thread.message`.
     * @return r_object
     */
    public RObjectEnum r_object { get; set; }

    /**
     * The Unix timestamp (in seconds) for when the message was created.
     * @return createdAt
     */
    public Integer createdAt { get; set; }

    /**
     * The [thread](/docs/api-reference/threads) ID that this message belongs to.
     * @return threadId
     */
    public String threadId { get; set; }

    /**
     * The status of the message, which can be either `in_progress`, `incomplete`, or `completed`.
     */
    public enum StatusEnum {
        IN_PROGRESS,
        INCOMPLETE,
        COMPLETED
    }

    /**
     * The status of the message, which can be either `in_progress`, `incomplete`, or `completed`.
     * @return status
     */
    public StatusEnum status { get; set; }

    /**
     * Get incompleteDetails
     * @return incompleteDetails
     */
    public OASMessageObjectIncompleteDetails incompleteDetails { get; set; }

    /**
     * The Unix timestamp (in seconds) for when the message was completed.
     * @return completedAt
     */
    public Integer completedAt { get; set; }

    /**
     * The Unix timestamp (in seconds) for when the message was marked as incomplete.
     * @return incompleteAt
     */
    public Integer incompleteAt { get; set; }

    /**
     * The entity that produced the message. One of `user` or `assistant`.
     */
    public enum RoleEnum {
        USER,
        ASSISTANT
    }

    /**
     * The entity that produced the message. One of `user` or `assistant`.
     * @return role
     */
    public RoleEnum role { get; set; }

    /**
     * The content of the message in array of text and/or images.
     * @return content
     */
    public List<OASMessageObjectContentInner> content { get; set; }

    /**
     * If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message.
     * @return assistantId
     */
    public String assistantId { get; set; }

    /**
     * The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is `null` when messages are created manually using the create message or create thread endpoints.
     * @return runId
     */
    public String runId { get; set; }

    /**
     * A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
     * @return fileIds
     */
    public List<String> fileIds { get; set; }

    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n
     * @return metadata
     */
    public Object metadata { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt',
        'thread_id' => 'threadId',
        'incomplete_details' => 'incompleteDetails',
        'completed_at' => 'completedAt',
        'incomplete_at' => 'incompleteAt',
        'assistant_id' => 'assistantId',
        'run_id' => 'runId',
        'file_ids' => 'fileIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt',
        'thread_id' => 'threadId',
        'incomplete_details' => 'incompleteDetails',
        'completed_at' => 'completedAt',
        'incomplete_at' => 'incompleteAt',
        'assistant_id' => 'assistantId',
        'run_id' => 'runId',
        'file_ids' => 'fileIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt',
        'thread_id' => 'threadId',
        'incomplete_details' => 'incompleteDetails',
        'completed_at' => 'completedAt',
        'incomplete_at' => 'incompleteAt',
        'assistant_id' => 'assistantId',
        'run_id' => 'runId',
        'file_ids' => 'fileIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt',
        'thread_id' => 'threadId',
        'incomplete_details' => 'incompleteDetails',
        'completed_at' => 'completedAt',
        'incomplete_at' => 'incompleteAt',
        'assistant_id' => 'assistantId',
        'run_id' => 'runId',
        'file_ids' => 'fileIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt',
        'thread_id' => 'threadId',
        'incomplete_details' => 'incompleteDetails',
        'completed_at' => 'completedAt',
        'incomplete_at' => 'incompleteAt',
        'assistant_id' => 'assistantId',
        'run_id' => 'runId',
        'file_ids' => 'fileIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt',
        'thread_id' => 'threadId',
        'incomplete_details' => 'incompleteDetails',
        'completed_at' => 'completedAt',
        'incomplete_at' => 'incompleteAt',
        'assistant_id' => 'assistantId',
        'run_id' => 'runId',
        'file_ids' => 'fileIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt',
        'thread_id' => 'threadId',
        'incomplete_details' => 'incompleteDetails',
        'completed_at' => 'completedAt',
        'incomplete_at' => 'incompleteAt',
        'assistant_id' => 'assistantId',
        'run_id' => 'runId',
        'file_ids' => 'fileIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt',
        'thread_id' => 'threadId',
        'incomplete_details' => 'incompleteDetails',
        'completed_at' => 'completedAt',
        'incomplete_at' => 'incompleteAt',
        'assistant_id' => 'assistantId',
        'run_id' => 'runId',
        'file_ids' => 'fileIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt',
        'thread_id' => 'threadId',
        'incomplete_details' => 'incompleteDetails',
        'completed_at' => 'completedAt',
        'incomplete_at' => 'incompleteAt',
        'assistant_id' => 'assistantId',
        'run_id' => 'runId',
        'file_ids' => 'fileIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASMessageObject() {
        content = new List<OASMessageObjectContentInner>();
        fileIds = new List<String>();
    }

    public static OASMessageObject getExample() {
        OASMessageObject messageObject = new OASMessageObject();
          messageObject.id = '';
          messageObject.r_object = RObjectEnum.THREAD_MESSAGE;
          messageObject.createdAt = 0;
          messageObject.threadId = '';
          messageObject.status = StatusEnum.IN_PROGRESS;
          messageObject.incompleteDetails = OASMessageObjectIncompleteDetails.getExample();
          messageObject.completedAt = 0;
          messageObject.incompleteAt = 0;
          messageObject.role = RoleEnum.USER;
          messageObject.content = new List<OASMessageObjectContentInner>{OASMessageObjectContentInner.getExample()};
          messageObject.assistantId = '';
          messageObject.runId = '';
          messageObject.fileIds = new List<String>{''};
          messageObject.metadata = null;
        return messageObject;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMessageObject) {           
            OASMessageObject messageObject = (OASMessageObject) obj;
            return this.id == messageObject.id
                && this.r_object == messageObject.r_object
                && this.createdAt == messageObject.createdAt
                && this.threadId == messageObject.threadId
                && this.status == messageObject.status
                && this.incompleteDetails == messageObject.incompleteDetails
                && this.completedAt == messageObject.completedAt
                && this.incompleteAt == messageObject.incompleteAt
                && this.role == messageObject.role
                && this.content == messageObject.content
                && this.assistantId == messageObject.assistantId
                && this.runId == messageObject.runId
                && this.fileIds == messageObject.fileIds
                && this.metadata == messageObject.metadata;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (r_object == null ? 0 : System.hashCode(r_object));
        hashCode = (17 * hashCode) + (createdAt == null ? 0 : System.hashCode(createdAt));
        hashCode = (17 * hashCode) + (threadId == null ? 0 : System.hashCode(threadId));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (incompleteDetails == null ? 0 : System.hashCode(incompleteDetails));
        hashCode = (17 * hashCode) + (completedAt == null ? 0 : System.hashCode(completedAt));
        hashCode = (17 * hashCode) + (incompleteAt == null ? 0 : System.hashCode(incompleteAt));
        hashCode = (17 * hashCode) + (role == null ? 0 : System.hashCode(role));
        hashCode = (17 * hashCode) + (content == null ? 0 : System.hashCode(content));
        hashCode = (17 * hashCode) + (assistantId == null ? 0 : System.hashCode(assistantId));
        hashCode = (17 * hashCode) + (runId == null ? 0 : System.hashCode(runId));
        hashCode = (17 * hashCode) + (fileIds == null ? 0 : System.hashCode(fileIds));
        hashCode = (17 * hashCode) + (metadata == null ? 0 : System.hashCode(metadata));
        return hashCode;
    }
}

