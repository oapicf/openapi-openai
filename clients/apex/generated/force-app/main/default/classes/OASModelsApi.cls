/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASModelsApi {
    OASClient client;

    public OASModelsApi(OASClient client) {
        this.client = client;
    }

    public OASModelsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
     * 
     * @param model The model to delete (required)
     * @return OASDeleteModelResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeleteModelResponse deleteModel(Map<String, Object> params) {
        client.assertNotNull(params.get('model'), 'model');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeleteModelResponse) client.invoke(
            'DELETE', '/models/{model}', '',
            query, form,
            new Map<String, Object>{
                'model' => (String) params.get('model')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'ApiKeyAuth' },
            OASDeleteModelResponse.class
        );
    }
    /**
     * Lists the currently available models, and provides basic information about each one such as the owner and availability.
     * 
     * @return OASListModelsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASListModelsResponse listModels() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASListModelsResponse) client.invoke(
            'GET', '/models', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'ApiKeyAuth' },
            OASListModelsResponse.class
        );
    }
    /**
     * Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
     * 
     * @param model The ID of the model to use for this request (required)
     * @return OASModel
     * @throws OAS.ApiException if fails to make API call
     */
    public OASModel retrieveModel(Map<String, Object> params) {
        client.assertNotNull(params.get('model'), 'model');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASModel) client.invoke(
            'GET', '/models/{model}', '',
            query, form,
            new Map<String, Object>{
                'model' => (String) params.get('model')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'ApiKeyAuth' },
            OASModel.class
        );
    }
}
