/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * The definition of the function that was called.
 */
public class OASRunStepDetailsToolCallsFunctionOb {
    /**
     * The name of the function.
     * @return name
     */
    public String name { get; set; }

    /**
     * The arguments passed to the function.
     * @return arguments
     */
    public String arguments { get; set; }

    /**
     * The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet.
     * @return output
     */
    public String output { get; set; }

    public static OASRunStepDetailsToolCallsFunctionOb getExample() {
        OASRunStepDetailsToolCallsFunctionOb runStepDetailsToolCallsFunctionObjectFunction = new OASRunStepDetailsToolCallsFunctionOb();
          runStepDetailsToolCallsFunctionObjectFunction.name = '';
          runStepDetailsToolCallsFunctionObjectFunction.arguments = '';
          runStepDetailsToolCallsFunctionObjectFunction.output = '';
        return runStepDetailsToolCallsFunctionObjectFunction;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASRunStepDetailsToolCallsFunctionOb) {           
            OASRunStepDetailsToolCallsFunctionOb runStepDetailsToolCallsFunctionObjectFunction = (OASRunStepDetailsToolCallsFunctionOb) obj;
            return this.name == runStepDetailsToolCallsFunctionObjectFunction.name
                && this.arguments == runStepDetailsToolCallsFunctionObjectFunction.arguments
                && this.output == runStepDetailsToolCallsFunctionObjectFunction.output;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (arguments == null ? 0 : System.hashCode(arguments));
        hashCode = (17 * hashCode) + (output == null ? 0 : System.hashCode(output));
        return hashCode;
    }
}

