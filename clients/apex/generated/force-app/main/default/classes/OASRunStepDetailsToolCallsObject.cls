/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Details of the tool call.
 */
public class OASRunStepDetailsToolCallsObject implements OAS.MappedProperties {
    /**
     * Always `tool_calls`.
     */
    public enum TypeEnum {
        TOOL_CALLS
    }

    /**
     * Always `tool_calls`.
     * @return type
     */
    public TypeEnum type { get; set; }

    /**
     * An array of tool calls the run step was involved in. These can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n
     * @return toolCalls
     */
    public List<OASRunStepDetailsToolCallsObjectTool> toolCalls { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'tool_calls' => 'toolCalls'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASRunStepDetailsToolCallsObject() {
        toolCalls = new List<OASRunStepDetailsToolCallsObjectTool>();
    }

    public static OASRunStepDetailsToolCallsObject getExample() {
        OASRunStepDetailsToolCallsObject runStepDetailsToolCallsObject = new OASRunStepDetailsToolCallsObject();
          runStepDetailsToolCallsObject.type = TypeEnum.TOOL_CALLS;
          runStepDetailsToolCallsObject.toolCalls = new List<OASRunStepDetailsToolCallsObjectTool>{OASRunStepDetailsToolCallsObjectTool.getExample()};
        return runStepDetailsToolCallsObject;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASRunStepDetailsToolCallsObject) {           
            OASRunStepDetailsToolCallsObject runStepDetailsToolCallsObject = (OASRunStepDetailsToolCallsObject) obj;
            return this.type == runStepDetailsToolCallsObject.type
                && this.toolCalls == runStepDetailsToolCallsObject.toolCalls;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (toolCalls == null ? 0 : System.hashCode(toolCalls));
        return hashCode;
    }
}

