/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSubmitToolOutputsRunRequest
 */
public class OASSubmitToolOutputsRunRequest implements OAS.MappedProperties {
    /**
     * A list of tools for which the outputs are being submitted.
     * @return toolOutputs
     */
    public List<OASSubmitToolOutputsRunRequestToolOu> toolOutputs { get; set; }

    /**
     * If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message.\n
     * @return stream
     */
    public Boolean stream { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'tool_outputs' => 'toolOutputs'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASSubmitToolOutputsRunRequest() {
        toolOutputs = new List<OASSubmitToolOutputsRunRequestToolOu>();
    }

    public static OASSubmitToolOutputsRunRequest getExample() {
        OASSubmitToolOutputsRunRequest submitToolOutputsRunRequest = new OASSubmitToolOutputsRunRequest();
          submitToolOutputsRunRequest.toolOutputs = new List<OASSubmitToolOutputsRunRequestToolOu>{OASSubmitToolOutputsRunRequestToolOu.getExample()};
          submitToolOutputsRunRequest.stream = true;
        return submitToolOutputsRunRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSubmitToolOutputsRunRequest) {           
            OASSubmitToolOutputsRunRequest submitToolOutputsRunRequest = (OASSubmitToolOutputsRunRequest) obj;
            return this.toolOutputs == submitToolOutputsRunRequest.toolOutputs
                && this.stream == submitToolOutputsRunRequest.stream;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (toolOutputs == null ? 0 : System.hashCode(toolOutputs));
        hashCode = (17 * hashCode) + (stream == null ? 0 : System.hashCode(stream));
        return hashCode;
    }
}

