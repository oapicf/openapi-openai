/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents a thread that contains [messages](/docs/api-reference/messages).
 */
public class OASThreadObject implements OAS.MappedProperties {
    /**
     * The identifier, which can be referenced in API endpoints.
     * @return id
     */
    public String id { get; set; }

    /**
     * The object type, which is always `thread`.
     */
    public enum RObjectEnum {
        THREAD
    }

    /**
     * The object type, which is always `thread`.
     * @return r_object
     */
    public RObjectEnum r_object { get; set; }

    /**
     * The Unix timestamp (in seconds) for when the thread was created.
     * @return createdAt
     */
    public Integer createdAt { get; set; }

    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n
     * @return metadata
     */
    public Object metadata { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'object' => 'r_object',
        'created_at' => 'createdAt'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASThreadObject getExample() {
        OASThreadObject threadObject = new OASThreadObject();
          threadObject.id = '';
          threadObject.r_object = RObjectEnum.THREAD;
          threadObject.createdAt = 0;
          threadObject.metadata = null;
        return threadObject;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASThreadObject) {           
            OASThreadObject threadObject = (OASThreadObject) obj;
            return this.id == threadObject.id
                && this.r_object == threadObject.r_object
                && this.createdAt == threadObject.createdAt
                && this.metadata == threadObject.metadata;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (r_object == null ? 0 : System.hashCode(r_object));
        hashCode = (17 * hashCode) + (createdAt == null ? 0 : System.hashCode(createdAt));
        hashCode = (17 * hashCode) + (metadata == null ? 0 : System.hashCode(metadata));
        return hashCode;
    }
}

