/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASTranscriptionWord
 */
public class OASTranscriptionWord implements OAS.MappedProperties {
    /**
     * The text content of the word.
     * @return word
     */
    public String word { get; set; }

    /**
     * Start time of the word in seconds.
     * @return start
     */
    public Double start { get; set; }

    /**
     * End time of the word in seconds.
     * @return r_end
     */
    public Double r_end { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'end' => 'r_end'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASTranscriptionWord getExample() {
        OASTranscriptionWord transcriptionWord = new OASTranscriptionWord();
          transcriptionWord.word = '';
          transcriptionWord.start = 1.3579;
          transcriptionWord.r_end = 1.3579;
        return transcriptionWord;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASTranscriptionWord) {           
            OASTranscriptionWord transcriptionWord = (OASTranscriptionWord) obj;
            return this.word == transcriptionWord.word
                && this.start == transcriptionWord.start
                && this.r_end == transcriptionWord.r_end;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (word == null ? 0 : System.hashCode(word));
        hashCode = (17 * hashCode) + (start == null ? 0 : System.hashCode(start));
        hashCode = (17 * hashCode) + (r_end == null ? 0 : System.hashCode(r_end));
        return hashCode;
    }
}

