/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ImagesApiController : ControllerBase
    { 
        /// <summary>
        /// Creates an image given a prompt.
        /// </summary>
        /// <param name="createImageRequest"></param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/images/generations")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateImage")]
        [SwaggerResponse(statusCode: 200, type: typeof(ImagesResponse), description: "OK")]
        public virtual IActionResult CreateImage([FromBody]CreateImageRequest createImageRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ImagesResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"revised_prompt\" : \"revised_prompt\",\n    \"b64_json\" : \"b64_json\",\n    \"url\" : \"url\"\n  }, {\n    \"revised_prompt\" : \"revised_prompt\",\n    \"b64_json\" : \"b64_json\",\n    \"url\" : \"url\"\n  } ],\n  \"created\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ImagesResponse>(exampleJson)
            : default(ImagesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates an edited or extended image given an original image and a prompt.
        /// </summary>
        /// <param name="image">The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.</param>
        /// <param name="prompt">A text description of the desired image(s). The maximum length is 1000 characters.</param>
        /// <param name="mask">An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.</param>
        /// <param name="model"></param>
        /// <param name="n">The number of images to generate. Must be between 1 and 10.</param>
        /// <param name="size">The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.</param>
        /// <param name="responseFormat">The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated.</param>
        /// <param name="user">A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). </param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/images/edits")]
        [Authorize]
        [Consumes("multipart/form-data")]
        [ValidateModelState]
        [SwaggerOperation("CreateImageEdit")]
        [SwaggerResponse(statusCode: 200, type: typeof(ImagesResponse), description: "OK")]
        public virtual IActionResult CreateImageEdit([Required()]IFormFile image, [FromForm (Name = "prompt")][Required()]string prompt, IFormFile mask, [FromForm]CreateImageEditRequestModel model, [FromForm (Name = "n")][Range(1, 10)]int? n, [FromForm (Name = "size")]string size, [FromForm (Name = "response_format")]string responseFormat, [FromForm (Name = "user")]string user)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ImagesResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"revised_prompt\" : \"revised_prompt\",\n    \"b64_json\" : \"b64_json\",\n    \"url\" : \"url\"\n  }, {\n    \"revised_prompt\" : \"revised_prompt\",\n    \"b64_json\" : \"b64_json\",\n    \"url\" : \"url\"\n  } ],\n  \"created\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ImagesResponse>(exampleJson)
            : default(ImagesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a variation of a given image.
        /// </summary>
        /// <param name="image">The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.</param>
        /// <param name="model"></param>
        /// <param name="n">The number of images to generate. Must be between 1 and 10. For &#x60;dall-e-3&#x60;, only &#x60;n&#x3D;1&#x60; is supported.</param>
        /// <param name="responseFormat">The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated.</param>
        /// <param name="size">The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.</param>
        /// <param name="user">A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). </param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/images/variations")]
        [Authorize]
        [Consumes("multipart/form-data")]
        [ValidateModelState]
        [SwaggerOperation("CreateImageVariation")]
        [SwaggerResponse(statusCode: 200, type: typeof(ImagesResponse), description: "OK")]
        public virtual IActionResult CreateImageVariation([Required()]IFormFile image, [FromForm]CreateImageEditRequestModel model, [FromForm (Name = "n")][Range(1, 10)]int? n, [FromForm (Name = "response_format")]string responseFormat, [FromForm (Name = "size")]string size, [FromForm (Name = "user")]string user)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ImagesResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"revised_prompt\" : \"revised_prompt\",\n    \"b64_json\" : \"b64_json\",\n    \"url\" : \"url\"\n  }, {\n    \"revised_prompt\" : \"revised_prompt\",\n    \"b64_json\" : \"b64_json\",\n    \"url\" : \"url\"\n  } ],\n  \"created\" : 0\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ImagesResponse>(exampleJson)
            : default(ImagesResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
