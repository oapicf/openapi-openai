/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ModelsApiController : ControllerBase
    { 
        /// <summary>
        /// Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
        /// </summary>
        /// <param name="model">The model to delete</param>
        /// <response code="200">OK</response>
        [HttpDelete]
        [Route("/v1/models/{model}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("DeleteModel")]
        [SwaggerResponse(statusCode: 200, type: typeof(DeleteModelResponse), description: "OK")]
        public virtual IActionResult DeleteModel([FromRoute (Name = "model")][Required]string model)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DeleteModelResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"deleted\" : true,\n  \"id\" : \"id\",\n  \"object\" : \"object\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<DeleteModelResponse>(exampleJson)
            : default(DeleteModelResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Lists the currently available models, and provides basic information about each one such as the owner and availability.
        /// </summary>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/models")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("ListModels")]
        [SwaggerResponse(statusCode: 200, type: typeof(ListModelsResponse), description: "OK")]
        public virtual IActionResult ListModels()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ListModelsResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"created\" : 0,\n    \"owned_by\" : \"owned_by\",\n    \"id\" : \"id\",\n    \"object\" : \"model\"\n  }, {\n    \"created\" : 0,\n    \"owned_by\" : \"owned_by\",\n    \"id\" : \"id\",\n    \"object\" : \"model\"\n  } ],\n  \"object\" : \"list\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ListModelsResponse>(exampleJson)
            : default(ListModelsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
        /// </summary>
        /// <param name="model">The ID of the model to use for this request</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/models/{model}")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("RetrieveModel")]
        [SwaggerResponse(statusCode: 200, type: typeof(Model), description: "OK")]
        public virtual IActionResult RetrieveModel([FromRoute (Name = "model")][Required]string model)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Model));
            string exampleJson = null;
            exampleJson = "{\n  \"created\" : 0,\n  \"owned_by\" : \"owned_by\",\n  \"id\" : \"id\",\n  \"object\" : \"model\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Model>(exampleJson)
            : default(Model);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
