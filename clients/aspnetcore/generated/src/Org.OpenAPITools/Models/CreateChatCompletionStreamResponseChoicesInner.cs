/*
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CreateChatCompletionStreamResponseChoicesInner : IEquatable<CreateChatCompletionStreamResponseChoicesInner>
    {
        /// <summary>
        /// Gets or Sets Index
        /// </summary>
        [DataMember(Name="index", EmitDefaultValue=true)]
        public int Index { get; set; }

        /// <summary>
        /// Gets or Sets Delta
        /// </summary>
        [DataMember(Name="delta", EmitDefaultValue=false)]
        public ChatCompletionStreamResponseDelta Delta { get; set; }


        /// <summary>
        /// Gets or Sets FinishReason
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<FinishReasonEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum FinishReasonEnum
        {
            
            /// <summary>
            /// Enum StopEnum for stop
            /// </summary>
            [EnumMember(Value = "stop")]
            StopEnum = 1,
            
            /// <summary>
            /// Enum LengthEnum for length
            /// </summary>
            [EnumMember(Value = "length")]
            LengthEnum = 2,
            
            /// <summary>
            /// Enum FunctionCallEnum for function_call
            /// </summary>
            [EnumMember(Value = "function_call")]
            FunctionCallEnum = 3
        }

        /// <summary>
        /// Gets or Sets FinishReason
        /// </summary>
        [DataMember(Name="finish_reason", EmitDefaultValue=true)]
        public FinishReasonEnum FinishReason { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateChatCompletionStreamResponseChoicesInner {\n");
            sb.Append("  Index: ").Append(Index).Append("\n");
            sb.Append("  Delta: ").Append(Delta).Append("\n");
            sb.Append("  FinishReason: ").Append(FinishReason).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CreateChatCompletionStreamResponseChoicesInner)obj);
        }

        /// <summary>
        /// Returns true if CreateChatCompletionStreamResponseChoicesInner instances are equal
        /// </summary>
        /// <param name="other">Instance of CreateChatCompletionStreamResponseChoicesInner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateChatCompletionStreamResponseChoicesInner other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Index == other.Index ||
                    
                    Index.Equals(other.Index)
                ) && 
                (
                    Delta == other.Delta ||
                    Delta != null &&
                    Delta.Equals(other.Delta)
                ) && 
                (
                    FinishReason == other.FinishReason ||
                    
                    FinishReason.Equals(other.FinishReason)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + Index.GetHashCode();
                    if (Delta != null)
                    hashCode = hashCode * 59 + Delta.GetHashCode();
                    
                    hashCode = hashCode * 59 + FinishReason.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CreateChatCompletionStreamResponseChoicesInner left, CreateChatCompletionStreamResponseChoicesInner right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CreateChatCompletionStreamResponseChoicesInner left, CreateChatCompletionStreamResponseChoicesInner right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
