/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ChatCompletionRequestAssistantMessage_function_call.h
 *
 * Deprecated and replaced by &#x60;tool_calls&#x60;. The name and arguments of a function that should be called, as generated by the model.
 */

#ifndef ChatCompletionRequestAssistantMessage_function_call_H_
#define ChatCompletionRequestAssistantMessage_function_call_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Deprecated and replaced by &#x60;tool_calls&#x60;. The name and arguments of a function that should be called, as generated by the model.
/// </summary>
class  ChatCompletionRequestAssistantMessage_function_call
{
public:
    ChatCompletionRequestAssistantMessage_function_call();
    virtual ~ChatCompletionRequestAssistantMessage_function_call() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ChatCompletionRequestAssistantMessage_function_call& rhs) const;
    bool operator!=(const ChatCompletionRequestAssistantMessage_function_call& rhs) const;

    /////////////////////////////////////////////
    /// ChatCompletionRequestAssistantMessage_function_call members

    /// <summary>
    /// The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
    /// </summary>
    std::string getArguments() const;
    void setArguments(std::string const& value);
    /// <summary>
    /// The name of the function to call.
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);

    friend  void to_json(nlohmann::json& j, const ChatCompletionRequestAssistantMessage_function_call& o);
    friend  void from_json(const nlohmann::json& j, ChatCompletionRequestAssistantMessage_function_call& o);
protected:
    std::string m_Arguments;

    std::string m_Name;

    
};

} // namespace org::openapitools::server::model

#endif /* ChatCompletionRequestAssistantMessage_function_call_H_ */
