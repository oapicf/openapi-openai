/**
* OpenAI API
* APIs for sampling from and fine-tuning language models
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CreateCompletionResponse.h
 *
 * 
 */

#ifndef CreateCompletionResponse_H_
#define CreateCompletionResponse_H_


#include <string>
#include "CreateCompletionResponse_choices_inner.h"
#include "CreateCompletionResponse_usage.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CreateCompletionResponse
{
public:
    CreateCompletionResponse();
    virtual ~CreateCompletionResponse() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CreateCompletionResponse& rhs) const;
    bool operator!=(const CreateCompletionResponse& rhs) const;

    /////////////////////////////////////////////
    /// CreateCompletionResponse members

    /// <summary>
    /// 
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    std::string getObject() const;
    void setObject(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getCreated() const;
    void setCreated(int32_t const value);
    /// <summary>
    /// 
    /// </summary>
    std::string getModel() const;
    void setModel(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<org::openapitools::server::model::CreateCompletionResponse_choices_inner> getChoices() const;
    void setChoices(std::vector<org::openapitools::server::model::CreateCompletionResponse_choices_inner> const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CreateCompletionResponse_usage getUsage() const;
    void setUsage(org::openapitools::server::model::CreateCompletionResponse_usage const& value);
    bool usageIsSet() const;
    void unsetUsage();

    friend  void to_json(nlohmann::json& j, const CreateCompletionResponse& o);
    friend  void from_json(const nlohmann::json& j, CreateCompletionResponse& o);
protected:
    std::string m_Id;

    std::string m_object;

    int32_t m_Created;

    std::string m_Model;

    std::vector<org::openapitools::server::model::CreateCompletionResponse_choices_inner> m_Choices;

    org::openapitools::server::model::CreateCompletionResponse_usage m_Usage;
    bool m_UsageIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CreateCompletionResponse_H_ */
