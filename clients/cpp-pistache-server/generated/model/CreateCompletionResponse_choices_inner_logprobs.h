/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CreateCompletionResponse_choices_inner_logprobs.h
 *
 * 
 */

#ifndef CreateCompletionResponse_choices_inner_logprobs_H_
#define CreateCompletionResponse_choices_inner_logprobs_H_


#include <string>
#include <map>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CreateCompletionResponse_choices_inner_logprobs
{
public:
    CreateCompletionResponse_choices_inner_logprobs();
    virtual ~CreateCompletionResponse_choices_inner_logprobs() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CreateCompletionResponse_choices_inner_logprobs& rhs) const;
    bool operator!=(const CreateCompletionResponse_choices_inner_logprobs& rhs) const;

    /////////////////////////////////////////////
    /// CreateCompletionResponse_choices_inner_logprobs members

    /// <summary>
    /// 
    /// </summary>
    std::vector<int32_t> getTextOffset() const;
    void setTextOffset(std::vector<int32_t> const value);
    bool textOffsetIsSet() const;
    void unsetText_offset();
    /// <summary>
    /// 
    /// </summary>
    std::vector<double> getTokenLogprobs() const;
    void setTokenLogprobs(std::vector<double> const value);
    bool tokenLogprobsIsSet() const;
    void unsetToken_logprobs();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::string> getTokens() const;
    void setTokens(std::vector<std::string> const& value);
    bool tokensIsSet() const;
    void unsetTokens();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::map<std::string, double>> getTopLogprobs() const;
    void setTopLogprobs(std::vector<std::map<std::string, double>> const& value);
    bool topLogprobsIsSet() const;
    void unsetTop_logprobs();

    friend  void to_json(nlohmann::json& j, const CreateCompletionResponse_choices_inner_logprobs& o);
    friend  void from_json(const nlohmann::json& j, CreateCompletionResponse_choices_inner_logprobs& o);
protected:
    std::vector<int32_t> m_Text_offset;
    bool m_Text_offsetIsSet;
    std::vector<double> m_Token_logprobs;
    bool m_Token_logprobsIsSet;
    std::vector<std::string> m_Tokens;
    bool m_TokensIsSet;
    std::vector<std::map<std::string, double>> m_Top_logprobs;
    bool m_Top_logprobsIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CreateCompletionResponse_choices_inner_logprobs_H_ */
