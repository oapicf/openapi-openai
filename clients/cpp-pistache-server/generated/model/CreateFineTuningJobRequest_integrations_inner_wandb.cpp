/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CreateFineTuningJobRequest_integrations_inner_wandb.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CreateFineTuningJobRequest_integrations_inner_wandb::CreateFineTuningJobRequest_integrations_inner_wandb()
{
    m_Project = "";
    m_Name = "";
    m_NameIsSet = false;
    m_Entity = "";
    m_EntityIsSet = false;
    m_TagsIsSet = false;
    
}

void CreateFineTuningJobRequest_integrations_inner_wandb::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CreateFineTuningJobRequest_integrations_inner_wandb::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CreateFineTuningJobRequest_integrations_inner_wandb::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CreateFineTuningJobRequest_integrations_inner_wandb" : pathPrefix;

                     
    if (tagsIsSet())
    {
        const std::vector<std::string>& value = m_Tags;
        const std::string currentValuePath = _pathPrefix + ".tags";
                
        
        { // Recursive validation of array elements
            const std::string oldValuePath = currentValuePath;
            int i = 0;
            for (const std::string& value : value)
            { 
                const std::string currentValuePath = oldValuePath + "[" + std::to_string(i) + "]";
                        
        
 
                i++;
            }
        }

    }
    
    return success;
}

bool CreateFineTuningJobRequest_integrations_inner_wandb::operator==(const CreateFineTuningJobRequest_integrations_inner_wandb& rhs) const
{
    return
    
    
    (getProject() == rhs.getProject())
     &&
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName())) &&
    
    
    ((!entityIsSet() && !rhs.entityIsSet()) || (entityIsSet() && rhs.entityIsSet() && getEntity() == rhs.getEntity())) &&
    
    
    ((!tagsIsSet() && !rhs.tagsIsSet()) || (tagsIsSet() && rhs.tagsIsSet() && getTags() == rhs.getTags()))
    
    ;
}

bool CreateFineTuningJobRequest_integrations_inner_wandb::operator!=(const CreateFineTuningJobRequest_integrations_inner_wandb& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CreateFineTuningJobRequest_integrations_inner_wandb& o)
{
    j = nlohmann::json::object();
    j["project"] = o.m_Project;
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    if(o.entityIsSet())
        j["entity"] = o.m_Entity;
    if(o.tagsIsSet() || !o.m_Tags.empty())
        j["tags"] = o.m_Tags;
    
}

void from_json(const nlohmann::json& j, CreateFineTuningJobRequest_integrations_inner_wandb& o)
{
    j.at("project").get_to(o.m_Project);
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    if(j.find("entity") != j.end())
    {
        j.at("entity").get_to(o.m_Entity);
        o.m_EntityIsSet = true;
    } 
    if(j.find("tags") != j.end())
    {
        j.at("tags").get_to(o.m_Tags);
        o.m_TagsIsSet = true;
    } 
    
}

std::string CreateFineTuningJobRequest_integrations_inner_wandb::getProject() const
{
    return m_Project;
}
void CreateFineTuningJobRequest_integrations_inner_wandb::setProject(std::string const& value)
{
    m_Project = value;
}
std::string CreateFineTuningJobRequest_integrations_inner_wandb::getName() const
{
    return m_Name;
}
void CreateFineTuningJobRequest_integrations_inner_wandb::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool CreateFineTuningJobRequest_integrations_inner_wandb::nameIsSet() const
{
    return m_NameIsSet;
}
void CreateFineTuningJobRequest_integrations_inner_wandb::unsetName()
{
    m_NameIsSet = false;
}
std::string CreateFineTuningJobRequest_integrations_inner_wandb::getEntity() const
{
    return m_Entity;
}
void CreateFineTuningJobRequest_integrations_inner_wandb::setEntity(std::string const& value)
{
    m_Entity = value;
    m_EntityIsSet = true;
}
bool CreateFineTuningJobRequest_integrations_inner_wandb::entityIsSet() const
{
    return m_EntityIsSet;
}
void CreateFineTuningJobRequest_integrations_inner_wandb::unsetEntity()
{
    m_EntityIsSet = false;
}
std::vector<std::string> CreateFineTuningJobRequest_integrations_inner_wandb::getTags() const
{
    return m_Tags;
}
void CreateFineTuningJobRequest_integrations_inner_wandb::setTags(std::vector<std::string> const& value)
{
    m_Tags = value;
    m_TagsIsSet = true;
}
bool CreateFineTuningJobRequest_integrations_inner_wandb::tagsIsSet() const
{
    return m_TagsIsSet;
}
void CreateFineTuningJobRequest_integrations_inner_wandb::unsetTags()
{
    m_TagsIsSet = false;
}


} // namespace org::openapitools::server::model

