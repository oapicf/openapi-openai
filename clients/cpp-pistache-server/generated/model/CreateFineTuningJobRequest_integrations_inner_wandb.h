/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CreateFineTuningJobRequest_integrations_inner_wandb.h
 *
 * The settings for your integration with Weights and Biases. This payload specifies the project that metrics will be sent to. Optionally, you can set an explicit display name for your run, add tags to your run, and set a default entity (team, username, etc) to be associated with your run. 
 */

#ifndef CreateFineTuningJobRequest_integrations_inner_wandb_H_
#define CreateFineTuningJobRequest_integrations_inner_wandb_H_


#include <string>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// The settings for your integration with Weights and Biases. This payload specifies the project that metrics will be sent to. Optionally, you can set an explicit display name for your run, add tags to your run, and set a default entity (team, username, etc) to be associated with your run. 
/// </summary>
class  CreateFineTuningJobRequest_integrations_inner_wandb
{
public:
    CreateFineTuningJobRequest_integrations_inner_wandb();
    virtual ~CreateFineTuningJobRequest_integrations_inner_wandb() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CreateFineTuningJobRequest_integrations_inner_wandb& rhs) const;
    bool operator!=(const CreateFineTuningJobRequest_integrations_inner_wandb& rhs) const;

    /////////////////////////////////////////////
    /// CreateFineTuningJobRequest_integrations_inner_wandb members

    /// <summary>
    /// The name of the project that the new run will be created under. 
    /// </summary>
    std::string getProject() const;
    void setProject(std::string const& value);
    /// <summary>
    /// A display name to set for the run. If not set, we will use the Job ID as the name. 
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// The entity to use for the run. This allows you to set the team or username of the WandB user that you would like associated with the run. If not set, the default entity for the registered WandB API key is used. 
    /// </summary>
    std::string getEntity() const;
    void setEntity(std::string const& value);
    bool entityIsSet() const;
    void unsetEntity();
    /// <summary>
    /// A list of tags to be attached to the newly created run. These tags are passed through directly to WandB. Some default tags are generated by OpenAI: \&quot;openai/finetune\&quot;, \&quot;openai/{base-model}\&quot;, \&quot;openai/{ftjob-abcdef}\&quot;. 
    /// </summary>
    std::vector<std::string> getTags() const;
    void setTags(std::vector<std::string> const& value);
    bool tagsIsSet() const;
    void unsetTags();

    friend  void to_json(nlohmann::json& j, const CreateFineTuningJobRequest_integrations_inner_wandb& o);
    friend  void from_json(const nlohmann::json& j, CreateFineTuningJobRequest_integrations_inner_wandb& o);
protected:
    std::string m_Project;

    std::string m_Name;
    bool m_NameIsSet;
    std::string m_Entity;
    bool m_EntityIsSet;
    std::vector<std::string> m_Tags;
    bool m_TagsIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CreateFineTuningJobRequest_integrations_inner_wandb_H_ */
