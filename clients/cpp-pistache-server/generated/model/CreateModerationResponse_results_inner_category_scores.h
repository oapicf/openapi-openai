/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CreateModerationResponse_results_inner_category_scores.h
 *
 * A list of the categories along with their scores as predicted by model.
 */

#ifndef CreateModerationResponse_results_inner_category_scores_H_
#define CreateModerationResponse_results_inner_category_scores_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// A list of the categories along with their scores as predicted by model.
/// </summary>
class  CreateModerationResponse_results_inner_category_scores
{
public:
    CreateModerationResponse_results_inner_category_scores();
    virtual ~CreateModerationResponse_results_inner_category_scores() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CreateModerationResponse_results_inner_category_scores& rhs) const;
    bool operator!=(const CreateModerationResponse_results_inner_category_scores& rhs) const;

    /////////////////////////////////////////////
    /// CreateModerationResponse_results_inner_category_scores members

    /// <summary>
    /// The score for the category &#39;hate&#39;.
    /// </summary>
    double getHate() const;
    void setHate(double const value);
    /// <summary>
    /// The score for the category &#39;hate/threatening&#39;.
    /// </summary>
    double getHateThreatening() const;
    void setHateThreatening(double const value);
    /// <summary>
    /// The score for the category &#39;harassment&#39;.
    /// </summary>
    double getHarassment() const;
    void setHarassment(double const value);
    /// <summary>
    /// The score for the category &#39;harassment/threatening&#39;.
    /// </summary>
    double getHarassmentThreatening() const;
    void setHarassmentThreatening(double const value);
    /// <summary>
    /// The score for the category &#39;self-harm&#39;.
    /// </summary>
    double getSelfHarm() const;
    void setSelfHarm(double const value);
    /// <summary>
    /// The score for the category &#39;self-harm/intent&#39;.
    /// </summary>
    double getSelfHarmIntent() const;
    void setSelfHarmIntent(double const value);
    /// <summary>
    /// The score for the category &#39;self-harm/instructions&#39;.
    /// </summary>
    double getSelfHarmInstructions() const;
    void setSelfHarmInstructions(double const value);
    /// <summary>
    /// The score for the category &#39;sexual&#39;.
    /// </summary>
    double getSexual() const;
    void setSexual(double const value);
    /// <summary>
    /// The score for the category &#39;sexual/minors&#39;.
    /// </summary>
    double getSexualMinors() const;
    void setSexualMinors(double const value);
    /// <summary>
    /// The score for the category &#39;violence&#39;.
    /// </summary>
    double getViolence() const;
    void setViolence(double const value);
    /// <summary>
    /// The score for the category &#39;violence/graphic&#39;.
    /// </summary>
    double getViolenceGraphic() const;
    void setViolenceGraphic(double const value);

    friend  void to_json(nlohmann::json& j, const CreateModerationResponse_results_inner_category_scores& o);
    friend  void from_json(const nlohmann::json& j, CreateModerationResponse_results_inner_category_scores& o);
protected:
    double m_Hate;

    double m_Hate_threatening;

    double m_Harassment;

    double m_Harassment_threatening;

    double m_Self_harm;

    double m_Self_harm_intent;

    double m_Self_harm_instructions;

    double m_Sexual;

    double m_Sexual_minors;

    double m_Violence;

    double m_Violence_graphic;

    
};

} // namespace org::openapitools::server::model

#endif /* CreateModerationResponse_results_inner_category_scores_H_ */
