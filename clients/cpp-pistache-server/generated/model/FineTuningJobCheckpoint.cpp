/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "FineTuningJobCheckpoint.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

FineTuningJobCheckpoint::FineTuningJobCheckpoint()
{
    m_Id = "";
    m_Created_at = 0;
    m_Fine_tuned_model_checkpoint = "";
    m_Step_number = 0;
    m_Fine_tuning_job_id = "";
    m_object = "";
    
}

void FineTuningJobCheckpoint::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool FineTuningJobCheckpoint::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool FineTuningJobCheckpoint::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "FineTuningJobCheckpoint" : pathPrefix;

                        
    if (!m_Metrics.validate(msg, _pathPrefix + ".metrics")) {
        msg << _pathPrefix << ": Metrics is invalid;";
        success = false;
    }        
    return success;
}

bool FineTuningJobCheckpoint::operator==(const FineTuningJobCheckpoint& rhs) const
{
    return
    
    
    (getId() == rhs.getId())
     &&
    
    (getCreatedAt() == rhs.getCreatedAt())
     &&
    
    (getFineTunedModelCheckpoint() == rhs.getFineTunedModelCheckpoint())
     &&
    
    (getStepNumber() == rhs.getStepNumber())
     &&
    
    (getMetrics() == rhs.getMetrics())
     &&
    
    (getFineTuningJobId() == rhs.getFineTuningJobId())
     &&
    
    (getObject() == rhs.getObject())
    
    
    ;
}

bool FineTuningJobCheckpoint::operator!=(const FineTuningJobCheckpoint& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const FineTuningJobCheckpoint& o)
{
    j = nlohmann::json::object();
    j["id"] = o.m_Id;
    j["created_at"] = o.m_Created_at;
    j["fine_tuned_model_checkpoint"] = o.m_Fine_tuned_model_checkpoint;
    j["step_number"] = o.m_Step_number;
    j["metrics"] = o.m_Metrics;
    j["fine_tuning_job_id"] = o.m_Fine_tuning_job_id;
    j["object"] = o.m_object;
    
}

void from_json(const nlohmann::json& j, FineTuningJobCheckpoint& o)
{
    j.at("id").get_to(o.m_Id);
    j.at("created_at").get_to(o.m_Created_at);
    j.at("fine_tuned_model_checkpoint").get_to(o.m_Fine_tuned_model_checkpoint);
    j.at("step_number").get_to(o.m_Step_number);
    j.at("metrics").get_to(o.m_Metrics);
    j.at("fine_tuning_job_id").get_to(o.m_Fine_tuning_job_id);
    j.at("object").get_to(o.m_object);
    
}

std::string FineTuningJobCheckpoint::getId() const
{
    return m_Id;
}
void FineTuningJobCheckpoint::setId(std::string const& value)
{
    m_Id = value;
}
int32_t FineTuningJobCheckpoint::getCreatedAt() const
{
    return m_Created_at;
}
void FineTuningJobCheckpoint::setCreatedAt(int32_t const value)
{
    m_Created_at = value;
}
std::string FineTuningJobCheckpoint::getFineTunedModelCheckpoint() const
{
    return m_Fine_tuned_model_checkpoint;
}
void FineTuningJobCheckpoint::setFineTunedModelCheckpoint(std::string const& value)
{
    m_Fine_tuned_model_checkpoint = value;
}
int32_t FineTuningJobCheckpoint::getStepNumber() const
{
    return m_Step_number;
}
void FineTuningJobCheckpoint::setStepNumber(int32_t const value)
{
    m_Step_number = value;
}
org::openapitools::server::model::FineTuningJobCheckpoint_metrics FineTuningJobCheckpoint::getMetrics() const
{
    return m_Metrics;
}
void FineTuningJobCheckpoint::setMetrics(org::openapitools::server::model::FineTuningJobCheckpoint_metrics const& value)
{
    m_Metrics = value;
}
std::string FineTuningJobCheckpoint::getFineTuningJobId() const
{
    return m_Fine_tuning_job_id;
}
void FineTuningJobCheckpoint::setFineTuningJobId(std::string const& value)
{
    m_Fine_tuning_job_id = value;
}
std::string FineTuningJobCheckpoint::getObject() const
{
    return m_object;
}
void FineTuningJobCheckpoint::setObject(std::string const& value)
{
    m_object = value;
}


} // namespace org::openapitools::server::model

