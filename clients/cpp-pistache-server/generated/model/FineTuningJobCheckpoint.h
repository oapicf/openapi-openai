/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * FineTuningJobCheckpoint.h
 *
 * The &#x60;fine_tuning.job.checkpoint&#x60; object represents a model checkpoint for a fine-tuning job that is ready to use. 
 */

#ifndef FineTuningJobCheckpoint_H_
#define FineTuningJobCheckpoint_H_


#include <string>
#include "FineTuningJobCheckpoint_metrics.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// The &#x60;fine_tuning.job.checkpoint&#x60; object represents a model checkpoint for a fine-tuning job that is ready to use. 
/// </summary>
class  FineTuningJobCheckpoint
{
public:
    FineTuningJobCheckpoint();
    virtual ~FineTuningJobCheckpoint() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const FineTuningJobCheckpoint& rhs) const;
    bool operator!=(const FineTuningJobCheckpoint& rhs) const;

    /////////////////////////////////////////////
    /// FineTuningJobCheckpoint members

    /// <summary>
    /// The checkpoint identifier, which can be referenced in the API endpoints.
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    /// <summary>
    /// The Unix timestamp (in seconds) for when the checkpoint was created.
    /// </summary>
    int32_t getCreatedAt() const;
    void setCreatedAt(int32_t const value);
    /// <summary>
    /// The name of the fine-tuned checkpoint model that is created.
    /// </summary>
    std::string getFineTunedModelCheckpoint() const;
    void setFineTunedModelCheckpoint(std::string const& value);
    /// <summary>
    /// The step number that the checkpoint was created at.
    /// </summary>
    int32_t getStepNumber() const;
    void setStepNumber(int32_t const value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::FineTuningJobCheckpoint_metrics getMetrics() const;
    void setMetrics(org::openapitools::server::model::FineTuningJobCheckpoint_metrics const& value);
    /// <summary>
    /// The name of the fine-tuning job that this checkpoint was created from.
    /// </summary>
    std::string getFineTuningJobId() const;
    void setFineTuningJobId(std::string const& value);
    /// <summary>
    /// The object type, which is always \&quot;fine_tuning.job.checkpoint\&quot;.
    /// </summary>
    std::string getObject() const;
    void setObject(std::string const& value);

    friend  void to_json(nlohmann::json& j, const FineTuningJobCheckpoint& o);
    friend  void from_json(const nlohmann::json& j, FineTuningJobCheckpoint& o);
protected:
    std::string m_Id;

    int32_t m_Created_at;

    std::string m_Fine_tuned_model_checkpoint;

    int32_t m_Step_number;

    org::openapitools::server::model::FineTuningJobCheckpoint_metrics m_Metrics;

    std::string m_Fine_tuning_job_id;

    std::string m_object;

    
};

} // namespace org::openapitools::server::model

#endif /* FineTuningJobCheckpoint_H_ */
