/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ListFilesResponse.h
 *
 * 
 */

#ifndef ListFilesResponse_H_
#define ListFilesResponse_H_


#include <string>
#include "OpenAIFile.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  ListFilesResponse
{
public:
    ListFilesResponse();
    virtual ~ListFilesResponse() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ListFilesResponse& rhs) const;
    bool operator!=(const ListFilesResponse& rhs) const;

    /////////////////////////////////////////////
    /// ListFilesResponse members

    /// <summary>
    /// 
    /// </summary>
    std::vector<org::openapitools::server::model::OpenAIFile> getData() const;
    void setData(std::vector<org::openapitools::server::model::OpenAIFile> const& value);
    /// <summary>
    /// 
    /// </summary>
    std::string getObject() const;
    void setObject(std::string const& value);

    friend  void to_json(nlohmann::json& j, const ListFilesResponse& o);
    friend  void from_json(const nlohmann::json& j, ListFilesResponse& o);
protected:
    std::vector<org::openapitools::server::model::OpenAIFile> m_Data;

    std::string m_object;

    
};

} // namespace org::openapitools::server::model

#endif /* ListFilesResponse_H_ */
