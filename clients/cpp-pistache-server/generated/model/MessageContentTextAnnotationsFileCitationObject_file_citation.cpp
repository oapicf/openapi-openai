/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "MessageContentTextAnnotationsFileCitationObject_file_citation.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

MessageContentTextAnnotationsFileCitationObject_file_citation::MessageContentTextAnnotationsFileCitationObject_file_citation()
{
    m_File_id = "";
    m_Quote = "";
    
}

void MessageContentTextAnnotationsFileCitationObject_file_citation::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool MessageContentTextAnnotationsFileCitationObject_file_citation::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool MessageContentTextAnnotationsFileCitationObject_file_citation::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "MessageContentTextAnnotationsFileCitationObject_file_citation" : pathPrefix;

            
    return success;
}

bool MessageContentTextAnnotationsFileCitationObject_file_citation::operator==(const MessageContentTextAnnotationsFileCitationObject_file_citation& rhs) const
{
    return
    
    
    (getFileId() == rhs.getFileId())
     &&
    
    (getQuote() == rhs.getQuote())
    
    
    ;
}

bool MessageContentTextAnnotationsFileCitationObject_file_citation::operator!=(const MessageContentTextAnnotationsFileCitationObject_file_citation& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const MessageContentTextAnnotationsFileCitationObject_file_citation& o)
{
    j = nlohmann::json::object();
    j["file_id"] = o.m_File_id;
    j["quote"] = o.m_Quote;
    
}

void from_json(const nlohmann::json& j, MessageContentTextAnnotationsFileCitationObject_file_citation& o)
{
    j.at("file_id").get_to(o.m_File_id);
    j.at("quote").get_to(o.m_Quote);
    
}

std::string MessageContentTextAnnotationsFileCitationObject_file_citation::getFileId() const
{
    return m_File_id;
}
void MessageContentTextAnnotationsFileCitationObject_file_citation::setFileId(std::string const& value)
{
    m_File_id = value;
}
std::string MessageContentTextAnnotationsFileCitationObject_file_citation::getQuote() const
{
    return m_Quote;
}
void MessageContentTextAnnotationsFileCitationObject_file_citation::setQuote(std::string const& value)
{
    m_Quote = value;
}


} // namespace org::openapitools::server::model

