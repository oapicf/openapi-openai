/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "MessageDeltaContentImageFileObject_image_file.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

MessageDeltaContentImageFileObject_image_file::MessageDeltaContentImageFileObject_image_file()
{
    m_File_id = "";
    m_File_idIsSet = false;
    
}

void MessageDeltaContentImageFileObject_image_file::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool MessageDeltaContentImageFileObject_image_file::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool MessageDeltaContentImageFileObject_image_file::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "MessageDeltaContentImageFileObject_image_file" : pathPrefix;

        
    return success;
}

bool MessageDeltaContentImageFileObject_image_file::operator==(const MessageDeltaContentImageFileObject_image_file& rhs) const
{
    return
    
    
    
    ((!fileIdIsSet() && !rhs.fileIdIsSet()) || (fileIdIsSet() && rhs.fileIdIsSet() && getFileId() == rhs.getFileId()))
    
    ;
}

bool MessageDeltaContentImageFileObject_image_file::operator!=(const MessageDeltaContentImageFileObject_image_file& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const MessageDeltaContentImageFileObject_image_file& o)
{
    j = nlohmann::json::object();
    if(o.fileIdIsSet())
        j["file_id"] = o.m_File_id;
    
}

void from_json(const nlohmann::json& j, MessageDeltaContentImageFileObject_image_file& o)
{
    if(j.find("file_id") != j.end())
    {
        j.at("file_id").get_to(o.m_File_id);
        o.m_File_idIsSet = true;
    } 
    
}

std::string MessageDeltaContentImageFileObject_image_file::getFileId() const
{
    return m_File_id;
}
void MessageDeltaContentImageFileObject_image_file::setFileId(std::string const& value)
{
    m_File_id = value;
    m_File_idIsSet = true;
}
bool MessageDeltaContentImageFileObject_image_file::fileIdIsSet() const
{
    return m_File_idIsSet;
}
void MessageDeltaContentImageFileObject_image_file::unsetFile_id()
{
    m_File_idIsSet = false;
}


} // namespace org::openapitools::server::model

