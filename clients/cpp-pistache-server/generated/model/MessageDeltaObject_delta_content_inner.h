/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * MessageDeltaObject_delta_content_inner.h
 *
 * 
 */

#ifndef MessageDeltaObject_delta_content_inner_H_
#define MessageDeltaObject_delta_content_inner_H_


#include "MessageDeltaContentTextObject_text.h"
#include <string>
#include "MessageDeltaContentImageFileObject_image_file.h"
#include "MessageDeltaContentTextObject.h"
#include "MessageDeltaContentImageFileObject.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  MessageDeltaObject_delta_content_inner
{
public:
    MessageDeltaObject_delta_content_inner();
    virtual ~MessageDeltaObject_delta_content_inner() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const MessageDeltaObject_delta_content_inner& rhs) const;
    bool operator!=(const MessageDeltaObject_delta_content_inner& rhs) const;

    /////////////////////////////////////////////
    /// MessageDeltaObject_delta_content_inner members

    /// <summary>
    /// The index of the content part in the message.
    /// </summary>
    int32_t getIndex() const;
    void setIndex(int32_t const value);
    /// <summary>
    /// Always &#x60;image_file&#x60;.
    /// </summary>
    std::string getType() const;
    void setType(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::MessageDeltaContentImageFileObject_image_file getImageFile() const;
    void setImageFile(org::openapitools::server::model::MessageDeltaContentImageFileObject_image_file const& value);
    bool imageFileIsSet() const;
    void unsetImage_file();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::MessageDeltaContentTextObject_text getText() const;
    void setText(org::openapitools::server::model::MessageDeltaContentTextObject_text const& value);
    bool textIsSet() const;
    void unsetText();

    friend  void to_json(nlohmann::json& j, const MessageDeltaObject_delta_content_inner& o);
    friend  void from_json(const nlohmann::json& j, MessageDeltaObject_delta_content_inner& o);
protected:
    int32_t m_Index;

    std::string m_Type;

    org::openapitools::server::model::MessageDeltaContentImageFileObject_image_file m_Image_file;
    bool m_Image_fileIsSet;
    org::openapitools::server::model::MessageDeltaContentTextObject_text m_Text;
    bool m_TextIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* MessageDeltaObject_delta_content_inner_H_ */
