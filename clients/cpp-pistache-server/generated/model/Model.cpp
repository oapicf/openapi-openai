/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Model.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

Model::Model()
{
    m_Id = "";
    m_Created = 0;
    m_object = "";
    m_Owned_by = "";
    
}

void Model::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool Model::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Model::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Model" : pathPrefix;

                    
    return success;
}

bool Model::operator==(const Model& rhs) const
{
    return
    
    
    (getId() == rhs.getId())
     &&
    
    (getCreated() == rhs.getCreated())
     &&
    
    (getObject() == rhs.getObject())
     &&
    
    (getOwnedBy() == rhs.getOwnedBy())
    
    
    ;
}

bool Model::operator!=(const Model& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Model& o)
{
    j = nlohmann::json::object();
    j["id"] = o.m_Id;
    j["created"] = o.m_Created;
    j["object"] = o.m_object;
    j["owned_by"] = o.m_Owned_by;
    
}

void from_json(const nlohmann::json& j, Model& o)
{
    j.at("id").get_to(o.m_Id);
    j.at("created").get_to(o.m_Created);
    j.at("object").get_to(o.m_object);
    j.at("owned_by").get_to(o.m_Owned_by);
    
}

std::string Model::getId() const
{
    return m_Id;
}
void Model::setId(std::string const& value)
{
    m_Id = value;
}
int32_t Model::getCreated() const
{
    return m_Created;
}
void Model::setCreated(int32_t const value)
{
    m_Created = value;
}
std::string Model::getObject() const
{
    return m_object;
}
void Model::setObject(std::string const& value)
{
    m_object = value;
}
std::string Model::getOwnedBy() const
{
    return m_Owned_by;
}
void Model::setOwnedBy(std::string const& value)
{
    m_Owned_by = value;
}


} // namespace org::openapitools::server::model

