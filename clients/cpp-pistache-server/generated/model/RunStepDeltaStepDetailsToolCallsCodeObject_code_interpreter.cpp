/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter()
{
    m_Input = "";
    m_InputIsSet = false;
    m_OutputsIsSet = false;
    
}

void RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter" : pathPrefix;

             
    if (outputsIsSet())
    {
        const std::vector<org::openapitools::server::model::RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner>& value = m_Outputs;
        const std::string currentValuePath = _pathPrefix + ".outputs";
                
        
        { // Recursive validation of array elements
            const std::string oldValuePath = currentValuePath;
            int i = 0;
            for (const org::openapitools::server::model::RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner& value : value)
            { 
                const std::string currentValuePath = oldValuePath + "[" + std::to_string(i) + "]";
                        
        success = value.validate(msg, currentValuePath + ".outputs") && success;
 
                i++;
            }
        }

    }
    
    return success;
}

bool RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::operator==(const RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter& rhs) const
{
    return
    
    
    
    ((!inputIsSet() && !rhs.inputIsSet()) || (inputIsSet() && rhs.inputIsSet() && getInput() == rhs.getInput())) &&
    
    
    ((!outputsIsSet() && !rhs.outputsIsSet()) || (outputsIsSet() && rhs.outputsIsSet() && getOutputs() == rhs.getOutputs()))
    
    ;
}

bool RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::operator!=(const RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter& o)
{
    j = nlohmann::json::object();
    if(o.inputIsSet())
        j["input"] = o.m_Input;
    if(o.outputsIsSet() || !o.m_Outputs.empty())
        j["outputs"] = o.m_Outputs;
    
}

void from_json(const nlohmann::json& j, RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter& o)
{
    if(j.find("input") != j.end())
    {
        j.at("input").get_to(o.m_Input);
        o.m_InputIsSet = true;
    } 
    if(j.find("outputs") != j.end())
    {
        j.at("outputs").get_to(o.m_Outputs);
        o.m_OutputsIsSet = true;
    } 
    
}

std::string RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::getInput() const
{
    return m_Input;
}
void RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::setInput(std::string const& value)
{
    m_Input = value;
    m_InputIsSet = true;
}
bool RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::inputIsSet() const
{
    return m_InputIsSet;
}
void RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::unsetInput()
{
    m_InputIsSet = false;
}
std::vector<org::openapitools::server::model::RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner> RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::getOutputs() const
{
    return m_Outputs;
}
void RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::setOutputs(std::vector<org::openapitools::server::model::RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner> const& value)
{
    m_Outputs = value;
    m_OutputsIsSet = true;
}
bool RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::outputsIsSet() const
{
    return m_OutputsIsSet;
}
void RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter::unsetOutputs()
{
    m_OutputsIsSet = false;
}


} // namespace org::openapitools::server::model

