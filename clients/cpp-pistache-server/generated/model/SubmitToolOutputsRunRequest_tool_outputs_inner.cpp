/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "SubmitToolOutputsRunRequest_tool_outputs_inner.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

SubmitToolOutputsRunRequest_tool_outputs_inner::SubmitToolOutputsRunRequest_tool_outputs_inner()
{
    m_Tool_call_id = "";
    m_Tool_call_idIsSet = false;
    m_Output = "";
    m_OutputIsSet = false;
    
}

void SubmitToolOutputsRunRequest_tool_outputs_inner::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool SubmitToolOutputsRunRequest_tool_outputs_inner::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool SubmitToolOutputsRunRequest_tool_outputs_inner::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "SubmitToolOutputsRunRequest_tool_outputs_inner" : pathPrefix;

            
    return success;
}

bool SubmitToolOutputsRunRequest_tool_outputs_inner::operator==(const SubmitToolOutputsRunRequest_tool_outputs_inner& rhs) const
{
    return
    
    
    
    ((!toolCallIdIsSet() && !rhs.toolCallIdIsSet()) || (toolCallIdIsSet() && rhs.toolCallIdIsSet() && getToolCallId() == rhs.getToolCallId())) &&
    
    
    ((!outputIsSet() && !rhs.outputIsSet()) || (outputIsSet() && rhs.outputIsSet() && getOutput() == rhs.getOutput()))
    
    ;
}

bool SubmitToolOutputsRunRequest_tool_outputs_inner::operator!=(const SubmitToolOutputsRunRequest_tool_outputs_inner& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const SubmitToolOutputsRunRequest_tool_outputs_inner& o)
{
    j = nlohmann::json::object();
    if(o.toolCallIdIsSet())
        j["tool_call_id"] = o.m_Tool_call_id;
    if(o.outputIsSet())
        j["output"] = o.m_Output;
    
}

void from_json(const nlohmann::json& j, SubmitToolOutputsRunRequest_tool_outputs_inner& o)
{
    if(j.find("tool_call_id") != j.end())
    {
        j.at("tool_call_id").get_to(o.m_Tool_call_id);
        o.m_Tool_call_idIsSet = true;
    } 
    if(j.find("output") != j.end())
    {
        j.at("output").get_to(o.m_Output);
        o.m_OutputIsSet = true;
    } 
    
}

std::string SubmitToolOutputsRunRequest_tool_outputs_inner::getToolCallId() const
{
    return m_Tool_call_id;
}
void SubmitToolOutputsRunRequest_tool_outputs_inner::setToolCallId(std::string const& value)
{
    m_Tool_call_id = value;
    m_Tool_call_idIsSet = true;
}
bool SubmitToolOutputsRunRequest_tool_outputs_inner::toolCallIdIsSet() const
{
    return m_Tool_call_idIsSet;
}
void SubmitToolOutputsRunRequest_tool_outputs_inner::unsetTool_call_id()
{
    m_Tool_call_idIsSet = false;
}
std::string SubmitToolOutputsRunRequest_tool_outputs_inner::getOutput() const
{
    return m_Output;
}
void SubmitToolOutputsRunRequest_tool_outputs_inner::setOutput(std::string const& value)
{
    m_Output = value;
    m_OutputIsSet = true;
}
bool SubmitToolOutputsRunRequest_tool_outputs_inner::outputIsSet() const
{
    return m_OutputIsSet;
}
void SubmitToolOutputsRunRequest_tool_outputs_inner::unsetOutput()
{
    m_OutputIsSet = false;
}


} // namespace org::openapitools::server::model

