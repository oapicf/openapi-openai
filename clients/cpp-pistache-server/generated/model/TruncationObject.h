/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * TruncationObject.h
 *
 * 
 */

#ifndef TruncationObject_H_
#define TruncationObject_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  TruncationObject
{
public:
    TruncationObject();
    virtual ~TruncationObject() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const TruncationObject& rhs) const;
    bool operator!=(const TruncationObject& rhs) const;

    /////////////////////////////////////////////
    /// TruncationObject members

    /// <summary>
    /// The truncation strategy to use for the thread. The default is &#x60;auto&#x60;. If set to &#x60;last_messages&#x60;, the thread will be truncated to the n most recent messages in the thread. When set to &#x60;auto&#x60;, messages in the middle of the thread will be dropped to fit the context length of the model, &#x60;max_prompt_tokens&#x60;.
    /// </summary>
    std::string getType() const;
    void setType(std::string const& value);
    bool typeIsSet() const;
    void unsetType();
    /// <summary>
    /// The number of most recent messages from the thread when constructing the context for the run.
    /// </summary>
    int32_t getLastMessages() const;
    void setLastMessages(int32_t const value);
    bool lastMessagesIsSet() const;
    void unsetLast_messages();

    friend  void to_json(nlohmann::json& j, const TruncationObject& o);
    friend  void from_json(const nlohmann::json& j, TruncationObject& o);
protected:
    std::string m_Type;
    bool m_TypeIsSet;
    int32_t m_Last_messages;
    bool m_Last_messagesIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* TruncationObject_H_ */
