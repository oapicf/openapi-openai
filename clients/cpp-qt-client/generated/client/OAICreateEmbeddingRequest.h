/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateEmbeddingRequest.h
 *
 * 
 */

#ifndef OAICreateEmbeddingRequest_H
#define OAICreateEmbeddingRequest_H

#include <QJsonObject>

#include "OAICreateEmbeddingRequest_input.h"
#include "OAICreateEmbeddingRequest_model.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateEmbeddingRequest : public OAIObject {
public:
    OAICreateEmbeddingRequest();
    OAICreateEmbeddingRequest(QString json);
    ~OAICreateEmbeddingRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateEmbeddingRequest_input getInput() const;
    void setInput(const OAICreateEmbeddingRequest_input &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    OAICreateEmbeddingRequest_model getModel() const;
    void setModel(const OAICreateEmbeddingRequest_model &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getEncodingFormat() const;
    void setEncodingFormat(const QString &encoding_format);
    bool is_encoding_format_Set() const;
    bool is_encoding_format_Valid() const;

    qint32 getDimensions() const;
    void setDimensions(const qint32 &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateEmbeddingRequest_input m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    OAICreateEmbeddingRequest_model m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_encoding_format;
    bool m_encoding_format_isSet;
    bool m_encoding_format_isValid;

    qint32 m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateEmbeddingRequest)

#endif // OAICreateEmbeddingRequest_H
