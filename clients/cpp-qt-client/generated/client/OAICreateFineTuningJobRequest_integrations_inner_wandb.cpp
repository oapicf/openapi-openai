/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateFineTuningJobRequest_integrations_inner_wandb.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateFineTuningJobRequest_integrations_inner_wandb::OAICreateFineTuningJobRequest_integrations_inner_wandb(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateFineTuningJobRequest_integrations_inner_wandb::OAICreateFineTuningJobRequest_integrations_inner_wandb() {
    this->initializeModel();
}

OAICreateFineTuningJobRequest_integrations_inner_wandb::~OAICreateFineTuningJobRequest_integrations_inner_wandb() {}

void OAICreateFineTuningJobRequest_integrations_inner_wandb::initializeModel() {

    m_project_isSet = false;
    m_project_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_entity_isSet = false;
    m_entity_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateFineTuningJobRequest_integrations_inner_wandb::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateFineTuningJobRequest_integrations_inner_wandb::fromJsonObject(QJsonObject json) {

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_entity_isValid = ::OpenAPI::fromJsonValue(m_entity, json[QString("entity")]);
    m_entity_isSet = !json[QString("entity")].isNull() && m_entity_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAICreateFineTuningJobRequest_integrations_inner_wandb::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateFineTuningJobRequest_integrations_inner_wandb::asJsonObject() const {
    QJsonObject obj;
    if (m_project_isSet) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_entity_isSet) {
        obj.insert(QString("entity"), ::OpenAPI::toJsonValue(m_entity));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateFineTuningJobRequest_integrations_inner_wandb::getProject() const {
    return m_project;
}
void OAICreateFineTuningJobRequest_integrations_inner_wandb::setProject(const QString &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAICreateFineTuningJobRequest_integrations_inner_wandb::is_project_Set() const{
    return m_project_isSet;
}

bool OAICreateFineTuningJobRequest_integrations_inner_wandb::is_project_Valid() const{
    return m_project_isValid;
}

QString OAICreateFineTuningJobRequest_integrations_inner_wandb::getName() const {
    return m_name;
}
void OAICreateFineTuningJobRequest_integrations_inner_wandb::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateFineTuningJobRequest_integrations_inner_wandb::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateFineTuningJobRequest_integrations_inner_wandb::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateFineTuningJobRequest_integrations_inner_wandb::getEntity() const {
    return m_entity;
}
void OAICreateFineTuningJobRequest_integrations_inner_wandb::setEntity(const QString &entity) {
    m_entity = entity;
    m_entity_isSet = true;
}

bool OAICreateFineTuningJobRequest_integrations_inner_wandb::is_entity_Set() const{
    return m_entity_isSet;
}

bool OAICreateFineTuningJobRequest_integrations_inner_wandb::is_entity_Valid() const{
    return m_entity_isValid;
}

QList<QString> OAICreateFineTuningJobRequest_integrations_inner_wandb::getTags() const {
    return m_tags;
}
void OAICreateFineTuningJobRequest_integrations_inner_wandb::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateFineTuningJobRequest_integrations_inner_wandb::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateFineTuningJobRequest_integrations_inner_wandb::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateFineTuningJobRequest_integrations_inner_wandb::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_project_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateFineTuningJobRequest_integrations_inner_wandb::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_project_isValid && true;
}

} // namespace OpenAPI
