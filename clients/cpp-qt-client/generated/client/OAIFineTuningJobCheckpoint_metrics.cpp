/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFineTuningJobCheckpoint_metrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFineTuningJobCheckpoint_metrics::OAIFineTuningJobCheckpoint_metrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFineTuningJobCheckpoint_metrics::OAIFineTuningJobCheckpoint_metrics() {
    this->initializeModel();
}

OAIFineTuningJobCheckpoint_metrics::~OAIFineTuningJobCheckpoint_metrics() {}

void OAIFineTuningJobCheckpoint_metrics::initializeModel() {

    m_step_isSet = false;
    m_step_isValid = false;

    m_train_loss_isSet = false;
    m_train_loss_isValid = false;

    m_train_mean_token_accuracy_isSet = false;
    m_train_mean_token_accuracy_isValid = false;

    m_valid_loss_isSet = false;
    m_valid_loss_isValid = false;

    m_valid_mean_token_accuracy_isSet = false;
    m_valid_mean_token_accuracy_isValid = false;

    m_full_valid_loss_isSet = false;
    m_full_valid_loss_isValid = false;

    m_full_valid_mean_token_accuracy_isSet = false;
    m_full_valid_mean_token_accuracy_isValid = false;
}

void OAIFineTuningJobCheckpoint_metrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFineTuningJobCheckpoint_metrics::fromJsonObject(QJsonObject json) {

    m_step_isValid = ::OpenAPI::fromJsonValue(m_step, json[QString("step")]);
    m_step_isSet = !json[QString("step")].isNull() && m_step_isValid;

    m_train_loss_isValid = ::OpenAPI::fromJsonValue(m_train_loss, json[QString("train_loss")]);
    m_train_loss_isSet = !json[QString("train_loss")].isNull() && m_train_loss_isValid;

    m_train_mean_token_accuracy_isValid = ::OpenAPI::fromJsonValue(m_train_mean_token_accuracy, json[QString("train_mean_token_accuracy")]);
    m_train_mean_token_accuracy_isSet = !json[QString("train_mean_token_accuracy")].isNull() && m_train_mean_token_accuracy_isValid;

    m_valid_loss_isValid = ::OpenAPI::fromJsonValue(m_valid_loss, json[QString("valid_loss")]);
    m_valid_loss_isSet = !json[QString("valid_loss")].isNull() && m_valid_loss_isValid;

    m_valid_mean_token_accuracy_isValid = ::OpenAPI::fromJsonValue(m_valid_mean_token_accuracy, json[QString("valid_mean_token_accuracy")]);
    m_valid_mean_token_accuracy_isSet = !json[QString("valid_mean_token_accuracy")].isNull() && m_valid_mean_token_accuracy_isValid;

    m_full_valid_loss_isValid = ::OpenAPI::fromJsonValue(m_full_valid_loss, json[QString("full_valid_loss")]);
    m_full_valid_loss_isSet = !json[QString("full_valid_loss")].isNull() && m_full_valid_loss_isValid;

    m_full_valid_mean_token_accuracy_isValid = ::OpenAPI::fromJsonValue(m_full_valid_mean_token_accuracy, json[QString("full_valid_mean_token_accuracy")]);
    m_full_valid_mean_token_accuracy_isSet = !json[QString("full_valid_mean_token_accuracy")].isNull() && m_full_valid_mean_token_accuracy_isValid;
}

QString OAIFineTuningJobCheckpoint_metrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFineTuningJobCheckpoint_metrics::asJsonObject() const {
    QJsonObject obj;
    if (m_step_isSet) {
        obj.insert(QString("step"), ::OpenAPI::toJsonValue(m_step));
    }
    if (m_train_loss_isSet) {
        obj.insert(QString("train_loss"), ::OpenAPI::toJsonValue(m_train_loss));
    }
    if (m_train_mean_token_accuracy_isSet) {
        obj.insert(QString("train_mean_token_accuracy"), ::OpenAPI::toJsonValue(m_train_mean_token_accuracy));
    }
    if (m_valid_loss_isSet) {
        obj.insert(QString("valid_loss"), ::OpenAPI::toJsonValue(m_valid_loss));
    }
    if (m_valid_mean_token_accuracy_isSet) {
        obj.insert(QString("valid_mean_token_accuracy"), ::OpenAPI::toJsonValue(m_valid_mean_token_accuracy));
    }
    if (m_full_valid_loss_isSet) {
        obj.insert(QString("full_valid_loss"), ::OpenAPI::toJsonValue(m_full_valid_loss));
    }
    if (m_full_valid_mean_token_accuracy_isSet) {
        obj.insert(QString("full_valid_mean_token_accuracy"), ::OpenAPI::toJsonValue(m_full_valid_mean_token_accuracy));
    }
    return obj;
}

double OAIFineTuningJobCheckpoint_metrics::getStep() const {
    return m_step;
}
void OAIFineTuningJobCheckpoint_metrics::setStep(const double &step) {
    m_step = step;
    m_step_isSet = true;
}

bool OAIFineTuningJobCheckpoint_metrics::is_step_Set() const{
    return m_step_isSet;
}

bool OAIFineTuningJobCheckpoint_metrics::is_step_Valid() const{
    return m_step_isValid;
}

double OAIFineTuningJobCheckpoint_metrics::getTrainLoss() const {
    return m_train_loss;
}
void OAIFineTuningJobCheckpoint_metrics::setTrainLoss(const double &train_loss) {
    m_train_loss = train_loss;
    m_train_loss_isSet = true;
}

bool OAIFineTuningJobCheckpoint_metrics::is_train_loss_Set() const{
    return m_train_loss_isSet;
}

bool OAIFineTuningJobCheckpoint_metrics::is_train_loss_Valid() const{
    return m_train_loss_isValid;
}

double OAIFineTuningJobCheckpoint_metrics::getTrainMeanTokenAccuracy() const {
    return m_train_mean_token_accuracy;
}
void OAIFineTuningJobCheckpoint_metrics::setTrainMeanTokenAccuracy(const double &train_mean_token_accuracy) {
    m_train_mean_token_accuracy = train_mean_token_accuracy;
    m_train_mean_token_accuracy_isSet = true;
}

bool OAIFineTuningJobCheckpoint_metrics::is_train_mean_token_accuracy_Set() const{
    return m_train_mean_token_accuracy_isSet;
}

bool OAIFineTuningJobCheckpoint_metrics::is_train_mean_token_accuracy_Valid() const{
    return m_train_mean_token_accuracy_isValid;
}

double OAIFineTuningJobCheckpoint_metrics::getValidLoss() const {
    return m_valid_loss;
}
void OAIFineTuningJobCheckpoint_metrics::setValidLoss(const double &valid_loss) {
    m_valid_loss = valid_loss;
    m_valid_loss_isSet = true;
}

bool OAIFineTuningJobCheckpoint_metrics::is_valid_loss_Set() const{
    return m_valid_loss_isSet;
}

bool OAIFineTuningJobCheckpoint_metrics::is_valid_loss_Valid() const{
    return m_valid_loss_isValid;
}

double OAIFineTuningJobCheckpoint_metrics::getValidMeanTokenAccuracy() const {
    return m_valid_mean_token_accuracy;
}
void OAIFineTuningJobCheckpoint_metrics::setValidMeanTokenAccuracy(const double &valid_mean_token_accuracy) {
    m_valid_mean_token_accuracy = valid_mean_token_accuracy;
    m_valid_mean_token_accuracy_isSet = true;
}

bool OAIFineTuningJobCheckpoint_metrics::is_valid_mean_token_accuracy_Set() const{
    return m_valid_mean_token_accuracy_isSet;
}

bool OAIFineTuningJobCheckpoint_metrics::is_valid_mean_token_accuracy_Valid() const{
    return m_valid_mean_token_accuracy_isValid;
}

double OAIFineTuningJobCheckpoint_metrics::getFullValidLoss() const {
    return m_full_valid_loss;
}
void OAIFineTuningJobCheckpoint_metrics::setFullValidLoss(const double &full_valid_loss) {
    m_full_valid_loss = full_valid_loss;
    m_full_valid_loss_isSet = true;
}

bool OAIFineTuningJobCheckpoint_metrics::is_full_valid_loss_Set() const{
    return m_full_valid_loss_isSet;
}

bool OAIFineTuningJobCheckpoint_metrics::is_full_valid_loss_Valid() const{
    return m_full_valid_loss_isValid;
}

double OAIFineTuningJobCheckpoint_metrics::getFullValidMeanTokenAccuracy() const {
    return m_full_valid_mean_token_accuracy;
}
void OAIFineTuningJobCheckpoint_metrics::setFullValidMeanTokenAccuracy(const double &full_valid_mean_token_accuracy) {
    m_full_valid_mean_token_accuracy = full_valid_mean_token_accuracy;
    m_full_valid_mean_token_accuracy_isSet = true;
}

bool OAIFineTuningJobCheckpoint_metrics::is_full_valid_mean_token_accuracy_Set() const{
    return m_full_valid_mean_token_accuracy_isSet;
}

bool OAIFineTuningJobCheckpoint_metrics::is_full_valid_mean_token_accuracy_Valid() const{
    return m_full_valid_mean_token_accuracy_isValid;
}

bool OAIFineTuningJobCheckpoint_metrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_step_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_train_loss_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_train_mean_token_accuracy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_loss_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_mean_token_accuracy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_valid_loss_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_valid_mean_token_accuracy_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFineTuningJobCheckpoint_metrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
