/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation() {
    this->initializeModel();
}

OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::~OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation() {}

void OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::initializeModel() {

    m_file_id_isSet = false;
    m_file_id_isValid = false;

    m_quote_isSet = false;
    m_quote_isValid = false;
}

void OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::fromJsonObject(QJsonObject json) {

    m_file_id_isValid = ::OpenAPI::fromJsonValue(m_file_id, json[QString("file_id")]);
    m_file_id_isSet = !json[QString("file_id")].isNull() && m_file_id_isValid;

    m_quote_isValid = ::OpenAPI::fromJsonValue(m_quote, json[QString("quote")]);
    m_quote_isSet = !json[QString("quote")].isNull() && m_quote_isValid;
}

QString OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::asJsonObject() const {
    QJsonObject obj;
    if (m_file_id_isSet) {
        obj.insert(QString("file_id"), ::OpenAPI::toJsonValue(m_file_id));
    }
    if (m_quote_isSet) {
        obj.insert(QString("quote"), ::OpenAPI::toJsonValue(m_quote));
    }
    return obj;
}

QString OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::getFileId() const {
    return m_file_id;
}
void OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::setFileId(const QString &file_id) {
    m_file_id = file_id;
    m_file_id_isSet = true;
}

bool OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::is_file_id_Set() const{
    return m_file_id_isSet;
}

bool OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::is_file_id_Valid() const{
    return m_file_id_isValid;
}

QString OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::getQuote() const {
    return m_quote;
}
void OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::setQuote(const QString &quote) {
    m_quote = quote;
    m_quote_isSet = true;
}

bool OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::is_quote_Set() const{
    return m_quote_isSet;
}

bool OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::is_quote_Valid() const{
    return m_quote_isValid;
}

bool OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quote_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
