/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessageDeltaContentTextObject_text_annotations_inner.h
 *
 * 
 */

#ifndef OAIMessageDeltaContentTextObject_text_annotations_inner_H
#define OAIMessageDeltaContentTextObject_text_annotations_inner_H

#include <QJsonObject>

#include "OAIMessageDeltaContentTextAnnotationsFileCitationObject.h"
#include "OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation.h"
#include "OAIMessageDeltaContentTextAnnotationsFilePathObject.h"
#include "OAIMessageDeltaContentTextAnnotationsFilePathObject_file_path.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation;
class OAIMessageDeltaContentTextAnnotationsFilePathObject_file_path;

class OAIMessageDeltaContentTextObject_text_annotations_inner : public OAIObject {
public:
    OAIMessageDeltaContentTextObject_text_annotations_inner();
    OAIMessageDeltaContentTextObject_text_annotations_inner(QString json);
    ~OAIMessageDeltaContentTextObject_text_annotations_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation getFileCitation() const;
    void setFileCitation(const OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation &file_citation);
    bool is_file_citation_Set() const;
    bool is_file_citation_Valid() const;

    qint32 getStartIndex() const;
    void setStartIndex(const qint32 &start_index);
    bool is_start_index_Set() const;
    bool is_start_index_Valid() const;

    qint32 getEndIndex() const;
    void setEndIndex(const qint32 &end_index);
    bool is_end_index_Set() const;
    bool is_end_index_Valid() const;

    OAIMessageDeltaContentTextAnnotationsFilePathObject_file_path getFilePath() const;
    void setFilePath(const OAIMessageDeltaContentTextAnnotationsFilePathObject_file_path &file_path);
    bool is_file_path_Set() const;
    bool is_file_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    OAIMessageDeltaContentTextAnnotationsFileCitationObject_file_citation m_file_citation;
    bool m_file_citation_isSet;
    bool m_file_citation_isValid;

    qint32 m_start_index;
    bool m_start_index_isSet;
    bool m_start_index_isValid;

    qint32 m_end_index;
    bool m_end_index_isSet;
    bool m_end_index_isValid;

    OAIMessageDeltaContentTextAnnotationsFilePathObject_file_path m_file_path;
    bool m_file_path_isSet;
    bool m_file_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessageDeltaContentTextObject_text_annotations_inner)

#endif // OAIMessageDeltaContentTextObject_text_annotations_inner_H
