/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunStepDetailsToolCallsObject.h
 *
 * Details of the tool call.
 */

#ifndef OAIRunStepDetailsToolCallsObject_H
#define OAIRunStepDetailsToolCallsObject_H

#include <QJsonObject>

#include "OAIRunStepDetailsToolCallsObject_tool_calls_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRunStepDetailsToolCallsObject_tool_calls_inner;

class OAIRunStepDetailsToolCallsObject : public OAIObject {
public:
    OAIRunStepDetailsToolCallsObject();
    OAIRunStepDetailsToolCallsObject(QString json);
    ~OAIRunStepDetailsToolCallsObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<OAIRunStepDetailsToolCallsObject_tool_calls_inner> getToolCalls() const;
    void setToolCalls(const QList<OAIRunStepDetailsToolCallsObject_tool_calls_inner> &tool_calls);
    bool is_tool_calls_Set() const;
    bool is_tool_calls_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<OAIRunStepDetailsToolCallsObject_tool_calls_inner> m_tool_calls;
    bool m_tool_calls_isSet;
    bool m_tool_calls_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunStepDetailsToolCallsObject)

#endif // OAIRunStepDetailsToolCallsObject_H
