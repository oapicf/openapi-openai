/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITranscriptionSegment.h
 *
 * 
 */

#ifndef OAITranscriptionSegment_H
#define OAITranscriptionSegment_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITranscriptionSegment : public OAIObject {
public:
    OAITranscriptionSegment();
    OAITranscriptionSegment(QString json);
    ~OAITranscriptionSegment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getSeek() const;
    void setSeek(const qint32 &seek);
    bool is_seek_Set() const;
    bool is_seek_Valid() const;

    float getStart() const;
    void setStart(const float &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    float getEnd() const;
    void setEnd(const float &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QList<qint32> getTokens() const;
    void setTokens(const QList<qint32> &tokens);
    bool is_tokens_Set() const;
    bool is_tokens_Valid() const;

    float getTemperature() const;
    void setTemperature(const float &temperature);
    bool is_temperature_Set() const;
    bool is_temperature_Valid() const;

    float getAvgLogprob() const;
    void setAvgLogprob(const float &avg_logprob);
    bool is_avg_logprob_Set() const;
    bool is_avg_logprob_Valid() const;

    float getCompressionRatio() const;
    void setCompressionRatio(const float &compression_ratio);
    bool is_compression_ratio_Set() const;
    bool is_compression_ratio_Valid() const;

    float getNoSpeechProb() const;
    void setNoSpeechProb(const float &no_speech_prob);
    bool is_no_speech_prob_Set() const;
    bool is_no_speech_prob_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_seek;
    bool m_seek_isSet;
    bool m_seek_isValid;

    float m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    float m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QList<qint32> m_tokens;
    bool m_tokens_isSet;
    bool m_tokens_isValid;

    float m_temperature;
    bool m_temperature_isSet;
    bool m_temperature_isValid;

    float m_avg_logprob;
    bool m_avg_logprob_isSet;
    bool m_avg_logprob_isValid;

    float m_compression_ratio;
    bool m_compression_ratio_isSet;
    bool m_compression_ratio_isValid;

    float m_no_speech_prob;
    bool m_no_speech_prob_isSet;
    bool m_no_speech_prob_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITranscriptionSegment)

#endif // OAITranscriptionSegment_H
