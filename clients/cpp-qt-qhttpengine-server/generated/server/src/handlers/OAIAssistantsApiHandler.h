/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIAssistantsApiHandler_H
#define OAI_OAIAssistantsApiHandler_H

#include <QObject>

#include "OAIAssistantFileObject.h"
#include "OAIAssistantObject.h"
#include "OAICreateAssistantFileRequest.h"
#include "OAICreateAssistantRequest.h"
#include "OAICreateMessageRequest.h"
#include "OAICreateRunRequest.h"
#include "OAICreateThreadAndRunRequest.h"
#include "OAICreateThreadRequest.h"
#include "OAIDeleteAssistantFileResponse.h"
#include "OAIDeleteAssistantResponse.h"
#include "OAIDeleteThreadResponse.h"
#include "OAIListAssistantFilesResponse.h"
#include "OAIListAssistantsResponse.h"
#include "OAIListMessageFilesResponse.h"
#include "OAIListMessagesResponse.h"
#include "OAIListRunStepsResponse.h"
#include "OAIListRunsResponse.h"
#include "OAIMessageFileObject.h"
#include "OAIMessageObject.h"
#include "OAIModifyAssistantRequest.h"
#include "OAIModifyMessageRequest.h"
#include "OAIModifyRunRequest.h"
#include "OAIModifyThreadRequest.h"
#include "OAIRunObject.h"
#include "OAIRunStepObject.h"
#include "OAISubmitToolOutputsRunRequest.h"
#include "OAIThreadObject.h"
#include <QString>

namespace OpenAPI {

class OAIAssistantsApiHandler : public QObject
{
    Q_OBJECT

public:
    OAIAssistantsApiHandler();
    virtual ~OAIAssistantsApiHandler();


public Q_SLOTS:
    virtual void cancelRun(QString thread_id, QString run_id);
    virtual void createAssistant(OAICreateAssistantRequest oai_create_assistant_request);
    virtual void createAssistantFile(QString assistant_id, OAICreateAssistantFileRequest oai_create_assistant_file_request);
    virtual void createMessage(QString thread_id, OAICreateMessageRequest oai_create_message_request);
    virtual void createRun(QString thread_id, OAICreateRunRequest oai_create_run_request);
    virtual void createThread(OAICreateThreadRequest oai_create_thread_request);
    virtual void createThreadAndRun(OAICreateThreadAndRunRequest oai_create_thread_and_run_request);
    virtual void deleteAssistant(QString assistant_id);
    virtual void deleteAssistantFile(QString assistant_id, QString file_id);
    virtual void deleteThread(QString thread_id);
    virtual void getAssistant(QString assistant_id);
    virtual void getAssistantFile(QString assistant_id, QString file_id);
    virtual void getMessage(QString thread_id, QString message_id);
    virtual void getMessageFile(QString thread_id, QString message_id, QString file_id);
    virtual void getRun(QString thread_id, QString run_id);
    virtual void getRunStep(QString thread_id, QString run_id, QString step_id);
    virtual void getThread(QString thread_id);
    virtual void listAssistantFiles(QString assistant_id, qint32 limit, QString order, QString after, QString before);
    virtual void listAssistants(qint32 limit, QString order, QString after, QString before);
    virtual void listMessageFiles(QString thread_id, QString message_id, qint32 limit, QString order, QString after, QString before);
    virtual void listMessages(QString thread_id, qint32 limit, QString order, QString after, QString before, QString run_id);
    virtual void listRunSteps(QString thread_id, QString run_id, qint32 limit, QString order, QString after, QString before);
    virtual void listRuns(QString thread_id, qint32 limit, QString order, QString after, QString before);
    virtual void modifyAssistant(QString assistant_id, OAIModifyAssistantRequest oai_modify_assistant_request);
    virtual void modifyMessage(QString thread_id, QString message_id, OAIModifyMessageRequest oai_modify_message_request);
    virtual void modifyRun(QString thread_id, QString run_id, OAIModifyRunRequest oai_modify_run_request);
    virtual void modifyThread(QString thread_id, OAIModifyThreadRequest oai_modify_thread_request);
    virtual void submitToolOuputsToRun(QString thread_id, QString run_id, OAISubmitToolOutputsRunRequest oai_submit_tool_outputs_run_request);
    

};

}

#endif // OAI_OAIAssistantsApiHandler_H
