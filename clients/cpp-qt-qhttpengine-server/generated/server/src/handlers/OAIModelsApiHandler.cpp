/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAIModelsApiHandler.h"
#include "OAIModelsApiRequest.h"

namespace OpenAPI {

OAIModelsApiHandler::OAIModelsApiHandler(){

}

OAIModelsApiHandler::~OAIModelsApiHandler(){

}

void OAIModelsApiHandler::deleteModel(QString model) {
    Q_UNUSED(model);
    auto reqObj = qobject_cast<OAIModelsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIDeleteModelResponse res;
        reqObj->deleteModelResponse(res);
    }
}
void OAIModelsApiHandler::listModels() {
    auto reqObj = qobject_cast<OAIModelsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIListModelsResponse res;
        reqObj->listModelsResponse(res);
    }
}
void OAIModelsApiHandler::retrieveModel(QString model) {
    Q_UNUSED(model);
    auto reqObj = qobject_cast<OAIModelsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIModel res;
        reqObj->retrieveModelResponse(res);
    }
}


}
