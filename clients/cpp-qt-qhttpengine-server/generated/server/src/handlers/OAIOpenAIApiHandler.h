/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIOpenAIApiHandler_H
#define OAI_OAIOpenAIApiHandler_H

#include <QObject>

#include "OAICreateChatCompletionRequest.h"
#include "OAICreateChatCompletionResponse.h"
#include "OAICreateCompletionRequest.h"
#include "OAICreateCompletionResponse.h"
#include "OAICreateEditRequest.h"
#include "OAICreateEditResponse.h"
#include "OAICreateEmbeddingRequest.h"
#include "OAICreateEmbeddingResponse.h"
#include "OAICreateFineTuneRequest.h"
#include "OAICreateImageRequest.h"
#include "OAICreateModerationRequest.h"
#include "OAICreateModerationResponse.h"
#include "OAICreateTranscriptionRequest_model.h"
#include "OAICreateTranscriptionResponse.h"
#include "OAICreateTranslationResponse.h"
#include "OAIDeleteFileResponse.h"
#include "OAIDeleteModelResponse.h"
#include "OAIFineTune.h"
#include "OAIHttpFileElement.h"
#include "OAIImagesResponse.h"
#include "OAIListFilesResponse.h"
#include "OAIListFineTuneEventsResponse.h"
#include "OAIListFineTunesResponse.h"
#include "OAIListModelsResponse.h"
#include "OAIModel.h"
#include "OAIOpenAIFile.h"
#include <QString>

namespace OpenAPI {

class OAIOpenAIApiHandler : public QObject
{
    Q_OBJECT

public:
    OAIOpenAIApiHandler();
    virtual ~OAIOpenAIApiHandler();


public Q_SLOTS:
    virtual void cancelFineTune(QString fine_tune_id);
    virtual void createChatCompletion(OAICreateChatCompletionRequest oai_create_chat_completion_request);
    virtual void createCompletion(OAICreateCompletionRequest oai_create_completion_request);
    virtual void createEdit(OAICreateEditRequest oai_create_edit_request);
    virtual void createEmbedding(OAICreateEmbeddingRequest oai_create_embedding_request);
    virtual void createFile(OAIHttpFileElement file, QString purpose);
    virtual void createFineTune(OAICreateFineTuneRequest oai_create_fine_tune_request);
    virtual void createImage(OAICreateImageRequest oai_create_image_request);
    virtual void createImageEdit(OAIHttpFileElement image, QString prompt, OAIHttpFileElement mask, qint32 n, QString size, QString response_format, QString user);
    virtual void createImageVariation(OAIHttpFileElement image, qint32 n, QString size, QString response_format, QString user);
    virtual void createModeration(OAICreateModerationRequest oai_create_moderation_request);
    virtual void createTranscription(OAIHttpFileElement file, OAICreateTranscriptionRequest_model model, QString prompt, QString response_format, double temperature, QString language);
    virtual void createTranslation(OAIHttpFileElement file, OAICreateTranscriptionRequest_model model, QString prompt, QString response_format, double temperature);
    virtual void deleteFile(QString file_id);
    virtual void deleteModel(QString model);
    virtual void downloadFile(QString file_id);
    virtual void listFiles();
    virtual void listFineTuneEvents(QString fine_tune_id, bool stream);
    virtual void listFineTunes();
    virtual void listModels();
    virtual void retrieveFile(QString file_id);
    virtual void retrieveFineTune(QString fine_tune_id);
    virtual void retrieveModel(QString model);
    

};

}

#endif // OAI_OAIOpenAIApiHandler_H
