/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChatCompletionRole.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChatCompletionRole::OAIChatCompletionRole(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChatCompletionRole::OAIChatCompletionRole() {
    this->initializeModel();
}

OAIChatCompletionRole::~OAIChatCompletionRole() {}

void OAIChatCompletionRole::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIChatCompletionRole::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIChatCompletionRole::fromJson(QString jsonString) {
    
    if ( jsonString.compare("system", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChatCompletionRole::SYSTEM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("user", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChatCompletionRole::USER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("assistant", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChatCompletionRole::ASSISTANT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("tool", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChatCompletionRole::TOOL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("function", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChatCompletionRole::FUNCTION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIChatCompletionRole::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIChatCompletionRole::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIChatCompletionRole::SYSTEM:
            val = "system";
            break;
        case eOAIChatCompletionRole::USER:
            val = "user";
            break;
        case eOAIChatCompletionRole::ASSISTANT:
            val = "assistant";
            break;
        case eOAIChatCompletionRole::TOOL:
            val = "tool";
            break;
        case eOAIChatCompletionRole::FUNCTION:
            val = "function";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIChatCompletionRole::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIChatCompletionRole::eOAIChatCompletionRole OAIChatCompletionRole::getValue() const {
    return m_value;
}

void OAIChatCompletionRole::setValue(const OAIChatCompletionRole::eOAIChatCompletionRole& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIChatCompletionRole::isSet() const {
    
    return m_value_isSet;
}

bool OAIChatCompletionRole::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
