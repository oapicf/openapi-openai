/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCompletionRequest.h
 *
 * 
 */

#ifndef OAICreateCompletionRequest_H
#define OAICreateCompletionRequest_H

#include <QJsonObject>

#include "OAICreateCompletionRequest_model.h"
#include "OAICreateCompletionRequest_prompt.h"
#include "OAICreateCompletionRequest_stop.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateCompletionRequest : public OAIObject {
public:
    OAICreateCompletionRequest();
    OAICreateCompletionRequest(QString json);
    ~OAICreateCompletionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateCompletionRequest_model getModel() const;
    void setModel(const OAICreateCompletionRequest_model &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    OAICreateCompletionRequest_prompt getPrompt() const;
    void setPrompt(const OAICreateCompletionRequest_prompt &prompt);
    bool is_prompt_Set() const;
    bool is_prompt_Valid() const;

    QString getSuffix() const;
    void setSuffix(const QString &suffix);
    bool is_suffix_Set() const;
    bool is_suffix_Valid() const;

    qint32 getMaxTokens() const;
    void setMaxTokens(const qint32 &max_tokens);
    bool is_max_tokens_Set() const;
    bool is_max_tokens_Valid() const;

    double getTemperature() const;
    void setTemperature(const double &temperature);
    bool is_temperature_Set() const;
    bool is_temperature_Valid() const;

    double getTopP() const;
    void setTopP(const double &top_p);
    bool is_top_p_Set() const;
    bool is_top_p_Valid() const;

    qint32 getN() const;
    void setN(const qint32 &n);
    bool is_n_Set() const;
    bool is_n_Valid() const;

    bool isStream() const;
    void setStream(const bool &stream);
    bool is_stream_Set() const;
    bool is_stream_Valid() const;

    qint32 getLogprobs() const;
    void setLogprobs(const qint32 &logprobs);
    bool is_logprobs_Set() const;
    bool is_logprobs_Valid() const;

    bool isEcho() const;
    void setEcho(const bool &echo);
    bool is_echo_Set() const;
    bool is_echo_Valid() const;

    OAICreateCompletionRequest_stop getStop() const;
    void setStop(const OAICreateCompletionRequest_stop &stop);
    bool is_stop_Set() const;
    bool is_stop_Valid() const;

    double getPresencePenalty() const;
    void setPresencePenalty(const double &presence_penalty);
    bool is_presence_penalty_Set() const;
    bool is_presence_penalty_Valid() const;

    double getFrequencyPenalty() const;
    void setFrequencyPenalty(const double &frequency_penalty);
    bool is_frequency_penalty_Set() const;
    bool is_frequency_penalty_Valid() const;

    qint32 getBestOf() const;
    void setBestOf(const qint32 &best_of);
    bool is_best_of_Set() const;
    bool is_best_of_Valid() const;

    OAIObject getLogitBias() const;
    void setLogitBias(const OAIObject &logit_bias);
    bool is_logit_bias_Set() const;
    bool is_logit_bias_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateCompletionRequest_model model;
    bool m_model_isSet;
    bool m_model_isValid;

    OAICreateCompletionRequest_prompt prompt;
    bool m_prompt_isSet;
    bool m_prompt_isValid;

    QString suffix;
    bool m_suffix_isSet;
    bool m_suffix_isValid;

    qint32 max_tokens;
    bool m_max_tokens_isSet;
    bool m_max_tokens_isValid;

    double temperature;
    bool m_temperature_isSet;
    bool m_temperature_isValid;

    double top_p;
    bool m_top_p_isSet;
    bool m_top_p_isValid;

    qint32 n;
    bool m_n_isSet;
    bool m_n_isValid;

    bool stream;
    bool m_stream_isSet;
    bool m_stream_isValid;

    qint32 logprobs;
    bool m_logprobs_isSet;
    bool m_logprobs_isValid;

    bool echo;
    bool m_echo_isSet;
    bool m_echo_isValid;

    OAICreateCompletionRequest_stop stop;
    bool m_stop_isSet;
    bool m_stop_isValid;

    double presence_penalty;
    bool m_presence_penalty_isSet;
    bool m_presence_penalty_isValid;

    double frequency_penalty;
    bool m_frequency_penalty_isSet;
    bool m_frequency_penalty_isValid;

    qint32 best_of;
    bool m_best_of_isSet;
    bool m_best_of_isValid;

    OAIObject logit_bias;
    bool m_logit_bias_isSet;
    bool m_logit_bias_isValid;

    QString user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCompletionRequest)

#endif // OAICreateCompletionRequest_H
