/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateEditRequest.h
 *
 * 
 */

#ifndef OAICreateEditRequest_H
#define OAICreateEditRequest_H

#include <QJsonObject>

#include "OAICreateEditRequest_model.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateEditRequest : public OAIObject {
public:
    OAICreateEditRequest();
    OAICreateEditRequest(QString json);
    ~OAICreateEditRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateEditRequest_model getModel() const;
    void setModel(const OAICreateEditRequest_model &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getInput() const;
    void setInput(const QString &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    QString getInstruction() const;
    void setInstruction(const QString &instruction);
    bool is_instruction_Set() const;
    bool is_instruction_Valid() const;

    qint32 getN() const;
    void setN(const qint32 &n);
    bool is_n_Set() const;
    bool is_n_Valid() const;

    double getTemperature() const;
    void setTemperature(const double &temperature);
    bool is_temperature_Set() const;
    bool is_temperature_Valid() const;

    double getTopP() const;
    void setTopP(const double &top_p);
    bool is_top_p_Set() const;
    bool is_top_p_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateEditRequest_model model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString input;
    bool m_input_isSet;
    bool m_input_isValid;

    QString instruction;
    bool m_instruction_isSet;
    bool m_instruction_isValid;

    qint32 n;
    bool m_n_isSet;
    bool m_n_isValid;

    double temperature;
    bool m_temperature_isSet;
    bool m_temperature_isValid;

    double top_p;
    bool m_top_p_isSet;
    bool m_top_p_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateEditRequest)

#endif // OAICreateEditRequest_H
