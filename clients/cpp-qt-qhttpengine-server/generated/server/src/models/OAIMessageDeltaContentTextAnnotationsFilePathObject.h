/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessageDeltaContentTextAnnotationsFilePathObject.h
 *
 * A URL for the file that&#39;s generated when the assistant used the &#x60;code_interpreter&#x60; tool to generate a file.
 */

#ifndef OAIMessageDeltaContentTextAnnotationsFilePathObject_H
#define OAIMessageDeltaContentTextAnnotationsFilePathObject_H

#include <QJsonObject>

#include "OAIMessageDeltaContentTextAnnotationsFilePathObject_file_path.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMessageDeltaContentTextAnnotationsFilePathObject : public OAIObject {
public:
    OAIMessageDeltaContentTextAnnotationsFilePathObject();
    OAIMessageDeltaContentTextAnnotationsFilePathObject(QString json);
    ~OAIMessageDeltaContentTextAnnotationsFilePathObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    OAIMessageDeltaContentTextAnnotationsFilePathObject_file_path getFilePath() const;
    void setFilePath(const OAIMessageDeltaContentTextAnnotationsFilePathObject_file_path &file_path);
    bool is_file_path_Set() const;
    bool is_file_path_Valid() const;

    qint32 getStartIndex() const;
    void setStartIndex(const qint32 &start_index);
    bool is_start_index_Set() const;
    bool is_start_index_Valid() const;

    qint32 getEndIndex() const;
    void setEndIndex(const qint32 &end_index);
    bool is_end_index_Set() const;
    bool is_end_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 index;
    bool m_index_isSet;
    bool m_index_isValid;

    QString type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString text;
    bool m_text_isSet;
    bool m_text_isValid;

    OAIMessageDeltaContentTextAnnotationsFilePathObject_file_path file_path;
    bool m_file_path_isSet;
    bool m_file_path_isValid;

    qint32 start_index;
    bool m_start_index_isSet;
    bool m_start_index_isValid;

    qint32 end_index;
    bool m_end_index_isSet;
    bool m_end_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessageDeltaContentTextAnnotationsFilePathObject)

#endif // OAIMessageDeltaContentTextAnnotationsFilePathObject_H
