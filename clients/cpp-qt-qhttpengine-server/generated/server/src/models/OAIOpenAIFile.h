/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOpenAIFile.h
 *
 * The &#x60;File&#x60; object represents a document that has been uploaded to OpenAI.
 */

#ifndef OAIOpenAIFile_H
#define OAIOpenAIFile_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOpenAIFile : public OAIObject {
public:
    OAIOpenAIFile();
    OAIOpenAIFile(QString json);
    ~OAIOpenAIFile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getBytes() const;
    void setBytes(const qint32 &bytes);
    bool is_bytes_Set() const;
    bool is_bytes_Valid() const;

    qint32 getCreatedAt() const;
    void setCreatedAt(const qint32 &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getFilename() const;
    void setFilename(const QString &filename);
    bool is_filename_Set() const;
    bool is_filename_Valid() const;

    QString getObject() const;
    void setObject(const QString &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    QString getPurpose() const;
    void setPurpose(const QString &purpose);
    bool is_purpose_Set() const;
    bool is_purpose_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusDetails() const;
    void setStatusDetails(const QString &status_details);
    bool is_status_details_Set() const;
    bool is_status_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 bytes;
    bool m_bytes_isSet;
    bool m_bytes_isValid;

    qint32 created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString filename;
    bool m_filename_isSet;
    bool m_filename_isValid;

    QString object;
    bool m_object_isSet;
    bool m_object_isValid;

    QString purpose;
    bool m_purpose_isSet;
    bool m_purpose_isValid;

    QString status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString status_details;
    bool m_status_details_isSet;
    bool m_status_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOpenAIFile)

#endif // OAIOpenAIFile_H
