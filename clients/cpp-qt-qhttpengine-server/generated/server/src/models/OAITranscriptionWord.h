/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITranscriptionWord.h
 *
 * 
 */

#ifndef OAITranscriptionWord_H
#define OAITranscriptionWord_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITranscriptionWord : public OAIObject {
public:
    OAITranscriptionWord();
    OAITranscriptionWord(QString json);
    ~OAITranscriptionWord() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWord() const;
    void setWord(const QString &word);
    bool is_word_Set() const;
    bool is_word_Valid() const;

    float getStart() const;
    void setStart(const float &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    float getEnd() const;
    void setEnd(const float &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString word;
    bool m_word_isSet;
    bool m_word_isValid;

    float start;
    bool m_start_isSet;
    bool m_start_isValid;

    float end;
    bool m_end_isSet;
    bool m_end_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITranscriptionWord)

#endif // OAITranscriptionWord_H
