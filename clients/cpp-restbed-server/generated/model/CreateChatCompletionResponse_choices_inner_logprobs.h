/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateChatCompletionResponse_choices_inner_logprobs.h
 *
 * Log probability information for the choice.
 */

#ifndef CreateChatCompletionResponse_choices_inner_logprobs_H_
#define CreateChatCompletionResponse_choices_inner_logprobs_H_



#include "ChatCompletionTokenLogprob.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Log probability information for the choice.
/// </summary>
class  CreateChatCompletionResponse_choices_inner_logprobs 
{
public:
    CreateChatCompletionResponse_choices_inner_logprobs() = default;
    explicit CreateChatCompletionResponse_choices_inner_logprobs(boost::property_tree::ptree const& pt);
    virtual ~CreateChatCompletionResponse_choices_inner_logprobs() = default;

    CreateChatCompletionResponse_choices_inner_logprobs(const CreateChatCompletionResponse_choices_inner_logprobs& other) = default; // copy constructor
    CreateChatCompletionResponse_choices_inner_logprobs(CreateChatCompletionResponse_choices_inner_logprobs&& other) noexcept = default; // move constructor

    CreateChatCompletionResponse_choices_inner_logprobs& operator=(const CreateChatCompletionResponse_choices_inner_logprobs& other) = default; // copy assignment
    CreateChatCompletionResponse_choices_inner_logprobs& operator=(CreateChatCompletionResponse_choices_inner_logprobs&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CreateChatCompletionResponse_choices_inner_logprobs members

    /// <summary>
    /// A list of message content tokens with log probability information.
    /// </summary>
    std::vector<ChatCompletionTokenLogprob> getContent() const;
    void setContent(std::vector<ChatCompletionTokenLogprob> value);

protected:
    std::vector<ChatCompletionTokenLogprob> m_Content;
};

std::vector<CreateChatCompletionResponse_choices_inner_logprobs> createCreateChatCompletionResponse_choices_inner_logprobsVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CreateChatCompletionResponse_choices_inner_logprobs>(const CreateChatCompletionResponse_choices_inner_logprobs& val) {
    return val.toPropertyTree();
}

template<>
inline CreateChatCompletionResponse_choices_inner_logprobs fromPt<CreateChatCompletionResponse_choices_inner_logprobs>(const boost::property_tree::ptree& pt) {
    CreateChatCompletionResponse_choices_inner_logprobs ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CreateChatCompletionResponse_choices_inner_logprobs_H_ */
