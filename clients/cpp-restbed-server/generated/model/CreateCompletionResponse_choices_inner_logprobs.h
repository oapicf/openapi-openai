/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateCompletionResponse_choices_inner_logprobs.h
 *
 * 
 */

#ifndef CreateCompletionResponse_choices_inner_logprobs_H_
#define CreateCompletionResponse_choices_inner_logprobs_H_



#include <string>
#include <map>
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  CreateCompletionResponse_choices_inner_logprobs 
{
public:
    CreateCompletionResponse_choices_inner_logprobs() = default;
    explicit CreateCompletionResponse_choices_inner_logprobs(boost::property_tree::ptree const& pt);
    virtual ~CreateCompletionResponse_choices_inner_logprobs() = default;

    CreateCompletionResponse_choices_inner_logprobs(const CreateCompletionResponse_choices_inner_logprobs& other) = default; // copy constructor
    CreateCompletionResponse_choices_inner_logprobs(CreateCompletionResponse_choices_inner_logprobs&& other) noexcept = default; // move constructor

    CreateCompletionResponse_choices_inner_logprobs& operator=(const CreateCompletionResponse_choices_inner_logprobs& other) = default; // copy assignment
    CreateCompletionResponse_choices_inner_logprobs& operator=(CreateCompletionResponse_choices_inner_logprobs&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CreateCompletionResponse_choices_inner_logprobs members

    /// <summary>
    /// 
    /// </summary>
    std::vector<int32_t> getTextOffset() const;
    void setTextOffset(std::vector<int32_t> value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<double> getTokenLogprobs() const;
    void setTokenLogprobs(std::vector<double> value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::string> getTokens() const;
    void setTokens(std::vector<std::string> value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::map<std::string, double>> getTopLogprobs() const;
    void setTopLogprobs(std::vector<std::map<std::string, double>> value);

protected:
    std::vector<int32_t> m_Text_offset;
    std::vector<double> m_Token_logprobs;
    std::vector<std::string> m_Tokens;
    std::vector<std::map<std::string, double>> m_Top_logprobs;
};

std::vector<CreateCompletionResponse_choices_inner_logprobs> createCreateCompletionResponse_choices_inner_logprobsVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CreateCompletionResponse_choices_inner_logprobs>(const CreateCompletionResponse_choices_inner_logprobs& val) {
    return val.toPropertyTree();
}

template<>
inline CreateCompletionResponse_choices_inner_logprobs fromPt<CreateCompletionResponse_choices_inner_logprobs>(const boost::property_tree::ptree& pt) {
    CreateCompletionResponse_choices_inner_logprobs ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CreateCompletionResponse_choices_inner_logprobs_H_ */
