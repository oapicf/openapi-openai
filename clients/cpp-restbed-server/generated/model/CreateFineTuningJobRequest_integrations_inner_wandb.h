/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateFineTuningJobRequest_integrations_inner_wandb.h
 *
 * The settings for your integration with Weights and Biases. This payload specifies the project that metrics will be sent to. Optionally, you can set an explicit display name for your run, add tags to your run, and set a default entity (team, username, etc) to be associated with your run. 
 */

#ifndef CreateFineTuningJobRequest_integrations_inner_wandb_H_
#define CreateFineTuningJobRequest_integrations_inner_wandb_H_



#include <string>
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// The settings for your integration with Weights and Biases. This payload specifies the project that metrics will be sent to. Optionally, you can set an explicit display name for your run, add tags to your run, and set a default entity (team, username, etc) to be associated with your run. 
/// </summary>
class  CreateFineTuningJobRequest_integrations_inner_wandb 
{
public:
    CreateFineTuningJobRequest_integrations_inner_wandb() = default;
    explicit CreateFineTuningJobRequest_integrations_inner_wandb(boost::property_tree::ptree const& pt);
    virtual ~CreateFineTuningJobRequest_integrations_inner_wandb() = default;

    CreateFineTuningJobRequest_integrations_inner_wandb(const CreateFineTuningJobRequest_integrations_inner_wandb& other) = default; // copy constructor
    CreateFineTuningJobRequest_integrations_inner_wandb(CreateFineTuningJobRequest_integrations_inner_wandb&& other) noexcept = default; // move constructor

    CreateFineTuningJobRequest_integrations_inner_wandb& operator=(const CreateFineTuningJobRequest_integrations_inner_wandb& other) = default; // copy assignment
    CreateFineTuningJobRequest_integrations_inner_wandb& operator=(CreateFineTuningJobRequest_integrations_inner_wandb&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CreateFineTuningJobRequest_integrations_inner_wandb members

    /// <summary>
    /// The name of the project that the new run will be created under. 
    /// </summary>
    std::string getProject() const;
    void setProject(std::string value);

    /// <summary>
    /// A display name to set for the run. If not set, we will use the Job ID as the name. 
    /// </summary>
    std::string getName() const;
    void setName(std::string value);

    /// <summary>
    /// The entity to use for the run. This allows you to set the team or username of the WandB user that you would like associated with the run. If not set, the default entity for the registered WandB API key is used. 
    /// </summary>
    std::string getEntity() const;
    void setEntity(std::string value);

    /// <summary>
    /// A list of tags to be attached to the newly created run. These tags are passed through directly to WandB. Some default tags are generated by OpenAI: \&quot;openai/finetune\&quot;, \&quot;openai/{base-model}\&quot;, \&quot;openai/{ftjob-abcdef}\&quot;. 
    /// </summary>
    std::vector<std::string> getTags() const;
    void setTags(std::vector<std::string> value);

protected:
    std::string m_Project = "";
    std::string m_Name = "";
    std::string m_Entity = "";
    std::vector<std::string> m_Tags;
};

std::vector<CreateFineTuningJobRequest_integrations_inner_wandb> createCreateFineTuningJobRequest_integrations_inner_wandbVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CreateFineTuningJobRequest_integrations_inner_wandb>(const CreateFineTuningJobRequest_integrations_inner_wandb& val) {
    return val.toPropertyTree();
}

template<>
inline CreateFineTuningJobRequest_integrations_inner_wandb fromPt<CreateFineTuningJobRequest_integrations_inner_wandb>(const boost::property_tree::ptree& pt) {
    CreateFineTuningJobRequest_integrations_inner_wandb ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CreateFineTuningJobRequest_integrations_inner_wandb_H_ */
