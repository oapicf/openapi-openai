/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateModerationRequest_input.h
 *
 * The input text to classify
 */

#ifndef CreateModerationRequest_input_H_
#define CreateModerationRequest_input_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// The input text to classify
/// </summary>
class  CreateModerationRequest_input 
{
public:
    CreateModerationRequest_input() = default;
    explicit CreateModerationRequest_input(boost::property_tree::ptree const& pt);
    virtual ~CreateModerationRequest_input() = default;

    CreateModerationRequest_input(const CreateModerationRequest_input& other) = default; // copy constructor
    CreateModerationRequest_input(CreateModerationRequest_input&& other) noexcept = default; // move constructor

    CreateModerationRequest_input& operator=(const CreateModerationRequest_input& other) = default; // copy assignment
    CreateModerationRequest_input& operator=(CreateModerationRequest_input&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CreateModerationRequest_input members

protected:
};

std::vector<CreateModerationRequest_input> createCreateModerationRequest_inputVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CreateModerationRequest_input>(const CreateModerationRequest_input& val) {
    return val.toPropertyTree();
}

template<>
inline CreateModerationRequest_input fromPt<CreateModerationRequest_input>(const boost::property_tree::ptree& pt) {
    CreateModerationRequest_input ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CreateModerationRequest_input_H_ */
