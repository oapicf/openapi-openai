/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateModerationResponse_results_inner.h
 *
 * 
 */

#ifndef CreateModerationResponse_results_inner_H_
#define CreateModerationResponse_results_inner_H_



#include "CreateModerationResponse_results_inner_categories.h"
#include "CreateModerationResponse_results_inner_category_scores.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  CreateModerationResponse_results_inner 
{
public:
    CreateModerationResponse_results_inner() = default;
    explicit CreateModerationResponse_results_inner(boost::property_tree::ptree const& pt);
    virtual ~CreateModerationResponse_results_inner() = default;

    CreateModerationResponse_results_inner(const CreateModerationResponse_results_inner& other) = default; // copy constructor
    CreateModerationResponse_results_inner(CreateModerationResponse_results_inner&& other) noexcept = default; // move constructor

    CreateModerationResponse_results_inner& operator=(const CreateModerationResponse_results_inner& other) = default; // copy assignment
    CreateModerationResponse_results_inner& operator=(CreateModerationResponse_results_inner&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CreateModerationResponse_results_inner members

    /// <summary>
    /// Whether any of the below categories are flagged.
    /// </summary>
    bool isFlagged() const;
    void setFlagged(bool value);

    /// <summary>
    /// 
    /// </summary>
    CreateModerationResponse_results_inner_categories getCategories() const;
    void setCategories(CreateModerationResponse_results_inner_categories value);

    /// <summary>
    /// 
    /// </summary>
    CreateModerationResponse_results_inner_category_scores getCategoryScores() const;
    void setCategoryScores(CreateModerationResponse_results_inner_category_scores value);

protected:
    bool m_Flagged = false;
    CreateModerationResponse_results_inner_categories m_Categories;
    CreateModerationResponse_results_inner_category_scores m_Category_scores;
};

std::vector<CreateModerationResponse_results_inner> createCreateModerationResponse_results_innerVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CreateModerationResponse_results_inner>(const CreateModerationResponse_results_inner& val) {
    return val.toPropertyTree();
}

template<>
inline CreateModerationResponse_results_inner fromPt<CreateModerationResponse_results_inner>(const boost::property_tree::ptree& pt) {
    CreateModerationResponse_results_inner ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CreateModerationResponse_results_inner_H_ */
