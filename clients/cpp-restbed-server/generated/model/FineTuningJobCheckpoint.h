/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * FineTuningJobCheckpoint.h
 *
 * The &#x60;fine_tuning.job.checkpoint&#x60; object represents a model checkpoint for a fine-tuning job that is ready to use. 
 */

#ifndef FineTuningJobCheckpoint_H_
#define FineTuningJobCheckpoint_H_



#include <string>
#include "FineTuningJobCheckpoint_metrics.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// The &#x60;fine_tuning.job.checkpoint&#x60; object represents a model checkpoint for a fine-tuning job that is ready to use. 
/// </summary>
class  FineTuningJobCheckpoint 
{
public:
    FineTuningJobCheckpoint() = default;
    explicit FineTuningJobCheckpoint(boost::property_tree::ptree const& pt);
    virtual ~FineTuningJobCheckpoint() = default;

    FineTuningJobCheckpoint(const FineTuningJobCheckpoint& other) = default; // copy constructor
    FineTuningJobCheckpoint(FineTuningJobCheckpoint&& other) noexcept = default; // move constructor

    FineTuningJobCheckpoint& operator=(const FineTuningJobCheckpoint& other) = default; // copy assignment
    FineTuningJobCheckpoint& operator=(FineTuningJobCheckpoint&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// FineTuningJobCheckpoint members

    /// <summary>
    /// The checkpoint identifier, which can be referenced in the API endpoints.
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// The Unix timestamp (in seconds) for when the checkpoint was created.
    /// </summary>
    int32_t getCreatedAt() const;
    void setCreatedAt(int32_t value);

    /// <summary>
    /// The name of the fine-tuned checkpoint model that is created.
    /// </summary>
    std::string getFineTunedModelCheckpoint() const;
    void setFineTunedModelCheckpoint(std::string value);

    /// <summary>
    /// The step number that the checkpoint was created at.
    /// </summary>
    int32_t getStepNumber() const;
    void setStepNumber(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    FineTuningJobCheckpoint_metrics getMetrics() const;
    void setMetrics(FineTuningJobCheckpoint_metrics value);

    /// <summary>
    /// The name of the fine-tuning job that this checkpoint was created from.
    /// </summary>
    std::string getFineTuningJobId() const;
    void setFineTuningJobId(std::string value);

    /// <summary>
    /// The object type, which is always \&quot;fine_tuning.job.checkpoint\&quot;.
    /// </summary>
    std::string getObject() const;
    void setObject(std::string value);

protected:
    std::string m_Id = "";
    int32_t m_Created_at = 0;
    std::string m_Fine_tuned_model_checkpoint = "";
    int32_t m_Step_number = 0;
    FineTuningJobCheckpoint_metrics m_Metrics;
    std::string m_Fine_tuning_job_id = "";
    std::string m_object = "";
};

std::vector<FineTuningJobCheckpoint> createFineTuningJobCheckpointVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<FineTuningJobCheckpoint>(const FineTuningJobCheckpoint& val) {
    return val.toPropertyTree();
}

template<>
inline FineTuningJobCheckpoint fromPt<FineTuningJobCheckpoint>(const boost::property_tree::ptree& pt) {
    FineTuningJobCheckpoint ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* FineTuningJobCheckpoint_H_ */
