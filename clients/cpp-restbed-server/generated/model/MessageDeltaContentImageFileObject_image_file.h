/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MessageDeltaContentImageFileObject_image_file.h
 *
 * 
 */

#ifndef MessageDeltaContentImageFileObject_image_file_H_
#define MessageDeltaContentImageFileObject_image_file_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  MessageDeltaContentImageFileObject_image_file 
{
public:
    MessageDeltaContentImageFileObject_image_file() = default;
    explicit MessageDeltaContentImageFileObject_image_file(boost::property_tree::ptree const& pt);
    virtual ~MessageDeltaContentImageFileObject_image_file() = default;

    MessageDeltaContentImageFileObject_image_file(const MessageDeltaContentImageFileObject_image_file& other) = default; // copy constructor
    MessageDeltaContentImageFileObject_image_file(MessageDeltaContentImageFileObject_image_file&& other) noexcept = default; // move constructor

    MessageDeltaContentImageFileObject_image_file& operator=(const MessageDeltaContentImageFileObject_image_file& other) = default; // copy assignment
    MessageDeltaContentImageFileObject_image_file& operator=(MessageDeltaContentImageFileObject_image_file&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// MessageDeltaContentImageFileObject_image_file members

    /// <summary>
    /// The [File](/docs/api-reference/files) ID of the image in the message content.
    /// </summary>
    std::string getFileId() const;
    void setFileId(std::string value);

protected:
    std::string m_File_id = "";
};

std::vector<MessageDeltaContentImageFileObject_image_file> createMessageDeltaContentImageFileObject_image_fileVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<MessageDeltaContentImageFileObject_image_file>(const MessageDeltaContentImageFileObject_image_file& val) {
    return val.toPropertyTree();
}

template<>
inline MessageDeltaContentImageFileObject_image_file fromPt<MessageDeltaContentImageFileObject_image_file>(const boost::property_tree::ptree& pt) {
    MessageDeltaContentImageFileObject_image_file ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* MessageDeltaContentImageFileObject_image_file_H_ */
