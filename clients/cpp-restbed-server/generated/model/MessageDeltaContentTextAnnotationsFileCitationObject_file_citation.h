/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MessageDeltaContentTextAnnotationsFileCitationObject_file_citation.h
 *
 * 
 */

#ifndef MessageDeltaContentTextAnnotationsFileCitationObject_file_citation_H_
#define MessageDeltaContentTextAnnotationsFileCitationObject_file_citation_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  MessageDeltaContentTextAnnotationsFileCitationObject_file_citation 
{
public:
    MessageDeltaContentTextAnnotationsFileCitationObject_file_citation() = default;
    explicit MessageDeltaContentTextAnnotationsFileCitationObject_file_citation(boost::property_tree::ptree const& pt);
    virtual ~MessageDeltaContentTextAnnotationsFileCitationObject_file_citation() = default;

    MessageDeltaContentTextAnnotationsFileCitationObject_file_citation(const MessageDeltaContentTextAnnotationsFileCitationObject_file_citation& other) = default; // copy constructor
    MessageDeltaContentTextAnnotationsFileCitationObject_file_citation(MessageDeltaContentTextAnnotationsFileCitationObject_file_citation&& other) noexcept = default; // move constructor

    MessageDeltaContentTextAnnotationsFileCitationObject_file_citation& operator=(const MessageDeltaContentTextAnnotationsFileCitationObject_file_citation& other) = default; // copy assignment
    MessageDeltaContentTextAnnotationsFileCitationObject_file_citation& operator=(MessageDeltaContentTextAnnotationsFileCitationObject_file_citation&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// MessageDeltaContentTextAnnotationsFileCitationObject_file_citation members

    /// <summary>
    /// The ID of the specific File the citation is from.
    /// </summary>
    std::string getFileId() const;
    void setFileId(std::string value);

    /// <summary>
    /// The specific quote in the file.
    /// </summary>
    std::string getQuote() const;
    void setQuote(std::string value);

protected:
    std::string m_File_id = "";
    std::string m_Quote = "";
};

std::vector<MessageDeltaContentTextAnnotationsFileCitationObject_file_citation> createMessageDeltaContentTextAnnotationsFileCitationObject_file_citationVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<MessageDeltaContentTextAnnotationsFileCitationObject_file_citation>(const MessageDeltaContentTextAnnotationsFileCitationObject_file_citation& val) {
    return val.toPropertyTree();
}

template<>
inline MessageDeltaContentTextAnnotationsFileCitationObject_file_citation fromPt<MessageDeltaContentTextAnnotationsFileCitationObject_file_citation>(const boost::property_tree::ptree& pt) {
    MessageDeltaContentTextAnnotationsFileCitationObject_file_citation ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* MessageDeltaContentTextAnnotationsFileCitationObject_file_citation_H_ */
