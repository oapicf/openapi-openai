/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MessageDeltaObject_delta_content_inner.h
 *
 * 
 */

#ifndef MessageDeltaObject_delta_content_inner_H_
#define MessageDeltaObject_delta_content_inner_H_



#include "MessageDeltaContentTextObject_text.h"
#include <string>
#include "MessageDeltaContentImageFileObject_image_file.h"
#include "MessageDeltaContentTextObject.h"
#include "MessageDeltaContentImageFileObject.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "MessageDeltaContentImageFileObject.h"
#include "MessageDeltaContentTextObject.h"
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  MessageDeltaObject_delta_content_inner : public MessageDeltaContentImageFileObject, public MessageDeltaContentTextObject
{
public:
    MessageDeltaObject_delta_content_inner() = default;
    explicit MessageDeltaObject_delta_content_inner(boost::property_tree::ptree const& pt);
    virtual ~MessageDeltaObject_delta_content_inner() = default;

    MessageDeltaObject_delta_content_inner(const MessageDeltaObject_delta_content_inner& other) = default; // copy constructor
    MessageDeltaObject_delta_content_inner(MessageDeltaObject_delta_content_inner&& other) noexcept = default; // move constructor

    MessageDeltaObject_delta_content_inner& operator=(const MessageDeltaObject_delta_content_inner& other) = default; // copy assignment
    MessageDeltaObject_delta_content_inner& operator=(MessageDeltaObject_delta_content_inner&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// MessageDeltaObject_delta_content_inner members

    /// <summary>
    /// The index of the content part in the message.
    /// </summary>
    int32_t getIndex() const;
    void setIndex(int32_t value);

    /// <summary>
    /// Always &#x60;image_file&#x60;.
    /// </summary>
    std::string getType() const;
    void setType(std::string value);

    /// <summary>
    /// 
    /// </summary>
    MessageDeltaContentImageFileObject_image_file getImageFile() const;
    void setImageFile(MessageDeltaContentImageFileObject_image_file value);

    /// <summary>
    /// 
    /// </summary>
    MessageDeltaContentTextObject_text getText() const;
    void setText(MessageDeltaContentTextObject_text value);

protected:
    int32_t m_Index = 0;
    std::string m_Type = "";
    MessageDeltaContentImageFileObject_image_file m_Image_file;
    MessageDeltaContentTextObject_text m_Text;
};

std::vector<MessageDeltaObject_delta_content_inner> createMessageDeltaObject_delta_content_innerVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<MessageDeltaObject_delta_content_inner>(const MessageDeltaObject_delta_content_inner& val) {
    return val.toPropertyTree();
}

template<>
inline MessageDeltaObject_delta_content_inner fromPt<MessageDeltaObject_delta_content_inner>(const boost::property_tree::ptree& pt) {
    MessageDeltaObject_delta_content_inner ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* MessageDeltaObject_delta_content_inner_H_ */
