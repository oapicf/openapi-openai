/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RunStepDeltaObject.h
 *
 * Represents a run step delta i.e. any changed fields on a run step during streaming. 
 */

#ifndef RunStepDeltaObject_H_
#define RunStepDeltaObject_H_



#include <string>
#include "RunStepDeltaObject_delta.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a run step delta i.e. any changed fields on a run step during streaming. 
/// </summary>
class  RunStepDeltaObject 
{
public:
    RunStepDeltaObject() = default;
    explicit RunStepDeltaObject(boost::property_tree::ptree const& pt);
    virtual ~RunStepDeltaObject() = default;

    RunStepDeltaObject(const RunStepDeltaObject& other) = default; // copy constructor
    RunStepDeltaObject(RunStepDeltaObject&& other) noexcept = default; // move constructor

    RunStepDeltaObject& operator=(const RunStepDeltaObject& other) = default; // copy assignment
    RunStepDeltaObject& operator=(RunStepDeltaObject&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// RunStepDeltaObject members

    /// <summary>
    /// The identifier of the run step, which can be referenced in API endpoints.
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// The object type, which is always &#x60;thread.run.step.delta&#x60;.
    /// </summary>
    std::string getObject() const;
    void setObject(std::string value);

    /// <summary>
    /// 
    /// </summary>
    RunStepDeltaObject_delta getDelta() const;
    void setDelta(RunStepDeltaObject_delta value);

protected:
    std::string m_Id = "";
    std::string m_object = "";
    RunStepDeltaObject_delta m_Delta;
};

std::vector<RunStepDeltaObject> createRunStepDeltaObjectVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<RunStepDeltaObject>(const RunStepDeltaObject& val) {
    return val.toPropertyTree();
}

template<>
inline RunStepDeltaObject fromPt<RunStepDeltaObject>(const boost::property_tree::ptree& pt) {
    RunStepDeltaObject ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* RunStepDeltaObject_H_ */
