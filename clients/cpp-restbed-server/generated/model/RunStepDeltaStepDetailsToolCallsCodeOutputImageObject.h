/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RunStepDeltaStepDetailsToolCallsCodeOutputImageObject.h
 *
 * 
 */

#ifndef RunStepDeltaStepDetailsToolCallsCodeOutputImageObject_H_
#define RunStepDeltaStepDetailsToolCallsCodeOutputImageObject_H_



#include "RunStepDeltaStepDetailsToolCallsCodeOutputImageObject_image.h"
#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  RunStepDeltaStepDetailsToolCallsCodeOutputImageObject 
{
public:
    RunStepDeltaStepDetailsToolCallsCodeOutputImageObject() = default;
    explicit RunStepDeltaStepDetailsToolCallsCodeOutputImageObject(boost::property_tree::ptree const& pt);
    virtual ~RunStepDeltaStepDetailsToolCallsCodeOutputImageObject() = default;

    RunStepDeltaStepDetailsToolCallsCodeOutputImageObject(const RunStepDeltaStepDetailsToolCallsCodeOutputImageObject& other) = default; // copy constructor
    RunStepDeltaStepDetailsToolCallsCodeOutputImageObject(RunStepDeltaStepDetailsToolCallsCodeOutputImageObject&& other) noexcept = default; // move constructor

    RunStepDeltaStepDetailsToolCallsCodeOutputImageObject& operator=(const RunStepDeltaStepDetailsToolCallsCodeOutputImageObject& other) = default; // copy assignment
    RunStepDeltaStepDetailsToolCallsCodeOutputImageObject& operator=(RunStepDeltaStepDetailsToolCallsCodeOutputImageObject&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// RunStepDeltaStepDetailsToolCallsCodeOutputImageObject members

    /// <summary>
    /// The index of the output in the outputs array.
    /// </summary>
    int32_t getIndex() const;
    void setIndex(int32_t value);

    /// <summary>
    /// Always &#x60;image&#x60;.
    /// </summary>
    std::string getType() const;
    void setType(std::string value);

    /// <summary>
    /// 
    /// </summary>
    RunStepDeltaStepDetailsToolCallsCodeOutputImageObject_image getImage() const;
    void setImage(RunStepDeltaStepDetailsToolCallsCodeOutputImageObject_image value);

protected:
    int32_t m_Index = 0;
    std::string m_Type = "";
    RunStepDeltaStepDetailsToolCallsCodeOutputImageObject_image m_Image;
};

std::vector<RunStepDeltaStepDetailsToolCallsCodeOutputImageObject> createRunStepDeltaStepDetailsToolCallsCodeOutputImageObjectVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<RunStepDeltaStepDetailsToolCallsCodeOutputImageObject>(const RunStepDeltaStepDetailsToolCallsCodeOutputImageObject& val) {
    return val.toPropertyTree();
}

template<>
inline RunStepDeltaStepDetailsToolCallsCodeOutputImageObject fromPt<RunStepDeltaStepDetailsToolCallsCodeOutputImageObject>(const boost::property_tree::ptree& pt) {
    RunStepDeltaStepDetailsToolCallsCodeOutputImageObject ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* RunStepDeltaStepDetailsToolCallsCodeOutputImageObject_H_ */
