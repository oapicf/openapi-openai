/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject.h
 *
 * Text output from the Code Interpreter tool call as part of a run step.
 */

#ifndef RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject_H_
#define RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject_H_



#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Text output from the Code Interpreter tool call as part of a run step.
/// </summary>
class  RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject 
{
public:
    RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject() = default;
    explicit RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject(boost::property_tree::ptree const& pt);
    virtual ~RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject() = default;

    RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject(const RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject& other) = default; // copy constructor
    RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject(RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject&& other) noexcept = default; // move constructor

    RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject& operator=(const RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject& other) = default; // copy assignment
    RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject& operator=(RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject members

    /// <summary>
    /// The index of the output in the outputs array.
    /// </summary>
    int32_t getIndex() const;
    void setIndex(int32_t value);

    /// <summary>
    /// Always &#x60;logs&#x60;.
    /// </summary>
    std::string getType() const;
    void setType(std::string value);

    /// <summary>
    /// The text output from the Code Interpreter tool call.
    /// </summary>
    std::string getLogs() const;
    void setLogs(std::string value);

protected:
    int32_t m_Index = 0;
    std::string m_Type = "";
    std::string m_Logs = "";
};

std::vector<RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject> createRunStepDeltaStepDetailsToolCallsCodeOutputLogsObjectVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject>(const RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject& val) {
    return val.toPropertyTree();
}

template<>
inline RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject fromPt<RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject>(const boost::property_tree::ptree& pt) {
    RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject_H_ */
