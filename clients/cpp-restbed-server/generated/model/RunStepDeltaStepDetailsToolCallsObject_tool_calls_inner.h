/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner.h
 *
 * 
 */

#ifndef RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner_H_
#define RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner_H_



#include "RunStepDeltaStepDetailsToolCallsFunctionObject.h"
#include "RunStepDeltaStepDetailsToolCallsCodeObject.h"
#include "RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter.h"
#include "RunStepDeltaStepDetailsToolCallsRetrievalObject.h"
#include <string>
#include "RunStepDeltaStepDetailsToolCallsFunctionObject_function.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "RunStepDeltaStepDetailsToolCallsCodeObject.h"
#include "RunStepDeltaStepDetailsToolCallsRetrievalObject.h"
#include "RunStepDeltaStepDetailsToolCallsFunctionObject.h"
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner : public RunStepDeltaStepDetailsToolCallsCodeObject, public RunStepDeltaStepDetailsToolCallsRetrievalObject, public RunStepDeltaStepDetailsToolCallsFunctionObject
{
public:
    RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner() = default;
    explicit RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner(boost::property_tree::ptree const& pt);
    virtual ~RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner() = default;

    RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner(const RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner& other) = default; // copy constructor
    RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner(RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner&& other) noexcept = default; // move constructor

    RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner& operator=(const RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner& other) = default; // copy assignment
    RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner& operator=(RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner members

    /// <summary>
    /// The index of the tool call in the tool calls array.
    /// </summary>
    int32_t getIndex() const;
    void setIndex(int32_t value);

    /// <summary>
    /// The ID of the tool call object.
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// The type of tool call. This is always going to be &#x60;code_interpreter&#x60; for this type of tool call.
    /// </summary>
    std::string getType() const;
    void setType(std::string value);

    /// <summary>
    /// 
    /// </summary>
    RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter getCodeInterpreter() const;
    void setCodeInterpreter(RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter value);

    /// <summary>
    /// For now, this is always going to be an empty object.
    /// </summary>
    std::string getRetrieval() const;
    void setRetrieval(std::string value);

    /// <summary>
    /// 
    /// </summary>
    RunStepDeltaStepDetailsToolCallsFunctionObject_function getFunction() const;
    void setFunction(RunStepDeltaStepDetailsToolCallsFunctionObject_function value);

protected:
    int32_t m_Index = 0;
    std::string m_Id = "";
    std::string m_Type = "";
    RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter m_Code_interpreter;
    std::string m_Retrieval = std::string{};
    RunStepDeltaStepDetailsToolCallsFunctionObject_function m_Function;
};

std::vector<RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner> createRunStepDeltaStepDetailsToolCallsObject_tool_calls_innerVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner>(const RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner& val) {
    return val.toPropertyTree();
}

template<>
inline RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner fromPt<RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner>(const boost::property_tree::ptree& pt) {
    RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner_H_ */
