/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RunStepDetailsMessageCreationObject_message_creation.h
 *
 * 
 */

#ifndef RunStepDetailsMessageCreationObject_message_creation_H_
#define RunStepDetailsMessageCreationObject_message_creation_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  RunStepDetailsMessageCreationObject_message_creation 
{
public:
    RunStepDetailsMessageCreationObject_message_creation() = default;
    explicit RunStepDetailsMessageCreationObject_message_creation(boost::property_tree::ptree const& pt);
    virtual ~RunStepDetailsMessageCreationObject_message_creation() = default;

    RunStepDetailsMessageCreationObject_message_creation(const RunStepDetailsMessageCreationObject_message_creation& other) = default; // copy constructor
    RunStepDetailsMessageCreationObject_message_creation(RunStepDetailsMessageCreationObject_message_creation&& other) noexcept = default; // move constructor

    RunStepDetailsMessageCreationObject_message_creation& operator=(const RunStepDetailsMessageCreationObject_message_creation& other) = default; // copy assignment
    RunStepDetailsMessageCreationObject_message_creation& operator=(RunStepDetailsMessageCreationObject_message_creation&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// RunStepDetailsMessageCreationObject_message_creation members

    /// <summary>
    /// The ID of the message that was created by this run step.
    /// </summary>
    std::string getMessageId() const;
    void setMessageId(std::string value);

protected:
    std::string m_Message_id = "";
};

std::vector<RunStepDetailsMessageCreationObject_message_creation> createRunStepDetailsMessageCreationObject_message_creationVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<RunStepDetailsMessageCreationObject_message_creation>(const RunStepDetailsMessageCreationObject_message_creation& val) {
    return val.toPropertyTree();
}

template<>
inline RunStepDetailsMessageCreationObject_message_creation fromPt<RunStepDetailsMessageCreationObject_message_creation>(const boost::property_tree::ptree& pt) {
    RunStepDetailsMessageCreationObject_message_creation ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* RunStepDetailsMessageCreationObject_message_creation_H_ */
