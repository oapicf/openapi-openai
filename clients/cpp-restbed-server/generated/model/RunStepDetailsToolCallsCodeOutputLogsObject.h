/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RunStepDetailsToolCallsCodeOutputLogsObject.h
 *
 * Text output from the Code Interpreter tool call as part of a run step.
 */

#ifndef RunStepDetailsToolCallsCodeOutputLogsObject_H_
#define RunStepDetailsToolCallsCodeOutputLogsObject_H_



#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Text output from the Code Interpreter tool call as part of a run step.
/// </summary>
class  RunStepDetailsToolCallsCodeOutputLogsObject 
{
public:
    RunStepDetailsToolCallsCodeOutputLogsObject() = default;
    explicit RunStepDetailsToolCallsCodeOutputLogsObject(boost::property_tree::ptree const& pt);
    virtual ~RunStepDetailsToolCallsCodeOutputLogsObject() = default;

    RunStepDetailsToolCallsCodeOutputLogsObject(const RunStepDetailsToolCallsCodeOutputLogsObject& other) = default; // copy constructor
    RunStepDetailsToolCallsCodeOutputLogsObject(RunStepDetailsToolCallsCodeOutputLogsObject&& other) noexcept = default; // move constructor

    RunStepDetailsToolCallsCodeOutputLogsObject& operator=(const RunStepDetailsToolCallsCodeOutputLogsObject& other) = default; // copy assignment
    RunStepDetailsToolCallsCodeOutputLogsObject& operator=(RunStepDetailsToolCallsCodeOutputLogsObject&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// RunStepDetailsToolCallsCodeOutputLogsObject members

    /// <summary>
    /// Always &#x60;logs&#x60;.
    /// </summary>
    std::string getType() const;
    void setType(std::string value);

    /// <summary>
    /// The text output from the Code Interpreter tool call.
    /// </summary>
    std::string getLogs() const;
    void setLogs(std::string value);

protected:
    std::string m_Type = "";
    std::string m_Logs = "";
};

std::vector<RunStepDetailsToolCallsCodeOutputLogsObject> createRunStepDetailsToolCallsCodeOutputLogsObjectVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<RunStepDetailsToolCallsCodeOutputLogsObject>(const RunStepDetailsToolCallsCodeOutputLogsObject& val) {
    return val.toPropertyTree();
}

template<>
inline RunStepDetailsToolCallsCodeOutputLogsObject fromPt<RunStepDetailsToolCallsCodeOutputLogsObject>(const boost::property_tree::ptree& pt) {
    RunStepDetailsToolCallsCodeOutputLogsObject ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* RunStepDetailsToolCallsCodeOutputLogsObject_H_ */
