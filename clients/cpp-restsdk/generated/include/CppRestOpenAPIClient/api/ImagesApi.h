/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ImagesApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_ImagesApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_ImagesApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/CreateImageEditRequest_model.h"
#include "CppRestOpenAPIClient/model/CreateImageRequest.h"
#include "CppRestOpenAPIClient/HttpContent.h"
#include "CppRestOpenAPIClient/model/ImagesResponse.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  ImagesApi 
{
public:

    explicit ImagesApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~ImagesApi();

    /// <summary>
    /// Creates an image given a prompt.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="createImageRequest"></param>
    pplx::task<std::shared_ptr<ImagesResponse>> createImage(
        std::shared_ptr<CreateImageRequest> createImageRequest
    ) const;
    /// <summary>
    /// Creates an edited or extended image given an original image and a prompt.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="image">The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.</param>
    /// <param name="prompt">A text description of the desired image(s). The maximum length is 1000 characters.</param>
    /// <param name="mask">An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="model"> (optional, default to new CreateImageEditRequest_model())</param>
    /// <param name="n">The number of images to generate. Must be between 1 and 10. (optional, default to 0)</param>
    /// <param name="size">The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="responseFormat">The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="user">A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).  (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ImagesResponse>> createImageEdit(
        std::shared_ptr<HttpContent> image,
        utility::string_t prompt,
        boost::optional<std::shared_ptr<HttpContent>> mask,
        boost::optional<std::shared_ptr<CreateImageEditRequest_model>> model,
        boost::optional<int32_t> n,
        boost::optional<utility::string_t> size,
        boost::optional<utility::string_t> responseFormat,
        boost::optional<utility::string_t> user
    ) const;
    /// <summary>
    /// Creates a variation of a given image.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="image">The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.</param>
    /// <param name="model"> (optional, default to new CreateImageEditRequest_model())</param>
    /// <param name="n">The number of images to generate. Must be between 1 and 10. For &#x60;dall-e-3&#x60;, only &#x60;n&#x3D;1&#x60; is supported. (optional, default to 0)</param>
    /// <param name="responseFormat">The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="size">The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="user">A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).  (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ImagesResponse>> createImageVariation(
        std::shared_ptr<HttpContent> image,
        boost::optional<std::shared_ptr<CreateImageEditRequest_model>> model,
        boost::optional<int32_t> n,
        boost::optional<utility::string_t> responseFormat,
        boost::optional<utility::string_t> size,
        boost::optional<utility::string_t> user
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_ImagesApi_H_ */

