/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateChatCompletionResponse_choices_inner_logprobs.h
 *
 * Log probability information for the choice.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CreateChatCompletionResponse_choices_inner_logprobs_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CreateChatCompletionResponse_choices_inner_logprobs_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/ChatCompletionTokenLogprob.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class ChatCompletionTokenLogprob;

/// <summary>
/// Log probability information for the choice.
/// </summary>
class  CreateChatCompletionResponse_choices_inner_logprobs
    : public ModelBase
{
public:
    CreateChatCompletionResponse_choices_inner_logprobs();
    virtual ~CreateChatCompletionResponse_choices_inner_logprobs();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreateChatCompletionResponse_choices_inner_logprobs members

    /// <summary>
    /// A list of message content tokens with log probability information.
    /// </summary>
    std::vector<std::shared_ptr<ChatCompletionTokenLogprob>>& getContent();
    bool contentIsSet() const;
    void unsetContent();

    void setContent(const std::vector<std::shared_ptr<ChatCompletionTokenLogprob>>& value);


protected:
    std::vector<std::shared_ptr<ChatCompletionTokenLogprob>> m_Content;
    bool m_ContentIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CreateChatCompletionResponse_choices_inner_logprobs_H_ */
