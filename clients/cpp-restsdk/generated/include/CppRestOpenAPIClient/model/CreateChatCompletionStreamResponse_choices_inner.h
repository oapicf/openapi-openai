/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateChatCompletionStreamResponse_choices_inner.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CreateChatCompletionStreamResponse_choices_inner_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CreateChatCompletionStreamResponse_choices_inner_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/ChatCompletionStreamResponseDelta.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class ChatCompletionStreamResponseDelta;

/// <summary>
/// 
/// </summary>
class  CreateChatCompletionStreamResponse_choices_inner
    : public ModelBase
{
public:
    CreateChatCompletionStreamResponse_choices_inner();
    virtual ~CreateChatCompletionStreamResponse_choices_inner();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreateChatCompletionStreamResponse_choices_inner members

    /// <summary>
    /// 
    /// </summary>
    int32_t getIndex() const;
    bool indexIsSet() const;
    void unsetIndex();

    void setIndex(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ChatCompletionStreamResponseDelta> getDelta() const;
    bool deltaIsSet() const;
    void unsetDelta();

    void setDelta(const std::shared_ptr<ChatCompletionStreamResponseDelta>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFinishReason() const;
    bool finishReasonIsSet() const;
    void unsetFinish_reason();

    void setFinishReason(const utility::string_t& value);


protected:
    int32_t m_Index;
    bool m_IndexIsSet;
    std::shared_ptr<ChatCompletionStreamResponseDelta> m_Delta;
    bool m_DeltaIsSet;
    utility::string_t m_Finish_reason;
    bool m_Finish_reasonIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CreateChatCompletionStreamResponse_choices_inner_H_ */
