/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Image.h
 *
 * Represents the url or the content of an image generated by the OpenAI API.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Image_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Image_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Represents the url or the content of an image generated by the OpenAI API.
/// </summary>
class  Image
    : public ModelBase
{
public:
    Image();
    virtual ~Image();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Image members

    /// <summary>
    /// The base64-encoded JSON of the generated image, if &#x60;response_format&#x60; is &#x60;b64_json&#x60;.
    /// </summary>
    utility::string_t getB64Json() const;
    bool b64JsonIsSet() const;
    void unsetB64_json();

    void setB64Json(const utility::string_t& value);

    /// <summary>
    /// The URL of the generated image, if &#x60;response_format&#x60; is &#x60;url&#x60; (default).
    /// </summary>
    utility::string_t getUrl() const;
    bool urlIsSet() const;
    void unsetUrl();

    void setUrl(const utility::string_t& value);

    /// <summary>
    /// The prompt that was used to generate the image, if there was any revision to the prompt.
    /// </summary>
    utility::string_t getRevisedPrompt() const;
    bool revisedPromptIsSet() const;
    void unsetRevised_prompt();

    void setRevisedPrompt(const utility::string_t& value);


protected:
    utility::string_t m_B64_json;
    bool m_B64_jsonIsSet;
    utility::string_t m_Url;
    bool m_UrlIsSet;
    utility::string_t m_Revised_prompt;
    bool m_Revised_promptIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Image_H_ */
