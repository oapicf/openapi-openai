/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ImagesResponse.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ImagesResponse_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ImagesResponse_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <vector>
#include "CppRestOpenAPIClient/model/ImagesResponse_data_inner.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class ImagesResponse_data_inner;

/// <summary>
/// 
/// </summary>
class  ImagesResponse
    : public ModelBase
{
public:
    ImagesResponse();
    virtual ~ImagesResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ImagesResponse members

    /// <summary>
    /// 
    /// </summary>
    int32_t getCreated() const;
    bool createdIsSet() const;
    void unsetCreated();

    void setCreated(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ImagesResponse_data_inner>>& getData();
    bool dataIsSet() const;
    void unsetData();

    void setData(const std::vector<std::shared_ptr<ImagesResponse_data_inner>>& value);


protected:
    int32_t m_Created;
    bool m_CreatedIsSet;
    std::vector<std::shared_ptr<ImagesResponse_data_inner>> m_Data;
    bool m_DataIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ImagesResponse_H_ */
