/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MessageContentTextObject_text.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_MessageContentTextObject_text_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_MessageContentTextObject_text_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>
#include "CppRestOpenAPIClient/model/MessageContentTextObject_text_annotations_inner.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class MessageContentTextObject_text_annotations_inner;

/// <summary>
/// 
/// </summary>
class  MessageContentTextObject_text
    : public ModelBase
{
public:
    MessageContentTextObject_text();
    virtual ~MessageContentTextObject_text();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// MessageContentTextObject_text members

    /// <summary>
    /// The data that makes up the text.
    /// </summary>
    utility::string_t getValue() const;
    bool valueIsSet() const;
    void unsetValue();

    void setValue(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<MessageContentTextObject_text_annotations_inner>>& getAnnotations();
    bool annotationsIsSet() const;
    void unsetAnnotations();

    void setAnnotations(const std::vector<std::shared_ptr<MessageContentTextObject_text_annotations_inner>>& value);


protected:
    utility::string_t m_Value;
    bool m_ValueIsSet;
    std::vector<std::shared_ptr<MessageContentTextObject_text_annotations_inner>> m_Annotations;
    bool m_AnnotationsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_MessageContentTextObject_text_H_ */
