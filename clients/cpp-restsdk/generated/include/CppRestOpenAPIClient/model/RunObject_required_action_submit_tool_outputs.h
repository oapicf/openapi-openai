/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RunObject_required_action_submit_tool_outputs.h
 *
 * Details on the tool outputs needed for this run to continue.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_RunObject_required_action_submit_tool_outputs_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_RunObject_required_action_submit_tool_outputs_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/RunToolCallObject.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class RunToolCallObject;


/// <summary>
/// Details on the tool outputs needed for this run to continue.
/// </summary>
class  RunObject_required_action_submit_tool_outputs
    : public ModelBase
{
public:
    RunObject_required_action_submit_tool_outputs();
    virtual ~RunObject_required_action_submit_tool_outputs();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// RunObject_required_action_submit_tool_outputs members

    /// <summary>
    /// A list of the relevant tool calls.
    /// </summary>
    std::vector<std::shared_ptr<RunToolCallObject>>& getToolCalls();
    bool toolCallsIsSet() const;
    void unsetTool_calls();

    void setToolCalls(const std::vector<std::shared_ptr<RunToolCallObject>>& value);


protected:
    std::vector<std::shared_ptr<RunToolCallObject>> m_Tool_calls;
    bool m_Tool_callsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_RunObject_required_action_submit_tool_outputs_H_ */
