/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RunStepDetailsToolCallsCodeObject_code_interpreter.h
 *
 * The Code Interpreter tool call definition.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_RunStepDetailsToolCallsCodeObject_code_interpreter_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_RunStepDetailsToolCallsCodeObject_code_interpreter_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/RunStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class RunStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner;


/// <summary>
/// The Code Interpreter tool call definition.
/// </summary>
class  RunStepDetailsToolCallsCodeObject_code_interpreter
    : public ModelBase
{
public:
    RunStepDetailsToolCallsCodeObject_code_interpreter();
    virtual ~RunStepDetailsToolCallsCodeObject_code_interpreter();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// RunStepDetailsToolCallsCodeObject_code_interpreter members

    /// <summary>
    /// The input to the Code Interpreter tool call.
    /// </summary>
    utility::string_t getInput() const;
    bool inputIsSet() const;
    void unsetInput();

    void setInput(const utility::string_t& value);

    /// <summary>
    /// The outputs from the Code Interpreter tool call. Code Interpreter can output one or more items, including text (&#x60;logs&#x60;) or images (&#x60;image&#x60;). Each of these are represented by a different object type.
    /// </summary>
    std::vector<std::shared_ptr<RunStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner>>& getOutputs();
    bool outputsIsSet() const;
    void unsetOutputs();

    void setOutputs(const std::vector<std::shared_ptr<RunStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner>>& value);


protected:
    utility::string_t m_Input;
    bool m_InputIsSet;
    std::vector<std::shared_ptr<RunStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner>> m_Outputs;
    bool m_OutputsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_RunStepDetailsToolCallsCodeObject_code_interpreter_H_ */
