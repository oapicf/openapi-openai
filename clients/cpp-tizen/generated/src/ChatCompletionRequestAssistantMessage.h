/*
 * ChatCompletionRequestAssistantMessage.h
 *
 * 
 */

#ifndef _ChatCompletionRequestAssistantMessage_H_
#define _ChatCompletionRequestAssistantMessage_H_


#include <string>
#include "ChatCompletionMessageToolCall.h"
#include "ChatCompletionRequestAssistantMessage_function_call.h"
#include <list>
#include "Object.h"

/** \defgroup Models Data Structures for API
 *  Classes containing all the Data Structures needed for calling/returned by API endpoints
 *
 */

namespace Tizen {
namespace ArtikCloud {


/*! \brief 
 *
 *  \ingroup Models
 *
 */

class ChatCompletionRequestAssistantMessage : public Object {
public:
	/*! \brief Constructor.
	 */
	ChatCompletionRequestAssistantMessage();
	ChatCompletionRequestAssistantMessage(char* str);

	/*! \brief Destructor.
	 */
	virtual ~ChatCompletionRequestAssistantMessage();

	/*! \brief Retrieve a string JSON representation of this class.
	 */
	char* toJson();

	/*! \brief Fills in members of this class from JSON string representing it.
	 */
	void fromJson(char* jsonStr);

	/*! \brief Get The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified. 
	 */
	std::string getContent();

	/*! \brief Set The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified. 
	 */
	void setContent(std::string  content);
	/*! \brief Get The role of the messages author, in this case `assistant`.
	 */
	std::string getRole();

	/*! \brief Set The role of the messages author, in this case `assistant`.
	 */
	void setRole(std::string  role);
	/*! \brief Get An optional name for the participant. Provides the model information to differentiate between participants of the same role.
	 */
	std::string getName();

	/*! \brief Set An optional name for the participant. Provides the model information to differentiate between participants of the same role.
	 */
	void setName(std::string  name);
	/*! \brief Get The tool calls generated by the model, such as function calls.
	 */
	std::list<ChatCompletionMessageToolCall> getToolCalls();

	/*! \brief Set The tool calls generated by the model, such as function calls.
	 */
	void setToolCalls(std::list <ChatCompletionMessageToolCall> tool_calls);
	/*! \brief Get 
	 */
	ChatCompletionRequestAssistantMessage_function_call getFunctionCall();

	/*! \brief Set 
	 */
	void setFunctionCall(ChatCompletionRequestAssistantMessage_function_call  function_call);

private:
	std::string content;
	std::string role;
	std::string name;
	std::list <ChatCompletionMessageToolCall>tool_calls;
	ChatCompletionRequestAssistantMessage_function_call function_call;
	void __init();
	void __cleanup();

};
}
}

#endif /* _ChatCompletionRequestAssistantMessage_H_ */
