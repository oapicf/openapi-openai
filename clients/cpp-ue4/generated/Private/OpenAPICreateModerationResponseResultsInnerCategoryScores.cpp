/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPICreateModerationResponseResultsInnerCategoryScores.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPICreateModerationResponseResultsInnerCategoryScores::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("hate")); WriteJsonValue(Writer, Hate);
	Writer->WriteIdentifierPrefix(TEXT("hate/threatening")); WriteJsonValue(Writer, HateThreatening);
	Writer->WriteIdentifierPrefix(TEXT("harassment")); WriteJsonValue(Writer, Harassment);
	Writer->WriteIdentifierPrefix(TEXT("harassment/threatening")); WriteJsonValue(Writer, HarassmentThreatening);
	Writer->WriteIdentifierPrefix(TEXT("self-harm")); WriteJsonValue(Writer, SelfHarm);
	Writer->WriteIdentifierPrefix(TEXT("self-harm/intent")); WriteJsonValue(Writer, SelfHarmIntent);
	Writer->WriteIdentifierPrefix(TEXT("self-harm/instructions")); WriteJsonValue(Writer, SelfHarmInstructions);
	Writer->WriteIdentifierPrefix(TEXT("sexual")); WriteJsonValue(Writer, Sexual);
	Writer->WriteIdentifierPrefix(TEXT("sexual/minors")); WriteJsonValue(Writer, SexualMinors);
	Writer->WriteIdentifierPrefix(TEXT("violence")); WriteJsonValue(Writer, Violence);
	Writer->WriteIdentifierPrefix(TEXT("violence/graphic")); WriteJsonValue(Writer, ViolenceGraphic);
	Writer->WriteObjectEnd();
}

bool OpenAPICreateModerationResponseResultsInnerCategoryScores::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hate"), Hate);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hate/threatening"), HateThreatening);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("harassment"), Harassment);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("harassment/threatening"), HarassmentThreatening);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("self-harm"), SelfHarm);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("self-harm/intent"), SelfHarmIntent);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("self-harm/instructions"), SelfHarmInstructions);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("sexual"), Sexual);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("sexual/minors"), SexualMinors);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("violence"), Violence);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("violence/graphic"), ViolenceGraphic);

	return ParseSuccess;
}

}
