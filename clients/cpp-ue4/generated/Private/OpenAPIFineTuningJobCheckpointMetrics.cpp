/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIFineTuningJobCheckpointMetrics.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIFineTuningJobCheckpointMetrics::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Step.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("step")); WriteJsonValue(Writer, Step.GetValue());
	}
	if (TrainLoss.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("train_loss")); WriteJsonValue(Writer, TrainLoss.GetValue());
	}
	if (TrainMeanTokenAccuracy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("train_mean_token_accuracy")); WriteJsonValue(Writer, TrainMeanTokenAccuracy.GetValue());
	}
	if (ValidLoss.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("valid_loss")); WriteJsonValue(Writer, ValidLoss.GetValue());
	}
	if (ValidMeanTokenAccuracy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("valid_mean_token_accuracy")); WriteJsonValue(Writer, ValidMeanTokenAccuracy.GetValue());
	}
	if (FullValidLoss.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("full_valid_loss")); WriteJsonValue(Writer, FullValidLoss.GetValue());
	}
	if (FullValidMeanTokenAccuracy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("full_valid_mean_token_accuracy")); WriteJsonValue(Writer, FullValidMeanTokenAccuracy.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIFineTuningJobCheckpointMetrics::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("step"), Step);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("train_loss"), TrainLoss);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("train_mean_token_accuracy"), TrainMeanTokenAccuracy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("valid_loss"), ValidLoss);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("valid_mean_token_accuracy"), ValidMeanTokenAccuracy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("full_valid_loss"), FullValidLoss);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("full_valid_mean_token_accuracy"), FullValidMeanTokenAccuracy);

	return ParseSuccess;
}

}
