/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIRunStepDetailsToolCallsFunctionObjectFunction.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIRunStepDetailsToolCallsFunctionObjectFunction::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("name")); WriteJsonValue(Writer, Name);
	Writer->WriteIdentifierPrefix(TEXT("arguments")); WriteJsonValue(Writer, Arguments);
	if (Output.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("output")); WriteJsonValue(Writer, Output.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIRunStepDetailsToolCallsFunctionObjectFunction::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("name"), Name);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("arguments"), Arguments);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("output"), Output);

	return ParseSuccess;
}

}
