/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPISubmitToolOutputsRunRequest.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPISubmitToolOutputsRunRequest::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("tool_outputs")); WriteJsonValue(Writer, ToolOutputs);
	if (Stream.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("stream")); WriteJsonValue(Writer, Stream.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPISubmitToolOutputsRunRequest::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("tool_outputs"), ToolOutputs);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("stream"), Stream);

	return ParseSuccess;
}

}
