/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * OpenAPI spec version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIChatCompletionRequestMessageFunctionCall.h"

namespace OpenAPI
{

/*
 * OpenAPIChatCompletionRequestMessage
 *
 * 
 */
class OPENAPI_API OpenAPIChatCompletionRequestMessage : public Model
{
public:
    virtual ~OpenAPIChatCompletionRequestMessage() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	enum class RoleEnum
	{
		System,
		User,
		Assistant,
		Function,
  	};

	static FString EnumToString(const RoleEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, RoleEnum& EnumValue);
	/* The role of the messages author. One of `system`, `user`, `assistant`, or `function`. */
	RoleEnum Role;
	/* The contents of the message. `content` is required for all messages except assistant messages with function calls. */
	TOptional<FString> Content;
	/* The name of the author of this message. `name` is required if role is `function`, and it should be the name of the function whose response is in the `content`. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of 64 characters. */
	TOptional<FString> Name;
	TOptional<OpenAPIChatCompletionRequestMessageFunctionCall> FunctionCall;
};

}
