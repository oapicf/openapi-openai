/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPICreateSpeechRequestModel.h"

namespace OpenAPI
{

/*
 * OpenAPICreateSpeechRequest
 *
 * 
 */
class OPENAPI_API OpenAPICreateSpeechRequest : public Model
{
public:
    virtual ~OpenAPICreateSpeechRequest() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	OpenAPICreateSpeechRequestModel Model;
	/* The text to generate audio for. The maximum length is 4096 characters. */
	FString Input;
	enum class VoiceEnum
	{
		Alloy,
		Echo,
		Fable,
		Onyx,
		Nova,
		Shimmer,
  	};

	static FString EnumToString(const VoiceEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, VoiceEnum& EnumValue);
	/* The voice to use when generating the audio. Supported voices are `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`. Previews of the voices are available in the [Text to speech guide](/docs/guides/text-to-speech/voice-options). */
	VoiceEnum Voice;
	enum class ResponseFormatEnum
	{
		Mp3,
		Opus,
		Aac,
		Flac,
		Wav,
		Pcm,
  	};

	static FString EnumToString(const ResponseFormatEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, ResponseFormatEnum& EnumValue);
	/* The format to audio in. Supported formats are `mp3`, `opus`, `aac`, `flac`, `wav`, and `pcm`. */
	TOptional<ResponseFormatEnum> ResponseFormat;
	/* The speed of the generated audio. Select a value from `0.25` to `4.0`. `1.0` is the default. */
	TOptional<double> Speed;
};

}
