/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIModelsApi.h"

#include "OpenAPIDeleteModelResponse.h"
#include "OpenAPIListModelsResponse.h"
#include "OpenAPIModel.h"

namespace OpenAPI
{

/* Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.

*/
class OPENAPI_API OpenAPIModelsApi::DeleteModelRequest : public Request
{
public:
    virtual ~DeleteModelRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The model to delete */
	FString Model;
};

class OPENAPI_API OpenAPIModelsApi::DeleteModelResponse : public Response
{
public:
    virtual ~DeleteModelResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIDeleteModelResponse Content;
};

/* Lists the currently available models, and provides basic information about each one such as the owner and availability.

*/
class OPENAPI_API OpenAPIModelsApi::ListModelsRequest : public Request
{
public:
    virtual ~ListModelsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIModelsApi::ListModelsResponse : public Response
{
public:
    virtual ~ListModelsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIListModelsResponse Content;
};

/* Retrieves a model instance, providing basic information about the model such as the owner and permissioning.

*/
class OPENAPI_API OpenAPIModelsApi::RetrieveModelRequest : public Request
{
public:
    virtual ~RetrieveModelRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The ID of the model to use for this request */
	FString Model;
};

class OPENAPI_API OpenAPIModelsApi::RetrieveModelResponse : public Response
{
public:
    virtual ~RetrieveModelResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIModel Content;
};

}
