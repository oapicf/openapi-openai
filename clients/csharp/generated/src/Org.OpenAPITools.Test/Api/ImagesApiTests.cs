/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ImagesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ImagesApiTests : IDisposable
    {
        private ImagesApi instance;

        public ImagesApiTests()
        {
            instance = new ImagesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ImagesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ImagesApi
            //Assert.IsType<ImagesApi>(instance);
        }

        /// <summary>
        /// Test CreateImage
        /// </summary>
        [Fact]
        public void CreateImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateImageRequest createImageRequest = null;
            //var response = instance.CreateImage(createImageRequest);
            //Assert.IsType<ImagesResponse>(response);
        }

        /// <summary>
        /// Test CreateImageEdit
        /// </summary>
        [Fact]
        public void CreateImageEditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream image = null;
            //string prompt = null;
            //System.IO.Stream? mask = null;
            //CreateImageEditRequestModel? model = null;
            //int? n = null;
            //string? size = null;
            //string? responseFormat = null;
            //string? user = null;
            //var response = instance.CreateImageEdit(image, prompt, mask, model, n, size, responseFormat, user);
            //Assert.IsType<ImagesResponse>(response);
        }

        /// <summary>
        /// Test CreateImageVariation
        /// </summary>
        [Fact]
        public void CreateImageVariationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream image = null;
            //CreateImageEditRequestModel? model = null;
            //int? n = null;
            //string? responseFormat = null;
            //string? size = null;
            //string? user = null;
            //var response = instance.CreateImageVariation(image, model, n, responseFormat, size, user);
            //Assert.IsType<ImagesResponse>(response);
        }
    }
}
