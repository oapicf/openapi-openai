/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// A list of [Files](/docs/api-reference/files) attached to an &#x60;assistant&#x60;.
    /// </summary>
    [DataContract(Name = "AssistantFileObject")]
    public partial class AssistantFileObject : IValidatableObject
    {
        /// <summary>
        /// The object type, which is always &#x60;assistant.file&#x60;.
        /// </summary>
        /// <value>The object type, which is always &#x60;assistant.file&#x60;.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectEnum
        {
            /// <summary>
            /// Enum AssistantFile for value: assistant.file
            /// </summary>
            [EnumMember(Value = "assistant.file")]
            AssistantFile = 1
        }


        /// <summary>
        /// The object type, which is always &#x60;assistant.file&#x60;.
        /// </summary>
        /// <value>The object type, which is always &#x60;assistant.file&#x60;.</value>
        [DataMember(Name = "object", IsRequired = true, EmitDefaultValue = true)]
        public ObjectEnum VarObject { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AssistantFileObject" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AssistantFileObject() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AssistantFileObject" /> class.
        /// </summary>
        /// <param name="id">The identifier, which can be referenced in API endpoints. (required).</param>
        /// <param name="varObject">The object type, which is always &#x60;assistant.file&#x60;. (required).</param>
        /// <param name="createdAt">The Unix timestamp (in seconds) for when the assistant file was created. (required).</param>
        /// <param name="assistantId">The assistant ID that the file is attached to. (required).</param>
        public AssistantFileObject(string id = default(string), ObjectEnum varObject = default(ObjectEnum), int createdAt = default(int), string assistantId = default(string))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for AssistantFileObject and cannot be null");
            }
            this.Id = id;
            this.VarObject = varObject;
            this.CreatedAt = createdAt;
            // to ensure "assistantId" is required (not null)
            if (assistantId == null)
            {
                throw new ArgumentNullException("assistantId is a required property for AssistantFileObject and cannot be null");
            }
            this.AssistantId = assistantId;
        }

        /// <summary>
        /// The identifier, which can be referenced in API endpoints.
        /// </summary>
        /// <value>The identifier, which can be referenced in API endpoints.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the assistant file was created.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the assistant file was created.</value>
        [DataMember(Name = "created_at", IsRequired = true, EmitDefaultValue = true)]
        public int CreatedAt { get; set; }

        /// <summary>
        /// The assistant ID that the file is attached to.
        /// </summary>
        /// <value>The assistant ID that the file is attached to.</value>
        [DataMember(Name = "assistant_id", IsRequired = true, EmitDefaultValue = true)]
        public string AssistantId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AssistantFileObject {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  VarObject: ").Append(VarObject).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  AssistantId: ").Append(AssistantId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
