/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// A chat completion message generated by the model.
    /// </summary>
    [DataContract(Name = "ChatCompletionResponseMessage")]
    public partial class ChatCompletionResponseMessage : IValidatableObject
    {
        /// <summary>
        /// The role of the author of this message.
        /// </summary>
        /// <value>The role of the author of this message.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RoleEnum
        {
            /// <summary>
            /// Enum Assistant for value: assistant
            /// </summary>
            [EnumMember(Value = "assistant")]
            Assistant = 1
        }


        /// <summary>
        /// The role of the author of this message.
        /// </summary>
        /// <value>The role of the author of this message.</value>
        [DataMember(Name = "role", IsRequired = true, EmitDefaultValue = true)]
        public RoleEnum Role { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ChatCompletionResponseMessage" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ChatCompletionResponseMessage() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ChatCompletionResponseMessage" /> class.
        /// </summary>
        /// <param name="content">The contents of the message. (required).</param>
        /// <param name="toolCalls">The tool calls generated by the model, such as function calls..</param>
        /// <param name="role">The role of the author of this message. (required).</param>
        /// <param name="functionCall">functionCall.</param>
        public ChatCompletionResponseMessage(string content = default(string), List<ChatCompletionMessageToolCall> toolCalls = default(List<ChatCompletionMessageToolCall>), RoleEnum role = default(RoleEnum), ChatCompletionRequestAssistantMessageFunctionCall functionCall = default(ChatCompletionRequestAssistantMessageFunctionCall))
        {
            // to ensure "content" is required (not null)
            if (content == null)
            {
                throw new ArgumentNullException("content is a required property for ChatCompletionResponseMessage and cannot be null");
            }
            this.Content = content;
            this.Role = role;
            this.ToolCalls = toolCalls;
            this.FunctionCall = functionCall;
        }

        /// <summary>
        /// The contents of the message.
        /// </summary>
        /// <value>The contents of the message.</value>
        [DataMember(Name = "content", IsRequired = true, EmitDefaultValue = true)]
        public string Content { get; set; }

        /// <summary>
        /// The tool calls generated by the model, such as function calls.
        /// </summary>
        /// <value>The tool calls generated by the model, such as function calls.</value>
        [DataMember(Name = "tool_calls", EmitDefaultValue = false)]
        public List<ChatCompletionMessageToolCall> ToolCalls { get; set; }

        /// <summary>
        /// Gets or Sets FunctionCall
        /// </summary>
        [DataMember(Name = "function_call", EmitDefaultValue = false)]
        [Obsolete]
        public ChatCompletionRequestAssistantMessageFunctionCall FunctionCall { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ChatCompletionResponseMessage {\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("  ToolCalls: ").Append(ToolCalls).Append("\n");
            sb.Append("  Role: ").Append(Role).Append("\n");
            sb.Append("  FunctionCall: ").Append(FunctionCall).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
