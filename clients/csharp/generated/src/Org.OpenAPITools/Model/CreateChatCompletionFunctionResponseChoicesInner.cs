/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CreateChatCompletionFunctionResponseChoicesInner
    /// </summary>
    [DataContract(Name = "CreateChatCompletionFunctionResponse_choices_inner")]
    public partial class CreateChatCompletionFunctionResponseChoicesInner : IValidatableObject
    {
        /// <summary>
        /// The reason the model stopped generating tokens. This will be &#x60;stop&#x60; if the model hit a natural stop point or a provided stop sequence, &#x60;length&#x60; if the maximum number of tokens specified in the request was reached, &#x60;content_filter&#x60; if content was omitted due to a flag from our content filters, or &#x60;function_call&#x60; if the model called a function. 
        /// </summary>
        /// <value>The reason the model stopped generating tokens. This will be &#x60;stop&#x60; if the model hit a natural stop point or a provided stop sequence, &#x60;length&#x60; if the maximum number of tokens specified in the request was reached, &#x60;content_filter&#x60; if content was omitted due to a flag from our content filters, or &#x60;function_call&#x60; if the model called a function. </value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum FinishReasonEnum
        {
            /// <summary>
            /// Enum Stop for value: stop
            /// </summary>
            [EnumMember(Value = "stop")]
            Stop = 1,

            /// <summary>
            /// Enum Length for value: length
            /// </summary>
            [EnumMember(Value = "length")]
            Length = 2,

            /// <summary>
            /// Enum FunctionCall for value: function_call
            /// </summary>
            [EnumMember(Value = "function_call")]
            FunctionCall = 3,

            /// <summary>
            /// Enum ContentFilter for value: content_filter
            /// </summary>
            [EnumMember(Value = "content_filter")]
            ContentFilter = 4
        }


        /// <summary>
        /// The reason the model stopped generating tokens. This will be &#x60;stop&#x60; if the model hit a natural stop point or a provided stop sequence, &#x60;length&#x60; if the maximum number of tokens specified in the request was reached, &#x60;content_filter&#x60; if content was omitted due to a flag from our content filters, or &#x60;function_call&#x60; if the model called a function. 
        /// </summary>
        /// <value>The reason the model stopped generating tokens. This will be &#x60;stop&#x60; if the model hit a natural stop point or a provided stop sequence, &#x60;length&#x60; if the maximum number of tokens specified in the request was reached, &#x60;content_filter&#x60; if content was omitted due to a flag from our content filters, or &#x60;function_call&#x60; if the model called a function. </value>
        [DataMember(Name = "finish_reason", IsRequired = true, EmitDefaultValue = true)]
        public FinishReasonEnum FinishReason { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateChatCompletionFunctionResponseChoicesInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateChatCompletionFunctionResponseChoicesInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateChatCompletionFunctionResponseChoicesInner" /> class.
        /// </summary>
        /// <param name="finishReason">The reason the model stopped generating tokens. This will be &#x60;stop&#x60; if the model hit a natural stop point or a provided stop sequence, &#x60;length&#x60; if the maximum number of tokens specified in the request was reached, &#x60;content_filter&#x60; if content was omitted due to a flag from our content filters, or &#x60;function_call&#x60; if the model called a function.  (required).</param>
        /// <param name="index">The index of the choice in the list of choices. (required).</param>
        /// <param name="message">message (required).</param>
        public CreateChatCompletionFunctionResponseChoicesInner(FinishReasonEnum finishReason = default(FinishReasonEnum), int index = default(int), ChatCompletionResponseMessage message = default(ChatCompletionResponseMessage))
        {
            this.FinishReason = finishReason;
            this.Index = index;
            // to ensure "message" is required (not null)
            if (message == null)
            {
                throw new ArgumentNullException("message is a required property for CreateChatCompletionFunctionResponseChoicesInner and cannot be null");
            }
            this.Message = message;
        }

        /// <summary>
        /// The index of the choice in the list of choices.
        /// </summary>
        /// <value>The index of the choice in the list of choices.</value>
        [DataMember(Name = "index", IsRequired = true, EmitDefaultValue = true)]
        public int Index { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", IsRequired = true, EmitDefaultValue = true)]
        public ChatCompletionResponseMessage Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateChatCompletionFunctionResponseChoicesInner {\n");
            sb.Append("  FinishReason: ").Append(FinishReason).Append("\n");
            sb.Append("  Index: ").Append(Index).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
