/*
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CreateCompletionResponseUsage
    /// </summary>
    [DataContract(Name = "CreateCompletionResponse_usage")]
    public partial class CreateCompletionResponseUsage : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateCompletionResponseUsage" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateCompletionResponseUsage() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateCompletionResponseUsage" /> class.
        /// </summary>
        /// <param name="promptTokens">promptTokens (required).</param>
        /// <param name="completionTokens">completionTokens (required).</param>
        /// <param name="totalTokens">totalTokens (required).</param>
        public CreateCompletionResponseUsage(int promptTokens = default(int), int completionTokens = default(int), int totalTokens = default(int))
        {
            this.PromptTokens = promptTokens;
            this.CompletionTokens = completionTokens;
            this.TotalTokens = totalTokens;
        }

        /// <summary>
        /// Gets or Sets PromptTokens
        /// </summary>
        [DataMember(Name = "prompt_tokens", IsRequired = true, EmitDefaultValue = true)]
        public int PromptTokens { get; set; }

        /// <summary>
        /// Gets or Sets CompletionTokens
        /// </summary>
        [DataMember(Name = "completion_tokens", IsRequired = true, EmitDefaultValue = true)]
        public int CompletionTokens { get; set; }

        /// <summary>
        /// Gets or Sets TotalTokens
        /// </summary>
        [DataMember(Name = "total_tokens", IsRequired = true, EmitDefaultValue = true)]
        public int TotalTokens { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateCompletionResponseUsage {\n");
            sb.Append("  PromptTokens: ").Append(PromptTokens).Append("\n");
            sb.Append("  CompletionTokens: ").Append(CompletionTokens).Append("\n");
            sb.Append("  TotalTokens: ").Append(TotalTokens).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
