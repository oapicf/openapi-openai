/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// The hyperparameters used for the fine-tuning job.
    /// </summary>
    [DataContract(Name = "CreateFineTuningJobRequest_hyperparameters")]
    public partial class CreateFineTuningJobRequestHyperparameters : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateFineTuningJobRequestHyperparameters" /> class.
        /// </summary>
        /// <param name="batchSize">batchSize.</param>
        /// <param name="learningRateMultiplier">learningRateMultiplier.</param>
        /// <param name="nEpochs">nEpochs.</param>
        public CreateFineTuningJobRequestHyperparameters(CreateFineTuningJobRequestHyperparametersBatchSize batchSize = default(CreateFineTuningJobRequestHyperparametersBatchSize), CreateFineTuningJobRequestHyperparametersLearningRateMultiplier learningRateMultiplier = default(CreateFineTuningJobRequestHyperparametersLearningRateMultiplier), CreateFineTuningJobRequestHyperparametersNEpochs nEpochs = default(CreateFineTuningJobRequestHyperparametersNEpochs))
        {
            this.BatchSize = batchSize;
            this.LearningRateMultiplier = learningRateMultiplier;
            this.NEpochs = nEpochs;
        }

        /// <summary>
        /// Gets or Sets BatchSize
        /// </summary>
        [DataMember(Name = "batch_size", EmitDefaultValue = false)]
        public CreateFineTuningJobRequestHyperparametersBatchSize BatchSize { get; set; }

        /// <summary>
        /// Gets or Sets LearningRateMultiplier
        /// </summary>
        [DataMember(Name = "learning_rate_multiplier", EmitDefaultValue = false)]
        public CreateFineTuningJobRequestHyperparametersLearningRateMultiplier LearningRateMultiplier { get; set; }

        /// <summary>
        /// Gets or Sets NEpochs
        /// </summary>
        [DataMember(Name = "n_epochs", EmitDefaultValue = false)]
        public CreateFineTuningJobRequestHyperparametersNEpochs NEpochs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateFineTuningJobRequestHyperparameters {\n");
            sb.Append("  BatchSize: ").Append(BatchSize).Append("\n");
            sb.Append("  LearningRateMultiplier: ").Append(LearningRateMultiplier).Append("\n");
            sb.Append("  NEpochs: ").Append(NEpochs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
