/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// A list of the categories along with their scores as predicted by model.
    /// </summary>
    [DataContract(Name = "CreateModerationResponse_results_inner_category_scores")]
    public partial class CreateModerationResponseResultsInnerCategoryScores : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateModerationResponseResultsInnerCategoryScores" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateModerationResponseResultsInnerCategoryScores() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateModerationResponseResultsInnerCategoryScores" /> class.
        /// </summary>
        /// <param name="hate">The score for the category &#39;hate&#39;. (required).</param>
        /// <param name="hateThreatening">The score for the category &#39;hate/threatening&#39;. (required).</param>
        /// <param name="harassment">The score for the category &#39;harassment&#39;. (required).</param>
        /// <param name="harassmentThreatening">The score for the category &#39;harassment/threatening&#39;. (required).</param>
        /// <param name="selfHarm">The score for the category &#39;self-harm&#39;. (required).</param>
        /// <param name="selfHarmIntent">The score for the category &#39;self-harm/intent&#39;. (required).</param>
        /// <param name="selfHarmInstructions">The score for the category &#39;self-harm/instructions&#39;. (required).</param>
        /// <param name="sexual">The score for the category &#39;sexual&#39;. (required).</param>
        /// <param name="sexualMinors">The score for the category &#39;sexual/minors&#39;. (required).</param>
        /// <param name="violence">The score for the category &#39;violence&#39;. (required).</param>
        /// <param name="violenceGraphic">The score for the category &#39;violence/graphic&#39;. (required).</param>
        public CreateModerationResponseResultsInnerCategoryScores(decimal hate = default(decimal), decimal hateThreatening = default(decimal), decimal harassment = default(decimal), decimal harassmentThreatening = default(decimal), decimal selfHarm = default(decimal), decimal selfHarmIntent = default(decimal), decimal selfHarmInstructions = default(decimal), decimal sexual = default(decimal), decimal sexualMinors = default(decimal), decimal violence = default(decimal), decimal violenceGraphic = default(decimal))
        {
            this.Hate = hate;
            this.HateThreatening = hateThreatening;
            this.Harassment = harassment;
            this.HarassmentThreatening = harassmentThreatening;
            this.SelfHarm = selfHarm;
            this.SelfHarmIntent = selfHarmIntent;
            this.SelfHarmInstructions = selfHarmInstructions;
            this.Sexual = sexual;
            this.SexualMinors = sexualMinors;
            this.Violence = violence;
            this.ViolenceGraphic = violenceGraphic;
        }

        /// <summary>
        /// The score for the category &#39;hate&#39;.
        /// </summary>
        /// <value>The score for the category &#39;hate&#39;.</value>
        [DataMember(Name = "hate", IsRequired = true, EmitDefaultValue = true)]
        public decimal Hate { get; set; }

        /// <summary>
        /// The score for the category &#39;hate/threatening&#39;.
        /// </summary>
        /// <value>The score for the category &#39;hate/threatening&#39;.</value>
        [DataMember(Name = "hate/threatening", IsRequired = true, EmitDefaultValue = true)]
        public decimal HateThreatening { get; set; }

        /// <summary>
        /// The score for the category &#39;harassment&#39;.
        /// </summary>
        /// <value>The score for the category &#39;harassment&#39;.</value>
        [DataMember(Name = "harassment", IsRequired = true, EmitDefaultValue = true)]
        public decimal Harassment { get; set; }

        /// <summary>
        /// The score for the category &#39;harassment/threatening&#39;.
        /// </summary>
        /// <value>The score for the category &#39;harassment/threatening&#39;.</value>
        [DataMember(Name = "harassment/threatening", IsRequired = true, EmitDefaultValue = true)]
        public decimal HarassmentThreatening { get; set; }

        /// <summary>
        /// The score for the category &#39;self-harm&#39;.
        /// </summary>
        /// <value>The score for the category &#39;self-harm&#39;.</value>
        [DataMember(Name = "self-harm", IsRequired = true, EmitDefaultValue = true)]
        public decimal SelfHarm { get; set; }

        /// <summary>
        /// The score for the category &#39;self-harm/intent&#39;.
        /// </summary>
        /// <value>The score for the category &#39;self-harm/intent&#39;.</value>
        [DataMember(Name = "self-harm/intent", IsRequired = true, EmitDefaultValue = true)]
        public decimal SelfHarmIntent { get; set; }

        /// <summary>
        /// The score for the category &#39;self-harm/instructions&#39;.
        /// </summary>
        /// <value>The score for the category &#39;self-harm/instructions&#39;.</value>
        [DataMember(Name = "self-harm/instructions", IsRequired = true, EmitDefaultValue = true)]
        public decimal SelfHarmInstructions { get; set; }

        /// <summary>
        /// The score for the category &#39;sexual&#39;.
        /// </summary>
        /// <value>The score for the category &#39;sexual&#39;.</value>
        [DataMember(Name = "sexual", IsRequired = true, EmitDefaultValue = true)]
        public decimal Sexual { get; set; }

        /// <summary>
        /// The score for the category &#39;sexual/minors&#39;.
        /// </summary>
        /// <value>The score for the category &#39;sexual/minors&#39;.</value>
        [DataMember(Name = "sexual/minors", IsRequired = true, EmitDefaultValue = true)]
        public decimal SexualMinors { get; set; }

        /// <summary>
        /// The score for the category &#39;violence&#39;.
        /// </summary>
        /// <value>The score for the category &#39;violence&#39;.</value>
        [DataMember(Name = "violence", IsRequired = true, EmitDefaultValue = true)]
        public decimal Violence { get; set; }

        /// <summary>
        /// The score for the category &#39;violence/graphic&#39;.
        /// </summary>
        /// <value>The score for the category &#39;violence/graphic&#39;.</value>
        [DataMember(Name = "violence/graphic", IsRequired = true, EmitDefaultValue = true)]
        public decimal ViolenceGraphic { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateModerationResponseResultsInnerCategoryScores {\n");
            sb.Append("  Hate: ").Append(Hate).Append("\n");
            sb.Append("  HateThreatening: ").Append(HateThreatening).Append("\n");
            sb.Append("  Harassment: ").Append(Harassment).Append("\n");
            sb.Append("  HarassmentThreatening: ").Append(HarassmentThreatening).Append("\n");
            sb.Append("  SelfHarm: ").Append(SelfHarm).Append("\n");
            sb.Append("  SelfHarmIntent: ").Append(SelfHarmIntent).Append("\n");
            sb.Append("  SelfHarmInstructions: ").Append(SelfHarmInstructions).Append("\n");
            sb.Append("  Sexual: ").Append(Sexual).Append("\n");
            sb.Append("  SexualMinors: ").Append(SexualMinors).Append("\n");
            sb.Append("  Violence: ").Append(Violence).Append("\n");
            sb.Append("  ViolenceGraphic: ").Append(ViolenceGraphic).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
