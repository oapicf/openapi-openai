/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// The &#x60;fine_tuning.job.checkpoint&#x60; object represents a model checkpoint for a fine-tuning job that is ready to use. 
    /// </summary>
    [DataContract(Name = "FineTuningJobCheckpoint")]
    public partial class FineTuningJobCheckpoint : IValidatableObject
    {
        /// <summary>
        /// The object type, which is always \&quot;fine_tuning.job.checkpoint\&quot;.
        /// </summary>
        /// <value>The object type, which is always \&quot;fine_tuning.job.checkpoint\&quot;.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectEnum
        {
            /// <summary>
            /// Enum FineTuningJobCheckpoint for value: fine_tuning.job.checkpoint
            /// </summary>
            [EnumMember(Value = "fine_tuning.job.checkpoint")]
            FineTuningJobCheckpoint = 1
        }


        /// <summary>
        /// The object type, which is always \&quot;fine_tuning.job.checkpoint\&quot;.
        /// </summary>
        /// <value>The object type, which is always \&quot;fine_tuning.job.checkpoint\&quot;.</value>
        [DataMember(Name = "object", IsRequired = true, EmitDefaultValue = true)]
        public ObjectEnum Object { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="FineTuningJobCheckpoint" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FineTuningJobCheckpoint() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FineTuningJobCheckpoint" /> class.
        /// </summary>
        /// <param name="id">The checkpoint identifier, which can be referenced in the API endpoints. (required).</param>
        /// <param name="createdAt">The Unix timestamp (in seconds) for when the checkpoint was created. (required).</param>
        /// <param name="fineTunedModelCheckpoint">The name of the fine-tuned checkpoint model that is created. (required).</param>
        /// <param name="stepNumber">The step number that the checkpoint was created at. (required).</param>
        /// <param name="metrics">metrics (required).</param>
        /// <param name="fineTuningJobId">The name of the fine-tuning job that this checkpoint was created from. (required).</param>
        /// <param name="varObject">The object type, which is always \&quot;fine_tuning.job.checkpoint\&quot;. (required).</param>
        public FineTuningJobCheckpoint(string id = default(string), int createdAt = default(int), string fineTunedModelCheckpoint = default(string), int stepNumber = default(int), FineTuningJobCheckpointMetrics metrics = default(FineTuningJobCheckpointMetrics), string fineTuningJobId = default(string), ObjectEnum varObject = default(ObjectEnum))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for FineTuningJobCheckpoint and cannot be null");
            }
            this.Id = id;
            this.CreatedAt = createdAt;
            // to ensure "fineTunedModelCheckpoint" is required (not null)
            if (fineTunedModelCheckpoint == null)
            {
                throw new ArgumentNullException("fineTunedModelCheckpoint is a required property for FineTuningJobCheckpoint and cannot be null");
            }
            this.FineTunedModelCheckpoint = fineTunedModelCheckpoint;
            this.StepNumber = stepNumber;
            // to ensure "metrics" is required (not null)
            if (metrics == null)
            {
                throw new ArgumentNullException("metrics is a required property for FineTuningJobCheckpoint and cannot be null");
            }
            this.Metrics = metrics;
            // to ensure "fineTuningJobId" is required (not null)
            if (fineTuningJobId == null)
            {
                throw new ArgumentNullException("fineTuningJobId is a required property for FineTuningJobCheckpoint and cannot be null");
            }
            this.FineTuningJobId = fineTuningJobId;
            this.Object = varObject;
        }

        /// <summary>
        /// The checkpoint identifier, which can be referenced in the API endpoints.
        /// </summary>
        /// <value>The checkpoint identifier, which can be referenced in the API endpoints.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the checkpoint was created.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the checkpoint was created.</value>
        [DataMember(Name = "created_at", IsRequired = true, EmitDefaultValue = true)]
        public int CreatedAt { get; set; }

        /// <summary>
        /// The name of the fine-tuned checkpoint model that is created.
        /// </summary>
        /// <value>The name of the fine-tuned checkpoint model that is created.</value>
        [DataMember(Name = "fine_tuned_model_checkpoint", IsRequired = true, EmitDefaultValue = true)]
        public string FineTunedModelCheckpoint { get; set; }

        /// <summary>
        /// The step number that the checkpoint was created at.
        /// </summary>
        /// <value>The step number that the checkpoint was created at.</value>
        [DataMember(Name = "step_number", IsRequired = true, EmitDefaultValue = true)]
        public int StepNumber { get; set; }

        /// <summary>
        /// Gets or Sets Metrics
        /// </summary>
        [DataMember(Name = "metrics", IsRequired = true, EmitDefaultValue = true)]
        public FineTuningJobCheckpointMetrics Metrics { get; set; }

        /// <summary>
        /// The name of the fine-tuning job that this checkpoint was created from.
        /// </summary>
        /// <value>The name of the fine-tuning job that this checkpoint was created from.</value>
        [DataMember(Name = "fine_tuning_job_id", IsRequired = true, EmitDefaultValue = true)]
        public string FineTuningJobId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FineTuningJobCheckpoint {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  FineTunedModelCheckpoint: ").Append(FineTunedModelCheckpoint).Append("\n");
            sb.Append("  StepNumber: ").Append(StepNumber).Append("\n");
            sb.Append("  Metrics: ").Append(Metrics).Append("\n");
            sb.Append("  FineTuningJobId: ").Append(FineTuningJobId).Append("\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
