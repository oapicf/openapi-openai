/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// SubmitToolOutputsRunRequestToolOutputsInner
    /// </summary>
    [DataContract(Name = "SubmitToolOutputsRunRequest_tool_outputs_inner")]
    public partial class SubmitToolOutputsRunRequestToolOutputsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SubmitToolOutputsRunRequestToolOutputsInner" /> class.
        /// </summary>
        /// <param name="toolCallId">The ID of the tool call in the &#x60;required_action&#x60; object within the run object the output is being submitted for..</param>
        /// <param name="output">The output of the tool call to be submitted to continue the run..</param>
        public SubmitToolOutputsRunRequestToolOutputsInner(string toolCallId = default(string), string output = default(string))
        {
            this.ToolCallId = toolCallId;
            this.Output = output;
        }

        /// <summary>
        /// The ID of the tool call in the &#x60;required_action&#x60; object within the run object the output is being submitted for.
        /// </summary>
        /// <value>The ID of the tool call in the &#x60;required_action&#x60; object within the run object the output is being submitted for.</value>
        [DataMember(Name = "tool_call_id", EmitDefaultValue = false)]
        public string ToolCallId { get; set; }

        /// <summary>
        /// The output of the tool call to be submitted to continue the run.
        /// </summary>
        /// <value>The output of the tool call to be submitted to continue the run.</value>
        [DataMember(Name = "output", EmitDefaultValue = false)]
        public string Output { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SubmitToolOutputsRunRequestToolOutputsInner {\n");
            sb.Append("  ToolCallId: ").Append(ToolCallId).Append("\n");
            sb.Append("  Output: ").Append(Output).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
