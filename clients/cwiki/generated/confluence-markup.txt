h1. OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

*Version:* 2.0.0

----

{expand:Table of Contents - Click to expand}
{toc:printable=true|style=square|minLevel=2|maxLevel=3|type=list|outline=false|include=.*}
{expand}

h2. Endpoints


h3. cancelRun
{panel:title=cancelRun|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Cancels a run that is &#x60;in_progress&#x60;.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/runs/{run_id}/cancel{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread to which this run belongs. | String | (/) |null |  |  ||run_id |The ID of the run to cancel. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | RunObject |
    	|| Response Model | [RunObject Model|#RunObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/RunObject"
      }
    }
  }
}{code} |
       

{panel}



h3. createAssistant
{panel:title=createAssistant|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Create an assistant with a model and instructions.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/assistants{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateAssistantRequest | | CreateAssistantRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | AssistantObject |
    	|| Response Model | [AssistantObject Model|#AssistantObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/AssistantObject"
      }
    }
  }
}{code} |
       

{panel}



h3. createAssistantFile
{panel:title=createAssistantFile|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Create an assistant file by attaching a [File\](/docs/api-reference/files) to an [assistant\](/docs/api-reference/assistants).
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/assistants/{assistant_id}/files{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |assistant_id |The ID of the assistant for which to create a File. | String | (/) |null |  |  |

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateAssistantFileRequest | | CreateAssistantFileRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | AssistantFileObject |
    	|| Response Model | [AssistantFileObject Model|#AssistantFileObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/AssistantFileObject"
      }
    }
  }
}{code} |
       

{panel}



h3. createMessage
{panel:title=createMessage|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Create a message.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/messages{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the [thread\](/docs/api-reference/threads) to create a message for. | String | (/) |null |  |  |

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateMessageRequest | | CreateMessageRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | MessageObject |
    	|| Response Model | [MessageObject Model|#MessageObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/MessageObject"
      }
    }
  }
}{code} |
       

{panel}



h3. createRun
{panel:title=createRun|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Create a run.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/runs{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread to run. | String | (/) |null |  |  |

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateRunRequest | | CreateRunRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | RunObject |
    	|| Response Model | [RunObject Model|#RunObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/RunObject"
      }
    }
  }
}{code} |
       

{panel}



h3. createThread
{panel:title=createThread|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Create a thread.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateThreadRequest | | CreateThreadRequest | (x) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ThreadObject |
    	|| Response Model | [ThreadObject Model|#ThreadObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ThreadObject"
      }
    }
  }
}{code} |
       

{panel}



h3. createThreadAndRun
{panel:title=createThreadAndRun|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Create a thread and run it in one request.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/runs{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateThreadAndRunRequest | | CreateThreadAndRunRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | RunObject |
    	|| Response Model | [RunObject Model|#RunObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/RunObject"
      }
    }
  }
}{code} |
       

{panel}



h3. deleteAssistant
{panel:title=deleteAssistant|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Delete an assistant.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=delete|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/assistants/{assistant_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |assistant_id |The ID of the assistant to delete. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | DeleteAssistantResponse |
    	|| Response Model | [DeleteAssistantResponse Model|#DeleteAssistantResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/DeleteAssistantResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. deleteAssistantFile
{panel:title=deleteAssistantFile|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Delete an assistant file.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=delete|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/assistants/{assistant_id}/files/{file_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |assistant_id |The ID of the assistant that the file belongs to. | String | (/) |null |  |  ||file_id |The ID of the file to delete. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | DeleteAssistantFileResponse |
    	|| Response Model | [DeleteAssistantFileResponse Model|#DeleteAssistantFileResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/DeleteAssistantFileResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. deleteThread
{panel:title=deleteThread|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Delete a thread.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=delete|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread to delete. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | DeleteThreadResponse |
    	|| Response Model | [DeleteThreadResponse Model|#DeleteThreadResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/DeleteThreadResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. getAssistant
{panel:title=getAssistant|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Retrieves an assistant.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/assistants/{assistant_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |assistant_id |The ID of the assistant to retrieve. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | AssistantObject |
    	|| Response Model | [AssistantObject Model|#AssistantObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/AssistantObject"
      }
    }
  }
}{code} |
       

{panel}



h3. getAssistantFile
{panel:title=getAssistantFile|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Retrieves an AssistantFile.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/assistants/{assistant_id}/files/{file_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |assistant_id |The ID of the assistant who the file belongs to. | String | (/) |null |  |  ||file_id |The ID of the file we&#39;re getting. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | AssistantFileObject |
    	|| Response Model | [AssistantFileObject Model|#AssistantFileObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/AssistantFileObject"
      }
    }
  }
}{code} |
       

{panel}



h3. getMessage
{panel:title=getMessage|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Retrieve a message.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/messages/{message_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the [thread\](/docs/api-reference/threads) to which this message belongs. | String | (/) |null |  |  ||message_id |The ID of the message to retrieve. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | MessageObject |
    	|| Response Model | [MessageObject Model|#MessageObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/MessageObject"
      }
    }
  }
}{code} |
       

{panel}



h3. getMessageFile
{panel:title=getMessageFile|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Retrieves a message file.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/messages/{message_id}/files/{file_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread to which the message and File belong. | String | (/) |null |  |  ||message_id |The ID of the message the file belongs to. | String | (/) |null |  |  ||file_id |The ID of the file being retrieved. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | MessageFileObject |
    	|| Response Model | [MessageFileObject Model|#MessageFileObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/MessageFileObject"
      }
    }
  }
}{code} |
       

{panel}



h3. getRun
{panel:title=getRun|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Retrieves a run.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/runs/{run_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the [thread\](/docs/api-reference/threads) that was run. | String | (/) |null |  |  ||run_id |The ID of the run to retrieve. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | RunObject |
    	|| Response Model | [RunObject Model|#RunObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/RunObject"
      }
    }
  }
}{code} |
       

{panel}



h3. getRunStep
{panel:title=getRunStep|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Retrieves a run step.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/runs/{run_id}/steps/{step_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread to which the run and run step belongs. | String | (/) |null |  |  ||run_id |The ID of the run to which the run step belongs. | String | (/) |null |  |  ||step_id |The ID of the run step to retrieve. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | RunStepObject |
    	|| Response Model | [RunStepObject Model|#RunStepObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/RunStepObject"
      }
    }
  }
}{code} |
       

{panel}



h3. getThread
{panel:title=getThread|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Retrieves a thread.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread to retrieve. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ThreadObject |
    	|| Response Model | [ThreadObject Model|#ThreadObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ThreadObject"
      }
    }
  }
}{code} |
       

{panel}



h3. listAssistantFiles
{panel:title=listAssistantFiles|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Returns a list of assistant files.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/assistants/{assistant_id}/files{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |assistant_id |The ID of the assistant the file belongs to. | String | (/) |null |  |  |



h5. Query Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |limit |A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. | Integer | (x) |20 |  |  ||order |Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order. | String | (x) |desc |  | [asc, desc] ||after |A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list. | String | (x) |null |  |  ||before |A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list. | String | (x) |null |  |  |
----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListAssistantFilesResponse |
    	|| Response Model | [ListAssistantFilesResponse Model|#ListAssistantFilesResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListAssistantFilesResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. listAssistants
{panel:title=listAssistants|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Returns a list of assistants.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/assistants{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters



h5. Query Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |limit |A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. | Integer | (x) |20 |  |  ||order |Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order. | String | (x) |desc |  | [asc, desc] ||after |A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list. | String | (x) |null |  |  ||before |A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list. | String | (x) |null |  |  |
----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListAssistantsResponse |
    	|| Response Model | [ListAssistantsResponse Model|#ListAssistantsResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListAssistantsResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. listMessageFiles
{panel:title=listMessageFiles|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Returns a list of message files.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/messages/{message_id}/files{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread that the message and files belong to. | String | (/) |null |  |  ||message_id |The ID of the message that the files belongs to. | String | (/) |null |  |  |



h5. Query Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |limit |A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. | Integer | (x) |20 |  |  ||order |Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order. | String | (x) |desc |  | [asc, desc] ||after |A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list. | String | (x) |null |  |  ||before |A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list. | String | (x) |null |  |  |
----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListMessageFilesResponse |
    	|| Response Model | [ListMessageFilesResponse Model|#ListMessageFilesResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListMessageFilesResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. listMessages
{panel:title=listMessages|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Returns a list of messages for a given thread.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/messages{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the [thread\](/docs/api-reference/threads) the messages belong to. | String | (/) |null |  |  |



h5. Query Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |limit |A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. | Integer | (x) |20 |  |  ||order |Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order. | String | (x) |desc |  | [asc, desc] ||after |A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list. | String | (x) |null |  |  ||before |A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list. | String | (x) |null |  |  ||run_id |Filter messages by the run ID that generated them. | String | (x) |null |  |  |
----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListMessagesResponse |
    	|| Response Model | [ListMessagesResponse Model|#ListMessagesResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListMessagesResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. listRunSteps
{panel:title=listRunSteps|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Returns a list of run steps belonging to a run.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/runs/{run_id}/steps{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread the run and run steps belong to. | String | (/) |null |  |  ||run_id |The ID of the run the run steps belong to. | String | (/) |null |  |  |



h5. Query Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |limit |A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. | Integer | (x) |20 |  |  ||order |Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order. | String | (x) |desc |  | [asc, desc] ||after |A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list. | String | (x) |null |  |  ||before |A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list. | String | (x) |null |  |  |
----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListRunStepsResponse |
    	|| Response Model | [ListRunStepsResponse Model|#ListRunStepsResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListRunStepsResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. listRuns
{panel:title=listRuns|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Returns a list of runs belonging to a thread.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/runs{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread the run belongs to. | String | (/) |null |  |  |



h5. Query Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |limit |A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. | Integer | (x) |20 |  |  ||order |Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order. | String | (x) |desc |  | [asc, desc] ||after |A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list. | String | (x) |null |  |  ||before |A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list. | String | (x) |null |  |  |
----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListRunsResponse |
    	|| Response Model | [ListRunsResponse Model|#ListRunsResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListRunsResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. modifyAssistant
{panel:title=modifyAssistant|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Modifies an assistant.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/assistants/{assistant_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |assistant_id |The ID of the assistant to modify. | String | (/) |null |  |  |

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |ModifyAssistantRequest | | ModifyAssistantRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | AssistantObject |
    	|| Response Model | [AssistantObject Model|#AssistantObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/AssistantObject"
      }
    }
  }
}{code} |
       

{panel}



h3. modifyMessage
{panel:title=modifyMessage|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Modifies a message.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/messages/{message_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread to which this message belongs. | String | (/) |null |  |  ||message_id |The ID of the message to modify. | String | (/) |null |  |  |

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |ModifyMessageRequest | | ModifyMessageRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | MessageObject |
    	|| Response Model | [MessageObject Model|#MessageObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/MessageObject"
      }
    }
  }
}{code} |
       

{panel}



h3. modifyRun
{panel:title=modifyRun|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Modifies a run.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/runs/{run_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the [thread\](/docs/api-reference/threads) that was run. | String | (/) |null |  |  ||run_id |The ID of the run to modify. | String | (/) |null |  |  |

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |ModifyRunRequest | | ModifyRunRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | RunObject |
    	|| Response Model | [RunObject Model|#RunObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/RunObject"
      }
    }
  }
}{code} |
       

{panel}



h3. modifyThread
{panel:title=modifyThread|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Modifies a thread.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the thread to modify. Only the &#x60;metadata&#x60; can be modified. | String | (/) |null |  |  |

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |ModifyThreadRequest | | ModifyThreadRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ThreadObject |
    	|| Response Model | [ThreadObject Model|#ThreadObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ThreadObject"
      }
    }
  }
}{code} |
       

{panel}



h3. submitToolOuputsToRun
{panel:title=submitToolOuputsToRun|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* When a run has the &#x60;status: &quot;requires_action&quot;&#x60; and &#x60;required_action.type&#x60; is &#x60;submit_tool_outputs&#x60;, this endpoint can be used to submit the outputs from the tool calls once they&#39;re all completed. All outputs must be submitted in a single request.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/threads/{thread_id}/runs/{run_id}/submit_tool_outputs{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |thread_id |The ID of the [thread\](/docs/api-reference/threads) to which this run belongs. | String | (/) |null |  |  ||run_id |The ID of the run that requires the tool output submission. | String | (/) |null |  |  |

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |SubmitToolOutputsRunRequest | | SubmitToolOutputsRunRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | RunObject |
    	|| Response Model | [RunObject Model|#RunObjectModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/RunObject"
      }
    }
  }
}{code} |
       

{panel}



h3. createSpeech
{panel:title=createSpeech|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Generates audio from the input text.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/audio/speech{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/octet-stream {noformat} |
----
h4. Parameters

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateSpeechRequest | | CreateSpeechRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | File |
    	|| Response Model | [File Model|#FileModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "headers" : {
    "Transfer-Encoding" : {
      "description" : "chunked",
      "style" : "simple",
      "explode" : false,
      "schema" : {
        "type" : "string"
      }
    }
  },
  "content" : {
    "application/octet-stream" : {
      "schema" : {
        "type" : "string",
        "format" : "binary"
      }
    }
  }
}{code} |
       

{panel}



h3. createTranscription
{panel:title=createTranscription|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Transcribes audio into the input language.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/audio/transcriptions{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | createTranscription_200_response |
    	|| Response Model | [createTranscription_200_response Model|#createTranscription_200_responseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/createTranscription_200_response"
      }
    }
  }
}{code} |
       

{panel}



h3. createTranslation
{panel:title=createTranslation|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Translates audio into English.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/audio/translations{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | createTranslation_200_response |
    	|| Response Model | [createTranslation_200_response Model|#createTranslation_200_responseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/createTranslation_200_response"
      }
    }
  }
}{code} |
       

{panel}



h3. createChatCompletion
{panel:title=createChatCompletion|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Creates a model response for the given chat conversation.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/chat/completions{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateChatCompletionRequest | | CreateChatCompletionRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | CreateChatCompletionResponse |
    	|| Response Model | [CreateChatCompletionResponse Model|#CreateChatCompletionResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/CreateChatCompletionResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. createCompletion
{panel:title=createCompletion|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Creates a completion for the provided prompt and parameters.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/completions{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateCompletionRequest | | CreateCompletionRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | CreateCompletionResponse |
    	|| Response Model | [CreateCompletionResponse Model|#CreateCompletionResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/CreateCompletionResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. createEmbedding
{panel:title=createEmbedding|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Creates an embedding vector representing the input text.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/embeddings{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateEmbeddingRequest | | CreateEmbeddingRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | CreateEmbeddingResponse |
    	|| Response Model | [CreateEmbeddingResponse Model|#CreateEmbeddingResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/CreateEmbeddingResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. createFile
{panel:title=createFile|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.

The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide\](/docs/assistants/tools) to learn more about the types of files supported. The Fine-tuning API only supports &#x60;.jsonl&#x60; files.

Please [contact us\](https://help.openai.com/) if you need to increase these storage limits.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/files{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | OpenAIFile |
    	|| Response Model | [OpenAIFile Model|#OpenAIFileModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/OpenAIFile"
      }
    }
  }
}{code} |
       

{panel}



h3. deleteFile
{panel:title=deleteFile|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Delete a file.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=delete|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/files/{file_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |file_id |The ID of the file to use for this request. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | DeleteFileResponse |
    	|| Response Model | [DeleteFileResponse Model|#DeleteFileResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/DeleteFileResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. downloadFile
{panel:title=downloadFile|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Returns the contents of the specified file.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/files/{file_id}/content{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |file_id |The ID of the file to use for this request. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | String |
    	|| Response Model | [String Model|#StringModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "type" : "string"
      }
    }
  }
}{code} |
       

{panel}



h3. listFiles
{panel:title=listFiles|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Returns a list of files that belong to the user&#39;s organization.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/files{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters



h5. Query Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |purpose |Only return files with the given purpose. | String | (x) |null |  |  |
----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListFilesResponse |
    	|| Response Model | [ListFilesResponse Model|#ListFilesResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListFilesResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. retrieveFile
{panel:title=retrieveFile|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Returns information about a specific file.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/files/{file_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |file_id |The ID of the file to use for this request. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | OpenAIFile |
    	|| Response Model | [OpenAIFile Model|#OpenAIFileModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/OpenAIFile"
      }
    }
  }
}{code} |
       

{panel}



h3. cancelFineTuningJob
{panel:title=cancelFineTuningJob|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Immediately cancel a fine-tune job.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/fine_tuning/jobs/{fine_tuning_job_id}/cancel{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |fine_tuning_job_id |The ID of the fine-tuning job to cancel. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | FineTuningJob |
    	|| Response Model | [FineTuningJob Model|#FineTuningJobModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/FineTuningJob"
      }
    }
  }
}{code} |
       

{panel}



h3. createFineTuningJob
{panel:title=createFineTuningJob|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Creates a fine-tuning job which begins the process of creating a new model from a given dataset.

Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.

[Learn more about fine-tuning\](/docs/guides/fine-tuning)
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/fine_tuning/jobs{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateFineTuningJobRequest | | CreateFineTuningJobRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | FineTuningJob |
    	|| Response Model | [FineTuningJob Model|#FineTuningJobModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/FineTuningJob"
      }
    }
  }
}{code} |
       

{panel}



h3. listFineTuningEvents
{panel:title=listFineTuningEvents|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Get status updates for a fine-tuning job.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/fine_tuning/jobs/{fine_tuning_job_id}/events{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |fine_tuning_job_id |The ID of the fine-tuning job to get events for. | String | (/) |null |  |  |



h5. Query Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |after |Identifier for the last event from the previous pagination request. | String | (x) |null |  |  ||limit |Number of events to retrieve. | Integer | (x) |20 |  |  |
----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListFineTuningJobEventsResponse |
    	|| Response Model | [ListFineTuningJobEventsResponse Model|#ListFineTuningJobEventsResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListFineTuningJobEventsResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. listFineTuningJobCheckpoints
{panel:title=listFineTuningJobCheckpoints|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* List checkpoints for a fine-tuning job.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |fine_tuning_job_id |The ID of the fine-tuning job to get checkpoints for. | String | (/) |null |  |  |



h5. Query Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |after |Identifier for the last checkpoint ID from the previous pagination request. | String | (x) |null |  |  ||limit |Number of checkpoints to retrieve. | Integer | (x) |10 |  |  |
----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListFineTuningJobCheckpointsResponse |
    	|| Response Model | [ListFineTuningJobCheckpointsResponse Model|#ListFineTuningJobCheckpointsResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListFineTuningJobCheckpointsResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. listPaginatedFineTuningJobs
{panel:title=listPaginatedFineTuningJobs|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* List your organization&#39;s fine-tuning jobs
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/fine_tuning/jobs{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters



h5. Query Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |after |Identifier for the last job from the previous pagination request. | String | (x) |null |  |  ||limit |Number of fine-tuning jobs to retrieve. | Integer | (x) |20 |  |  |
----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListPaginatedFineTuningJobsResponse |
    	|| Response Model | [ListPaginatedFineTuningJobsResponse Model|#ListPaginatedFineTuningJobsResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListPaginatedFineTuningJobsResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. retrieveFineTuningJob
{panel:title=retrieveFineTuningJob|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Get info about a fine-tuning job.

[Learn more about fine-tuning\](/docs/guides/fine-tuning)
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/fine_tuning/jobs/{fine_tuning_job_id}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |fine_tuning_job_id |The ID of the fine-tuning job. | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | FineTuningJob |
    	|| Response Model | [FineTuningJob Model|#FineTuningJobModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/FineTuningJob"
      }
    }
  }
}{code} |
       

{panel}



h3. createImage
{panel:title=createImage|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Creates an image given a prompt.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/images/generations{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateImageRequest | | CreateImageRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ImagesResponse |
    	|| Response Model | [ImagesResponse Model|#ImagesResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ImagesResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. createImageEdit
{panel:title=createImageEdit|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Creates an edited or extended image given an original image and a prompt.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/images/edits{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ImagesResponse |
    	|| Response Model | [ImagesResponse Model|#ImagesResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ImagesResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. createImageVariation
{panel:title=createImageVariation|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Creates a variation of a given image.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/images/variations{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ImagesResponse |
    	|| Response Model | [ImagesResponse Model|#ImagesResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ImagesResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. deleteModel
{panel:title=deleteModel|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=delete|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/models/{model}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |model |The model to delete | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | DeleteModelResponse |
    	|| Response Model | [DeleteModelResponse Model|#DeleteModelResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/DeleteModelResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. listModels
{panel:title=listModels|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Lists the currently available models, and provides basic information about each one such as the owner and availability.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/models{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | ListModelsResponse |
    	|| Response Model | [ListModelsResponse Model|#ListModelsResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/ListModelsResponse"
      }
    }
  }
}{code} |
       

{panel}



h3. retrieveModel
{panel:title=retrieveModel|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=get|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/models/{model}{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters
h5. Path Parameters
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |model |The ID of the model to use for this request | String | (/) |null |  |  |



----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | Model |
    	|| Response Model | [Model Model|#ModelModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/Model"
      }
    }
  }
}{code} |
       

{panel}



h3. createModeration
{panel:title=createModeration|borderStyle=solid|borderColor=#003b6f|titleBGColor=#003b6f|titleColor=#a6b8c7|bgColor=#ffffff}
    *Summary:* Classifies if text is potentially harmful.
    *Description:* *No Description*

	|| HttpMethod | {status:colour=Yellow|title=post|subtle=false} |
    || Protocol | {noformat:nopanel=true}https{noformat} |
    || Path | {noformat:nopanel=true}/moderations{noformat} |
    || Base Path | {noformat:nopanel=true}https://api.openai.com/v1{noformat} |
    || Produces | {noformat:nopanel=true}application/json {noformat} |
----
h4. Parameters

h5. Body Parameter
        ||Name||Description||Type||Required||Default||Pattern||Enum||Example||
        |CreateModerationRequest | | CreateModerationRequest | (/) | |  |  |


----
h4. Responses

    	|| Status Code | {status:colour=Green|title=200|subtle=false} |
    	|| Message | OK |
    	|| Response Type | CreateModerationResponse |
    	|| Response Model | [CreateModerationResponse Model|#CreateModerationResponseModelAnchor|Jump to model] |
    	|| Response Schema | {code:collapse=true}{
  "description" : "OK",
  "content" : {
    "application/json" : {
      "schema" : {
        "$ref" : "#/components/schemas/CreateModerationResponse"
      }
    }
  }
}{code} |
       

{panel}


{anchor:models}
h2. Models

        {anchor:AssistantFileObjectModelAnchor}
        h3. AssistantFileObject

        A list of [Files\](/docs/api-reference/files) attached to an `assistant`.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The identifier, which can be referenced in API endpoints. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;assistant.file&#x60;. |  [assistant.file]  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the assistant file was created. |  | null
         |assistant_id |(/) |{noformat:nopanel=true}String{noformat} | The assistant ID that the file is attached to. |  | null
         
        {anchor:AssistantObjectModelAnchor}
        h3. AssistantObject

        Represents an `assistant` that can call the model and use tools.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The identifier, which can be referenced in API endpoints. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;assistant&#x60;. |  [assistant]  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the assistant was created. |  | null
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the assistant. The maximum length is 256 characters. |  | null
         |description |(/) |{noformat:nopanel=true}String{noformat} | The description of the assistant. The maximum length is 512 characters. |  | null
         |model |(/) |{noformat:nopanel=true}String{noformat} | ID of the model to use. You can use the [List models\](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview\](/docs/models/overview) for descriptions of them. |  | null
         |instructions |(/) |{noformat:nopanel=true}String{noformat} | The system instructions that the assistant uses. The maximum length is 256,000 characters. |  | null
         |tools |(/) |{noformat:nopanel=true}array[AssistantObject_tools_inner]{noformat} | A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types &#x60;code_interpreter&#x60;, &#x60;retrieval&#x60;, or &#x60;function&#x60;. |  | null
         |file_ids |(/) |{noformat:nopanel=true}array[String]{noformat} | A list of [file\](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order. |  | null
         |metadata |(/) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         
        {anchor:AssistantObjectToolsInnerModelAnchor}
        h3. AssistantObjectToolsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool being defined: &#x60;code_interpreter&#x60; |  [code_interpreter, retrieval, function]  | null
         |function |(/) |{noformat:nopanel=true}FunctionObject{noformat} |  |  | null
         
        {anchor:AssistantStreamEventModelAnchor}
        h3. AssistantStreamEvent

        Represents an event emitted when streaming a Run.

Each event in a server-sent events stream has an `event` and `data` property:

```
event: thread.created
data: \{"id": "thread_123", "object": "thread", ...\}
```

We emit events whenever a new object is created, transitions to a new state, or is being
streamed in parts (deltas). For example, we emit `thread.run.created` when a new run
is created, `thread.run.completed` when a run completes, and so on. When an Assistant chooses
to create a message during a run, we emit a `thread.message.created event`, a
`thread.message.in_progress` event, many `thread.message.delta` events, and finally a
`thread.message.completed` event.

We may add additional events over time, so we recommend handling unknown events gracefully
in your code. See the [Assistants API quickstart\](/docs/assistants/overview) to learn how to
integrate the Assistants API with streaming.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [done]  | null
         |data |(/) |{noformat:nopanel=true}String{noformat} |  |  [[DONE]]  | null
         
        {anchor:AssistantToolsCodeModelAnchor}
        h3. AssistantToolsCode

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool being defined: &#x60;code_interpreter&#x60; |  [code_interpreter]  | null
         
        {anchor:AssistantToolsFunctionModelAnchor}
        h3. AssistantToolsFunction

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool being defined: &#x60;function&#x60; |  [function]  | null
         |function |(/) |{noformat:nopanel=true}FunctionObject{noformat} |  |  | null
         
        {anchor:AssistantToolsRetrievalModelAnchor}
        h3. AssistantToolsRetrieval

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool being defined: &#x60;retrieval&#x60; |  [retrieval]  | null
         
        {anchor:AssistantsApiNamedToolChoiceModelAnchor}
        h3. AssistantsApiNamedToolChoice

        Specifies a tool the model should use. Use to force the model to call a specific tool.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the tool. If type is &#x60;function&#x60;, the function name must be set |  [function, code_interpreter, retrieval]  | null
         |function |(x) |{noformat:nopanel=true}ChatCompletionNamedToolChoice_function{noformat} |  |  | null
         
        {anchor:AssistantsApiResponseFormatModelAnchor}
        h3. AssistantsApiResponseFormat

        An object describing the expected output of the model. If `json_object` only `function` type `tools` are allowed to be passed to the Run. If `text` the model can return text or any value needed.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(x) |{noformat:nopanel=true}String{noformat} | Must be one of &#x60;text&#x60; or &#x60;json_object&#x60;. |  [text, json_object]  | json_object
         
        {anchor:AssistantsApiResponseFormatOptionModelAnchor}
        h3. AssistantsApiResponseFormatOption

        Specifies the format that the model must output. Compatible with [GPT-4 Turbo\](/docs/models/gpt-4-and-gpt-4-turbo) and all GPT-3.5 Turbo models newer than `gpt-3.5-turbo-1106`.

Setting to `\{ "type": "json_object" \}` enables JSON mode, which guarantees the message the model generates is valid JSON.

**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if `finish_reason="length"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(x) |{noformat:nopanel=true}String{noformat} | Must be one of &#x60;text&#x60; or &#x60;json_object&#x60;. |  [text, json_object]  | json_object
         
        {anchor:AssistantsApiToolChoiceOptionModelAnchor}
        h3. AssistantsApiToolChoiceOption

        Controls which (if any) tool is called by the model.
`none` means the model will not call any tools and instead generates a message.
`auto` is the default value and means the model can pick between generating a message or calling a tool.
Specifying a particular tool like `\{"type": "TOOL_TYPE"\}` or `\{"type": "function", "function": \{"name": "my_function"\}\}` forces the model to call that tool.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the tool. If type is &#x60;function&#x60;, the function name must be set |  [function, code_interpreter, retrieval]  | null
         |function |(x) |{noformat:nopanel=true}ChatCompletionNamedToolChoice_function{noformat} |  |  | null
         
        {anchor:ChatCompletionFunctionCallOptionModelAnchor}
        h3. ChatCompletionFunctionCallOption

        Specifying a particular function via `\{"name": "my_function"\}` forces the model to call that function.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function to call. |  | null
         
        {anchor:ChatCompletionFunctionsModelAnchor}
        h3. ChatCompletionFunctions

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |description |(x) |{noformat:nopanel=true}String{noformat} | A description of what the function does, used by the model to choose when and how to call the function. |  | null
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64. |  | null
         |parameters |(x) |{noformat:nopanel=true}map[String, oas_any_type_not_mapped]{noformat} | The parameters the functions accepts, described as a JSON Schema object. See the [guide\](/docs/guides/text-generation/function-calling) for examples, and the [JSON Schema reference\](https://json-schema.org/understanding-json-schema/) for documentation about the format. 

Omitting &#x60;parameters&#x60; defines a function with an empty parameter list. |  | null
         
        {anchor:ChatCompletionMessageToolCallModelAnchor}
        h3. ChatCompletionMessageToolCall

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the tool call. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the tool. Currently, only &#x60;function&#x60; is supported. |  [function]  | null
         |function |(/) |{noformat:nopanel=true}ChatCompletionMessageToolCall_function{noformat} |  |  | null
         
        {anchor:ChatCompletionMessageToolCallChunkModelAnchor}
        h3. ChatCompletionMessageToolCallChunk

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |id |(x) |{noformat:nopanel=true}String{noformat} | The ID of the tool call. |  | null
         |type |(x) |{noformat:nopanel=true}String{noformat} | The type of the tool. Currently, only &#x60;function&#x60; is supported. |  [function]  | null
         |function |(x) |{noformat:nopanel=true}ChatCompletionMessageToolCallChunk_function{noformat} |  |  | null
         
        {anchor:ChatCompletionMessageToolCallChunkFunctionModelAnchor}
        h3. ChatCompletionMessageToolCallChunkFunction

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |name |(x) |{noformat:nopanel=true}String{noformat} | The name of the function to call. |  | null
         |arguments |(x) |{noformat:nopanel=true}String{noformat} | The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function. |  | null
         
        {anchor:ChatCompletionMessageToolCallFunctionModelAnchor}
        h3. ChatCompletionMessageToolCallFunction

        The function that the model called.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function to call. |  | null
         |arguments |(/) |{noformat:nopanel=true}String{noformat} | The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function. |  | null
         
        {anchor:ChatCompletionNamedToolChoiceModelAnchor}
        h3. ChatCompletionNamedToolChoice

        Specifies a tool the model should use. Use to force the model to call a specific function.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the tool. Currently, only &#x60;function&#x60; is supported. |  [function]  | null
         |function |(/) |{noformat:nopanel=true}ChatCompletionNamedToolChoice_function{noformat} |  |  | null
         
        {anchor:ChatCompletionNamedToolChoiceFunctionModelAnchor}
        h3. ChatCompletionNamedToolChoiceFunction

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function to call. |  | null
         
        {anchor:ChatCompletionRequestAssistantMessageModelAnchor}
        h3. ChatCompletionRequestAssistantMessage

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |content |(x) |{noformat:nopanel=true}String{noformat} | The contents of the assistant message. Required unless &#x60;tool_calls&#x60; or &#x60;function_call&#x60; is specified. |  | null
         |role |(/) |{noformat:nopanel=true}String{noformat} | The role of the messages author, in this case &#x60;assistant&#x60;. |  [assistant]  | null
         |name |(x) |{noformat:nopanel=true}String{noformat} | An optional name for the participant. Provides the model information to differentiate between participants of the same role. |  | null
         |tool_calls |(x) |{noformat:nopanel=true}array[ChatCompletionMessageToolCall]{noformat} | The tool calls generated by the model, such as function calls. |  | null
         |function_call |(x) |{noformat:nopanel=true}ChatCompletionRequestAssistantMessage_function_call{noformat} |  |  | null
         
        {anchor:ChatCompletionRequestAssistantMessageFunctionCallModelAnchor}
        h3. ChatCompletionRequestAssistantMessageFunctionCall

        Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |arguments |(/) |{noformat:nopanel=true}String{noformat} | The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function. |  | null
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function to call. |  | null
         
        {anchor:ChatCompletionRequestFunctionMessageModelAnchor}
        h3. ChatCompletionRequestFunctionMessage

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |role |(/) |{noformat:nopanel=true}String{noformat} | The role of the messages author, in this case &#x60;function&#x60;. |  [function]  | null
         |content |(/) |{noformat:nopanel=true}String{noformat} | The contents of the function message. |  | null
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function to call. |  | null
         
        {anchor:ChatCompletionRequestMessageModelAnchor}
        h3. ChatCompletionRequestMessage

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |content |(/) |{noformat:nopanel=true}String{noformat} | The contents of the function message. |  | null
         |role |(/) |{noformat:nopanel=true}String{noformat} | The role of the messages author, in this case &#x60;function&#x60;. |  [function]  | null
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function to call. |  | null
         |tool_calls |(x) |{noformat:nopanel=true}array[ChatCompletionMessageToolCall]{noformat} | The tool calls generated by the model, such as function calls. |  | null
         |function_call |(x) |{noformat:nopanel=true}ChatCompletionRequestAssistantMessage_function_call{noformat} |  |  | null
         |tool_call_id |(/) |{noformat:nopanel=true}String{noformat} | Tool call that this message is responding to. |  | null
         
        {anchor:ChatCompletionRequestMessageContentPartModelAnchor}
        h3. ChatCompletionRequestMessageContentPart

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the content part. |  [text, image_url]  | null
         |text |(/) |{noformat:nopanel=true}String{noformat} | The text content. |  | null
         |image_url |(/) |{noformat:nopanel=true}ChatCompletionRequestMessageContentPartImage_image_url{noformat} |  |  | null
         
        {anchor:ChatCompletionRequestMessageContentPartImageModelAnchor}
        h3. ChatCompletionRequestMessageContentPartImage

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the content part. |  [image_url]  | null
         |image_url |(/) |{noformat:nopanel=true}ChatCompletionRequestMessageContentPartImage_image_url{noformat} |  |  | null
         
        {anchor:ChatCompletionRequestMessageContentPartImageImageUrlModelAnchor}
        h3. ChatCompletionRequestMessageContentPartImageImageUrl

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |url |(/) |{noformat:nopanel=true}URI{noformat} | Either a URL of the image or the base64 encoded image data. |  | null
         |detail |(x) |{noformat:nopanel=true}String{noformat} | Specifies the detail level of the image. Learn more in the [Vision guide\](/docs/guides/vision/low-or-high-fidelity-image-understanding). |  [auto, low, high]  | null
         
        {anchor:ChatCompletionRequestMessageContentPartTextModelAnchor}
        h3. ChatCompletionRequestMessageContentPartText

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the content part. |  [text]  | null
         |text |(/) |{noformat:nopanel=true}String{noformat} | The text content. |  | null
         
        {anchor:ChatCompletionRequestSystemMessageModelAnchor}
        h3. ChatCompletionRequestSystemMessage

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |content |(/) |{noformat:nopanel=true}String{noformat} | The contents of the system message. |  | null
         |role |(/) |{noformat:nopanel=true}String{noformat} | The role of the messages author, in this case &#x60;system&#x60;. |  [system]  | null
         |name |(x) |{noformat:nopanel=true}String{noformat} | An optional name for the participant. Provides the model information to differentiate between participants of the same role. |  | null
         
        {anchor:ChatCompletionRequestToolMessageModelAnchor}
        h3. ChatCompletionRequestToolMessage

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |role |(/) |{noformat:nopanel=true}String{noformat} | The role of the messages author, in this case &#x60;tool&#x60;. |  [tool]  | null
         |content |(/) |{noformat:nopanel=true}String{noformat} | The contents of the tool message. |  | null
         |tool_call_id |(/) |{noformat:nopanel=true}String{noformat} | Tool call that this message is responding to. |  | null
         
        {anchor:ChatCompletionRequestUserMessageModelAnchor}
        h3. ChatCompletionRequestUserMessage

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |content |(/) |{noformat:nopanel=true}ChatCompletionRequestUserMessage_content{noformat} |  |  | null
         |role |(/) |{noformat:nopanel=true}String{noformat} | The role of the messages author, in this case &#x60;user&#x60;. |  [user]  | null
         |name |(x) |{noformat:nopanel=true}String{noformat} | An optional name for the participant. Provides the model information to differentiate between participants of the same role. |  | null
         
        {anchor:ChatCompletionRequestUserMessageContentModelAnchor}
        h3. ChatCompletionRequestUserMessageContent

        The contents of the user message.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:ChatCompletionResponseMessageModelAnchor}
        h3. ChatCompletionResponseMessage

        A chat completion message generated by the model.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |content |(/) |{noformat:nopanel=true}String{noformat} | The contents of the message. |  | null
         |tool_calls |(x) |{noformat:nopanel=true}array[ChatCompletionMessageToolCall]{noformat} | The tool calls generated by the model, such as function calls. |  | null
         |role |(/) |{noformat:nopanel=true}String{noformat} | The role of the author of this message. |  [assistant]  | null
         |function_call |(x) |{noformat:nopanel=true}ChatCompletionRequestAssistantMessage_function_call{noformat} |  |  | null
         
        {anchor:ChatCompletionRoleModelAnchor}
        h3. ChatCompletionRole

        The role of the author of a message

         ||Name||Value||Description||
          |SYSTEM |"system" | |
 |USER |"user" | |
 |ASSISTANT |"assistant" | |
 |TOOL |"tool" | |
 |FUNCTION |"function" | |
         
        
        {anchor:ChatCompletionStreamResponseDeltaModelAnchor}
        h3. ChatCompletionStreamResponseDelta

        A chat completion delta generated by streamed model responses.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |content |(x) |{noformat:nopanel=true}String{noformat} | The contents of the chunk message. |  | null
         |function_call |(x) |{noformat:nopanel=true}ChatCompletionStreamResponseDelta_function_call{noformat} |  |  | null
         |tool_calls |(x) |{noformat:nopanel=true}array[ChatCompletionMessageToolCallChunk]{noformat} |  |  | null
         |role |(x) |{noformat:nopanel=true}String{noformat} | The role of the author of this message. |  [system, user, assistant, tool]  | null
         
        {anchor:ChatCompletionStreamResponseDeltaFunctionCallModelAnchor}
        h3. ChatCompletionStreamResponseDeltaFunctionCall

        Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |arguments |(x) |{noformat:nopanel=true}String{noformat} | The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function. |  | null
         |name |(x) |{noformat:nopanel=true}String{noformat} | The name of the function to call. |  | null
         
        {anchor:ChatCompletionTokenLogprobModelAnchor}
        h3. ChatCompletionTokenLogprob

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |token |(/) |{noformat:nopanel=true}String{noformat} | The token. |  | null
         |logprob |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value &#x60;-9999.0&#x60; is used to signify that the token is very unlikely. |  | null
         |bytes |(/) |{noformat:nopanel=true}array[Integer]{noformat} | A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be &#x60;null&#x60; if there is no bytes representation for the token. |  | null
         |top_logprobs |(/) |{noformat:nopanel=true}array[ChatCompletionTokenLogprob_top_logprobs_inner]{noformat} | List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested &#x60;top_logprobs&#x60; returned. |  | null
         
        {anchor:ChatCompletionTokenLogprobTopLogprobsInnerModelAnchor}
        h3. ChatCompletionTokenLogprobTopLogprobsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |token |(/) |{noformat:nopanel=true}String{noformat} | The token. |  | null
         |logprob |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value &#x60;-9999.0&#x60; is used to signify that the token is very unlikely. |  | null
         |bytes |(/) |{noformat:nopanel=true}array[Integer]{noformat} | A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be &#x60;null&#x60; if there is no bytes representation for the token. |  | null
         
        {anchor:ChatCompletionToolModelAnchor}
        h3. ChatCompletionTool

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the tool. Currently, only &#x60;function&#x60; is supported. |  [function]  | null
         |function |(/) |{noformat:nopanel=true}FunctionObject{noformat} |  |  | null
         
        {anchor:ChatCompletionToolChoiceOptionModelAnchor}
        h3. ChatCompletionToolChoiceOption

        Controls which (if any) function is called by the model.
`none` means the model will not call a function and instead generates a message.
`auto` means the model can pick between generating a message or calling a function.
Specifying a particular function via `\{"type": "function", "function": \{"name": "my_function"\}\}` forces the model to call that function.

`none` is the default when no functions are present. `auto` is the default if functions are present.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the tool. Currently, only &#x60;function&#x60; is supported. |  [function]  | null
         |function |(/) |{noformat:nopanel=true}ChatCompletionNamedToolChoice_function{noformat} |  |  | null
         
        {anchor:CompletionUsageModelAnchor}
        h3. CompletionUsage

        Usage statistics for the completion request.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |completion_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | Number of tokens in the generated completion. |  | null
         |prompt_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | Number of tokens in the prompt. |  | null
         |total_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | Total number of tokens used in the request (prompt + completion). |  | null
         
        {anchor:CreateAssistantFileRequestModelAnchor}
        h3. CreateAssistantFileRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |file_id |(/) |{noformat:nopanel=true}String{noformat} | A [File\](/docs/api-reference/files) ID (with &#x60;purpose&#x3D;&quot;assistants&quot;&#x60;) that the assistant should use. Useful for tools like &#x60;retrieval&#x60; and &#x60;code_interpreter&#x60; that can access files. |  | null
         
        {anchor:CreateAssistantRequestModelAnchor}
        h3. CreateAssistantRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |model |(/) |{noformat:nopanel=true}CreateAssistantRequest_model{noformat} |  |  | null
         |name |(x) |{noformat:nopanel=true}String{noformat} | The name of the assistant. The maximum length is 256 characters. |  | null
         |description |(x) |{noformat:nopanel=true}String{noformat} | The description of the assistant. The maximum length is 512 characters. |  | null
         |instructions |(x) |{noformat:nopanel=true}String{noformat} | The system instructions that the assistant uses. The maximum length is 256,000 characters. |  | null
         |tools |(x) |{noformat:nopanel=true}array[AssistantObject_tools_inner]{noformat} | A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types &#x60;code_interpreter&#x60;, &#x60;retrieval&#x60;, or &#x60;function&#x60;. |  | null
         |file_ids |(x) |{noformat:nopanel=true}array[String]{noformat} | A list of [file\](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order. |  | null
         |metadata |(x) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         
        {anchor:CreateAssistantRequestModelModelAnchor}
        h3. CreateAssistantRequestModel

        ID of the model to use. You can use the [List models\](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview\](/docs/models/overview) for descriptions of them.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateChatCompletionFunctionResponseModelAnchor}
        h3. CreateChatCompletionFunctionResponse

        Represents a chat completion response returned by model, based on the provided input.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | A unique identifier for the chat completion. |  | null
         |choices |(/) |{noformat:nopanel=true}array[CreateChatCompletionFunctionResponse_choices_inner]{noformat} | A list of chat completion choices. Can be more than one if &#x60;n&#x60; is greater than 1. |  | null
         |created |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) of when the chat completion was created. |  | null
         |model |(/) |{noformat:nopanel=true}String{noformat} | The model used for the chat completion. |  | null
         |system_fingerprint |(x) |{noformat:nopanel=true}String{noformat} | This fingerprint represents the backend configuration that the model runs with.

Can be used in conjunction with the &#x60;seed&#x60; request parameter to understand when backend changes have been made that might impact determinism. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;chat.completion&#x60;. |  [chat.completion]  | null
         |usage |(x) |{noformat:nopanel=true}CompletionUsage{noformat} |  |  | null
         
        {anchor:CreateChatCompletionFunctionResponseChoicesInnerModelAnchor}
        h3. CreateChatCompletionFunctionResponseChoicesInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |finish_reason |(/) |{noformat:nopanel=true}String{noformat} | The reason the model stopped generating tokens. This will be &#x60;stop&#x60; if the model hit a natural stop point or a provided stop sequence, &#x60;length&#x60; if the maximum number of tokens specified in the request was reached, &#x60;content_filter&#x60; if content was omitted due to a flag from our content filters, or &#x60;function_call&#x60; if the model called a function. |  [stop, length, function_call, content_filter]  | null
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the choice in the list of choices. |  | null
         |message |(/) |{noformat:nopanel=true}ChatCompletionResponseMessage{noformat} |  |  | null
         
        {anchor:CreateChatCompletionRequestModelAnchor}
        h3. CreateChatCompletionRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |messages |(/) |{noformat:nopanel=true}array[ChatCompletionRequestMessage]{noformat} | A list of messages comprising the conversation so far. [Example Python code\](https://cookbook.openai.com/examples/how_to_format_inputs_to_chatgpt_models). |  | null
         |model |(/) |{noformat:nopanel=true}CreateChatCompletionRequest_model{noformat} |  |  | null
         |frequency_penalty |(x) |{noformat:nopanel=true}BigDecimal{noformat} | Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model&#39;s likelihood to repeat the same line verbatim.

[See more information about frequency and presence penalties.\](/docs/guides/text-generation/parameter-details) |  | null
         |logit_bias |(x) |{noformat:nopanel=true}map[String, Integer]{noformat} | Modify the likelihood of specified tokens appearing in the completion.

Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. |  | null
         |logprobs |(x) |{noformat:nopanel=true}Boolean{noformat} | Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the &#x60;content&#x60; of &#x60;message&#x60;. |  | null
         |top_logprobs |(x) |{noformat:nopanel=true}Integer{noformat} | An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. &#x60;logprobs&#x60; must be set to &#x60;true&#x60; if this parameter is used. |  | null
         |max_tokens |(x) |{noformat:nopanel=true}Integer{noformat} | The maximum number of [tokens\](/tokenizer) that can be generated in the chat completion.

The total length of input tokens and generated tokens is limited by the model&#39;s context length. [Example Python code\](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens. |  | null
         |n |(x) |{noformat:nopanel=true}Integer{noformat} | How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep &#x60;n&#x60; as &#x60;1&#x60; to minimize costs. |  | 1
         |presence_penalty |(x) |{noformat:nopanel=true}BigDecimal{noformat} | Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model&#39;s likelihood to talk about new topics.

[See more information about frequency and presence penalties.\](/docs/guides/text-generation/parameter-details) |  | null
         |response_format |(x) |{noformat:nopanel=true}CreateChatCompletionRequest_response_format{noformat} |  |  | null
         |seed |(x) |{noformat:nopanel=true}Integer{noformat} | This feature is in Beta.
If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same &#x60;seed&#x60; and parameters should return the same result.
Determinism is not guaranteed, and you should refer to the &#x60;system_fingerprint&#x60; response parameter to monitor changes in the backend. |  | null
         |stop |(x) |{noformat:nopanel=true}CreateChatCompletionRequest_stop{noformat} |  |  | null
         |stream |(x) |{noformat:nopanel=true}Boolean{noformat} | If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only [server-sent events\](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a &#x60;data: [DONE\]&#x60; message. [Example Python code\](https://cookbook.openai.com/examples/how_to_stream_completions). |  | null
         |temperature |(x) |{noformat:nopanel=true}BigDecimal{noformat} | What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

We generally recommend altering this or &#x60;top_p&#x60; but not both. |  | 1
         |top_p |(x) |{noformat:nopanel=true}BigDecimal{noformat} | An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or &#x60;temperature&#x60; but not both. |  | 1
         |tools |(x) |{noformat:nopanel=true}array[ChatCompletionTool]{noformat} | A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported. |  | null
         |tool_choice |(x) |{noformat:nopanel=true}ChatCompletionToolChoiceOption{noformat} |  |  | null
         |user |(x) |{noformat:nopanel=true}String{noformat} | A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more\](/docs/guides/safety-best-practices/end-user-ids). |  | user-1234
         |function_call |(x) |{noformat:nopanel=true}CreateChatCompletionRequest_function_call{noformat} |  |  | null
         |functions |(x) |{noformat:nopanel=true}array[ChatCompletionFunctions]{noformat} | Deprecated in favor of &#x60;tools&#x60;.

A list of functions the model may generate JSON inputs for. |  | null
         
        {anchor:CreateChatCompletionRequestFunctionCallModelAnchor}
        h3. CreateChatCompletionRequestFunctionCall

        Deprecated in favor of `tool_choice`.

Controls which (if any) function is called by the model.
`none` means the model will not call a function and instead generates a message.
`auto` means the model can pick between generating a message or calling a function.
Specifying a particular function via `\{"name": "my_function"\}` forces the model to call that function.

`none` is the default when no functions are present. `auto` is the default if functions are present.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function to call. |  | null
         
        {anchor:CreateChatCompletionRequestModelModelAnchor}
        h3. CreateChatCompletionRequestModel

        ID of the model to use. See the [model endpoint compatibility\](/docs/models/model-endpoint-compatibility) table for details on which models work with the Chat API.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateChatCompletionRequestResponseFormatModelAnchor}
        h3. CreateChatCompletionRequestResponseFormat

        An object specifying the format that the model must output. Compatible with [GPT-4 Turbo\](/docs/models/gpt-4-and-gpt-4-turbo) and all GPT-3.5 Turbo models newer than `gpt-3.5-turbo-1106`.

Setting to `\{ "type": "json_object" \}` enables JSON mode, which guarantees the message the model generates is valid JSON.

**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if `finish_reason="length"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(x) |{noformat:nopanel=true}String{noformat} | Must be one of &#x60;text&#x60; or &#x60;json_object&#x60;. |  [text, json_object]  | json_object
         
        {anchor:CreateChatCompletionRequestStopModelAnchor}
        h3. CreateChatCompletionRequestStop

        Up to 4 sequences where the API will stop generating further tokens.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateChatCompletionResponseModelAnchor}
        h3. CreateChatCompletionResponse

        Represents a chat completion response returned by model, based on the provided input.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | A unique identifier for the chat completion. |  | null
         |choices |(/) |{noformat:nopanel=true}array[CreateChatCompletionResponse_choices_inner]{noformat} | A list of chat completion choices. Can be more than one if &#x60;n&#x60; is greater than 1. |  | null
         |created |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) of when the chat completion was created. |  | null
         |model |(/) |{noformat:nopanel=true}String{noformat} | The model used for the chat completion. |  | null
         |system_fingerprint |(x) |{noformat:nopanel=true}String{noformat} | This fingerprint represents the backend configuration that the model runs with.

Can be used in conjunction with the &#x60;seed&#x60; request parameter to understand when backend changes have been made that might impact determinism. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;chat.completion&#x60;. |  [chat.completion]  | null
         |usage |(x) |{noformat:nopanel=true}CompletionUsage{noformat} |  |  | null
         
        {anchor:CreateChatCompletionResponseChoicesInnerModelAnchor}
        h3. CreateChatCompletionResponseChoicesInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |finish_reason |(/) |{noformat:nopanel=true}String{noformat} | The reason the model stopped generating tokens. This will be &#x60;stop&#x60; if the model hit a natural stop point or a provided stop sequence,
&#x60;length&#x60; if the maximum number of tokens specified in the request was reached,
&#x60;content_filter&#x60; if content was omitted due to a flag from our content filters,
&#x60;tool_calls&#x60; if the model called a tool, or &#x60;function_call&#x60; (deprecated) if the model called a function. |  [stop, length, tool_calls, content_filter, function_call]  | null
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the choice in the list of choices. |  | null
         |message |(/) |{noformat:nopanel=true}ChatCompletionResponseMessage{noformat} |  |  | null
         |logprobs |(/) |{noformat:nopanel=true}CreateChatCompletionResponse_choices_inner_logprobs{noformat} |  |  | null
         
        {anchor:CreateChatCompletionResponseChoicesInnerLogprobsModelAnchor}
        h3. CreateChatCompletionResponseChoicesInnerLogprobs

        Log probability information for the choice.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |content |(/) |{noformat:nopanel=true}array[ChatCompletionTokenLogprob]{noformat} | A list of message content tokens with log probability information. |  | null
         
        {anchor:CreateChatCompletionStreamResponseModelAnchor}
        h3. CreateChatCompletionStreamResponse

        Represents a streamed chunk of a chat completion response returned by model, based on the provided input.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | A unique identifier for the chat completion. Each chunk has the same ID. |  | null
         |choices |(/) |{noformat:nopanel=true}array[CreateChatCompletionStreamResponse_choices_inner]{noformat} | A list of chat completion choices. Can be more than one if &#x60;n&#x60; is greater than 1. |  | null
         |created |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) of when the chat completion was created. Each chunk has the same timestamp. |  | null
         |model |(/) |{noformat:nopanel=true}String{noformat} | The model to generate the completion. |  | null
         |system_fingerprint |(x) |{noformat:nopanel=true}String{noformat} | This fingerprint represents the backend configuration that the model runs with.
Can be used in conjunction with the &#x60;seed&#x60; request parameter to understand when backend changes have been made that might impact determinism. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;chat.completion.chunk&#x60;. |  [chat.completion.chunk]  | null
         
        {anchor:CreateChatCompletionStreamResponseChoicesInnerModelAnchor}
        h3. CreateChatCompletionStreamResponseChoicesInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |delta |(/) |{noformat:nopanel=true}ChatCompletionStreamResponseDelta{noformat} |  |  | null
         |logprobs |(x) |{noformat:nopanel=true}CreateChatCompletionResponse_choices_inner_logprobs{noformat} |  |  | null
         |finish_reason |(/) |{noformat:nopanel=true}String{noformat} | The reason the model stopped generating tokens. This will be &#x60;stop&#x60; if the model hit a natural stop point or a provided stop sequence,
&#x60;length&#x60; if the maximum number of tokens specified in the request was reached,
&#x60;content_filter&#x60; if content was omitted due to a flag from our content filters,
&#x60;tool_calls&#x60; if the model called a tool, or &#x60;function_call&#x60; (deprecated) if the model called a function. |  [stop, length, tool_calls, content_filter, function_call]  | null
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the choice in the list of choices. |  | null
         
        {anchor:CreateCompletionRequestModelAnchor}
        h3. CreateCompletionRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |model |(/) |{noformat:nopanel=true}CreateCompletionRequest_model{noformat} |  |  | null
         |prompt |(/) |{noformat:nopanel=true}CreateCompletionRequest_prompt{noformat} |  |  | null
         |best_of |(x) |{noformat:nopanel=true}Integer{noformat} | Generates &#x60;best_of&#x60; completions server-side and returns the &quot;best&quot; (the one with the highest log probability per token). Results cannot be streamed.

When used with &#x60;n&#x60;, &#x60;best_of&#x60; controls the number of candidate completions and &#x60;n&#x60; specifies how many to return – &#x60;best_of&#x60; must be greater than &#x60;n&#x60;.

**Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for &#x60;max_tokens&#x60; and &#x60;stop&#x60;. |  | null
         |echo |(x) |{noformat:nopanel=true}Boolean{noformat} | Echo back the prompt in addition to the completion |  | null
         |frequency_penalty |(x) |{noformat:nopanel=true}BigDecimal{noformat} | Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model&#39;s likelihood to repeat the same line verbatim.

[See more information about frequency and presence penalties.\](/docs/guides/text-generation/parameter-details) |  | null
         |logit_bias |(x) |{noformat:nopanel=true}map[String, Integer]{noformat} | Modify the likelihood of specified tokens appearing in the completion.

Accepts a JSON object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool\](/tokenizer?view&#x3D;bpe) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.

As an example, you can pass &#x60;\{&quot;50256&quot;: -100\}&#x60; to prevent the &lt;\|endoftext\|&gt; token from being generated. |  | null
         |logprobs |(x) |{noformat:nopanel=true}Integer{noformat} | Include the log probabilities on the &#x60;logprobs&#x60; most likely output tokens, as well the chosen tokens. For example, if &#x60;logprobs&#x60; is 5, the API will return a list of the 5 most likely tokens. The API will always return the &#x60;logprob&#x60; of the sampled token, so there may be up to &#x60;logprobs+1&#x60; elements in the response.

The maximum value for &#x60;logprobs&#x60; is 5. |  | null
         |max_tokens |(x) |{noformat:nopanel=true}Integer{noformat} | The maximum number of [tokens\](/tokenizer) that can be generated in the completion.

The token count of your prompt plus &#x60;max_tokens&#x60; cannot exceed the model&#39;s context length. [Example Python code\](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens. |  | 16
         |n |(x) |{noformat:nopanel=true}Integer{noformat} | How many completions to generate for each prompt.

**Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for &#x60;max_tokens&#x60; and &#x60;stop&#x60;. |  | 1
         |presence_penalty |(x) |{noformat:nopanel=true}BigDecimal{noformat} | Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model&#39;s likelihood to talk about new topics.

[See more information about frequency and presence penalties.\](/docs/guides/text-generation/parameter-details) |  | null
         |seed |(x) |{noformat:nopanel=true}Integer{noformat} | If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same &#x60;seed&#x60; and parameters should return the same result.

Determinism is not guaranteed, and you should refer to the &#x60;system_fingerprint&#x60; response parameter to monitor changes in the backend. |  | null
         |stop |(x) |{noformat:nopanel=true}CreateCompletionRequest_stop{noformat} |  |  | null
         |stream |(x) |{noformat:nopanel=true}Boolean{noformat} | Whether to stream back partial progress. If set, tokens will be sent as data-only [server-sent events\](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a &#x60;data: [DONE\]&#x60; message. [Example Python code\](https://cookbook.openai.com/examples/how_to_stream_completions). |  | null
         |suffix |(x) |{noformat:nopanel=true}String{noformat} | The suffix that comes after a completion of inserted text.

This parameter is only supported for &#x60;gpt-3.5-turbo-instruct&#x60;. |  | test.
         |temperature |(x) |{noformat:nopanel=true}BigDecimal{noformat} | What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

We generally recommend altering this or &#x60;top_p&#x60; but not both. |  | 1
         |top_p |(x) |{noformat:nopanel=true}BigDecimal{noformat} | An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or &#x60;temperature&#x60; but not both. |  | 1
         |user |(x) |{noformat:nopanel=true}String{noformat} | A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more\](/docs/guides/safety-best-practices/end-user-ids). |  | user-1234
         
        {anchor:CreateCompletionRequestModelModelAnchor}
        h3. CreateCompletionRequestModel

        ID of the model to use. You can use the [List models\](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview\](/docs/models/overview) for descriptions of them.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateCompletionRequestPromptModelAnchor}
        h3. CreateCompletionRequestPrompt

        The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.

Note that <\|endoftext\|> is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateCompletionRequestStopModelAnchor}
        h3. CreateCompletionRequestStop

        Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateCompletionResponseModelAnchor}
        h3. CreateCompletionResponse

        Represents a completion response from the API. Note: both the streamed and non-streamed response objects share the same shape (unlike the chat endpoint).

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | A unique identifier for the completion. |  | null
         |choices |(/) |{noformat:nopanel=true}array[CreateCompletionResponse_choices_inner]{noformat} | The list of completion choices the model generated for the input prompt. |  | null
         |created |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) of when the completion was created. |  | null
         |model |(/) |{noformat:nopanel=true}String{noformat} | The model used for completion. |  | null
         |system_fingerprint |(x) |{noformat:nopanel=true}String{noformat} | This fingerprint represents the backend configuration that the model runs with.

Can be used in conjunction with the &#x60;seed&#x60; request parameter to understand when backend changes have been made that might impact determinism. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &quot;text_completion&quot; |  [text_completion]  | null
         |usage |(x) |{noformat:nopanel=true}CompletionUsage{noformat} |  |  | null
         
        {anchor:CreateCompletionResponseChoicesInnerModelAnchor}
        h3. CreateCompletionResponseChoicesInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |finish_reason |(/) |{noformat:nopanel=true}String{noformat} | The reason the model stopped generating tokens. This will be &#x60;stop&#x60; if the model hit a natural stop point or a provided stop sequence,
&#x60;length&#x60; if the maximum number of tokens specified in the request was reached,
or &#x60;content_filter&#x60; if content was omitted due to a flag from our content filters. |  [stop, length, content_filter]  | null
         |index |(/) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |logprobs |(/) |{noformat:nopanel=true}CreateCompletionResponse_choices_inner_logprobs{noformat} |  |  | null
         |text |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         
        {anchor:CreateCompletionResponseChoicesInnerLogprobsModelAnchor}
        h3. CreateCompletionResponseChoicesInnerLogprobs

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |text_offset |(x) |{noformat:nopanel=true}array[Integer]{noformat} |  |  | null
         |token_logprobs |(x) |{noformat:nopanel=true}array[BigDecimal]{noformat} |  |  | null
         |tokens |(x) |{noformat:nopanel=true}array[String]{noformat} |  |  | null
         |top_logprobs |(x) |{noformat:nopanel=true}array[map[String, BigDecimal]]{noformat} |  |  | null
         
        {anchor:CreateEmbeddingRequestModelAnchor}
        h3. CreateEmbeddingRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |input |(/) |{noformat:nopanel=true}CreateEmbeddingRequest_input{noformat} |  |  | null
         |model |(/) |{noformat:nopanel=true}CreateEmbeddingRequest_model{noformat} |  |  | null
         |encoding_format |(x) |{noformat:nopanel=true}String{noformat} | The format to return the embeddings in. Can be either &#x60;float&#x60; or [&#x60;base64&#x60;\](https://pypi.org/project/pybase64/). |  [float, base64]  | float
         |dimensions |(x) |{noformat:nopanel=true}Integer{noformat} | The number of dimensions the resulting output embeddings should have. Only supported in &#x60;text-embedding-3&#x60; and later models. |  | null
         |user |(x) |{noformat:nopanel=true}String{noformat} | A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more\](/docs/guides/safety-best-practices/end-user-ids). |  | user-1234
         
        {anchor:CreateEmbeddingRequestInputModelAnchor}
        h3. CreateEmbeddingRequestInput

        Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array of token arrays. The input must not exceed the max input tokens for the model (8192 tokens for `text-embedding-ada-002`), cannot be an empty string, and any array must be 2048 dimensions or less. [Example Python code\](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateEmbeddingRequestModelModelAnchor}
        h3. CreateEmbeddingRequestModel

        ID of the model to use. You can use the [List models\](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview\](/docs/models/overview) for descriptions of them.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateEmbeddingResponseModelAnchor}
        h3. CreateEmbeddingResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |data |(/) |{noformat:nopanel=true}array[Embedding]{noformat} | The list of embeddings generated by the model. |  | null
         |model |(/) |{noformat:nopanel=true}String{noformat} | The name of the model used to generate the embedding. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &quot;list&quot;. |  [list]  | null
         |usage |(/) |{noformat:nopanel=true}CreateEmbeddingResponse_usage{noformat} |  |  | null
         
        {anchor:CreateEmbeddingResponseUsageModelAnchor}
        h3. CreateEmbeddingResponseUsage

        The usage information for the request.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |prompt_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | The number of tokens used by the prompt. |  | null
         |total_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | The total number of tokens used by the request. |  | null
         
        {anchor:CreateFineTuningJobRequestModelAnchor}
        h3. CreateFineTuningJobRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |model |(/) |{noformat:nopanel=true}CreateFineTuningJobRequest_model{noformat} |  |  | null
         |training_file |(/) |{noformat:nopanel=true}String{noformat} | The ID of an uploaded file that contains training data.

See [upload file\](/docs/api-reference/files/upload) for how to upload a file.

Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose &#x60;fine-tune&#x60;.

See the [fine-tuning guide\](/docs/guides/fine-tuning) for more details. |  | file-abc123
         |hyperparameters |(x) |{noformat:nopanel=true}CreateFineTuningJobRequest_hyperparameters{noformat} |  |  | null
         |suffix |(x) |{noformat:nopanel=true}String{noformat} | A string of up to 18 characters that will be added to your fine-tuned model name.

For example, a &#x60;suffix&#x60; of &quot;custom-model-name&quot; would produce a model name like &#x60;ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel&#x60;. |  | null
         |validation_file |(x) |{noformat:nopanel=true}String{noformat} | The ID of an uploaded file that contains validation data.

If you provide this file, the data is used to generate validation
metrics periodically during fine-tuning. These metrics can be viewed in
the fine-tuning results file.
The same data should not be present in both train and validation files.

Your dataset must be formatted as a JSONL file. You must upload your file with the purpose &#x60;fine-tune&#x60;.

See the [fine-tuning guide\](/docs/guides/fine-tuning) for more details. |  | file-abc123
         |integrations |(x) |{noformat:nopanel=true}array[CreateFineTuningJobRequest_integrations_inner]{noformat} | A list of integrations to enable for your fine-tuning job. |  | null
         |seed |(x) |{noformat:nopanel=true}Integer{noformat} | The seed controls the reproducibility of the job. Passing in the same seed and job parameters should produce the same results, but may differ in rare cases.
If a seed is not specified, one will be generated for you. |  | 42
         
        {anchor:CreateFineTuningJobRequestHyperparametersModelAnchor}
        h3. CreateFineTuningJobRequestHyperparameters

        The hyperparameters used for the fine-tuning job.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |batch_size |(x) |{noformat:nopanel=true}CreateFineTuningJobRequest_hyperparameters_batch_size{noformat} |  |  | null
         |learning_rate_multiplier |(x) |{noformat:nopanel=true}CreateFineTuningJobRequest_hyperparameters_learning_rate_multiplier{noformat} |  |  | null
         |n_epochs |(x) |{noformat:nopanel=true}CreateFineTuningJobRequest_hyperparameters_n_epochs{noformat} |  |  | null
         
        {anchor:CreateFineTuningJobRequestHyperparametersBatchSizeModelAnchor}
        h3. CreateFineTuningJobRequestHyperparametersBatchSize

        Number of examples in each batch. A larger batch size means that model parameters
are updated less frequently, but with lower variance.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateFineTuningJobRequestHyperparametersLearningRateMultiplierModelAnchor}
        h3. CreateFineTuningJobRequestHyperparametersLearningRateMultiplier

        Scaling factor for the learning rate. A smaller learning rate may be useful to avoid
overfitting.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateFineTuningJobRequestHyperparametersNEpochsModelAnchor}
        h3. CreateFineTuningJobRequestHyperparametersNEpochs

        The number of epochs to train the model for. An epoch refers to one full cycle
through the training dataset.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateFineTuningJobRequestIntegrationsInnerModelAnchor}
        h3. CreateFineTuningJobRequestIntegrationsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}CreateFineTuningJobRequest_integrations_inner_type{noformat} |  |  | null
         |wandb |(/) |{noformat:nopanel=true}CreateFineTuningJobRequest_integrations_inner_wandb{noformat} |  |  | null
         
        {anchor:CreateFineTuningJobRequestIntegrationsInnerTypeModelAnchor}
        h3. CreateFineTuningJobRequestIntegrationsInnerType

        The type of integration to enable. Currently, only "wandb" (Weights and Biases) is supported.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateFineTuningJobRequestIntegrationsInnerWandbModelAnchor}
        h3. CreateFineTuningJobRequestIntegrationsInnerWandb

        The settings for your integration with Weights and Biases. This payload specifies the project that
metrics will be sent to. Optionally, you can set an explicit display name for your run, add tags
to your run, and set a default entity (team, username, etc) to be associated with your run.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |project |(/) |{noformat:nopanel=true}String{noformat} | The name of the project that the new run will be created under. |  | my-wandb-project
         |name |(x) |{noformat:nopanel=true}String{noformat} | A display name to set for the run. If not set, we will use the Job ID as the name. |  | null
         |entity |(x) |{noformat:nopanel=true}String{noformat} | The entity to use for the run. This allows you to set the team or username of the WandB user that you would
like associated with the run. If not set, the default entity for the registered WandB API key is used. |  | null
         |tags |(x) |{noformat:nopanel=true}array[String]{noformat} | A list of tags to be attached to the newly created run. These tags are passed through directly to WandB. Some
default tags are generated by OpenAI: &quot;openai/finetune&quot;, &quot;openai/\{base-model\}&quot;, &quot;openai/\{ftjob-abcdef\}&quot;. |  | null
         
        {anchor:CreateFineTuningJobRequestModelModelAnchor}
        h3. CreateFineTuningJobRequestModel

        The name of the model to fine-tune. You can select one of the
[supported models\](/docs/guides/fine-tuning/what-models-can-be-fine-tuned).

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateImageEditRequestModelModelAnchor}
        h3. CreateImageEditRequestModel

        The model to use for image generation. Only `dall-e-2` is supported at this time.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateImageRequestModelAnchor}
        h3. CreateImageRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |prompt |(/) |{noformat:nopanel=true}String{noformat} | A text description of the desired image(s). The maximum length is 1000 characters for &#x60;dall-e-2&#x60; and 4000 characters for &#x60;dall-e-3&#x60;. |  | A cute baby sea otter
         |model |(x) |{noformat:nopanel=true}CreateImageRequest_model{noformat} |  |  | null
         |n |(x) |{noformat:nopanel=true}Integer{noformat} | The number of images to generate. Must be between 1 and 10. For &#x60;dall-e-3&#x60;, only &#x60;n&#x3D;1&#x60; is supported. |  | 1
         |quality |(x) |{noformat:nopanel=true}String{noformat} | The quality of the image that will be generated. &#x60;hd&#x60; creates images with finer details and greater consistency across the image. This param is only supported for &#x60;dall-e-3&#x60;. |  [standard, hd]  | standard
         |response_format |(x) |{noformat:nopanel=true}String{noformat} | The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. |  [url, b64_json]  | url
         |size |(x) |{noformat:nopanel=true}String{noformat} | The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60; for &#x60;dall-e-2&#x60;. Must be one of &#x60;1024x1024&#x60;, &#x60;1792x1024&#x60;, or &#x60;1024x1792&#x60; for &#x60;dall-e-3&#x60; models. |  [256x256, 512x512, 1024x1024, 1792x1024, 1024x1792]  | 1024x1024
         |style |(x) |{noformat:nopanel=true}String{noformat} | The style of the generated images. Must be one of &#x60;vivid&#x60; or &#x60;natural&#x60;. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for &#x60;dall-e-3&#x60;. |  [vivid, natural]  | vivid
         |user |(x) |{noformat:nopanel=true}String{noformat} | A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more\](/docs/guides/safety-best-practices/end-user-ids). |  | user-1234
         
        {anchor:CreateImageRequestModelModelAnchor}
        h3. CreateImageRequestModel

        The model to use for image generation.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateMessageRequestModelAnchor}
        h3. CreateMessageRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |role |(/) |{noformat:nopanel=true}String{noformat} | The role of the entity that is creating the message. Allowed values include:
- &#x60;user&#x60;: Indicates the message is sent by an actual user and should be used in most cases to represent user-generated messages.
- &#x60;assistant&#x60;: Indicates the message is generated by the assistant. Use this value to insert messages from the assistant into the conversation. |  [user, assistant]  | null
         |content |(/) |{noformat:nopanel=true}String{noformat} | The content of the message. |  | null
         |file_ids |(x) |{noformat:nopanel=true}array[String]{noformat} | A list of [File\](/docs/api-reference/files) IDs that the message should use. There can be a maximum of 10 files attached to a message. Useful for tools like &#x60;retrieval&#x60; and &#x60;code_interpreter&#x60; that can access and use files. |  | null
         |metadata |(x) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         
        {anchor:CreateModerationRequestModelAnchor}
        h3. CreateModerationRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |input |(/) |{noformat:nopanel=true}CreateModerationRequest_input{noformat} |  |  | null
         |model |(x) |{noformat:nopanel=true}CreateModerationRequest_model{noformat} |  |  | null
         
        {anchor:CreateModerationRequestInputModelAnchor}
        h3. CreateModerationRequestInput

        The input text to classify

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateModerationRequestModelModelAnchor}
        h3. CreateModerationRequestModel

        Two content moderations models are available: `text-moderation-stable` and `text-moderation-latest`.

The default is `text-moderation-latest` which will be automatically upgraded over time. This ensures you are always using our most accurate model. If you use `text-moderation-stable`, we will provide advanced notice before updating the model. Accuracy of `text-moderation-stable` may be slightly lower than for `text-moderation-latest`.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateModerationResponseModelAnchor}
        h3. CreateModerationResponse

        Represents if a given text input is potentially harmful.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The unique identifier for the moderation request. |  | null
         |model |(/) |{noformat:nopanel=true}String{noformat} | The model used to generate the moderation results. |  | null
         |results |(/) |{noformat:nopanel=true}array[CreateModerationResponse_results_inner]{noformat} | A list of moderation objects. |  | null
         
        {anchor:CreateModerationResponseResultsInnerModelAnchor}
        h3. CreateModerationResponseResultsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |flagged |(/) |{noformat:nopanel=true}Boolean{noformat} | Whether any of the below categories are flagged. |  | null
         |categories |(/) |{noformat:nopanel=true}CreateModerationResponse_results_inner_categories{noformat} |  |  | null
         |category_scores |(/) |{noformat:nopanel=true}CreateModerationResponse_results_inner_category_scores{noformat} |  |  | null
         
        {anchor:CreateModerationResponseResultsInnerCategoriesModelAnchor}
        h3. CreateModerationResponseResultsInnerCategories

        A list of the categories, and whether they are flagged or not.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |hate |(/) |{noformat:nopanel=true}Boolean{noformat} | Content that expresses, incites, or promotes hate based on race, gender, ethnicity, religion, nationality, sexual orientation, disability status, or caste. Hateful content aimed at non-protected groups (e.g., chess players) is harassment. |  | null
         |hate/threatening |(/) |{noformat:nopanel=true}Boolean{noformat} | Hateful content that also includes violence or serious harm towards the targeted group based on race, gender, ethnicity, religion, nationality, sexual orientation, disability status, or caste. |  | null
         |harassment |(/) |{noformat:nopanel=true}Boolean{noformat} | Content that expresses, incites, or promotes harassing language towards any target. |  | null
         |harassment/threatening |(/) |{noformat:nopanel=true}Boolean{noformat} | Harassment content that also includes violence or serious harm towards any target. |  | null
         |self-harm |(/) |{noformat:nopanel=true}Boolean{noformat} | Content that promotes, encourages, or depicts acts of self-harm, such as suicide, cutting, and eating disorders. |  | null
         |self-harm/intent |(/) |{noformat:nopanel=true}Boolean{noformat} | Content where the speaker expresses that they are engaging or intend to engage in acts of self-harm, such as suicide, cutting, and eating disorders. |  | null
         |self-harm/instructions |(/) |{noformat:nopanel=true}Boolean{noformat} | Content that encourages performing acts of self-harm, such as suicide, cutting, and eating disorders, or that gives instructions or advice on how to commit such acts. |  | null
         |sexual |(/) |{noformat:nopanel=true}Boolean{noformat} | Content meant to arouse sexual excitement, such as the description of sexual activity, or that promotes sexual services (excluding sex education and wellness). |  | null
         |sexual/minors |(/) |{noformat:nopanel=true}Boolean{noformat} | Sexual content that includes an individual who is under 18 years old. |  | null
         |violence |(/) |{noformat:nopanel=true}Boolean{noformat} | Content that depicts death, violence, or physical injury. |  | null
         |violence/graphic |(/) |{noformat:nopanel=true}Boolean{noformat} | Content that depicts death, violence, or physical injury in graphic detail. |  | null
         
        {anchor:CreateModerationResponseResultsInnerCategoryScoresModelAnchor}
        h3. CreateModerationResponseResultsInnerCategoryScores

        A list of the categories along with their scores as predicted by model.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |hate |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;hate&#39;. |  | null
         |hate/threatening |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;hate/threatening&#39;. |  | null
         |harassment |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;harassment&#39;. |  | null
         |harassment/threatening |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;harassment/threatening&#39;. |  | null
         |self-harm |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;self-harm&#39;. |  | null
         |self-harm/intent |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;self-harm/intent&#39;. |  | null
         |self-harm/instructions |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;self-harm/instructions&#39;. |  | null
         |sexual |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;sexual&#39;. |  | null
         |sexual/minors |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;sexual/minors&#39;. |  | null
         |violence |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;violence&#39;. |  | null
         |violence/graphic |(/) |{noformat:nopanel=true}BigDecimal{noformat} | The score for the category &#39;violence/graphic&#39;. |  | null
         
        {anchor:CreateRunRequestModelAnchor}
        h3. CreateRunRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |assistant_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the [assistant\](/docs/api-reference/assistants) to use to execute this run. |  | null
         |model |(x) |{noformat:nopanel=true}CreateRunRequest_model{noformat} |  |  | null
         |instructions |(x) |{noformat:nopanel=true}String{noformat} | Overrides the [instructions\](/docs/api-reference/assistants/createAssistant) of the assistant. This is useful for modifying the behavior on a per-run basis. |  | null
         |additional_instructions |(x) |{noformat:nopanel=true}String{noformat} | Appends additional instructions at the end of the instructions for the run. This is useful for modifying the behavior on a per-run basis without overriding other instructions. |  | null
         |additional_messages |(x) |{noformat:nopanel=true}array[CreateMessageRequest]{noformat} | Adds additional messages to the thread before creating the run. |  | null
         |tools |(x) |{noformat:nopanel=true}array[AssistantObject_tools_inner]{noformat} | Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis. |  | null
         |metadata |(x) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         |temperature |(x) |{noformat:nopanel=true}BigDecimal{noformat} | What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. |  | 1
         |stream |(x) |{noformat:nopanel=true}Boolean{noformat} | If &#x60;true&#x60;, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a &#x60;data: [DONE\]&#x60; message. |  | null
         |max_prompt_tokens |(x) |{noformat:nopanel=true}Integer{noformat} | The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of prompt tokens specified, the run will end with status &#x60;complete&#x60;. See &#x60;incomplete_details&#x60; for more info. |  | null
         |max_completion_tokens |(x) |{noformat:nopanel=true}Integer{noformat} | The maximum number of completion tokens that may be used over the course of the run. The run will make a best effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds the number of completion tokens specified, the run will end with status &#x60;complete&#x60;. See &#x60;incomplete_details&#x60; for more info. |  | null
         |truncation_strategy |(x) |{noformat:nopanel=true}TruncationObject{noformat} |  |  | null
         |tool_choice |(x) |{noformat:nopanel=true}AssistantsApiToolChoiceOption{noformat} |  |  | null
         |response_format |(x) |{noformat:nopanel=true}AssistantsApiResponseFormatOption{noformat} |  |  | null
         
        {anchor:CreateRunRequestModelModelAnchor}
        h3. CreateRunRequestModel

        The ID of the [Model\](/docs/api-reference/models) to be used to execute this run. If a value is provided here, it will override the model associated with the assistant. If not, the model associated with the assistant will be used.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateSpeechRequestModelAnchor}
        h3. CreateSpeechRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |model |(/) |{noformat:nopanel=true}CreateSpeechRequest_model{noformat} |  |  | null
         |input |(/) |{noformat:nopanel=true}String{noformat} | The text to generate audio for. The maximum length is 4096 characters. |  | null
         |voice |(/) |{noformat:nopanel=true}String{noformat} | The voice to use when generating the audio. Supported voices are &#x60;alloy&#x60;, &#x60;echo&#x60;, &#x60;fable&#x60;, &#x60;onyx&#x60;, &#x60;nova&#x60;, and &#x60;shimmer&#x60;. Previews of the voices are available in the [Text to speech guide\](/docs/guides/text-to-speech/voice-options). |  [alloy, echo, fable, onyx, nova, shimmer]  | null
         |response_format |(x) |{noformat:nopanel=true}String{noformat} | The format to audio in. Supported formats are &#x60;mp3&#x60;, &#x60;opus&#x60;, &#x60;aac&#x60;, &#x60;flac&#x60;, &#x60;wav&#x60;, and &#x60;pcm&#x60;. |  [mp3, opus, aac, flac, wav, pcm]  | null
         |speed |(x) |{noformat:nopanel=true}BigDecimal{noformat} | The speed of the generated audio. Select a value from &#x60;0.25&#x60; to &#x60;4.0&#x60;. &#x60;1.0&#x60; is the default. |  | null
         
        {anchor:CreateSpeechRequestModelModelAnchor}
        h3. CreateSpeechRequestModel

        One of the available [TTS models\](/docs/models/tts): `tts-1` or `tts-1-hd`

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateThreadAndRunRequestModelAnchor}
        h3. CreateThreadAndRunRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |assistant_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the [assistant\](/docs/api-reference/assistants) to use to execute this run. |  | null
         |thread |(x) |{noformat:nopanel=true}CreateThreadRequest{noformat} |  |  | null
         |model |(x) |{noformat:nopanel=true}CreateRunRequest_model{noformat} |  |  | null
         |instructions |(x) |{noformat:nopanel=true}String{noformat} | Override the default system message of the assistant. This is useful for modifying the behavior on a per-run basis. |  | null
         |tools |(x) |{noformat:nopanel=true}array[CreateThreadAndRunRequest_tools_inner]{noformat} | Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis. |  | null
         |metadata |(x) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         |temperature |(x) |{noformat:nopanel=true}BigDecimal{noformat} | What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. |  | 1
         |stream |(x) |{noformat:nopanel=true}Boolean{noformat} | If &#x60;true&#x60;, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a &#x60;data: [DONE\]&#x60; message. |  | null
         |max_prompt_tokens |(x) |{noformat:nopanel=true}Integer{noformat} | The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of prompt tokens specified, the run will end with status &#x60;complete&#x60;. See &#x60;incomplete_details&#x60; for more info. |  | null
         |max_completion_tokens |(x) |{noformat:nopanel=true}Integer{noformat} | The maximum number of completion tokens that may be used over the course of the run. The run will make a best effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds the number of completion tokens specified, the run will end with status &#x60;incomplete&#x60;. See &#x60;incomplete_details&#x60; for more info. |  | null
         |truncation_strategy |(x) |{noformat:nopanel=true}TruncationObject{noformat} |  |  | null
         |tool_choice |(x) |{noformat:nopanel=true}AssistantsApiToolChoiceOption{noformat} |  |  | null
         |response_format |(x) |{noformat:nopanel=true}AssistantsApiResponseFormatOption{noformat} |  |  | null
         
        {anchor:CreateThreadAndRunRequestToolsInnerModelAnchor}
        h3. CreateThreadAndRunRequestToolsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool being defined: &#x60;code_interpreter&#x60; |  [code_interpreter, retrieval, function]  | null
         |function |(/) |{noformat:nopanel=true}FunctionObject{noformat} |  |  | null
         
        {anchor:CreateThreadRequestModelAnchor}
        h3. CreateThreadRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |messages |(x) |{noformat:nopanel=true}array[CreateMessageRequest]{noformat} | A list of [messages\](/docs/api-reference/messages) to start the thread with. |  | null
         |metadata |(x) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         
        {anchor:CreateTranscription200ResponseModelAnchor}
        h3. CreateTranscription200Response

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |text |(/) |{noformat:nopanel=true}String{noformat} | The transcribed text. |  | null
         |language |(/) |{noformat:nopanel=true}String{noformat} | The language of the input audio. |  | null
         |duration |(/) |{noformat:nopanel=true}String{noformat} | The duration of the input audio. |  | null
         |words |(x) |{noformat:nopanel=true}array[TranscriptionWord]{noformat} | Extracted words and their corresponding timestamps. |  | null
         |segments |(x) |{noformat:nopanel=true}array[TranscriptionSegment]{noformat} | Segments of the transcribed text and their corresponding details. |  | null
         
        {anchor:CreateTranscriptionRequestModelModelAnchor}
        h3. CreateTranscriptionRequestModel

        ID of the model to use. Only `whisper-1` (which is powered by our open source Whisper V2 model) is currently available.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:CreateTranscriptionResponseJsonModelAnchor}
        h3. CreateTranscriptionResponseJson

        Represents a transcription response returned by model, based on the provided input.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |text |(/) |{noformat:nopanel=true}String{noformat} | The transcribed text. |  | null
         
        {anchor:CreateTranscriptionResponseVerboseJsonModelAnchor}
        h3. CreateTranscriptionResponseVerboseJson

        Represents a verbose json transcription response returned by model, based on the provided input.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |language |(/) |{noformat:nopanel=true}String{noformat} | The language of the input audio. |  | null
         |duration |(/) |{noformat:nopanel=true}String{noformat} | The duration of the input audio. |  | null
         |text |(/) |{noformat:nopanel=true}String{noformat} | The transcribed text. |  | null
         |words |(x) |{noformat:nopanel=true}array[TranscriptionWord]{noformat} | Extracted words and their corresponding timestamps. |  | null
         |segments |(x) |{noformat:nopanel=true}array[TranscriptionSegment]{noformat} | Segments of the transcribed text and their corresponding details. |  | null
         
        {anchor:CreateTranslation200ResponseModelAnchor}
        h3. CreateTranslation200Response

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |text |(/) |{noformat:nopanel=true}String{noformat} | The translated text. |  | null
         |language |(/) |{noformat:nopanel=true}String{noformat} | The language of the output translation (always &#x60;english&#x60;). |  | null
         |duration |(/) |{noformat:nopanel=true}String{noformat} | The duration of the input audio. |  | null
         |segments |(x) |{noformat:nopanel=true}array[TranscriptionSegment]{noformat} | Segments of the translated text and their corresponding details. |  | null
         
        {anchor:CreateTranslationResponseJsonModelAnchor}
        h3. CreateTranslationResponseJson

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |text |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         
        {anchor:CreateTranslationResponseVerboseJsonModelAnchor}
        h3. CreateTranslationResponseVerboseJson

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |language |(/) |{noformat:nopanel=true}String{noformat} | The language of the output translation (always &#x60;english&#x60;). |  | null
         |duration |(/) |{noformat:nopanel=true}String{noformat} | The duration of the input audio. |  | null
         |text |(/) |{noformat:nopanel=true}String{noformat} | The translated text. |  | null
         |segments |(x) |{noformat:nopanel=true}array[TranscriptionSegment]{noformat} | Segments of the translated text and their corresponding details. |  | null
         
        {anchor:DeleteAssistantFileResponseModelAnchor}
        h3. DeleteAssistantFileResponse

        Deletes the association between the assistant and the file, but does not delete the [File\](/docs/api-reference/files) object itself.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |deleted |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [assistant.file.deleted]  | null
         
        {anchor:DeleteAssistantResponseModelAnchor}
        h3. DeleteAssistantResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |deleted |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [assistant.deleted]  | null
         
        {anchor:DeleteFileResponseModelAnchor}
        h3. DeleteFileResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [file]  | null
         |deleted |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | null
         
        {anchor:DeleteMessageResponseModelAnchor}
        h3. DeleteMessageResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |deleted |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.message.deleted]  | null
         
        {anchor:DeleteModelResponseModelAnchor}
        h3. DeleteModelResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |deleted |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         
        {anchor:DeleteThreadResponseModelAnchor}
        h3. DeleteThreadResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |deleted |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.deleted]  | null
         
        {anchor:DoneEventModelAnchor}
        h3. DoneEvent

        Occurs when a stream ends.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [done]  | null
         |data |(/) |{noformat:nopanel=true}String{noformat} |  |  [[DONE]]  | null
         
        {anchor:EmbeddingModelAnchor}
        h3. Embedding

        Represents an embedding vector returned by embedding endpoint.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the embedding in the list of embeddings. |  | null
         |embedding |(/) |{noformat:nopanel=true}array[BigDecimal]{noformat} | The embedding vector, which is a list of floats. The length of vector depends on the model as listed in the [embedding guide\](/docs/guides/embeddings). |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &quot;embedding&quot;. |  [embedding]  | null
         
        {anchor:ErrorModelAnchor}
        h3. Error

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |code |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |message |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |param |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         
        {anchor:ErrorEventModelAnchor}
        h3. ErrorEvent

        Occurs when an [error\](/docs/guides/error-codes/api-errors) occurs. This can happen due to an internal server error or a timeout.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [error]  | null
         |data |(/) |{noformat:nopanel=true}Error{noformat} |  |  | null
         
        {anchor:ErrorResponseModelAnchor}
        h3. ErrorResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |error |(/) |{noformat:nopanel=true}Error{noformat} |  |  | null
         
        {anchor:FineTuningIntegrationModelAnchor}
        h3. FineTuningIntegration

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the integration being enabled for the fine-tuning job |  [wandb]  | null
         |wandb |(/) |{noformat:nopanel=true}CreateFineTuningJobRequest_integrations_inner_wandb{noformat} |  |  | null
         
        {anchor:FineTuningJobModelAnchor}
        h3. FineTuningJob

        The `fine_tuning.job` object represents a fine-tuning job that has been created through the API.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The object identifier, which can be referenced in the API endpoints. |  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the fine-tuning job was created. |  | null
         |error |(/) |{noformat:nopanel=true}FineTuningJob_error{noformat} |  |  | null
         |fine_tuned_model |(/) |{noformat:nopanel=true}String{noformat} | The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running. |  | null
         |finished_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running. |  | null
         |hyperparameters |(/) |{noformat:nopanel=true}FineTuningJob_hyperparameters{noformat} |  |  | null
         |model |(/) |{noformat:nopanel=true}String{noformat} | The base model that is being fine-tuned. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &quot;fine_tuning.job&quot;. |  [fine_tuning.job]  | null
         |organization_id |(/) |{noformat:nopanel=true}String{noformat} | The organization that owns the fine-tuning job. |  | null
         |result_files |(/) |{noformat:nopanel=true}array[String]{noformat} | The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API\](/docs/api-reference/files/retrieve-contents). |  | null
         |status |(/) |{noformat:nopanel=true}String{noformat} | The current status of the fine-tuning job, which can be either &#x60;validating_files&#x60;, &#x60;queued&#x60;, &#x60;running&#x60;, &#x60;succeeded&#x60;, &#x60;failed&#x60;, or &#x60;cancelled&#x60;. |  [validating_files, queued, running, succeeded, failed, cancelled]  | null
         |trained_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running. |  | null
         |training_file |(/) |{noformat:nopanel=true}String{noformat} | The file ID used for training. You can retrieve the training data with the [Files API\](/docs/api-reference/files/retrieve-contents). |  | null
         |validation_file |(/) |{noformat:nopanel=true}String{noformat} | The file ID used for validation. You can retrieve the validation results with the [Files API\](/docs/api-reference/files/retrieve-contents). |  | null
         |integrations |(x) |{noformat:nopanel=true}array[FineTuningJob_integrations_inner]{noformat} | A list of integrations to enable for this fine-tuning job. |  | null
         |seed |(/) |{noformat:nopanel=true}Integer{noformat} | The seed used for the fine-tuning job. |  | null
         
        {anchor:FineTuningJobCheckpointModelAnchor}
        h3. FineTuningJobCheckpoint

        The `fine_tuning.job.checkpoint` object represents a model checkpoint for a fine-tuning job that is ready to use.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The checkpoint identifier, which can be referenced in the API endpoints. |  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the checkpoint was created. |  | null
         |fine_tuned_model_checkpoint |(/) |{noformat:nopanel=true}String{noformat} | The name of the fine-tuned checkpoint model that is created. |  | null
         |step_number |(/) |{noformat:nopanel=true}Integer{noformat} | The step number that the checkpoint was created at. |  | null
         |metrics |(/) |{noformat:nopanel=true}FineTuningJobCheckpoint_metrics{noformat} |  |  | null
         |fine_tuning_job_id |(/) |{noformat:nopanel=true}String{noformat} | The name of the fine-tuning job that this checkpoint was created from. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &quot;fine_tuning.job.checkpoint&quot;. |  [fine_tuning.job.checkpoint]  | null
         
        {anchor:FineTuningJobCheckpointMetricsModelAnchor}
        h3. FineTuningJobCheckpointMetrics

        Metrics at the step number during the fine-tuning job.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |step |(x) |{noformat:nopanel=true}BigDecimal{noformat} |  |  | null
         |train_loss |(x) |{noformat:nopanel=true}BigDecimal{noformat} |  |  | null
         |train_mean_token_accuracy |(x) |{noformat:nopanel=true}BigDecimal{noformat} |  |  | null
         |valid_loss |(x) |{noformat:nopanel=true}BigDecimal{noformat} |  |  | null
         |valid_mean_token_accuracy |(x) |{noformat:nopanel=true}BigDecimal{noformat} |  |  | null
         |full_valid_loss |(x) |{noformat:nopanel=true}BigDecimal{noformat} |  |  | null
         |full_valid_mean_token_accuracy |(x) |{noformat:nopanel=true}BigDecimal{noformat} |  |  | null
         
        {anchor:FineTuningJobErrorModelAnchor}
        h3. FineTuningJobError

        For fine-tuning jobs that have `failed`, this will contain more information on the cause of the failure.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |code |(/) |{noformat:nopanel=true}String{noformat} | A machine-readable error code. |  | null
         |message |(/) |{noformat:nopanel=true}String{noformat} | A human-readable error message. |  | null
         |param |(/) |{noformat:nopanel=true}String{noformat} | The parameter that was invalid, usually &#x60;training_file&#x60; or &#x60;validation_file&#x60;. This field will be null if the failure was not parameter-specific. |  | null
         
        {anchor:FineTuningJobEventModelAnchor}
        h3. FineTuningJobEvent

        Fine-tuning job event object

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |level |(/) |{noformat:nopanel=true}String{noformat} |  |  [info, warn, error]  | null
         |message |(/) |{noformat:nopanel=true}String{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [fine_tuning.job.event]  | null
         
        {anchor:FineTuningJobHyperparametersModelAnchor}
        h3. FineTuningJobHyperparameters

        The hyperparameters used for the fine-tuning job. See the [fine-tuning guide\](/docs/guides/fine-tuning) for more details.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |n_epochs |(/) |{noformat:nopanel=true}FineTuningJob_hyperparameters_n_epochs{noformat} |  |  | null
         
        {anchor:FineTuningJobHyperparametersNEpochsModelAnchor}
        h3. FineTuningJobHyperparametersNEpochs

        The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.
"auto" decides the optimal number of epochs based on the size of the dataset. If setting the number manually, we support any number between 1 and 50 epochs.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         
        {anchor:FineTuningJobIntegrationsInnerModelAnchor}
        h3. FineTuningJobIntegrationsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of the integration being enabled for the fine-tuning job |  [wandb]  | null
         |wandb |(/) |{noformat:nopanel=true}CreateFineTuningJobRequest_integrations_inner_wandb{noformat} |  |  | null
         
        {anchor:FunctionObjectModelAnchor}
        h3. FunctionObject

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |description |(x) |{noformat:nopanel=true}String{noformat} | A description of what the function does, used by the model to choose when and how to call the function. |  | null
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64. |  | null
         |parameters |(x) |{noformat:nopanel=true}map[String, oas_any_type_not_mapped]{noformat} | The parameters the functions accepts, described as a JSON Schema object. See the [guide\](/docs/guides/text-generation/function-calling) for examples, and the [JSON Schema reference\](https://json-schema.org/understanding-json-schema/) for documentation about the format. 

Omitting &#x60;parameters&#x60; defines a function with an empty parameter list. |  | null
         
        {anchor:ImageModelAnchor}
        h3. Image

        Represents the url or the content of an image generated by the OpenAI API.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |b64_json |(x) |{noformat:nopanel=true}String{noformat} | The base64-encoded JSON of the generated image, if &#x60;response_format&#x60; is &#x60;b64_json&#x60;. |  | null
         |url |(x) |{noformat:nopanel=true}String{noformat} | The URL of the generated image, if &#x60;response_format&#x60; is &#x60;url&#x60; (default). |  | null
         |revised_prompt |(x) |{noformat:nopanel=true}String{noformat} | The prompt that was used to generate the image, if there was any revision to the prompt. |  | null
         
        {anchor:ImagesResponseModelAnchor}
        h3. ImagesResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |created |(/) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |data |(/) |{noformat:nopanel=true}array[Image]{noformat} |  |  | null
         
        {anchor:ListAssistantFilesResponseModelAnchor}
        h3. ListAssistantFilesResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  | list
         |data |(/) |{noformat:nopanel=true}array[AssistantFileObject]{noformat} |  |  | null
         |first_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | file-abc123
         |last_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | file-abc456
         |has_more |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | false
         
        {anchor:ListAssistantsResponseModelAnchor}
        h3. ListAssistantsResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  | list
         |data |(/) |{noformat:nopanel=true}array[AssistantObject]{noformat} |  |  | null
         |first_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | asst_abc123
         |last_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | asst_abc456
         |has_more |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | false
         
        {anchor:ListFilesResponseModelAnchor}
        h3. ListFilesResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |data |(/) |{noformat:nopanel=true}array[OpenAIFile]{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [list]  | null
         
        {anchor:ListFineTuningJobCheckpointsResponseModelAnchor}
        h3. ListFineTuningJobCheckpointsResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |data |(/) |{noformat:nopanel=true}array[FineTuningJobCheckpoint]{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [list]  | null
         |first_id |(x) |{noformat:nopanel=true}String{noformat} |  |  | null
         |last_id |(x) |{noformat:nopanel=true}String{noformat} |  |  | null
         |has_more |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | null
         
        {anchor:ListFineTuningJobEventsResponseModelAnchor}
        h3. ListFineTuningJobEventsResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |data |(/) |{noformat:nopanel=true}array[FineTuningJobEvent]{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [list]  | null
         
        {anchor:ListMessageFilesResponseModelAnchor}
        h3. ListMessageFilesResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  | list
         |data |(/) |{noformat:nopanel=true}array[MessageFileObject]{noformat} |  |  | null
         |first_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | file-abc123
         |last_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | file-abc456
         |has_more |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | false
         
        {anchor:ListMessagesResponseModelAnchor}
        h3. ListMessagesResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  | list
         |data |(/) |{noformat:nopanel=true}array[MessageObject]{noformat} |  |  | null
         |first_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | msg_abc123
         |last_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | msg_abc123
         |has_more |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | false
         
        {anchor:ListModelsResponseModelAnchor}
        h3. ListModelsResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [list]  | null
         |data |(/) |{noformat:nopanel=true}array[Model]{noformat} |  |  | null
         
        {anchor:ListPaginatedFineTuningJobsResponseModelAnchor}
        h3. ListPaginatedFineTuningJobsResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |data |(/) |{noformat:nopanel=true}array[FineTuningJob]{noformat} |  |  | null
         |has_more |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  [list]  | null
         
        {anchor:ListRunStepsResponseModelAnchor}
        h3. ListRunStepsResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  | list
         |data |(/) |{noformat:nopanel=true}array[RunStepObject]{noformat} |  |  | null
         |first_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | step_abc123
         |last_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | step_abc456
         |has_more |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | false
         
        {anchor:ListRunsResponseModelAnchor}
        h3. ListRunsResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  | list
         |data |(/) |{noformat:nopanel=true}array[RunObject]{noformat} |  |  | null
         |first_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | run_abc123
         |last_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | run_abc456
         |has_more |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | false
         
        {anchor:ListThreadsResponseModelAnchor}
        h3. ListThreadsResponse

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |object |(/) |{noformat:nopanel=true}String{noformat} |  |  | list
         |data |(/) |{noformat:nopanel=true}array[ThreadObject]{noformat} |  |  | null
         |first_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | asst_abc123
         |last_id |(/) |{noformat:nopanel=true}String{noformat} |  |  | asst_abc456
         |has_more |(/) |{noformat:nopanel=true}Boolean{noformat} |  |  | false
         
        {anchor:MessageContentImageFileObjectModelAnchor}
        h3. MessageContentImageFileObject

        References an image [File\](/docs/api-reference/files) in the content of a message.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;image_file&#x60;. |  [image_file]  | null
         |image_file |(/) |{noformat:nopanel=true}MessageContentImageFileObject_image_file{noformat} |  |  | null
         
        {anchor:MessageContentImageFileObjectImageFileModelAnchor}
        h3. MessageContentImageFileObjectImageFile

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |file_id |(/) |{noformat:nopanel=true}String{noformat} | The [File\](/docs/api-reference/files) ID of the image in the message content. |  | null
         
        {anchor:MessageContentTextAnnotationsFileCitationObjectModelAnchor}
        h3. MessageContentTextAnnotationsFileCitationObject

        A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the "retrieval" tool to search files.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;file_citation&#x60;. |  [file_citation]  | null
         |text |(/) |{noformat:nopanel=true}String{noformat} | The text in the message content that needs to be replaced. |  | null
         |file_citation |(/) |{noformat:nopanel=true}MessageContentTextAnnotationsFileCitationObject_file_citation{noformat} |  |  | null
         |start_index |(/) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |end_index |(/) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         
        {anchor:MessageContentTextAnnotationsFileCitationObjectFileCitationModelAnchor}
        h3. MessageContentTextAnnotationsFileCitationObjectFileCitation

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |file_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the specific File the citation is from. |  | null
         |quote |(/) |{noformat:nopanel=true}String{noformat} | The specific quote in the file. |  | null
         
        {anchor:MessageContentTextAnnotationsFilePathObjectModelAnchor}
        h3. MessageContentTextAnnotationsFilePathObject

        A URL for the file that's generated when the assistant used the `code_interpreter` tool to generate a file.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;file_path&#x60;. |  [file_path]  | null
         |text |(/) |{noformat:nopanel=true}String{noformat} | The text in the message content that needs to be replaced. |  | null
         |file_path |(/) |{noformat:nopanel=true}MessageContentTextAnnotationsFilePathObject_file_path{noformat} |  |  | null
         |start_index |(/) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |end_index |(/) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         
        {anchor:MessageContentTextAnnotationsFilePathObjectFilePathModelAnchor}
        h3. MessageContentTextAnnotationsFilePathObjectFilePath

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |file_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the file that was generated. |  | null
         
        {anchor:MessageContentTextObjectModelAnchor}
        h3. MessageContentTextObject

        The text content that is part of a message.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;text&#x60;. |  [text]  | null
         |text |(/) |{noformat:nopanel=true}MessageContentTextObject_text{noformat} |  |  | null
         
        {anchor:MessageContentTextObjectTextModelAnchor}
        h3. MessageContentTextObjectText

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |value |(/) |{noformat:nopanel=true}String{noformat} | The data that makes up the text. |  | null
         |annotations |(/) |{noformat:nopanel=true}array[MessageContentTextObject_text_annotations_inner]{noformat} |  |  | null
         
        {anchor:MessageContentTextObjectTextAnnotationsInnerModelAnchor}
        h3. MessageContentTextObjectTextAnnotationsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;file_citation&#x60;. |  [file_citation, file_path]  | null
         |text |(/) |{noformat:nopanel=true}String{noformat} | The text in the message content that needs to be replaced. |  | null
         |file_citation |(/) |{noformat:nopanel=true}MessageContentTextAnnotationsFileCitationObject_file_citation{noformat} |  |  | null
         |start_index |(/) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |end_index |(/) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |file_path |(/) |{noformat:nopanel=true}MessageContentTextAnnotationsFilePathObject_file_path{noformat} |  |  | null
         
        {anchor:MessageDeltaContentImageFileObjectModelAnchor}
        h3. MessageDeltaContentImageFileObject

        References an image [File\](/docs/api-reference/files) in the content of a message.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the content part in the message. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;image_file&#x60;. |  [image_file]  | null
         |image_file |(x) |{noformat:nopanel=true}MessageDeltaContentImageFileObject_image_file{noformat} |  |  | null
         
        {anchor:MessageDeltaContentImageFileObjectImageFileModelAnchor}
        h3. MessageDeltaContentImageFileObjectImageFile

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |file_id |(x) |{noformat:nopanel=true}String{noformat} | The [File\](/docs/api-reference/files) ID of the image in the message content. |  | null
         
        {anchor:MessageDeltaContentTextAnnotationsFileCitationObjectModelAnchor}
        h3. MessageDeltaContentTextAnnotationsFileCitationObject

        A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the "retrieval" tool to search files.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the annotation in the text content part. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;file_citation&#x60;. |  [file_citation]  | null
         |text |(x) |{noformat:nopanel=true}String{noformat} | The text in the message content that needs to be replaced. |  | null
         |file_citation |(x) |{noformat:nopanel=true}MessageDeltaContentTextAnnotationsFileCitationObject_file_citation{noformat} |  |  | null
         |start_index |(x) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |end_index |(x) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         
        {anchor:MessageDeltaContentTextAnnotationsFileCitationObjectFileCitationModelAnchor}
        h3. MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |file_id |(x) |{noformat:nopanel=true}String{noformat} | The ID of the specific File the citation is from. |  | null
         |quote |(x) |{noformat:nopanel=true}String{noformat} | The specific quote in the file. |  | null
         
        {anchor:MessageDeltaContentTextAnnotationsFilePathObjectModelAnchor}
        h3. MessageDeltaContentTextAnnotationsFilePathObject

        A URL for the file that's generated when the assistant used the `code_interpreter` tool to generate a file.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the annotation in the text content part. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;file_path&#x60;. |  [file_path]  | null
         |text |(x) |{noformat:nopanel=true}String{noformat} | The text in the message content that needs to be replaced. |  | null
         |file_path |(x) |{noformat:nopanel=true}MessageDeltaContentTextAnnotationsFilePathObject_file_path{noformat} |  |  | null
         |start_index |(x) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |end_index |(x) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         
        {anchor:MessageDeltaContentTextAnnotationsFilePathObjectFilePathModelAnchor}
        h3. MessageDeltaContentTextAnnotationsFilePathObjectFilePath

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |file_id |(x) |{noformat:nopanel=true}String{noformat} | The ID of the file that was generated. |  | null
         
        {anchor:MessageDeltaContentTextObjectModelAnchor}
        h3. MessageDeltaContentTextObject

        The text content that is part of a message.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the content part in the message. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;text&#x60;. |  [text]  | null
         |text |(x) |{noformat:nopanel=true}MessageDeltaContentTextObject_text{noformat} |  |  | null
         
        {anchor:MessageDeltaContentTextObjectTextModelAnchor}
        h3. MessageDeltaContentTextObjectText

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |value |(x) |{noformat:nopanel=true}String{noformat} | The data that makes up the text. |  | null
         |annotations |(x) |{noformat:nopanel=true}array[MessageDeltaContentTextObject_text_annotations_inner]{noformat} |  |  | null
         
        {anchor:MessageDeltaContentTextObjectTextAnnotationsInnerModelAnchor}
        h3. MessageDeltaContentTextObjectTextAnnotationsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the annotation in the text content part. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;file_citation&#x60;. |  [file_citation, file_path]  | null
         |text |(x) |{noformat:nopanel=true}String{noformat} | The text in the message content that needs to be replaced. |  | null
         |file_citation |(x) |{noformat:nopanel=true}MessageDeltaContentTextAnnotationsFileCitationObject_file_citation{noformat} |  |  | null
         |start_index |(x) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |end_index |(x) |{noformat:nopanel=true}Integer{noformat} |  |  | null
         |file_path |(x) |{noformat:nopanel=true}MessageDeltaContentTextAnnotationsFilePathObject_file_path{noformat} |  |  | null
         
        {anchor:MessageDeltaObjectModelAnchor}
        h3. MessageDeltaObject

        Represents a message delta i.e. any changed fields on a message during streaming.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The identifier of the message, which can be referenced in API endpoints. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;thread.message.delta&#x60;. |  [thread.message.delta]  | null
         |delta |(/) |{noformat:nopanel=true}MessageDeltaObject_delta{noformat} |  |  | null
         
        {anchor:MessageDeltaObjectDeltaModelAnchor}
        h3. MessageDeltaObjectDelta

        The delta containing the fields that have changed on the Message.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |role |(x) |{noformat:nopanel=true}String{noformat} | The entity that produced the message. One of &#x60;user&#x60; or &#x60;assistant&#x60;. |  [user, assistant]  | null
         |content |(x) |{noformat:nopanel=true}array[MessageDeltaObject_delta_content_inner]{noformat} | The content of the message in array of text and/or images. |  | null
         |file_ids |(x) |{noformat:nopanel=true}array[String]{noformat} | A list of [file\](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message. |  | null
         
        {anchor:MessageDeltaObjectDeltaContentInnerModelAnchor}
        h3. MessageDeltaObjectDeltaContentInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the content part in the message. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;image_file&#x60;. |  [image_file, text]  | null
         |image_file |(x) |{noformat:nopanel=true}MessageDeltaContentImageFileObject_image_file{noformat} |  |  | null
         |text |(x) |{noformat:nopanel=true}MessageDeltaContentTextObject_text{noformat} |  |  | null
         
        {anchor:MessageFileObjectModelAnchor}
        h3. MessageFileObject

        A list of files attached to a `message`.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The identifier, which can be referenced in API endpoints. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;thread.message.file&#x60;. |  [thread.message.file]  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the message file was created. |  | null
         |message_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the [message\](/docs/api-reference/messages) that the [File\](/docs/api-reference/files) is attached to. |  | null
         
        {anchor:MessageObjectModelAnchor}
        h3. MessageObject

        Represents a message within a [thread\](/docs/api-reference/threads).

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The identifier, which can be referenced in API endpoints. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;thread.message&#x60;. |  [thread.message]  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the message was created. |  | null
         |thread_id |(/) |{noformat:nopanel=true}String{noformat} | The [thread\](/docs/api-reference/threads) ID that this message belongs to. |  | null
         |status |(/) |{noformat:nopanel=true}String{noformat} | The status of the message, which can be either &#x60;in_progress&#x60;, &#x60;incomplete&#x60;, or &#x60;completed&#x60;. |  [in_progress, incomplete, completed]  | null
         |incomplete_details |(/) |{noformat:nopanel=true}MessageObject_incomplete_details{noformat} |  |  | null
         |completed_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the message was completed. |  | null
         |incomplete_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the message was marked as incomplete. |  | null
         |role |(/) |{noformat:nopanel=true}String{noformat} | The entity that produced the message. One of &#x60;user&#x60; or &#x60;assistant&#x60;. |  [user, assistant]  | null
         |content |(/) |{noformat:nopanel=true}array[MessageObject_content_inner]{noformat} | The content of the message in array of text and/or images. |  | null
         |assistant_id |(/) |{noformat:nopanel=true}String{noformat} | If applicable, the ID of the [assistant\](/docs/api-reference/assistants) that authored this message. |  | null
         |run_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the [run\](/docs/api-reference/runs) associated with the creation of this message. Value is &#x60;null&#x60; when messages are created manually using the create message or create thread endpoints. |  | null
         |file_ids |(/) |{noformat:nopanel=true}array[String]{noformat} | A list of [file\](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message. |  | null
         |metadata |(/) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         
        {anchor:MessageObjectContentInnerModelAnchor}
        h3. MessageObjectContentInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;image_file&#x60;. |  [image_file, text]  | null
         |image_file |(/) |{noformat:nopanel=true}MessageContentImageFileObject_image_file{noformat} |  |  | null
         |text |(/) |{noformat:nopanel=true}MessageContentTextObject_text{noformat} |  |  | null
         
        {anchor:MessageObjectIncompleteDetailsModelAnchor}
        h3. MessageObjectIncompleteDetails

        On an incomplete message, details about why the message is incomplete.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |reason |(/) |{noformat:nopanel=true}String{noformat} | The reason the message is incomplete. |  [content_filter, max_tokens, run_cancelled, run_expired, run_failed]  | null
         
        {anchor:MessageStreamEventModelAnchor}
        h3. MessageStreamEvent

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.message.incomplete]  | null
         |data |(/) |{noformat:nopanel=true}MessageObject{noformat} |  |  | null
         
        {anchor:MessageStreamEventOneOfModelAnchor}
        h3. MessageStreamEventOneOf

        Occurs when a [message\](/docs/api-reference/messages/object) is created.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.message.created]  | null
         |data |(/) |{noformat:nopanel=true}MessageObject{noformat} |  |  | null
         
        {anchor:MessageStreamEventOneOf1ModelAnchor}
        h3. MessageStreamEventOneOf1

        Occurs when a [message\](/docs/api-reference/messages/object) moves to an `in_progress` state.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.message.in_progress]  | null
         |data |(/) |{noformat:nopanel=true}MessageObject{noformat} |  |  | null
         
        {anchor:MessageStreamEventOneOf2ModelAnchor}
        h3. MessageStreamEventOneOf2

        Occurs when parts of a [Message\](/docs/api-reference/messages/object) are being streamed.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.message.delta]  | null
         |data |(/) |{noformat:nopanel=true}MessageDeltaObject{noformat} |  |  | null
         
        {anchor:MessageStreamEventOneOf3ModelAnchor}
        h3. MessageStreamEventOneOf3

        Occurs when a [message\](/docs/api-reference/messages/object) is completed.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.message.completed]  | null
         |data |(/) |{noformat:nopanel=true}MessageObject{noformat} |  |  | null
         
        {anchor:MessageStreamEventOneOf4ModelAnchor}
        h3. MessageStreamEventOneOf4

        Occurs when a [message\](/docs/api-reference/messages/object) ends before it is completed.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.message.incomplete]  | null
         |data |(/) |{noformat:nopanel=true}MessageObject{noformat} |  |  | null
         
        {anchor:ModelModelAnchor}
        h3. Model

        Describes an OpenAI model offering that can be used with the API.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The model identifier, which can be referenced in the API endpoints. |  | null
         |created |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) when the model was created. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &quot;model&quot;. |  [model]  | null
         |owned_by |(/) |{noformat:nopanel=true}String{noformat} | The organization that owns the model. |  | null
         
        {anchor:ModifyAssistantRequestModelAnchor}
        h3. ModifyAssistantRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |model |(x) |{noformat:nopanel=true}String{noformat} |  |  | null
         |name |(x) |{noformat:nopanel=true}String{noformat} | The name of the assistant. The maximum length is 256 characters. |  | null
         |description |(x) |{noformat:nopanel=true}String{noformat} | The description of the assistant. The maximum length is 512 characters. |  | null
         |instructions |(x) |{noformat:nopanel=true}String{noformat} | The system instructions that the assistant uses. The maximum length is 256,000 characters. |  | null
         |tools |(x) |{noformat:nopanel=true}array[AssistantObject_tools_inner]{noformat} | A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types &#x60;code_interpreter&#x60;, &#x60;retrieval&#x60;, or &#x60;function&#x60;. |  | null
         |file_ids |(x) |{noformat:nopanel=true}array[String]{noformat} | A list of [File\](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order. If a file was previously attached to the list but does not show up in the list, it will be deleted from the assistant. |  | null
         |metadata |(x) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         
        {anchor:ModifyMessageRequestModelAnchor}
        h3. ModifyMessageRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |metadata |(x) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         
        {anchor:ModifyRunRequestModelAnchor}
        h3. ModifyRunRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |metadata |(x) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         
        {anchor:ModifyThreadRequestModelAnchor}
        h3. ModifyThreadRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |metadata |(x) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         
        {anchor:OpenAIFileModelAnchor}
        h3. OpenAIFile

        The `File` object represents a document that has been uploaded to OpenAI.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The file identifier, which can be referenced in the API endpoints. |  | null
         |bytes |(/) |{noformat:nopanel=true}Integer{noformat} | The size of the file, in bytes. |  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the file was created. |  | null
         |filename |(/) |{noformat:nopanel=true}String{noformat} | The name of the file. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;file&#x60;. |  [file]  | null
         |purpose |(/) |{noformat:nopanel=true}String{noformat} | The intended purpose of the file. Supported values are &#x60;fine-tune&#x60;, &#x60;fine-tune-results&#x60;, &#x60;assistants&#x60;, and &#x60;assistants_output&#x60;. |  [fine-tune, fine-tune-results, assistants, assistants_output]  | null
         |status |(/) |{noformat:nopanel=true}String{noformat} | Deprecated. The current status of the file, which can be either &#x60;uploaded&#x60;, &#x60;processed&#x60;, or &#x60;error&#x60;. |  [uploaded, processed, error]  | null
         |status_details |(x) |{noformat:nopanel=true}String{noformat} | Deprecated. For details on why a fine-tuning training file failed validation, see the &#x60;error&#x60; field on &#x60;fine_tuning.job&#x60;. |  | null
         
        {anchor:RunCompletionUsageModelAnchor}
        h3. RunCompletionUsage

        Usage statistics related to the run. This value will be `null` if the run is not in a terminal state (i.e. `in_progress`, `queued`, etc.).

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |completion_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | Number of completion tokens used over the course of the run. |  | null
         |prompt_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | Number of prompt tokens used over the course of the run. |  | null
         |total_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | Total number of tokens used (prompt + completion). |  | null
         
        {anchor:RunObjectModelAnchor}
        h3. RunObject

        Represents an execution run on a [thread\](/docs/api-reference/threads).

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The identifier, which can be referenced in API endpoints. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;thread.run&#x60;. |  [thread.run]  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run was created. |  | null
         |thread_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the [thread\](/docs/api-reference/threads) that was executed on as a part of this run. |  | null
         |assistant_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the [assistant\](/docs/api-reference/assistants) used for execution of this run. |  | null
         |status |(/) |{noformat:nopanel=true}String{noformat} | The status of the run, which can be either &#x60;queued&#x60;, &#x60;in_progress&#x60;, &#x60;requires_action&#x60;, &#x60;cancelling&#x60;, &#x60;cancelled&#x60;, &#x60;failed&#x60;, &#x60;completed&#x60;, or &#x60;expired&#x60;. |  [queued, in_progress, requires_action, cancelling, cancelled, failed, completed, expired]  | null
         |required_action |(/) |{noformat:nopanel=true}RunObject_required_action{noformat} |  |  | null
         |last_error |(/) |{noformat:nopanel=true}RunObject_last_error{noformat} |  |  | null
         |expires_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run will expire. |  | null
         |started_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run was started. |  | null
         |cancelled_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run was cancelled. |  | null
         |failed_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run failed. |  | null
         |completed_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run was completed. |  | null
         |incomplete_details |(/) |{noformat:nopanel=true}RunObject_incomplete_details{noformat} |  |  | null
         |model |(/) |{noformat:nopanel=true}String{noformat} | The model that the [assistant\](/docs/api-reference/assistants) used for this run. |  | null
         |instructions |(/) |{noformat:nopanel=true}String{noformat} | The instructions that the [assistant\](/docs/api-reference/assistants) used for this run. |  | null
         |tools |(/) |{noformat:nopanel=true}array[AssistantObject_tools_inner]{noformat} | The list of tools that the [assistant\](/docs/api-reference/assistants) used for this run. |  | null
         |file_ids |(/) |{noformat:nopanel=true}array[String]{noformat} | The list of [File\](/docs/api-reference/files) IDs the [assistant\](/docs/api-reference/assistants) used for this run. |  | null
         |metadata |(/) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         |usage |(/) |{noformat:nopanel=true}RunCompletionUsage{noformat} |  |  | null
         |temperature |(x) |{noformat:nopanel=true}BigDecimal{noformat} | The sampling temperature used for this run. If not set, defaults to 1. |  | null
         |max_prompt_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | The maximum number of prompt tokens specified to have been used over the course of the run. |  | null
         |max_completion_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | The maximum number of completion tokens specified to have been used over the course of the run. |  | null
         |truncation_strategy |(/) |{noformat:nopanel=true}TruncationObject{noformat} |  |  | null
         |tool_choice |(/) |{noformat:nopanel=true}AssistantsApiToolChoiceOption{noformat} |  |  | null
         |response_format |(/) |{noformat:nopanel=true}AssistantsApiResponseFormatOption{noformat} |  |  | null
         
        {anchor:RunObjectIncompleteDetailsModelAnchor}
        h3. RunObjectIncompleteDetails

        Details on why the run is incomplete. Will be `null` if the run is not incomplete.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |reason |(x) |{noformat:nopanel=true}String{noformat} | The reason why the run is incomplete. This will point to which specific token limit was reached over the course of the run. |  [max_completion_tokens, max_prompt_tokens]  | null
         
        {anchor:RunObjectLastErrorModelAnchor}
        h3. RunObjectLastError

        The last error associated with this run. Will be `null` if there are no errors.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |code |(/) |{noformat:nopanel=true}String{noformat} | One of &#x60;server_error&#x60;, &#x60;rate_limit_exceeded&#x60;, or &#x60;invalid_prompt&#x60;. |  [server_error, rate_limit_exceeded, invalid_prompt]  | null
         |message |(/) |{noformat:nopanel=true}String{noformat} | A human-readable description of the error. |  | null
         
        {anchor:RunObjectRequiredActionModelAnchor}
        h3. RunObjectRequiredAction

        Details on the action required to continue the run. Will be `null` if no action is required.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | For now, this is always &#x60;submit_tool_outputs&#x60;. |  [submit_tool_outputs]  | null
         |submit_tool_outputs |(/) |{noformat:nopanel=true}RunObject_required_action_submit_tool_outputs{noformat} |  |  | null
         
        {anchor:RunObjectRequiredActionSubmitToolOutputsModelAnchor}
        h3. RunObjectRequiredActionSubmitToolOutputs

        Details on the tool outputs needed for this run to continue.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |tool_calls |(/) |{noformat:nopanel=true}array[RunToolCallObject]{noformat} | A list of the relevant tool calls. |  | null
         
        {anchor:RunStepCompletionUsageModelAnchor}
        h3. RunStepCompletionUsage

        Usage statistics related to the run step. This value will be `null` while the run step's status is `in_progress`.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |completion_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | Number of completion tokens used over the course of the run step. |  | null
         |prompt_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | Number of prompt tokens used over the course of the run step. |  | null
         |total_tokens |(/) |{noformat:nopanel=true}Integer{noformat} | Total number of tokens used (prompt + completion). |  | null
         
        {anchor:RunStepDeltaObjectModelAnchor}
        h3. RunStepDeltaObject

        Represents a run step delta i.e. any changed fields on a run step during streaming.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The identifier of the run step, which can be referenced in API endpoints. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;thread.run.step.delta&#x60;. |  [thread.run.step.delta]  | null
         |delta |(/) |{noformat:nopanel=true}RunStepDeltaObject_delta{noformat} |  |  | null
         
        {anchor:RunStepDeltaObjectDeltaModelAnchor}
        h3. RunStepDeltaObjectDelta

        The delta containing the fields that have changed on the run step.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |step_details |(x) |{noformat:nopanel=true}RunStepDeltaObject_delta_step_details{noformat} |  |  | null
         
        {anchor:RunStepDeltaObjectDeltaStepDetailsModelAnchor}
        h3. RunStepDeltaObjectDeltaStepDetails

        The details of the run step.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;message_creation&#x60;. |  [message_creation, tool_calls]  | null
         |message_creation |(x) |{noformat:nopanel=true}RunStepDeltaStepDetailsMessageCreationObject_message_creation{noformat} |  |  | null
         |tool_calls |(x) |{noformat:nopanel=true}array[RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner]{noformat} | An array of tool calls the run step was involved in. These can be associated with one of three types of tools: &#x60;code_interpreter&#x60;, &#x60;retrieval&#x60;, or &#x60;function&#x60;. |  | null
         
        {anchor:RunStepDeltaStepDetailsMessageCreationObjectModelAnchor}
        h3. RunStepDeltaStepDetailsMessageCreationObject

        Details of the message creation by the run step.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;message_creation&#x60;. |  [message_creation]  | null
         |message_creation |(x) |{noformat:nopanel=true}RunStepDeltaStepDetailsMessageCreationObject_message_creation{noformat} |  |  | null
         
        {anchor:RunStepDeltaStepDetailsMessageCreationObjectMessageCreationModelAnchor}
        h3. RunStepDeltaStepDetailsMessageCreationObjectMessageCreation

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |message_id |(x) |{noformat:nopanel=true}String{noformat} | The ID of the message that was created by this run step. |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsCodeObjectModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsCodeObject

        Details of the Code Interpreter tool call the run step was involved in.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the tool call in the tool calls array. |  | null
         |id |(x) |{noformat:nopanel=true}String{noformat} | The ID of the tool call. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool call. This is always going to be &#x60;code_interpreter&#x60; for this type of tool call. |  [code_interpreter]  | null
         |code_interpreter |(x) |{noformat:nopanel=true}RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter{noformat} |  |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter

        The Code Interpreter tool call definition.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |input |(x) |{noformat:nopanel=true}String{noformat} | The input to the Code Interpreter tool call. |  | null
         |outputs |(x) |{noformat:nopanel=true}array[RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner]{noformat} | The outputs from the Code Interpreter tool call. Code Interpreter can output one or more items, including text (&#x60;logs&#x60;) or images (&#x60;image&#x60;). Each of these are represented by a different object type. |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInnerModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the output in the outputs array. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;logs&#x60;. |  [logs, image]  | null
         |logs |(x) |{noformat:nopanel=true}String{noformat} | The text output from the Code Interpreter tool call. |  | null
         |image |(x) |{noformat:nopanel=true}RunStepDeltaStepDetailsToolCallsCodeOutputImageObject_image{noformat} |  |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsCodeOutputImageObjectModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsCodeOutputImageObject

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the output in the outputs array. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;image&#x60;. |  [image]  | null
         |image |(x) |{noformat:nopanel=true}RunStepDeltaStepDetailsToolCallsCodeOutputImageObject_image{noformat} |  |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsCodeOutputImageObjectImageModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsCodeOutputImageObjectImage

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |file_id |(x) |{noformat:nopanel=true}String{noformat} | The [file\](/docs/api-reference/files) ID of the image. |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsCodeOutputLogsObjectModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject

        Text output from the Code Interpreter tool call as part of a run step.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the output in the outputs array. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;logs&#x60;. |  [logs]  | null
         |logs |(x) |{noformat:nopanel=true}String{noformat} | The text output from the Code Interpreter tool call. |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsFunctionObjectModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsFunctionObject

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the tool call in the tool calls array. |  | null
         |id |(x) |{noformat:nopanel=true}String{noformat} | The ID of the tool call object. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool call. This is always going to be &#x60;function&#x60; for this type of tool call. |  [function]  | null
         |function |(x) |{noformat:nopanel=true}RunStepDeltaStepDetailsToolCallsFunctionObject_function{noformat} |  |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsFunctionObjectFunctionModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsFunctionObjectFunction

        The definition of the function that was called.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |name |(x) |{noformat:nopanel=true}String{noformat} | The name of the function. |  | null
         |arguments |(x) |{noformat:nopanel=true}String{noformat} | The arguments passed to the function. |  | null
         |output |(x) |{noformat:nopanel=true}String{noformat} | The output of the function. This will be &#x60;null&#x60; if the outputs have not been [submitted\](/docs/api-reference/runs/submitToolOutputs) yet. |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsObjectModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsObject

        Details of the tool call.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;tool_calls&#x60;. |  [tool_calls]  | null
         |tool_calls |(x) |{noformat:nopanel=true}array[RunStepDeltaStepDetailsToolCallsObject_tool_calls_inner]{noformat} | An array of tool calls the run step was involved in. These can be associated with one of three types of tools: &#x60;code_interpreter&#x60;, &#x60;retrieval&#x60;, or &#x60;function&#x60;. |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsObjectToolCallsInnerModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsObjectToolCallsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the tool call in the tool calls array. |  | null
         |id |(x) |{noformat:nopanel=true}String{noformat} | The ID of the tool call object. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool call. This is always going to be &#x60;code_interpreter&#x60; for this type of tool call. |  [code_interpreter, retrieval, function]  | null
         |code_interpreter |(x) |{noformat:nopanel=true}RunStepDeltaStepDetailsToolCallsCodeObject_code_interpreter{noformat} |  |  | null
         |retrieval |(x) |{noformat:nopanel=true}Object{noformat} | For now, this is always going to be an empty object. |  | null
         |function |(x) |{noformat:nopanel=true}RunStepDeltaStepDetailsToolCallsFunctionObject_function{noformat} |  |  | null
         
        {anchor:RunStepDeltaStepDetailsToolCallsRetrievalObjectModelAnchor}
        h3. RunStepDeltaStepDetailsToolCallsRetrievalObject

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |index |(/) |{noformat:nopanel=true}Integer{noformat} | The index of the tool call in the tool calls array. |  | null
         |id |(x) |{noformat:nopanel=true}String{noformat} | The ID of the tool call object. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool call. This is always going to be &#x60;retrieval&#x60; for this type of tool call. |  [retrieval]  | null
         |retrieval |(x) |{noformat:nopanel=true}Object{noformat} | For now, this is always going to be an empty object. |  | null
         
        {anchor:RunStepDetailsMessageCreationObjectModelAnchor}
        h3. RunStepDetailsMessageCreationObject

        Details of the message creation by the run step.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;message_creation&#x60;. |  [message_creation]  | null
         |message_creation |(/) |{noformat:nopanel=true}RunStepDetailsMessageCreationObject_message_creation{noformat} |  |  | null
         
        {anchor:RunStepDetailsMessageCreationObjectMessageCreationModelAnchor}
        h3. RunStepDetailsMessageCreationObjectMessageCreation

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |message_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the message that was created by this run step. |  | null
         
        {anchor:RunStepDetailsToolCallsCodeObjectModelAnchor}
        h3. RunStepDetailsToolCallsCodeObject

        Details of the Code Interpreter tool call the run step was involved in.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the tool call. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool call. This is always going to be &#x60;code_interpreter&#x60; for this type of tool call. |  [code_interpreter]  | null
         |code_interpreter |(/) |{noformat:nopanel=true}RunStepDetailsToolCallsCodeObject_code_interpreter{noformat} |  |  | null
         
        {anchor:RunStepDetailsToolCallsCodeObjectCodeInterpreterModelAnchor}
        h3. RunStepDetailsToolCallsCodeObjectCodeInterpreter

        The Code Interpreter tool call definition.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |input |(/) |{noformat:nopanel=true}String{noformat} | The input to the Code Interpreter tool call. |  | null
         |outputs |(/) |{noformat:nopanel=true}array[RunStepDetailsToolCallsCodeObject_code_interpreter_outputs_inner]{noformat} | The outputs from the Code Interpreter tool call. Code Interpreter can output one or more items, including text (&#x60;logs&#x60;) or images (&#x60;image&#x60;). Each of these are represented by a different object type. |  | null
         
        {anchor:RunStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInnerModelAnchor}
        h3. RunStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;logs&#x60;. |  [logs, image]  | null
         |logs |(/) |{noformat:nopanel=true}String{noformat} | The text output from the Code Interpreter tool call. |  | null
         |image |(/) |{noformat:nopanel=true}RunStepDetailsToolCallsCodeOutputImageObject_image{noformat} |  |  | null
         
        {anchor:RunStepDetailsToolCallsCodeOutputImageObjectModelAnchor}
        h3. RunStepDetailsToolCallsCodeOutputImageObject

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;image&#x60;. |  [image]  | null
         |image |(/) |{noformat:nopanel=true}RunStepDetailsToolCallsCodeOutputImageObject_image{noformat} |  |  | null
         
        {anchor:RunStepDetailsToolCallsCodeOutputImageObjectImageModelAnchor}
        h3. RunStepDetailsToolCallsCodeOutputImageObjectImage

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |file_id |(/) |{noformat:nopanel=true}String{noformat} | The [file\](/docs/api-reference/files) ID of the image. |  | null
         
        {anchor:RunStepDetailsToolCallsCodeOutputLogsObjectModelAnchor}
        h3. RunStepDetailsToolCallsCodeOutputLogsObject

        Text output from the Code Interpreter tool call as part of a run step.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;logs&#x60;. |  [logs]  | null
         |logs |(/) |{noformat:nopanel=true}String{noformat} | The text output from the Code Interpreter tool call. |  | null
         
        {anchor:RunStepDetailsToolCallsFunctionObjectModelAnchor}
        h3. RunStepDetailsToolCallsFunctionObject

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the tool call object. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool call. This is always going to be &#x60;function&#x60; for this type of tool call. |  [function]  | null
         |function |(/) |{noformat:nopanel=true}RunStepDetailsToolCallsFunctionObject_function{noformat} |  |  | null
         
        {anchor:RunStepDetailsToolCallsFunctionObjectFunctionModelAnchor}
        h3. RunStepDetailsToolCallsFunctionObjectFunction

        The definition of the function that was called.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function. |  | null
         |arguments |(/) |{noformat:nopanel=true}String{noformat} | The arguments passed to the function. |  | null
         |output |(/) |{noformat:nopanel=true}String{noformat} | The output of the function. This will be &#x60;null&#x60; if the outputs have not been [submitted\](/docs/api-reference/runs/submitToolOutputs) yet. |  | null
         
        {anchor:RunStepDetailsToolCallsObjectModelAnchor}
        h3. RunStepDetailsToolCallsObject

        Details of the tool call.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;tool_calls&#x60;. |  [tool_calls]  | null
         |tool_calls |(/) |{noformat:nopanel=true}array[RunStepDetailsToolCallsObject_tool_calls_inner]{noformat} | An array of tool calls the run step was involved in. These can be associated with one of three types of tools: &#x60;code_interpreter&#x60;, &#x60;retrieval&#x60;, or &#x60;function&#x60;. |  | null
         
        {anchor:RunStepDetailsToolCallsObjectToolCallsInnerModelAnchor}
        h3. RunStepDetailsToolCallsObjectToolCallsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the tool call object. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool call. This is always going to be &#x60;code_interpreter&#x60; for this type of tool call. |  [code_interpreter, retrieval, function]  | null
         |code_interpreter |(/) |{noformat:nopanel=true}RunStepDetailsToolCallsCodeObject_code_interpreter{noformat} |  |  | null
         |retrieval |(/) |{noformat:nopanel=true}Object{noformat} | For now, this is always going to be an empty object. |  | null
         |function |(/) |{noformat:nopanel=true}RunStepDetailsToolCallsFunctionObject_function{noformat} |  |  | null
         
        {anchor:RunStepDetailsToolCallsRetrievalObjectModelAnchor}
        h3. RunStepDetailsToolCallsRetrievalObject

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the tool call object. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool call. This is always going to be &#x60;retrieval&#x60; for this type of tool call. |  [retrieval]  | null
         |retrieval |(/) |{noformat:nopanel=true}Object{noformat} | For now, this is always going to be an empty object. |  | null
         
        {anchor:RunStepObjectModelAnchor}
        h3. RunStepObject

        Represents a step in execution of a run.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The identifier of the run step, which can be referenced in API endpoints. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;thread.run.step&#x60;. |  [thread.run.step]  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run step was created. |  | null
         |assistant_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the [assistant\](/docs/api-reference/assistants) associated with the run step. |  | null
         |thread_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the [thread\](/docs/api-reference/threads) that was run. |  | null
         |run_id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the [run\](/docs/api-reference/runs) that this run step is a part of. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of run step, which can be either &#x60;message_creation&#x60; or &#x60;tool_calls&#x60;. |  [message_creation, tool_calls]  | null
         |status |(/) |{noformat:nopanel=true}String{noformat} | The status of the run step, which can be either &#x60;in_progress&#x60;, &#x60;cancelled&#x60;, &#x60;failed&#x60;, &#x60;completed&#x60;, or &#x60;expired&#x60;. |  [in_progress, cancelled, failed, completed, expired]  | null
         |step_details |(/) |{noformat:nopanel=true}RunStepObject_step_details{noformat} |  |  | null
         |last_error |(/) |{noformat:nopanel=true}RunStepObject_last_error{noformat} |  |  | null
         |expired_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired. |  | null
         |cancelled_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run step was cancelled. |  | null
         |failed_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run step failed. |  | null
         |completed_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the run step completed. |  | null
         |metadata |(/) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         |usage |(/) |{noformat:nopanel=true}RunStepCompletionUsage{noformat} |  |  | null
         
        {anchor:RunStepObjectLastErrorModelAnchor}
        h3. RunStepObjectLastError

        The last error associated with this run step. Will be `null` if there are no errors.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |code |(/) |{noformat:nopanel=true}String{noformat} | One of &#x60;server_error&#x60; or &#x60;rate_limit_exceeded&#x60;. |  [server_error, rate_limit_exceeded]  | null
         |message |(/) |{noformat:nopanel=true}String{noformat} | A human-readable description of the error. |  | null
         
        {anchor:RunStepObjectStepDetailsModelAnchor}
        h3. RunStepObjectStepDetails

        The details of the run step.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(/) |{noformat:nopanel=true}String{noformat} | Always &#x60;message_creation&#x60;. |  [message_creation, tool_calls]  | null
         |message_creation |(/) |{noformat:nopanel=true}RunStepDetailsMessageCreationObject_message_creation{noformat} |  |  | null
         |tool_calls |(/) |{noformat:nopanel=true}array[RunStepDetailsToolCallsObject_tool_calls_inner]{noformat} | An array of tool calls the run step was involved in. These can be associated with one of three types of tools: &#x60;code_interpreter&#x60;, &#x60;retrieval&#x60;, or &#x60;function&#x60;. |  | null
         
        {anchor:RunStepStreamEventModelAnchor}
        h3. RunStepStreamEvent

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.step.expired]  | null
         |data |(/) |{noformat:nopanel=true}RunStepObject{noformat} |  |  | null
         
        {anchor:RunStepStreamEventOneOfModelAnchor}
        h3. RunStepStreamEventOneOf

        Occurs when a [run step\](/docs/api-reference/runs/step-object) is created.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.step.created]  | null
         |data |(/) |{noformat:nopanel=true}RunStepObject{noformat} |  |  | null
         
        {anchor:RunStepStreamEventOneOf1ModelAnchor}
        h3. RunStepStreamEventOneOf1

        Occurs when a [run step\](/docs/api-reference/runs/step-object) moves to an `in_progress` state.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.step.in_progress]  | null
         |data |(/) |{noformat:nopanel=true}RunStepObject{noformat} |  |  | null
         
        {anchor:RunStepStreamEventOneOf2ModelAnchor}
        h3. RunStepStreamEventOneOf2

        Occurs when parts of a [run step\](/docs/api-reference/runs/step-object) are being streamed.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.step.delta]  | null
         |data |(/) |{noformat:nopanel=true}RunStepDeltaObject{noformat} |  |  | null
         
        {anchor:RunStepStreamEventOneOf3ModelAnchor}
        h3. RunStepStreamEventOneOf3

        Occurs when a [run step\](/docs/api-reference/runs/step-object) is completed.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.step.completed]  | null
         |data |(/) |{noformat:nopanel=true}RunStepObject{noformat} |  |  | null
         
        {anchor:RunStepStreamEventOneOf4ModelAnchor}
        h3. RunStepStreamEventOneOf4

        Occurs when a [run step\](/docs/api-reference/runs/step-object) fails.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.step.failed]  | null
         |data |(/) |{noformat:nopanel=true}RunStepObject{noformat} |  |  | null
         
        {anchor:RunStepStreamEventOneOf5ModelAnchor}
        h3. RunStepStreamEventOneOf5

        Occurs when a [run step\](/docs/api-reference/runs/step-object) is cancelled.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.step.cancelled]  | null
         |data |(/) |{noformat:nopanel=true}RunStepObject{noformat} |  |  | null
         
        {anchor:RunStepStreamEventOneOf6ModelAnchor}
        h3. RunStepStreamEventOneOf6

        Occurs when a [run step\](/docs/api-reference/runs/step-object) expires.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.step.expired]  | null
         |data |(/) |{noformat:nopanel=true}RunStepObject{noformat} |  |  | null
         
        {anchor:RunStreamEventModelAnchor}
        h3. RunStreamEvent

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.expired]  | null
         |data |(/) |{noformat:nopanel=true}RunObject{noformat} |  |  | null
         
        {anchor:RunStreamEventOneOfModelAnchor}
        h3. RunStreamEventOneOf

        Occurs when a new [run\](/docs/api-reference/runs/object) is created.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.created]  | null
         |data |(/) |{noformat:nopanel=true}RunObject{noformat} |  |  | null
         
        {anchor:RunStreamEventOneOf1ModelAnchor}
        h3. RunStreamEventOneOf1

        Occurs when a [run\](/docs/api-reference/runs/object) moves to a `queued` status.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.queued]  | null
         |data |(/) |{noformat:nopanel=true}RunObject{noformat} |  |  | null
         
        {anchor:RunStreamEventOneOf2ModelAnchor}
        h3. RunStreamEventOneOf2

        Occurs when a [run\](/docs/api-reference/runs/object) moves to an `in_progress` status.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.in_progress]  | null
         |data |(/) |{noformat:nopanel=true}RunObject{noformat} |  |  | null
         
        {anchor:RunStreamEventOneOf3ModelAnchor}
        h3. RunStreamEventOneOf3

        Occurs when a [run\](/docs/api-reference/runs/object) moves to a `requires_action` status.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.requires_action]  | null
         |data |(/) |{noformat:nopanel=true}RunObject{noformat} |  |  | null
         
        {anchor:RunStreamEventOneOf4ModelAnchor}
        h3. RunStreamEventOneOf4

        Occurs when a [run\](/docs/api-reference/runs/object) is completed.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.completed]  | null
         |data |(/) |{noformat:nopanel=true}RunObject{noformat} |  |  | null
         
        {anchor:RunStreamEventOneOf5ModelAnchor}
        h3. RunStreamEventOneOf5

        Occurs when a [run\](/docs/api-reference/runs/object) fails.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.failed]  | null
         |data |(/) |{noformat:nopanel=true}RunObject{noformat} |  |  | null
         
        {anchor:RunStreamEventOneOf6ModelAnchor}
        h3. RunStreamEventOneOf6

        Occurs when a [run\](/docs/api-reference/runs/object) moves to a `cancelling` status.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.cancelling]  | null
         |data |(/) |{noformat:nopanel=true}RunObject{noformat} |  |  | null
         
        {anchor:RunStreamEventOneOf7ModelAnchor}
        h3. RunStreamEventOneOf7

        Occurs when a [run\](/docs/api-reference/runs/object) is cancelled.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.cancelled]  | null
         |data |(/) |{noformat:nopanel=true}RunObject{noformat} |  |  | null
         
        {anchor:RunStreamEventOneOf8ModelAnchor}
        h3. RunStreamEventOneOf8

        Occurs when a [run\](/docs/api-reference/runs/object) expires.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.run.expired]  | null
         |data |(/) |{noformat:nopanel=true}RunObject{noformat} |  |  | null
         
        {anchor:RunToolCallObjectModelAnchor}
        h3. RunToolCallObject

        Tool call objects

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The ID of the tool call. This ID must be referenced when you submit the tool outputs in using the [Submit tool outputs to run\](/docs/api-reference/runs/submitToolOutputs) endpoint. |  | null
         |type |(/) |{noformat:nopanel=true}String{noformat} | The type of tool call the output is required for. For now, this is always &#x60;function&#x60;. |  [function]  | null
         |function |(/) |{noformat:nopanel=true}RunToolCallObject_function{noformat} |  |  | null
         
        {anchor:RunToolCallObjectFunctionModelAnchor}
        h3. RunToolCallObjectFunction

        The function definition.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |name |(/) |{noformat:nopanel=true}String{noformat} | The name of the function. |  | null
         |arguments |(/) |{noformat:nopanel=true}String{noformat} | The arguments that the model expects you to pass to the function. |  | null
         
        {anchor:SubmitToolOutputsRunRequestModelAnchor}
        h3. SubmitToolOutputsRunRequest

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |tool_outputs |(/) |{noformat:nopanel=true}array[SubmitToolOutputsRunRequest_tool_outputs_inner]{noformat} | A list of tools for which the outputs are being submitted. |  | null
         |stream |(x) |{noformat:nopanel=true}Boolean{noformat} | If &#x60;true&#x60;, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a &#x60;data: [DONE\]&#x60; message. |  | null
         
        {anchor:SubmitToolOutputsRunRequestToolOutputsInnerModelAnchor}
        h3. SubmitToolOutputsRunRequestToolOutputsInner

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |tool_call_id |(x) |{noformat:nopanel=true}String{noformat} | The ID of the tool call in the &#x60;required_action&#x60; object within the run object the output is being submitted for. |  | null
         |output |(x) |{noformat:nopanel=true}String{noformat} | The output of the tool call to be submitted to continue the run. |  | null
         
        {anchor:ThreadObjectModelAnchor}
        h3. ThreadObject

        Represents a thread that contains [messages\](/docs/api-reference/messages).

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}String{noformat} | The identifier, which can be referenced in API endpoints. |  | null
         |object |(/) |{noformat:nopanel=true}String{noformat} | The object type, which is always &#x60;thread&#x60;. |  [thread]  | null
         |created_at |(/) |{noformat:nopanel=true}Integer{noformat} | The Unix timestamp (in seconds) for when the thread was created. |  | null
         |metadata |(/) |{noformat:nopanel=true}Object{noformat} | Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. |  | null
         
        {anchor:ThreadStreamEventModelAnchor}
        h3. ThreadStreamEvent

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.created]  | null
         |data |(/) |{noformat:nopanel=true}ThreadObject{noformat} |  |  | null
         
        {anchor:ThreadStreamEventOneOfModelAnchor}
        h3. ThreadStreamEventOneOf

        Occurs when a new [thread\](/docs/api-reference/threads/object) is created.

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |event |(/) |{noformat:nopanel=true}String{noformat} |  |  [thread.created]  | null
         |data |(/) |{noformat:nopanel=true}ThreadObject{noformat} |  |  | null
         
        {anchor:TranscriptionSegmentModelAnchor}
        h3. TranscriptionSegment

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |id |(/) |{noformat:nopanel=true}Integer{noformat} | Unique identifier of the segment. |  | null
         |seek |(/) |{noformat:nopanel=true}Integer{noformat} | Seek offset of the segment. |  | null
         |start |(/) |{noformat:nopanel=true}Float{noformat} | Start time of the segment in seconds. |  | null
         |end |(/) |{noformat:nopanel=true}Float{noformat} | End time of the segment in seconds. |  | null
         |text |(/) |{noformat:nopanel=true}String{noformat} | Text content of the segment. |  | null
         |tokens |(/) |{noformat:nopanel=true}array[Integer]{noformat} | Array of token IDs for the text content. |  | null
         |temperature |(/) |{noformat:nopanel=true}Float{noformat} | Temperature parameter used for generating the segment. |  | null
         |avg_logprob |(/) |{noformat:nopanel=true}Float{noformat} | Average logprob of the segment. If the value is lower than -1, consider the logprobs failed. |  | null
         |compression_ratio |(/) |{noformat:nopanel=true}Float{noformat} | Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed. |  | null
         |no_speech_prob |(/) |{noformat:nopanel=true}Float{noformat} | Probability of no speech in the segment. If the value is higher than 1.0 and the &#x60;avg_logprob&#x60; is below -1, consider this segment silent. |  | null
         
        {anchor:TranscriptionWordModelAnchor}
        h3. TranscriptionWord

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |word |(/) |{noformat:nopanel=true}String{noformat} | The text content of the word. |  | null
         |start |(/) |{noformat:nopanel=true}Float{noformat} | Start time of the word in seconds. |  | null
         |end |(/) |{noformat:nopanel=true}Float{noformat} | End time of the word in seconds. |  | null
         
        {anchor:TruncationObjectModelAnchor}
        h3. TruncationObject

        

        
        ||Field Name||Required||Type||Description||Enum||Example||
         |type |(x) |{noformat:nopanel=true}String{noformat} | The truncation strategy to use for the thread. The default is &#x60;auto&#x60;. If set to &#x60;last_messages&#x60;, the thread will be truncated to the n most recent messages in the thread. When set to &#x60;auto&#x60;, messages in the middle of the thread will be dropped to fit the context length of the model, &#x60;max_prompt_tokens&#x60;. |  [auto, last_messages]  | null
         |last_messages |(x) |{noformat:nopanel=true}Integer{noformat} | The number of most recent messages from the thread when constructing the context for the run. |  | null
         
