note
 description:"[
		OpenAI API
 		The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
  		The version of the OpenAPI document: 2.0.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"

class
	FINETUNING_API

inherit

    API_I


feature -- API Access


	cancel_fine_tuning_job (fine_tuning_job_id: STRING_32): detachable FINE_TUNING_JOB
			-- Immediately cancel a fine-tune job. 
			-- 
			-- 
			-- argument: fine_tuning_job_id The ID of the fine-tuning job to cancel.  (required)
			-- 
			-- 
			-- Result FINE_TUNING_JOB
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/fine_tuning/jobs/{fine_tuning_job_id}/cancel"
			l_path.replace_substring_all ("{"+"fine_tuning_job_id"+"}", api_client.url_encode (fine_tuning_job_id.out))


			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<"ApiKeyAuth">>)
			l_response := api_client.call_api (l_path, "Post", l_request, Void, agent deserializer)
			if l_response.has_error then
				last_error := l_response.error
			elseif attached { FINE_TUNING_JOB } l_response.data ({ FINE_TUNING_JOB }) as l_data then
				Result := l_data
			else
				create last_error.make ("Unknown error: Status response [ " + l_response.status.out + "]")
			end
		end

	create_fine_tuning_job (create_fine_tuning_job_request: CREATE_FINE_TUNING_JOB_REQUEST): detachable FINE_TUNING_JOB
			-- Creates a fine-tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
			-- 
			-- 
			-- argument: create_fine_tuning_job_request  (required)
			-- 
			-- 
			-- Result FINE_TUNING_JOB
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			l_request.set_body(create_fine_tuning_job_request)
			l_path := "/fine_tuning/jobs"


			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<"application/json">>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<"ApiKeyAuth">>)
			l_response := api_client.call_api (l_path, "Post", l_request, Void, agent deserializer)
			if l_response.has_error then
				last_error := l_response.error
			elseif attached { FINE_TUNING_JOB } l_response.data ({ FINE_TUNING_JOB }) as l_data then
				Result := l_data
			else
				create last_error.make ("Unknown error: Status response [ " + l_response.status.out + "]")
			end
		end

	list_fine_tuning_events (fine_tuning_job_id: STRING_32; after: STRING_32; limit: INTEGER_32): detachable LIST_FINE_TUNING_JOB_EVENTS_RESPONSE
			-- Get status updates for a fine-tuning job. 
			-- 
			-- 
			-- argument: fine_tuning_job_id The ID of the fine-tuning job to get events for.  (required)
			-- 
			-- argument: after Identifier for the last event from the previous pagination request. (optional, default to null)
			-- 
			-- argument: limit Number of events to retrieve. (optional, default to 20)
			-- 
			-- 
			-- Result LIST_FINE_TUNING_JOB_EVENTS_RESPONSE
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/fine_tuning/jobs/{fine_tuning_job_id}/events"
			l_path.replace_substring_all ("{"+"fine_tuning_job_id"+"}", api_client.url_encode (fine_tuning_job_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "after", after));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));


			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<"ApiKeyAuth">>)
			l_response := api_client.call_api (l_path, "Get", l_request, Void, agent deserializer)
			if l_response.has_error then
				last_error := l_response.error
			elseif attached { LIST_FINE_TUNING_JOB_EVENTS_RESPONSE } l_response.data ({ LIST_FINE_TUNING_JOB_EVENTS_RESPONSE }) as l_data then
				Result := l_data
			else
				create last_error.make ("Unknown error: Status response [ " + l_response.status.out + "]")
			end
		end

	list_fine_tuning_job_checkpoints (fine_tuning_job_id: STRING_32; after: STRING_32; limit: INTEGER_32): detachable LIST_FINE_TUNING_JOB_CHECKPOINTS_RESPONSE
			-- List checkpoints for a fine-tuning job. 
			-- 
			-- 
			-- argument: fine_tuning_job_id The ID of the fine-tuning job to get checkpoints for.  (required)
			-- 
			-- argument: after Identifier for the last checkpoint ID from the previous pagination request. (optional, default to null)
			-- 
			-- argument: limit Number of checkpoints to retrieve. (optional, default to 10)
			-- 
			-- 
			-- Result LIST_FINE_TUNING_JOB_CHECKPOINTS_RESPONSE
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints"
			l_path.replace_substring_all ("{"+"fine_tuning_job_id"+"}", api_client.url_encode (fine_tuning_job_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "after", after));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));


			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<"ApiKeyAuth">>)
			l_response := api_client.call_api (l_path, "Get", l_request, Void, agent deserializer)
			if l_response.has_error then
				last_error := l_response.error
			elseif attached { LIST_FINE_TUNING_JOB_CHECKPOINTS_RESPONSE } l_response.data ({ LIST_FINE_TUNING_JOB_CHECKPOINTS_RESPONSE }) as l_data then
				Result := l_data
			else
				create last_error.make ("Unknown error: Status response [ " + l_response.status.out + "]")
			end
		end

	list_paginated_fine_tuning_jobs (after: STRING_32; limit: INTEGER_32): detachable LIST_PAGINATED_FINE_TUNING_JOBS_RESPONSE
			-- List your organization&#39;s fine-tuning jobs 
			-- 
			-- 
			-- argument: after Identifier for the last job from the previous pagination request. (optional, default to null)
			-- 
			-- argument: limit Number of fine-tuning jobs to retrieve. (optional, default to 20)
			-- 
			-- 
			-- Result LIST_PAGINATED_FINE_TUNING_JOBS_RESPONSE
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/fine_tuning/jobs"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "after", after));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));


			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<"ApiKeyAuth">>)
			l_response := api_client.call_api (l_path, "Get", l_request, Void, agent deserializer)
			if l_response.has_error then
				last_error := l_response.error
			elseif attached { LIST_PAGINATED_FINE_TUNING_JOBS_RESPONSE } l_response.data ({ LIST_PAGINATED_FINE_TUNING_JOBS_RESPONSE }) as l_data then
				Result := l_data
			else
				create last_error.make ("Unknown error: Status response [ " + l_response.status.out + "]")
			end
		end

	retrieve_fine_tuning_job (fine_tuning_job_id: STRING_32): detachable FINE_TUNING_JOB
			-- Get info about a fine-tuning job.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
			-- 
			-- 
			-- argument: fine_tuning_job_id The ID of the fine-tuning job.  (required)
			-- 
			-- 
			-- Result FINE_TUNING_JOB
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/fine_tuning/jobs/{fine_tuning_job_id}"
			l_path.replace_substring_all ("{"+"fine_tuning_job_id"+"}", api_client.url_encode (fine_tuning_job_id.out))


			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<"ApiKeyAuth">>)
			l_response := api_client.call_api (l_path, "Get", l_request, Void, agent deserializer)
			if l_response.has_error then
				last_error := l_response.error
			elseif attached { FINE_TUNING_JOB } l_response.data ({ FINE_TUNING_JOB }) as l_data then
				Result := l_data
			else
				create last_error.make ("Unknown error: Status response [ " + l_response.status.out + "]")
			end
		end


end
