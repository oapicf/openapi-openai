note
 description:"[
		OpenAI API
 		The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
  		The version of the OpenAPI document: 2.0.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ASSISTANT_FILE_OBJECT




feature --Access

    id: detachable STRING_32
      -- The identifier, which can be referenced in API endpoints.
    object: detachable STRING_32
      -- The object type, which is always `assistant.file`.
    created_at: INTEGER_32
      -- The Unix timestamp (in seconds) for when the assistant file was created.
    assistant_id: detachable STRING_32
      -- The assistant ID that the file is attached to.

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_object (a_name: like object)
        -- Set 'object' with 'a_name'.
      do
        object := a_name
      ensure
        object_set: object = a_name
      end

    set_created_at (a_name: like created_at)
        -- Set 'created_at' with 'a_name'.
      do
        created_at := a_name
      ensure
        created_at_set: created_at = a_name
      end

    set_assistant_id (a_name: like assistant_id)
        -- Set 'assistant_id' with 'a_name'.
      do
        assistant_id := a_name
      ensure
        assistant_id_set: assistant_id = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ASSISTANT_FILE_OBJECT%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached object as l_object then
          Result.append ("%Nobject:")
          Result.append (l_object.out)
          Result.append ("%N")
        end
        if attached created_at as l_created_at then
          Result.append ("%Ncreated_at:")
          Result.append (l_created_at.out)
          Result.append ("%N")
        end
        if attached assistant_id as l_assistant_id then
          Result.append ("%Nassistant_id:")
          Result.append (l_assistant_id.out)
          Result.append ("%N")
        end
      end
end

