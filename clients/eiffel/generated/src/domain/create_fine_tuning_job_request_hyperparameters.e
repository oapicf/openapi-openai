note
 description:"[
		OpenAI API
 		The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
  		The version of the OpenAPI document: 2.0.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CREATE_FINE_TUNING_JOB_REQUEST_HYPERPARAMETERS




feature --Access

    batch_size: detachable CREATE_FINE_TUNING_JOB_REQUEST_HYPERPARAMETERS_BATCH_SIZE
      
    learning_rate_multiplier: detachable CREATE_FINE_TUNING_JOB_REQUEST_HYPERPARAMETERS_LEARNING_RATE_MULTIPLIER
      
    n_epochs: detachable CREATE_FINE_TUNING_JOB_REQUEST_HYPERPARAMETERS_N_EPOCHS
      

feature -- Change Element

    set_batch_size (a_name: like batch_size)
        -- Set 'batch_size' with 'a_name'.
      do
        batch_size := a_name
      ensure
        batch_size_set: batch_size = a_name
      end

    set_learning_rate_multiplier (a_name: like learning_rate_multiplier)
        -- Set 'learning_rate_multiplier' with 'a_name'.
      do
        learning_rate_multiplier := a_name
      ensure
        learning_rate_multiplier_set: learning_rate_multiplier = a_name
      end

    set_n_epochs (a_name: like n_epochs)
        -- Set 'n_epochs' with 'a_name'.
      do
        n_epochs := a_name
      ensure
        n_epochs_set: n_epochs = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CREATE_FINE_TUNING_JOB_REQUEST_HYPERPARAMETERS%N")
        if attached batch_size as l_batch_size then
          Result.append ("%Nbatch_size:")
          Result.append (l_batch_size.out)
          Result.append ("%N")
        end
        if attached learning_rate_multiplier as l_learning_rate_multiplier then
          Result.append ("%Nlearning_rate_multiplier:")
          Result.append (l_learning_rate_multiplier.out)
          Result.append ("%N")
        end
        if attached n_epochs as l_n_epochs then
          Result.append ("%Nn_epochs:")
          Result.append (l_n_epochs.out)
          Result.append ("%N")
        end
      end
end

