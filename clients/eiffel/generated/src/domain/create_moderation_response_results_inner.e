note
 description:"[
		OpenAI API
 		The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
  		The version of the OpenAPI document: 2.0.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CREATE_MODERATION_RESPONSE_RESULTS_INNER




feature --Access

    flagged: BOOLEAN
      -- Whether any of the below categories are flagged.
    categories: detachable CREATE_MODERATION_RESPONSE_RESULTS_INNER_CATEGORIES
      
    category_scores: detachable CREATE_MODERATION_RESPONSE_RESULTS_INNER_CATEGORY_SCORES
      

feature -- Change Element

    set_flagged (a_name: like flagged)
        -- Set 'flagged' with 'a_name'.
      do
        flagged := a_name
      ensure
        flagged_set: flagged = a_name
      end

    set_categories (a_name: like categories)
        -- Set 'categories' with 'a_name'.
      do
        categories := a_name
      ensure
        categories_set: categories = a_name
      end

    set_category_scores (a_name: like category_scores)
        -- Set 'category_scores' with 'a_name'.
      do
        category_scores := a_name
      ensure
        category_scores_set: category_scores = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CREATE_MODERATION_RESPONSE_RESULTS_INNER%N")
        if attached flagged as l_flagged then
          Result.append ("%Nflagged:")
          Result.append (l_flagged.out)
          Result.append ("%N")
        end
        if attached categories as l_categories then
          Result.append ("%Ncategories:")
          Result.append (l_categories.out)
          Result.append ("%N")
        end
        if attached category_scores as l_category_scores then
          Result.append ("%Ncategory_scores:")
          Result.append (l_category_scores.out)
          Result.append ("%N")
        end
      end
end

