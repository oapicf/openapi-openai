note
 description:"[
		OpenAI API
 		The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
  		The version of the OpenAPI document: 2.0.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CREATE_RUN_REQUEST




feature --Access

    assistant_id: detachable STRING_32
      -- The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.
    model: detachable CREATE_RUN_REQUEST_MODEL
      
    instructions: detachable STRING_32
      -- Overrides the [instructions](/docs/api-reference/assistants/createAssistant) of the assistant. This is useful for modifying the behavior on a per-run basis.
    additional_instructions: detachable STRING_32
      -- Appends additional instructions at the end of the instructions for the run. This is useful for modifying the behavior on a per-run basis without overriding other instructions.
    additional_messages: detachable LIST [CREATE_MESSAGE_REQUEST]
      -- Adds additional messages to the thread before creating the run.
    tools: detachable LIST [ASSISTANT_OBJECT_TOOLS_INNER]
      -- Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.
    metadata: detachable ANY
      -- Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
    temperature: REAL_32
      -- What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. 
    stream: BOOLEAN
      -- If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message. 
    max_prompt_tokens: INTEGER_32
      -- The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of prompt tokens specified, the run will end with status `complete`. See `incomplete_details` for more info. 
    max_completion_tokens: INTEGER_32
      -- The maximum number of completion tokens that may be used over the course of the run. The run will make a best effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds the number of completion tokens specified, the run will end with status `complete`. See `incomplete_details` for more info. 
    truncation_strategy: detachable TRUNCATION_OBJECT
      
    tool_choice: detachable ASSISTANTS_API_TOOL_CHOICE_OPTION
      
    response_format: detachable ASSISTANTS_API_RESPONSE_FORMAT_OPTION
      

feature -- Change Element

    set_assistant_id (a_name: like assistant_id)
        -- Set 'assistant_id' with 'a_name'.
      do
        assistant_id := a_name
      ensure
        assistant_id_set: assistant_id = a_name
      end

    set_model (a_name: like model)
        -- Set 'model' with 'a_name'.
      do
        model := a_name
      ensure
        model_set: model = a_name
      end

    set_instructions (a_name: like instructions)
        -- Set 'instructions' with 'a_name'.
      do
        instructions := a_name
      ensure
        instructions_set: instructions = a_name
      end

    set_additional_instructions (a_name: like additional_instructions)
        -- Set 'additional_instructions' with 'a_name'.
      do
        additional_instructions := a_name
      ensure
        additional_instructions_set: additional_instructions = a_name
      end

    set_additional_messages (a_name: like additional_messages)
        -- Set 'additional_messages' with 'a_name'.
      do
        additional_messages := a_name
      ensure
        additional_messages_set: additional_messages = a_name
      end

    set_tools (a_name: like tools)
        -- Set 'tools' with 'a_name'.
      do
        tools := a_name
      ensure
        tools_set: tools = a_name
      end

    set_metadata (a_name: like metadata)
        -- Set 'metadata' with 'a_name'.
      do
        metadata := a_name
      ensure
        metadata_set: metadata = a_name
      end

    set_temperature (a_name: like temperature)
        -- Set 'temperature' with 'a_name'.
      do
        temperature := a_name
      ensure
        temperature_set: temperature = a_name
      end

    set_stream (a_name: like stream)
        -- Set 'stream' with 'a_name'.
      do
        stream := a_name
      ensure
        stream_set: stream = a_name
      end

    set_max_prompt_tokens (a_name: like max_prompt_tokens)
        -- Set 'max_prompt_tokens' with 'a_name'.
      do
        max_prompt_tokens := a_name
      ensure
        max_prompt_tokens_set: max_prompt_tokens = a_name
      end

    set_max_completion_tokens (a_name: like max_completion_tokens)
        -- Set 'max_completion_tokens' with 'a_name'.
      do
        max_completion_tokens := a_name
      ensure
        max_completion_tokens_set: max_completion_tokens = a_name
      end

    set_truncation_strategy (a_name: like truncation_strategy)
        -- Set 'truncation_strategy' with 'a_name'.
      do
        truncation_strategy := a_name
      ensure
        truncation_strategy_set: truncation_strategy = a_name
      end

    set_tool_choice (a_name: like tool_choice)
        -- Set 'tool_choice' with 'a_name'.
      do
        tool_choice := a_name
      ensure
        tool_choice_set: tool_choice = a_name
      end

    set_response_format (a_name: like response_format)
        -- Set 'response_format' with 'a_name'.
      do
        response_format := a_name
      ensure
        response_format_set: response_format = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CREATE_RUN_REQUEST%N")
        if attached assistant_id as l_assistant_id then
          Result.append ("%Nassistant_id:")
          Result.append (l_assistant_id.out)
          Result.append ("%N")
        end
        if attached model as l_model then
          Result.append ("%Nmodel:")
          Result.append (l_model.out)
          Result.append ("%N")
        end
        if attached instructions as l_instructions then
          Result.append ("%Ninstructions:")
          Result.append (l_instructions.out)
          Result.append ("%N")
        end
        if attached additional_instructions as l_additional_instructions then
          Result.append ("%Nadditional_instructions:")
          Result.append (l_additional_instructions.out)
          Result.append ("%N")
        end
        if attached additional_messages as l_additional_messages then
          across l_additional_messages as ic loop
            Result.append ("%N additional_messages:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached tools as l_tools then
          across l_tools as ic loop
            Result.append ("%N tools:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached metadata as l_metadata then
          Result.append ("%Nmetadata:")
          Result.append (l_metadata.out)
          Result.append ("%N")
        end
        if attached temperature as l_temperature then
          Result.append ("%Ntemperature:")
          Result.append (l_temperature.out)
          Result.append ("%N")
        end
        if attached stream as l_stream then
          Result.append ("%Nstream:")
          Result.append (l_stream.out)
          Result.append ("%N")
        end
        if attached max_prompt_tokens as l_max_prompt_tokens then
          Result.append ("%Nmax_prompt_tokens:")
          Result.append (l_max_prompt_tokens.out)
          Result.append ("%N")
        end
        if attached max_completion_tokens as l_max_completion_tokens then
          Result.append ("%Nmax_completion_tokens:")
          Result.append (l_max_completion_tokens.out)
          Result.append ("%N")
        end
        if attached truncation_strategy as l_truncation_strategy then
          Result.append ("%Ntruncation_strategy:")
          Result.append (l_truncation_strategy.out)
          Result.append ("%N")
        end
        if attached tool_choice as l_tool_choice then
          Result.append ("%Ntool_choice:")
          Result.append (l_tool_choice.out)
          Result.append ("%N")
        end
        if attached response_format as l_response_format then
          Result.append ("%Nresponse_format:")
          Result.append (l_response_format.out)
          Result.append ("%N")
        end
      end
end

