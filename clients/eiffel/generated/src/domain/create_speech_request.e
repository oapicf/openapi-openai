note
 description:"[
		OpenAI API
 		The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
  		The version of the OpenAPI document: 2.0.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CREATE_SPEECH_REQUEST




feature --Access

    model: detachable CREATE_SPEECH_REQUEST_MODEL
      
    input: detachable STRING_32
      -- The text to generate audio for. The maximum length is 4096 characters.
    voice: detachable STRING_32
      -- The voice to use when generating the audio. Supported voices are `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`. Previews of the voices are available in the [Text to speech guide](/docs/guides/text-to-speech/voice-options).
    response_format: detachable STRING_32
      -- The format to audio in. Supported formats are `mp3`, `opus`, `aac`, `flac`, `wav`, and `pcm`.
    speed: REAL_32
      -- The speed of the generated audio. Select a value from `0.25` to `4.0`. `1.0` is the default.

feature -- Change Element

    set_model (a_name: like model)
        -- Set 'model' with 'a_name'.
      do
        model := a_name
      ensure
        model_set: model = a_name
      end

    set_input (a_name: like input)
        -- Set 'input' with 'a_name'.
      do
        input := a_name
      ensure
        input_set: input = a_name
      end

    set_voice (a_name: like voice)
        -- Set 'voice' with 'a_name'.
      do
        voice := a_name
      ensure
        voice_set: voice = a_name
      end

    set_response_format (a_name: like response_format)
        -- Set 'response_format' with 'a_name'.
      do
        response_format := a_name
      ensure
        response_format_set: response_format = a_name
      end

    set_speed (a_name: like speed)
        -- Set 'speed' with 'a_name'.
      do
        speed := a_name
      ensure
        speed_set: speed = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CREATE_SPEECH_REQUEST%N")
        if attached model as l_model then
          Result.append ("%Nmodel:")
          Result.append (l_model.out)
          Result.append ("%N")
        end
        if attached input as l_input then
          Result.append ("%Ninput:")
          Result.append (l_input.out)
          Result.append ("%N")
        end
        if attached voice as l_voice then
          Result.append ("%Nvoice:")
          Result.append (l_voice.out)
          Result.append ("%N")
        end
        if attached response_format as l_response_format then
          Result.append ("%Nresponse_format:")
          Result.append (l_response_format.out)
          Result.append ("%N")
        end
        if attached speed as l_speed then
          Result.append ("%Nspeed:")
          Result.append (l_speed.out)
          Result.append ("%N")
        end
      end
end

