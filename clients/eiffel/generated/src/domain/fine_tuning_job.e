note
 description:"[
		OpenAI API
 		The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
  		The version of the OpenAPI document: 2.0.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class FINE_TUNING_JOB




feature --Access

    id: detachable STRING_32
      -- The object identifier, which can be referenced in the API endpoints.
    created_at: INTEGER_32
      -- The Unix timestamp (in seconds) for when the fine-tuning job was created.
    error: detachable FINE_TUNING_JOB_ERROR
      
    fine_tuned_model: detachable STRING_32
      -- The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
    finished_at: INTEGER_32
      -- The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.
    hyperparameters: detachable FINE_TUNING_JOB_HYPERPARAMETERS
      
    model: detachable STRING_32
      -- The base model that is being fine-tuned.
    object: detachable STRING_32
      -- The object type, which is always \"fine_tuning.job\".
    organization_id: detachable STRING_32
      -- The organization that owns the fine-tuning job.
    result_files: detachable LIST [STRING_32]
      -- The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](/docs/api-reference/files/retrieve-contents).
    status: detachable STRING_32
      -- The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.
    trained_tokens: INTEGER_32
      -- The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.
    training_file: detachable STRING_32
      -- The file ID used for training. You can retrieve the training data with the [Files API](/docs/api-reference/files/retrieve-contents).
    validation_file: detachable STRING_32
      -- The file ID used for validation. You can retrieve the validation results with the [Files API](/docs/api-reference/files/retrieve-contents).
    integrations: detachable LIST [FINE_TUNING_JOB_INTEGRATIONS_INNER]
      -- A list of integrations to enable for this fine-tuning job.
    seed: INTEGER_32
      -- The seed used for the fine-tuning job.

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_created_at (a_name: like created_at)
        -- Set 'created_at' with 'a_name'.
      do
        created_at := a_name
      ensure
        created_at_set: created_at = a_name
      end

    set_error (a_name: like error)
        -- Set 'error' with 'a_name'.
      do
        error := a_name
      ensure
        error_set: error = a_name
      end

    set_fine_tuned_model (a_name: like fine_tuned_model)
        -- Set 'fine_tuned_model' with 'a_name'.
      do
        fine_tuned_model := a_name
      ensure
        fine_tuned_model_set: fine_tuned_model = a_name
      end

    set_finished_at (a_name: like finished_at)
        -- Set 'finished_at' with 'a_name'.
      do
        finished_at := a_name
      ensure
        finished_at_set: finished_at = a_name
      end

    set_hyperparameters (a_name: like hyperparameters)
        -- Set 'hyperparameters' with 'a_name'.
      do
        hyperparameters := a_name
      ensure
        hyperparameters_set: hyperparameters = a_name
      end

    set_model (a_name: like model)
        -- Set 'model' with 'a_name'.
      do
        model := a_name
      ensure
        model_set: model = a_name
      end

    set_object (a_name: like object)
        -- Set 'object' with 'a_name'.
      do
        object := a_name
      ensure
        object_set: object = a_name
      end

    set_organization_id (a_name: like organization_id)
        -- Set 'organization_id' with 'a_name'.
      do
        organization_id := a_name
      ensure
        organization_id_set: organization_id = a_name
      end

    set_result_files (a_name: like result_files)
        -- Set 'result_files' with 'a_name'.
      do
        result_files := a_name
      ensure
        result_files_set: result_files = a_name
      end

    set_status (a_name: like status)
        -- Set 'status' with 'a_name'.
      do
        status := a_name
      ensure
        status_set: status = a_name
      end

    set_trained_tokens (a_name: like trained_tokens)
        -- Set 'trained_tokens' with 'a_name'.
      do
        trained_tokens := a_name
      ensure
        trained_tokens_set: trained_tokens = a_name
      end

    set_training_file (a_name: like training_file)
        -- Set 'training_file' with 'a_name'.
      do
        training_file := a_name
      ensure
        training_file_set: training_file = a_name
      end

    set_validation_file (a_name: like validation_file)
        -- Set 'validation_file' with 'a_name'.
      do
        validation_file := a_name
      ensure
        validation_file_set: validation_file = a_name
      end

    set_integrations (a_name: like integrations)
        -- Set 'integrations' with 'a_name'.
      do
        integrations := a_name
      ensure
        integrations_set: integrations = a_name
      end

    set_seed (a_name: like seed)
        -- Set 'seed' with 'a_name'.
      do
        seed := a_name
      ensure
        seed_set: seed = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass FINE_TUNING_JOB%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached created_at as l_created_at then
          Result.append ("%Ncreated_at:")
          Result.append (l_created_at.out)
          Result.append ("%N")
        end
        if attached error as l_error then
          Result.append ("%Nerror:")
          Result.append (l_error.out)
          Result.append ("%N")
        end
        if attached fine_tuned_model as l_fine_tuned_model then
          Result.append ("%Nfine_tuned_model:")
          Result.append (l_fine_tuned_model.out)
          Result.append ("%N")
        end
        if attached finished_at as l_finished_at then
          Result.append ("%Nfinished_at:")
          Result.append (l_finished_at.out)
          Result.append ("%N")
        end
        if attached hyperparameters as l_hyperparameters then
          Result.append ("%Nhyperparameters:")
          Result.append (l_hyperparameters.out)
          Result.append ("%N")
        end
        if attached model as l_model then
          Result.append ("%Nmodel:")
          Result.append (l_model.out)
          Result.append ("%N")
        end
        if attached object as l_object then
          Result.append ("%Nobject:")
          Result.append (l_object.out)
          Result.append ("%N")
        end
        if attached organization_id as l_organization_id then
          Result.append ("%Norganization_id:")
          Result.append (l_organization_id.out)
          Result.append ("%N")
        end
        if attached result_files as l_result_files then
          across l_result_files as ic loop
            Result.append ("%N result_files:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached status as l_status then
          Result.append ("%Nstatus:")
          Result.append (l_status.out)
          Result.append ("%N")
        end
        if attached trained_tokens as l_trained_tokens then
          Result.append ("%Ntrained_tokens:")
          Result.append (l_trained_tokens.out)
          Result.append ("%N")
        end
        if attached training_file as l_training_file then
          Result.append ("%Ntraining_file:")
          Result.append (l_training_file.out)
          Result.append ("%N")
        end
        if attached validation_file as l_validation_file then
          Result.append ("%Nvalidation_file:")
          Result.append (l_validation_file.out)
          Result.append ("%N")
        end
        if attached integrations as l_integrations then
          across l_integrations as ic loop
            Result.append ("%N integrations:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached seed as l_seed then
          Result.append ("%Nseed:")
          Result.append (l_seed.out)
          Result.append ("%N")
        end
      end
end

