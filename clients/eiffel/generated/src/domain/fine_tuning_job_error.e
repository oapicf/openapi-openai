note
 description:"[
		OpenAI API
 		The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
  		The version of the OpenAPI document: 2.0.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class FINE_TUNING_JOB_ERROR




feature --Access

    code: detachable STRING_32
      -- A machine-readable error code.
    message: detachable STRING_32
      -- A human-readable error message.
    param: detachable STRING_32
      -- The parameter that was invalid, usually `training_file` or `validation_file`. This field will be null if the failure was not parameter-specific.

feature -- Change Element

    set_code (a_name: like code)
        -- Set 'code' with 'a_name'.
      do
        code := a_name
      ensure
        code_set: code = a_name
      end

    set_message (a_name: like message)
        -- Set 'message' with 'a_name'.
      do
        message := a_name
      ensure
        message_set: message = a_name
      end

    set_param (a_name: like param)
        -- Set 'param' with 'a_name'.
      do
        param := a_name
      ensure
        param_set: param = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass FINE_TUNING_JOB_ERROR%N")
        if attached code as l_code then
          Result.append ("%Ncode:")
          Result.append (l_code.out)
          Result.append ("%N")
        end
        if attached message as l_message then
          Result.append ("%Nmessage:")
          Result.append (l_message.out)
          Result.append ("%N")
        end
        if attached param as l_param then
          Result.append ("%Nparam:")
          Result.append (l_param.out)
          Result.append ("%N")
        end
      end
end

