note
 description:"[
		OpenAI API
 		The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
  		The version of the OpenAPI document: 2.0.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class LIST_ASSISTANTS_RESPONSE




feature --Access

    object: detachable STRING_32
      
    data: detachable LIST [ASSISTANT_OBJECT]
      
    first_id: detachable STRING_32
      
    last_id: detachable STRING_32
      
    has_more: BOOLEAN
      

feature -- Change Element

    set_object (a_name: like object)
        -- Set 'object' with 'a_name'.
      do
        object := a_name
      ensure
        object_set: object = a_name
      end

    set_data (a_name: like data)
        -- Set 'data' with 'a_name'.
      do
        data := a_name
      ensure
        data_set: data = a_name
      end

    set_first_id (a_name: like first_id)
        -- Set 'first_id' with 'a_name'.
      do
        first_id := a_name
      ensure
        first_id_set: first_id = a_name
      end

    set_last_id (a_name: like last_id)
        -- Set 'last_id' with 'a_name'.
      do
        last_id := a_name
      ensure
        last_id_set: last_id = a_name
      end

    set_has_more (a_name: like has_more)
        -- Set 'has_more' with 'a_name'.
      do
        has_more := a_name
      ensure
        has_more_set: has_more = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass LIST_ASSISTANTS_RESPONSE%N")
        if attached object as l_object then
          Result.append ("%Nobject:")
          Result.append (l_object.out)
          Result.append ("%N")
        end
        if attached data as l_data then
          across l_data as ic loop
            Result.append ("%N data:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached first_id as l_first_id then
          Result.append ("%Nfirst_id:")
          Result.append (l_first_id.out)
          Result.append ("%N")
        end
        if attached last_id as l_last_id then
          Result.append ("%Nlast_id:")
          Result.append (l_last_id.out)
          Result.append ("%N")
        end
        if attached has_more as l_has_more then
          Result.append ("%Nhas_more:")
          Result.append (l_has_more.out)
          Result.append ("%N")
        end
      end
end

