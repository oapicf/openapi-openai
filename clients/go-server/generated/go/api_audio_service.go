// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * API version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"os"
)

// AudioAPIService is a service that implements the logic for the AudioAPIServicer
// This service should implement the business logic for every endpoint for the AudioAPI API.
// Include any external packages or services that will be required by this service.
type AudioAPIService struct {
}

// NewAudioAPIService creates a default api service
func NewAudioAPIService() *AudioAPIService {
	return &AudioAPIService{}
}

// CreateSpeech - Generates audio from the input text.
func (s *AudioAPIService) CreateSpeech(ctx context.Context, createSpeechRequest CreateSpeechRequest) (ImplResponse, error) {
	// TODO - update CreateSpeech with the required logic for this service method.
	// Add api_audio_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateSpeech method not implemented")
}

// CreateTranscription - Transcribes audio into the input language.
func (s *AudioAPIService) CreateTranscription(ctx context.Context, file *os.File, model CreateTranscriptionRequestModel, language string, prompt string, responseFormat string, temperature float32, timestampGranularities []string) (ImplResponse, error) {
	// TODO - update CreateTranscription with the required logic for this service method.
	// Add api_audio_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreateTranscription200Response{}) or use other options such as http.Ok ...
	// return Response(200, CreateTranscription200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateTranscription method not implemented")
}

// CreateTranslation - Translates audio into English.
func (s *AudioAPIService) CreateTranslation(ctx context.Context, file *os.File, model CreateTranscriptionRequestModel, prompt string, responseFormat string, temperature float32) (ImplResponse, error) {
	// TODO - update CreateTranslation with the required logic for this service method.
	// Add api_audio_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreateTranslation200Response{}) or use other options such as http.Ok ...
	// return Response(200, CreateTranslation200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateTranslation method not implemented")
}
