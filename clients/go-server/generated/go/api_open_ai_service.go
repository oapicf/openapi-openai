/*
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * API version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"os"
)

// OpenAIAPIService is a service that implements the logic for the OpenAIAPIServicer
// This service should implement the business logic for every endpoint for the OpenAIAPI API.
// Include any external packages or services that will be required by this service.
type OpenAIAPIService struct {
}

// NewOpenAIAPIService creates a default api service
func NewOpenAIAPIService() OpenAIAPIServicer {
	return &OpenAIAPIService{}
}

// CancelFineTune - Immediately cancel a fine-tune job. 
func (s *OpenAIAPIService) CancelFineTune(ctx context.Context, fineTuneId string) (ImplResponse, error) {
	// TODO - update CancelFineTune with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, FineTune{}) or use other options such as http.Ok ...
	// return Response(200, FineTune{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CancelFineTune method not implemented")
}

// CreateChatCompletion - Creates a model response for the given chat conversation.
func (s *OpenAIAPIService) CreateChatCompletion(ctx context.Context, createChatCompletionRequest CreateChatCompletionRequest) (ImplResponse, error) {
	// TODO - update CreateChatCompletion with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreateChatCompletionResponse{}) or use other options such as http.Ok ...
	// return Response(200, CreateChatCompletionResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateChatCompletion method not implemented")
}

// CreateCompletion - Creates a completion for the provided prompt and parameters.
func (s *OpenAIAPIService) CreateCompletion(ctx context.Context, createCompletionRequest CreateCompletionRequest) (ImplResponse, error) {
	// TODO - update CreateCompletion with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreateCompletionResponse{}) or use other options such as http.Ok ...
	// return Response(200, CreateCompletionResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateCompletion method not implemented")
}

// CreateEdit - Creates a new edit for the provided input, instruction, and parameters.
func (s *OpenAIAPIService) CreateEdit(ctx context.Context, createEditRequest CreateEditRequest) (ImplResponse, error) {
	// TODO - update CreateEdit with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreateEditResponse{}) or use other options such as http.Ok ...
	// return Response(200, CreateEditResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateEdit method not implemented")
}

// CreateEmbedding - Creates an embedding vector representing the input text.
func (s *OpenAIAPIService) CreateEmbedding(ctx context.Context, createEmbeddingRequest CreateEmbeddingRequest) (ImplResponse, error) {
	// TODO - update CreateEmbedding with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreateEmbeddingResponse{}) or use other options such as http.Ok ...
	// return Response(200, CreateEmbeddingResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateEmbedding method not implemented")
}

// CreateFile - Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit. 
func (s *OpenAIAPIService) CreateFile(ctx context.Context, file *os.File, purpose string) (ImplResponse, error) {
	// TODO - update CreateFile with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OpenAiFile{}) or use other options such as http.Ok ...
	// return Response(200, OpenAiFile{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateFile method not implemented")
}

// CreateFineTune - Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning) 
func (s *OpenAIAPIService) CreateFineTune(ctx context.Context, createFineTuneRequest CreateFineTuneRequest) (ImplResponse, error) {
	// TODO - update CreateFineTune with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, FineTune{}) or use other options such as http.Ok ...
	// return Response(200, FineTune{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateFineTune method not implemented")
}

// CreateImage - Creates an image given a prompt.
func (s *OpenAIAPIService) CreateImage(ctx context.Context, createImageRequest CreateImageRequest) (ImplResponse, error) {
	// TODO - update CreateImage with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ImagesResponse{}) or use other options such as http.Ok ...
	// return Response(200, ImagesResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateImage method not implemented")
}

// CreateImageEdit - Creates an edited or extended image given an original image and a prompt.
func (s *OpenAIAPIService) CreateImageEdit(ctx context.Context, image *os.File, prompt string, mask *os.File, n *int32, size *string, responseFormat *string, user string) (ImplResponse, error) {
	// TODO - update CreateImageEdit with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ImagesResponse{}) or use other options such as http.Ok ...
	// return Response(200, ImagesResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateImageEdit method not implemented")
}

// CreateImageVariation - Creates a variation of a given image.
func (s *OpenAIAPIService) CreateImageVariation(ctx context.Context, image *os.File, n *int32, size *string, responseFormat *string, user string) (ImplResponse, error) {
	// TODO - update CreateImageVariation with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ImagesResponse{}) or use other options such as http.Ok ...
	// return Response(200, ImagesResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateImageVariation method not implemented")
}

// CreateModeration - Classifies if text violates OpenAI&#39;s Content Policy
func (s *OpenAIAPIService) CreateModeration(ctx context.Context, createModerationRequest CreateModerationRequest) (ImplResponse, error) {
	// TODO - update CreateModeration with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreateModerationResponse{}) or use other options such as http.Ok ...
	// return Response(200, CreateModerationResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateModeration method not implemented")
}

// CreateTranscription - Transcribes audio into the input language.
func (s *OpenAIAPIService) CreateTranscription(ctx context.Context, file *os.File, model CreateTranscriptionRequestModel, prompt string, responseFormat string, temperature float32, language string) (ImplResponse, error) {
	// TODO - update CreateTranscription with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreateTranscriptionResponse{}) or use other options such as http.Ok ...
	// return Response(200, CreateTranscriptionResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateTranscription method not implemented")
}

// CreateTranslation - Translates audio into English.
func (s *OpenAIAPIService) CreateTranslation(ctx context.Context, file *os.File, model CreateTranscriptionRequestModel, prompt string, responseFormat string, temperature float32) (ImplResponse, error) {
	// TODO - update CreateTranslation with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreateTranslationResponse{}) or use other options such as http.Ok ...
	// return Response(200, CreateTranslationResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateTranslation method not implemented")
}

// DeleteFile - Delete a file.
func (s *OpenAIAPIService) DeleteFile(ctx context.Context, fileId string) (ImplResponse, error) {
	// TODO - update DeleteFile with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, DeleteFileResponse{}) or use other options such as http.Ok ...
	// return Response(200, DeleteFileResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteFile method not implemented")
}

// DeleteModel - Delete a fine-tuned model. You must have the Owner role in your organization.
func (s *OpenAIAPIService) DeleteModel(ctx context.Context, model string) (ImplResponse, error) {
	// TODO - update DeleteModel with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, DeleteModelResponse{}) or use other options such as http.Ok ...
	// return Response(200, DeleteModelResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteModel method not implemented")
}

// DownloadFile - Returns the contents of the specified file
func (s *OpenAIAPIService) DownloadFile(ctx context.Context, fileId string) (ImplResponse, error) {
	// TODO - update DownloadFile with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, string{}) or use other options such as http.Ok ...
	// return Response(200, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DownloadFile method not implemented")
}

// ListFiles - Returns a list of files that belong to the user&#39;s organization.
func (s *OpenAIAPIService) ListFiles(ctx context.Context) (ImplResponse, error) {
	// TODO - update ListFiles with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ListFilesResponse{}) or use other options such as http.Ok ...
	// return Response(200, ListFilesResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListFiles method not implemented")
}

// ListFineTuneEvents - Get fine-grained status updates for a fine-tune job. 
func (s *OpenAIAPIService) ListFineTuneEvents(ctx context.Context, fineTuneId string, stream bool) (ImplResponse, error) {
	// TODO - update ListFineTuneEvents with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ListFineTuneEventsResponse{}) or use other options such as http.Ok ...
	// return Response(200, ListFineTuneEventsResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListFineTuneEvents method not implemented")
}

// ListFineTunes - List your organization&#39;s fine-tuning jobs 
func (s *OpenAIAPIService) ListFineTunes(ctx context.Context) (ImplResponse, error) {
	// TODO - update ListFineTunes with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ListFineTunesResponse{}) or use other options such as http.Ok ...
	// return Response(200, ListFineTunesResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListFineTunes method not implemented")
}

// ListModels - Lists the currently available models, and provides basic information about each one such as the owner and availability.
func (s *OpenAIAPIService) ListModels(ctx context.Context) (ImplResponse, error) {
	// TODO - update ListModels with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ListModelsResponse{}) or use other options such as http.Ok ...
	// return Response(200, ListModelsResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListModels method not implemented")
}

// RetrieveFile - Returns information about a specific file.
func (s *OpenAIAPIService) RetrieveFile(ctx context.Context, fileId string) (ImplResponse, error) {
	// TODO - update RetrieveFile with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OpenAiFile{}) or use other options such as http.Ok ...
	// return Response(200, OpenAiFile{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RetrieveFile method not implemented")
}

// RetrieveFineTune - Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning) 
func (s *OpenAIAPIService) RetrieveFineTune(ctx context.Context, fineTuneId string) (ImplResponse, error) {
	// TODO - update RetrieveFineTune with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, FineTune{}) or use other options such as http.Ok ...
	// return Response(200, FineTune{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RetrieveFineTune method not implemented")
}

// RetrieveModel - Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
func (s *OpenAIAPIService) RetrieveModel(ctx context.Context, model string) (ImplResponse, error) {
	// TODO - update RetrieveModel with the required logic for this service method.
	// Add api_open_ai_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Model{}) or use other options such as http.Ok ...
	// return Response(200, Model{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RetrieveModel method not implemented")
}
