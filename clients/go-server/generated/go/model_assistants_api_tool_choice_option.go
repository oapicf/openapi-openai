/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * API version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




// AssistantsApiToolChoiceOption - Controls which (if any) tool is called by the model. `none` means the model will not call any tools and instead generates a message. `auto` is the default value and means the model can pick between generating a message or calling a tool. Specifying a particular tool like `{\"type\": \"TOOL_TYPE\"}` or `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to call that tool. 
type AssistantsApiToolChoiceOption struct {

	// The type of the tool. If type is `function`, the function name must be set
	Type string `json:"type"`

	Function ChatCompletionNamedToolChoiceFunction `json:"function,omitempty"`
}

// AssertAssistantsApiToolChoiceOptionRequired checks if the required fields are not zero-ed
func AssertAssistantsApiToolChoiceOptionRequired(obj AssistantsApiToolChoiceOption) error {
	elements := map[string]interface{}{
		"type": obj.Type,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertChatCompletionNamedToolChoiceFunctionRequired(obj.Function); err != nil {
		return err
	}
	return nil
}

// AssertAssistantsApiToolChoiceOptionConstraints checks if the values respects the defined constraints
func AssertAssistantsApiToolChoiceOptionConstraints(obj AssistantsApiToolChoiceOption) error {
	return nil
}
