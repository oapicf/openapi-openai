/*
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * API version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type CreateEmbeddingResponse struct {

	Object string `json:"object"`

	Model string `json:"model"`

	Data []CreateEmbeddingResponseDataInner `json:"data"`

	Usage CreateEmbeddingResponseUsage `json:"usage"`
}

// AssertCreateEmbeddingResponseRequired checks if the required fields are not zero-ed
func AssertCreateEmbeddingResponseRequired(obj CreateEmbeddingResponse) error {
	elements := map[string]interface{}{
		"object": obj.Object,
		"model": obj.Model,
		"data": obj.Data,
		"usage": obj.Usage,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Data {
		if err := AssertCreateEmbeddingResponseDataInnerRequired(el); err != nil {
			return err
		}
	}
	if err := AssertCreateEmbeddingResponseUsageRequired(obj.Usage); err != nil {
		return err
	}
	return nil
}

// AssertCreateEmbeddingResponseConstraints checks if the values respects the defined constraints
func AssertCreateEmbeddingResponseConstraints(obj CreateEmbeddingResponse) error {
	return nil
}
