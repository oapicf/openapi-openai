/*
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * API version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type FineTune struct {

	Id string `json:"id"`

	Object string `json:"object"`

	CreatedAt int32 `json:"created_at"`

	UpdatedAt int32 `json:"updated_at"`

	Model string `json:"model"`

	FineTunedModel *string `json:"fine_tuned_model"`

	OrganizationId string `json:"organization_id"`

	Status string `json:"status"`

	Hyperparams map[string]interface{} `json:"hyperparams"`

	TrainingFiles []OpenAiFile `json:"training_files"`

	ValidationFiles []OpenAiFile `json:"validation_files"`

	ResultFiles []OpenAiFile `json:"result_files"`

	Events []FineTuneEvent `json:"events,omitempty"`
}

// AssertFineTuneRequired checks if the required fields are not zero-ed
func AssertFineTuneRequired(obj FineTune) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"object": obj.Object,
		"created_at": obj.CreatedAt,
		"updated_at": obj.UpdatedAt,
		"model": obj.Model,
		"fine_tuned_model": obj.FineTunedModel,
		"organization_id": obj.OrganizationId,
		"status": obj.Status,
		"hyperparams": obj.Hyperparams,
		"training_files": obj.TrainingFiles,
		"validation_files": obj.ValidationFiles,
		"result_files": obj.ResultFiles,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.TrainingFiles {
		if err := AssertOpenAiFileRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ValidationFiles {
		if err := AssertOpenAiFileRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ResultFiles {
		if err := AssertOpenAiFileRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Events {
		if err := AssertFineTuneEventRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertFineTuneConstraints checks if the values respects the defined constraints
func AssertFineTuneConstraints(obj FineTune) error {
	return nil
}
