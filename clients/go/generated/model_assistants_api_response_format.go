/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AssistantsApiResponseFormat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssistantsApiResponseFormat{}

// AssistantsApiResponseFormat An object describing the expected output of the model. If `json_object` only `function` type `tools` are allowed to be passed to the Run. If `text` the model can return text or any value needed. 
type AssistantsApiResponseFormat struct {
	// Must be one of `text` or `json_object`.
	Type *string `json:"type,omitempty"`
}

// NewAssistantsApiResponseFormat instantiates a new AssistantsApiResponseFormat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssistantsApiResponseFormat() *AssistantsApiResponseFormat {
	this := AssistantsApiResponseFormat{}
	var type_ string = "text"
	this.Type = &type_
	return &this
}

// NewAssistantsApiResponseFormatWithDefaults instantiates a new AssistantsApiResponseFormat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssistantsApiResponseFormatWithDefaults() *AssistantsApiResponseFormat {
	this := AssistantsApiResponseFormat{}
	var type_ string = "text"
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AssistantsApiResponseFormat) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssistantsApiResponseFormat) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AssistantsApiResponseFormat) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AssistantsApiResponseFormat) SetType(v string) {
	o.Type = &v
}

func (o AssistantsApiResponseFormat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssistantsApiResponseFormat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAssistantsApiResponseFormat struct {
	value *AssistantsApiResponseFormat
	isSet bool
}

func (v NullableAssistantsApiResponseFormat) Get() *AssistantsApiResponseFormat {
	return v.value
}

func (v *NullableAssistantsApiResponseFormat) Set(val *AssistantsApiResponseFormat) {
	v.value = val
	v.isSet = true
}

func (v NullableAssistantsApiResponseFormat) IsSet() bool {
	return v.isSet
}

func (v *NullableAssistantsApiResponseFormat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssistantsApiResponseFormat(val *AssistantsApiResponseFormat) *NullableAssistantsApiResponseFormat {
	return &NullableAssistantsApiResponseFormat{value: val, isSet: true}
}

func (v NullableAssistantsApiResponseFormat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssistantsApiResponseFormat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


