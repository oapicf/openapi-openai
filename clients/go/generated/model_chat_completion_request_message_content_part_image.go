/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChatCompletionRequestMessageContentPartImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatCompletionRequestMessageContentPartImage{}

// ChatCompletionRequestMessageContentPartImage struct for ChatCompletionRequestMessageContentPartImage
type ChatCompletionRequestMessageContentPartImage struct {
	// The type of the content part.
	Type string `json:"type"`
	ImageUrl ChatCompletionRequestMessageContentPartImageImageUrl `json:"image_url"`
}

type _ChatCompletionRequestMessageContentPartImage ChatCompletionRequestMessageContentPartImage

// NewChatCompletionRequestMessageContentPartImage instantiates a new ChatCompletionRequestMessageContentPartImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatCompletionRequestMessageContentPartImage(type_ string, imageUrl ChatCompletionRequestMessageContentPartImageImageUrl) *ChatCompletionRequestMessageContentPartImage {
	this := ChatCompletionRequestMessageContentPartImage{}
	this.Type = type_
	this.ImageUrl = imageUrl
	return &this
}

// NewChatCompletionRequestMessageContentPartImageWithDefaults instantiates a new ChatCompletionRequestMessageContentPartImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatCompletionRequestMessageContentPartImageWithDefaults() *ChatCompletionRequestMessageContentPartImage {
	this := ChatCompletionRequestMessageContentPartImage{}
	return &this
}

// GetType returns the Type field value
func (o *ChatCompletionRequestMessageContentPartImage) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestMessageContentPartImage) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ChatCompletionRequestMessageContentPartImage) SetType(v string) {
	o.Type = v
}

// GetImageUrl returns the ImageUrl field value
func (o *ChatCompletionRequestMessageContentPartImage) GetImageUrl() ChatCompletionRequestMessageContentPartImageImageUrl {
	if o == nil {
		var ret ChatCompletionRequestMessageContentPartImageImageUrl
		return ret
	}

	return o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestMessageContentPartImage) GetImageUrlOk() (*ChatCompletionRequestMessageContentPartImageImageUrl, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageUrl, true
}

// SetImageUrl sets field value
func (o *ChatCompletionRequestMessageContentPartImage) SetImageUrl(v ChatCompletionRequestMessageContentPartImageImageUrl) {
	o.ImageUrl = v
}

func (o ChatCompletionRequestMessageContentPartImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatCompletionRequestMessageContentPartImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["image_url"] = o.ImageUrl
	return toSerialize, nil
}

func (o *ChatCompletionRequestMessageContentPartImage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"image_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatCompletionRequestMessageContentPartImage := _ChatCompletionRequestMessageContentPartImage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatCompletionRequestMessageContentPartImage)

	if err != nil {
		return err
	}

	*o = ChatCompletionRequestMessageContentPartImage(varChatCompletionRequestMessageContentPartImage)

	return err
}

type NullableChatCompletionRequestMessageContentPartImage struct {
	value *ChatCompletionRequestMessageContentPartImage
	isSet bool
}

func (v NullableChatCompletionRequestMessageContentPartImage) Get() *ChatCompletionRequestMessageContentPartImage {
	return v.value
}

func (v *NullableChatCompletionRequestMessageContentPartImage) Set(val *ChatCompletionRequestMessageContentPartImage) {
	v.value = val
	v.isSet = true
}

func (v NullableChatCompletionRequestMessageContentPartImage) IsSet() bool {
	return v.isSet
}

func (v *NullableChatCompletionRequestMessageContentPartImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatCompletionRequestMessageContentPartImage(val *ChatCompletionRequestMessageContentPartImage) *NullableChatCompletionRequestMessageContentPartImage {
	return &NullableChatCompletionRequestMessageContentPartImage{value: val, isSet: true}
}

func (v NullableChatCompletionRequestMessageContentPartImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatCompletionRequestMessageContentPartImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


