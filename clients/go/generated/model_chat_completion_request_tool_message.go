/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChatCompletionRequestToolMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatCompletionRequestToolMessage{}

// ChatCompletionRequestToolMessage struct for ChatCompletionRequestToolMessage
type ChatCompletionRequestToolMessage struct {
	// The role of the messages author, in this case `tool`.
	Role string `json:"role"`
	// The contents of the tool message.
	Content string `json:"content"`
	// Tool call that this message is responding to.
	ToolCallId string `json:"tool_call_id"`
}

type _ChatCompletionRequestToolMessage ChatCompletionRequestToolMessage

// NewChatCompletionRequestToolMessage instantiates a new ChatCompletionRequestToolMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatCompletionRequestToolMessage(role string, content string, toolCallId string) *ChatCompletionRequestToolMessage {
	this := ChatCompletionRequestToolMessage{}
	this.Role = role
	this.Content = content
	this.ToolCallId = toolCallId
	return &this
}

// NewChatCompletionRequestToolMessageWithDefaults instantiates a new ChatCompletionRequestToolMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatCompletionRequestToolMessageWithDefaults() *ChatCompletionRequestToolMessage {
	this := ChatCompletionRequestToolMessage{}
	return &this
}

// GetRole returns the Role field value
func (o *ChatCompletionRequestToolMessage) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestToolMessage) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *ChatCompletionRequestToolMessage) SetRole(v string) {
	o.Role = v
}

// GetContent returns the Content field value
func (o *ChatCompletionRequestToolMessage) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestToolMessage) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ChatCompletionRequestToolMessage) SetContent(v string) {
	o.Content = v
}

// GetToolCallId returns the ToolCallId field value
func (o *ChatCompletionRequestToolMessage) GetToolCallId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToolCallId
}

// GetToolCallIdOk returns a tuple with the ToolCallId field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestToolMessage) GetToolCallIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToolCallId, true
}

// SetToolCallId sets field value
func (o *ChatCompletionRequestToolMessage) SetToolCallId(v string) {
	o.ToolCallId = v
}

func (o ChatCompletionRequestToolMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatCompletionRequestToolMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["role"] = o.Role
	toSerialize["content"] = o.Content
	toSerialize["tool_call_id"] = o.ToolCallId
	return toSerialize, nil
}

func (o *ChatCompletionRequestToolMessage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"role",
		"content",
		"tool_call_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatCompletionRequestToolMessage := _ChatCompletionRequestToolMessage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatCompletionRequestToolMessage)

	if err != nil {
		return err
	}

	*o = ChatCompletionRequestToolMessage(varChatCompletionRequestToolMessage)

	return err
}

type NullableChatCompletionRequestToolMessage struct {
	value *ChatCompletionRequestToolMessage
	isSet bool
}

func (v NullableChatCompletionRequestToolMessage) Get() *ChatCompletionRequestToolMessage {
	return v.value
}

func (v *NullableChatCompletionRequestToolMessage) Set(val *ChatCompletionRequestToolMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableChatCompletionRequestToolMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableChatCompletionRequestToolMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatCompletionRequestToolMessage(val *ChatCompletionRequestToolMessage) *NullableChatCompletionRequestToolMessage {
	return &NullableChatCompletionRequestToolMessage{value: val, isSet: true}
}

func (v NullableChatCompletionRequestToolMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatCompletionRequestToolMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


