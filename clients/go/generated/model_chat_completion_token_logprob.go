/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChatCompletionTokenLogprob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatCompletionTokenLogprob{}

// ChatCompletionTokenLogprob struct for ChatCompletionTokenLogprob
type ChatCompletionTokenLogprob struct {
	// The token.
	Token string `json:"token"`
	// The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely.
	Logprob float32 `json:"logprob"`
	// A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.
	Bytes []int32 `json:"bytes"`
	// List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested `top_logprobs` returned.
	TopLogprobs []ChatCompletionTokenLogprobTopLogprobsInner `json:"top_logprobs"`
}

type _ChatCompletionTokenLogprob ChatCompletionTokenLogprob

// NewChatCompletionTokenLogprob instantiates a new ChatCompletionTokenLogprob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatCompletionTokenLogprob(token string, logprob float32, bytes []int32, topLogprobs []ChatCompletionTokenLogprobTopLogprobsInner) *ChatCompletionTokenLogprob {
	this := ChatCompletionTokenLogprob{}
	this.Token = token
	this.Logprob = logprob
	this.Bytes = bytes
	this.TopLogprobs = topLogprobs
	return &this
}

// NewChatCompletionTokenLogprobWithDefaults instantiates a new ChatCompletionTokenLogprob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatCompletionTokenLogprobWithDefaults() *ChatCompletionTokenLogprob {
	this := ChatCompletionTokenLogprob{}
	return &this
}

// GetToken returns the Token field value
func (o *ChatCompletionTokenLogprob) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionTokenLogprob) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ChatCompletionTokenLogprob) SetToken(v string) {
	o.Token = v
}

// GetLogprob returns the Logprob field value
func (o *ChatCompletionTokenLogprob) GetLogprob() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Logprob
}

// GetLogprobOk returns a tuple with the Logprob field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionTokenLogprob) GetLogprobOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Logprob, true
}

// SetLogprob sets field value
func (o *ChatCompletionTokenLogprob) SetLogprob(v float32) {
	o.Logprob = v
}

// GetBytes returns the Bytes field value
// If the value is explicit nil, the zero value for []int32 will be returned
func (o *ChatCompletionTokenLogprob) GetBytes() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Bytes
}

// GetBytesOk returns a tuple with the Bytes field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatCompletionTokenLogprob) GetBytesOk() ([]int32, bool) {
	if o == nil || IsNil(o.Bytes) {
		return nil, false
	}
	return o.Bytes, true
}

// SetBytes sets field value
func (o *ChatCompletionTokenLogprob) SetBytes(v []int32) {
	o.Bytes = v
}

// GetTopLogprobs returns the TopLogprobs field value
func (o *ChatCompletionTokenLogprob) GetTopLogprobs() []ChatCompletionTokenLogprobTopLogprobsInner {
	if o == nil {
		var ret []ChatCompletionTokenLogprobTopLogprobsInner
		return ret
	}

	return o.TopLogprobs
}

// GetTopLogprobsOk returns a tuple with the TopLogprobs field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionTokenLogprob) GetTopLogprobsOk() ([]ChatCompletionTokenLogprobTopLogprobsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.TopLogprobs, true
}

// SetTopLogprobs sets field value
func (o *ChatCompletionTokenLogprob) SetTopLogprobs(v []ChatCompletionTokenLogprobTopLogprobsInner) {
	o.TopLogprobs = v
}

func (o ChatCompletionTokenLogprob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatCompletionTokenLogprob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["token"] = o.Token
	toSerialize["logprob"] = o.Logprob
	if o.Bytes != nil {
		toSerialize["bytes"] = o.Bytes
	}
	toSerialize["top_logprobs"] = o.TopLogprobs
	return toSerialize, nil
}

func (o *ChatCompletionTokenLogprob) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token",
		"logprob",
		"bytes",
		"top_logprobs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatCompletionTokenLogprob := _ChatCompletionTokenLogprob{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatCompletionTokenLogprob)

	if err != nil {
		return err
	}

	*o = ChatCompletionTokenLogprob(varChatCompletionTokenLogprob)

	return err
}

type NullableChatCompletionTokenLogprob struct {
	value *ChatCompletionTokenLogprob
	isSet bool
}

func (v NullableChatCompletionTokenLogprob) Get() *ChatCompletionTokenLogprob {
	return v.value
}

func (v *NullableChatCompletionTokenLogprob) Set(val *ChatCompletionTokenLogprob) {
	v.value = val
	v.isSet = true
}

func (v NullableChatCompletionTokenLogprob) IsSet() bool {
	return v.isSet
}

func (v *NullableChatCompletionTokenLogprob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatCompletionTokenLogprob(val *ChatCompletionTokenLogprob) *NullableChatCompletionTokenLogprob {
	return &NullableChatCompletionTokenLogprob{value: val, isSet: true}
}

func (v NullableChatCompletionTokenLogprob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatCompletionTokenLogprob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


