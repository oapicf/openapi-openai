/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// CreateChatCompletionRequestFunctionCall - Deprecated in favor of `tool_choice`.  Controls which (if any) function is called by the model. `none` means the model will not call a function and instead generates a message. `auto` means the model can pick between generating a message or calling a function. Specifying a particular function via `{\"name\": \"my_function\"}` forces the model to call that function.  `none` is the default when no functions are present. `auto` is the default if functions are present. 
type CreateChatCompletionRequestFunctionCall struct {
	ChatCompletionFunctionCallOption *ChatCompletionFunctionCallOption
	String *string
}

// ChatCompletionFunctionCallOptionAsCreateChatCompletionRequestFunctionCall is a convenience function that returns ChatCompletionFunctionCallOption wrapped in CreateChatCompletionRequestFunctionCall
func ChatCompletionFunctionCallOptionAsCreateChatCompletionRequestFunctionCall(v *ChatCompletionFunctionCallOption) CreateChatCompletionRequestFunctionCall {
	return CreateChatCompletionRequestFunctionCall{
		ChatCompletionFunctionCallOption: v,
	}
}

// stringAsCreateChatCompletionRequestFunctionCall is a convenience function that returns string wrapped in CreateChatCompletionRequestFunctionCall
func StringAsCreateChatCompletionRequestFunctionCall(v *string) CreateChatCompletionRequestFunctionCall {
	return CreateChatCompletionRequestFunctionCall{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateChatCompletionRequestFunctionCall) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ChatCompletionFunctionCallOption
	err = newStrictDecoder(data).Decode(&dst.ChatCompletionFunctionCallOption)
	if err == nil {
		jsonChatCompletionFunctionCallOption, _ := json.Marshal(dst.ChatCompletionFunctionCallOption)
		if string(jsonChatCompletionFunctionCallOption) == "{}" { // empty struct
			dst.ChatCompletionFunctionCallOption = nil
		} else {
			match++
		}
	} else {
		dst.ChatCompletionFunctionCallOption = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ChatCompletionFunctionCallOption = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateChatCompletionRequestFunctionCall)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateChatCompletionRequestFunctionCall)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateChatCompletionRequestFunctionCall) MarshalJSON() ([]byte, error) {
	if src.ChatCompletionFunctionCallOption != nil {
		return json.Marshal(&src.ChatCompletionFunctionCallOption)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateChatCompletionRequestFunctionCall) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ChatCompletionFunctionCallOption != nil {
		return obj.ChatCompletionFunctionCallOption
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableCreateChatCompletionRequestFunctionCall struct {
	value *CreateChatCompletionRequestFunctionCall
	isSet bool
}

func (v NullableCreateChatCompletionRequestFunctionCall) Get() *CreateChatCompletionRequestFunctionCall {
	return v.value
}

func (v *NullableCreateChatCompletionRequestFunctionCall) Set(val *CreateChatCompletionRequestFunctionCall) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateChatCompletionRequestFunctionCall) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateChatCompletionRequestFunctionCall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateChatCompletionRequestFunctionCall(val *CreateChatCompletionRequestFunctionCall) *NullableCreateChatCompletionRequestFunctionCall {
	return &NullableCreateChatCompletionRequestFunctionCall{value: val, isSet: true}
}

func (v NullableCreateChatCompletionRequestFunctionCall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateChatCompletionRequestFunctionCall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


