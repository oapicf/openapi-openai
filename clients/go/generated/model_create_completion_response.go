/*
OpenAI API

APIs for sampling from and fine-tuning language models

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateCompletionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCompletionResponse{}

// CreateCompletionResponse struct for CreateCompletionResponse
type CreateCompletionResponse struct {
	Id string `json:"id"`
	Object string `json:"object"`
	Created int32 `json:"created"`
	Model string `json:"model"`
	Choices []CreateCompletionResponseChoicesInner `json:"choices"`
	Usage *CreateCompletionResponseUsage `json:"usage,omitempty"`
}

type _CreateCompletionResponse CreateCompletionResponse

// NewCreateCompletionResponse instantiates a new CreateCompletionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCompletionResponse(id string, object string, created int32, model string, choices []CreateCompletionResponseChoicesInner) *CreateCompletionResponse {
	this := CreateCompletionResponse{}
	this.Id = id
	this.Object = object
	this.Created = created
	this.Model = model
	this.Choices = choices
	return &this
}

// NewCreateCompletionResponseWithDefaults instantiates a new CreateCompletionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCompletionResponseWithDefaults() *CreateCompletionResponse {
	this := CreateCompletionResponse{}
	return &this
}

// GetId returns the Id field value
func (o *CreateCompletionResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateCompletionResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateCompletionResponse) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value
func (o *CreateCompletionResponse) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *CreateCompletionResponse) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *CreateCompletionResponse) SetObject(v string) {
	o.Object = v
}

// GetCreated returns the Created field value
func (o *CreateCompletionResponse) GetCreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *CreateCompletionResponse) GetCreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *CreateCompletionResponse) SetCreated(v int32) {
	o.Created = v
}

// GetModel returns the Model field value
func (o *CreateCompletionResponse) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *CreateCompletionResponse) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *CreateCompletionResponse) SetModel(v string) {
	o.Model = v
}

// GetChoices returns the Choices field value
func (o *CreateCompletionResponse) GetChoices() []CreateCompletionResponseChoicesInner {
	if o == nil {
		var ret []CreateCompletionResponseChoicesInner
		return ret
	}

	return o.Choices
}

// GetChoicesOk returns a tuple with the Choices field value
// and a boolean to check if the value has been set.
func (o *CreateCompletionResponse) GetChoicesOk() ([]CreateCompletionResponseChoicesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Choices, true
}

// SetChoices sets field value
func (o *CreateCompletionResponse) SetChoices(v []CreateCompletionResponseChoicesInner) {
	o.Choices = v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *CreateCompletionResponse) GetUsage() CreateCompletionResponseUsage {
	if o == nil || IsNil(o.Usage) {
		var ret CreateCompletionResponseUsage
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompletionResponse) GetUsageOk() (*CreateCompletionResponseUsage, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *CreateCompletionResponse) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given CreateCompletionResponseUsage and assigns it to the Usage field.
func (o *CreateCompletionResponse) SetUsage(v CreateCompletionResponseUsage) {
	o.Usage = &v
}

func (o CreateCompletionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCompletionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["object"] = o.Object
	toSerialize["created"] = o.Created
	toSerialize["model"] = o.Model
	toSerialize["choices"] = o.Choices
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	return toSerialize, nil
}

func (o *CreateCompletionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"object",
		"created",
		"model",
		"choices",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCompletionResponse := _CreateCompletionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCompletionResponse)

	if err != nil {
		return err
	}

	*o = CreateCompletionResponse(varCreateCompletionResponse)

	return err
}

type NullableCreateCompletionResponse struct {
	value *CreateCompletionResponse
	isSet bool
}

func (v NullableCreateCompletionResponse) Get() *CreateCompletionResponse {
	return v.value
}

func (v *NullableCreateCompletionResponse) Set(val *CreateCompletionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCompletionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCompletionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCompletionResponse(val *CreateCompletionResponse) *NullableCreateCompletionResponse {
	return &NullableCreateCompletionResponse{value: val, isSet: true}
}

func (v NullableCreateCompletionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCompletionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


