/*
OpenAI API

APIs for sampling from and fine-tuning language models

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateEditRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEditRequest{}

// CreateEditRequest struct for CreateEditRequest
type CreateEditRequest struct {
	Model CreateEditRequestModel `json:"model"`
	// The input text to use as a starting point for the edit.
	Input NullableString `json:"input,omitempty"`
	// The instruction that tells the model how to edit the prompt.
	Instruction string `json:"instruction"`
	// How many edits to generate for the input and instruction.
	N NullableInt32 `json:"n,omitempty"`
	// What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.  We generally recommend altering this or `top_p` but not both. 
	Temperature NullableFloat32 `json:"temperature,omitempty"`
	// An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or `temperature` but not both. 
	TopP NullableFloat32 `json:"top_p,omitempty"`
}

type _CreateEditRequest CreateEditRequest

// NewCreateEditRequest instantiates a new CreateEditRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEditRequest(model CreateEditRequestModel, instruction string) *CreateEditRequest {
	this := CreateEditRequest{}
	this.Model = model
	var input string = ""
	this.Input = *NewNullableString(&input)
	this.Instruction = instruction
	var n int32 = 1
	this.N = *NewNullableInt32(&n)
	var temperature float32 = 1
	this.Temperature = *NewNullableFloat32(&temperature)
	var topP float32 = 1
	this.TopP = *NewNullableFloat32(&topP)
	return &this
}

// NewCreateEditRequestWithDefaults instantiates a new CreateEditRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEditRequestWithDefaults() *CreateEditRequest {
	this := CreateEditRequest{}
	var input string = ""
	this.Input = *NewNullableString(&input)
	var n int32 = 1
	this.N = *NewNullableInt32(&n)
	var temperature float32 = 1
	this.Temperature = *NewNullableFloat32(&temperature)
	var topP float32 = 1
	this.TopP = *NewNullableFloat32(&topP)
	return &this
}

// GetModel returns the Model field value
func (o *CreateEditRequest) GetModel() CreateEditRequestModel {
	if o == nil {
		var ret CreateEditRequestModel
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *CreateEditRequest) GetModelOk() (*CreateEditRequestModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *CreateEditRequest) SetModel(v CreateEditRequestModel) {
	o.Model = v
}

// GetInput returns the Input field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEditRequest) GetInput() string {
	if o == nil || IsNil(o.Input.Get()) {
		var ret string
		return ret
	}
	return *o.Input.Get()
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEditRequest) GetInputOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Input.Get(), o.Input.IsSet()
}

// HasInput returns a boolean if a field has been set.
func (o *CreateEditRequest) HasInput() bool {
	if o != nil && o.Input.IsSet() {
		return true
	}

	return false
}

// SetInput gets a reference to the given NullableString and assigns it to the Input field.
func (o *CreateEditRequest) SetInput(v string) {
	o.Input.Set(&v)
}
// SetInputNil sets the value for Input to be an explicit nil
func (o *CreateEditRequest) SetInputNil() {
	o.Input.Set(nil)
}

// UnsetInput ensures that no value is present for Input, not even an explicit nil
func (o *CreateEditRequest) UnsetInput() {
	o.Input.Unset()
}

// GetInstruction returns the Instruction field value
func (o *CreateEditRequest) GetInstruction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Instruction
}

// GetInstructionOk returns a tuple with the Instruction field value
// and a boolean to check if the value has been set.
func (o *CreateEditRequest) GetInstructionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instruction, true
}

// SetInstruction sets field value
func (o *CreateEditRequest) SetInstruction(v string) {
	o.Instruction = v
}

// GetN returns the N field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEditRequest) GetN() int32 {
	if o == nil || IsNil(o.N.Get()) {
		var ret int32
		return ret
	}
	return *o.N.Get()
}

// GetNOk returns a tuple with the N field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEditRequest) GetNOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.N.Get(), o.N.IsSet()
}

// HasN returns a boolean if a field has been set.
func (o *CreateEditRequest) HasN() bool {
	if o != nil && o.N.IsSet() {
		return true
	}

	return false
}

// SetN gets a reference to the given NullableInt32 and assigns it to the N field.
func (o *CreateEditRequest) SetN(v int32) {
	o.N.Set(&v)
}
// SetNNil sets the value for N to be an explicit nil
func (o *CreateEditRequest) SetNNil() {
	o.N.Set(nil)
}

// UnsetN ensures that no value is present for N, not even an explicit nil
func (o *CreateEditRequest) UnsetN() {
	o.N.Unset()
}

// GetTemperature returns the Temperature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEditRequest) GetTemperature() float32 {
	if o == nil || IsNil(o.Temperature.Get()) {
		var ret float32
		return ret
	}
	return *o.Temperature.Get()
}

// GetTemperatureOk returns a tuple with the Temperature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEditRequest) GetTemperatureOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Temperature.Get(), o.Temperature.IsSet()
}

// HasTemperature returns a boolean if a field has been set.
func (o *CreateEditRequest) HasTemperature() bool {
	if o != nil && o.Temperature.IsSet() {
		return true
	}

	return false
}

// SetTemperature gets a reference to the given NullableFloat32 and assigns it to the Temperature field.
func (o *CreateEditRequest) SetTemperature(v float32) {
	o.Temperature.Set(&v)
}
// SetTemperatureNil sets the value for Temperature to be an explicit nil
func (o *CreateEditRequest) SetTemperatureNil() {
	o.Temperature.Set(nil)
}

// UnsetTemperature ensures that no value is present for Temperature, not even an explicit nil
func (o *CreateEditRequest) UnsetTemperature() {
	o.Temperature.Unset()
}

// GetTopP returns the TopP field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEditRequest) GetTopP() float32 {
	if o == nil || IsNil(o.TopP.Get()) {
		var ret float32
		return ret
	}
	return *o.TopP.Get()
}

// GetTopPOk returns a tuple with the TopP field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEditRequest) GetTopPOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TopP.Get(), o.TopP.IsSet()
}

// HasTopP returns a boolean if a field has been set.
func (o *CreateEditRequest) HasTopP() bool {
	if o != nil && o.TopP.IsSet() {
		return true
	}

	return false
}

// SetTopP gets a reference to the given NullableFloat32 and assigns it to the TopP field.
func (o *CreateEditRequest) SetTopP(v float32) {
	o.TopP.Set(&v)
}
// SetTopPNil sets the value for TopP to be an explicit nil
func (o *CreateEditRequest) SetTopPNil() {
	o.TopP.Set(nil)
}

// UnsetTopP ensures that no value is present for TopP, not even an explicit nil
func (o *CreateEditRequest) UnsetTopP() {
	o.TopP.Unset()
}

func (o CreateEditRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEditRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model"] = o.Model
	if o.Input.IsSet() {
		toSerialize["input"] = o.Input.Get()
	}
	toSerialize["instruction"] = o.Instruction
	if o.N.IsSet() {
		toSerialize["n"] = o.N.Get()
	}
	if o.Temperature.IsSet() {
		toSerialize["temperature"] = o.Temperature.Get()
	}
	if o.TopP.IsSet() {
		toSerialize["top_p"] = o.TopP.Get()
	}
	return toSerialize, nil
}

func (o *CreateEditRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model",
		"instruction",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateEditRequest := _CreateEditRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateEditRequest)

	if err != nil {
		return err
	}

	*o = CreateEditRequest(varCreateEditRequest)

	return err
}

type NullableCreateEditRequest struct {
	value *CreateEditRequest
	isSet bool
}

func (v NullableCreateEditRequest) Get() *CreateEditRequest {
	return v.value
}

func (v *NullableCreateEditRequest) Set(val *CreateEditRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEditRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEditRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEditRequest(val *CreateEditRequest) *NullableCreateEditRequest {
	return &NullableCreateEditRequest{value: val, isSet: true}
}

func (v NullableCreateEditRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEditRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


