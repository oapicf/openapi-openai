/*
OpenAI API

APIs for sampling from and fine-tuning language models

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateEmbeddingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEmbeddingRequest{}

// CreateEmbeddingRequest struct for CreateEmbeddingRequest
type CreateEmbeddingRequest struct {
	Model CreateEmbeddingRequestModel `json:"model"`
	Input CreateEmbeddingRequestInput `json:"input"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
	User *string `json:"user,omitempty"`
}

type _CreateEmbeddingRequest CreateEmbeddingRequest

// NewCreateEmbeddingRequest instantiates a new CreateEmbeddingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEmbeddingRequest(model CreateEmbeddingRequestModel, input CreateEmbeddingRequestInput) *CreateEmbeddingRequest {
	this := CreateEmbeddingRequest{}
	this.Model = model
	this.Input = input
	return &this
}

// NewCreateEmbeddingRequestWithDefaults instantiates a new CreateEmbeddingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEmbeddingRequestWithDefaults() *CreateEmbeddingRequest {
	this := CreateEmbeddingRequest{}
	return &this
}

// GetModel returns the Model field value
func (o *CreateEmbeddingRequest) GetModel() CreateEmbeddingRequestModel {
	if o == nil {
		var ret CreateEmbeddingRequestModel
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *CreateEmbeddingRequest) GetModelOk() (*CreateEmbeddingRequestModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *CreateEmbeddingRequest) SetModel(v CreateEmbeddingRequestModel) {
	o.Model = v
}

// GetInput returns the Input field value
func (o *CreateEmbeddingRequest) GetInput() CreateEmbeddingRequestInput {
	if o == nil {
		var ret CreateEmbeddingRequestInput
		return ret
	}

	return o.Input
}

// GetInputOk returns a tuple with the Input field value
// and a boolean to check if the value has been set.
func (o *CreateEmbeddingRequest) GetInputOk() (*CreateEmbeddingRequestInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Input, true
}

// SetInput sets field value
func (o *CreateEmbeddingRequest) SetInput(v CreateEmbeddingRequestInput) {
	o.Input = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *CreateEmbeddingRequest) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmbeddingRequest) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *CreateEmbeddingRequest) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *CreateEmbeddingRequest) SetUser(v string) {
	o.User = &v
}

func (o CreateEmbeddingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEmbeddingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model"] = o.Model
	toSerialize["input"] = o.Input
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

func (o *CreateEmbeddingRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model",
		"input",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateEmbeddingRequest := _CreateEmbeddingRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateEmbeddingRequest)

	if err != nil {
		return err
	}

	*o = CreateEmbeddingRequest(varCreateEmbeddingRequest)

	return err
}

type NullableCreateEmbeddingRequest struct {
	value *CreateEmbeddingRequest
	isSet bool
}

func (v NullableCreateEmbeddingRequest) Get() *CreateEmbeddingRequest {
	return v.value
}

func (v *NullableCreateEmbeddingRequest) Set(val *CreateEmbeddingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEmbeddingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEmbeddingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEmbeddingRequest(val *CreateEmbeddingRequest) *NullableCreateEmbeddingRequest {
	return &NullableCreateEmbeddingRequest{value: val, isSet: true}
}

func (v NullableCreateEmbeddingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEmbeddingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


