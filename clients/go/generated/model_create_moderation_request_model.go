/*
OpenAI API

APIs for sampling from and fine-tuning language models

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// CreateModerationRequestModel - Two content moderations models are available: `text-moderation-stable` and `text-moderation-latest`.  The default is `text-moderation-latest` which will be automatically upgraded over time. This ensures you are always using our most accurate model. If you use `text-moderation-stable`, we will provide advanced notice before updating the model. Accuracy of `text-moderation-stable` may be slightly lower than for `text-moderation-latest`. 
type CreateModerationRequestModel struct {
	String *string
}

// stringAsCreateModerationRequestModel is a convenience function that returns string wrapped in CreateModerationRequestModel
func StringAsCreateModerationRequestModel(v *string) CreateModerationRequestModel {
	return CreateModerationRequestModel{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateModerationRequestModel) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateModerationRequestModel)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateModerationRequestModel)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateModerationRequestModel) MarshalJSON() ([]byte, error) {
	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateModerationRequestModel) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableCreateModerationRequestModel struct {
	value *CreateModerationRequestModel
	isSet bool
}

func (v NullableCreateModerationRequestModel) Get() *CreateModerationRequestModel {
	return v.value
}

func (v *NullableCreateModerationRequestModel) Set(val *CreateModerationRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateModerationRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateModerationRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateModerationRequestModel(val *CreateModerationRequestModel) *NullableCreateModerationRequestModel {
	return &NullableCreateModerationRequestModel{value: val, isSet: true}
}

func (v NullableCreateModerationRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateModerationRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


