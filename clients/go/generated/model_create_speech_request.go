/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSpeechRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSpeechRequest{}

// CreateSpeechRequest struct for CreateSpeechRequest
type CreateSpeechRequest struct {
	Model CreateSpeechRequestModel `json:"model"`
	// The text to generate audio for. The maximum length is 4096 characters.
	Input string `json:"input"`
	// The voice to use when generating the audio. Supported voices are `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`. Previews of the voices are available in the [Text to speech guide](/docs/guides/text-to-speech/voice-options).
	Voice string `json:"voice"`
	// The format to audio in. Supported formats are `mp3`, `opus`, `aac`, `flac`, `wav`, and `pcm`.
	ResponseFormat *string `json:"response_format,omitempty"`
	// The speed of the generated audio. Select a value from `0.25` to `4.0`. `1.0` is the default.
	Speed *float32 `json:"speed,omitempty"`
}

type _CreateSpeechRequest CreateSpeechRequest

// NewCreateSpeechRequest instantiates a new CreateSpeechRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSpeechRequest(model CreateSpeechRequestModel, input string, voice string) *CreateSpeechRequest {
	this := CreateSpeechRequest{}
	this.Model = model
	this.Input = input
	this.Voice = voice
	var responseFormat string = "mp3"
	this.ResponseFormat = &responseFormat
	var speed float32 = 1.0
	this.Speed = &speed
	return &this
}

// NewCreateSpeechRequestWithDefaults instantiates a new CreateSpeechRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSpeechRequestWithDefaults() *CreateSpeechRequest {
	this := CreateSpeechRequest{}
	var responseFormat string = "mp3"
	this.ResponseFormat = &responseFormat
	var speed float32 = 1.0
	this.Speed = &speed
	return &this
}

// GetModel returns the Model field value
func (o *CreateSpeechRequest) GetModel() CreateSpeechRequestModel {
	if o == nil {
		var ret CreateSpeechRequestModel
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *CreateSpeechRequest) GetModelOk() (*CreateSpeechRequestModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *CreateSpeechRequest) SetModel(v CreateSpeechRequestModel) {
	o.Model = v
}

// GetInput returns the Input field value
func (o *CreateSpeechRequest) GetInput() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Input
}

// GetInputOk returns a tuple with the Input field value
// and a boolean to check if the value has been set.
func (o *CreateSpeechRequest) GetInputOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Input, true
}

// SetInput sets field value
func (o *CreateSpeechRequest) SetInput(v string) {
	o.Input = v
}

// GetVoice returns the Voice field value
func (o *CreateSpeechRequest) GetVoice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Voice
}

// GetVoiceOk returns a tuple with the Voice field value
// and a boolean to check if the value has been set.
func (o *CreateSpeechRequest) GetVoiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Voice, true
}

// SetVoice sets field value
func (o *CreateSpeechRequest) SetVoice(v string) {
	o.Voice = v
}

// GetResponseFormat returns the ResponseFormat field value if set, zero value otherwise.
func (o *CreateSpeechRequest) GetResponseFormat() string {
	if o == nil || IsNil(o.ResponseFormat) {
		var ret string
		return ret
	}
	return *o.ResponseFormat
}

// GetResponseFormatOk returns a tuple with the ResponseFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSpeechRequest) GetResponseFormatOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseFormat) {
		return nil, false
	}
	return o.ResponseFormat, true
}

// HasResponseFormat returns a boolean if a field has been set.
func (o *CreateSpeechRequest) HasResponseFormat() bool {
	if o != nil && !IsNil(o.ResponseFormat) {
		return true
	}

	return false
}

// SetResponseFormat gets a reference to the given string and assigns it to the ResponseFormat field.
func (o *CreateSpeechRequest) SetResponseFormat(v string) {
	o.ResponseFormat = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *CreateSpeechRequest) GetSpeed() float32 {
	if o == nil || IsNil(o.Speed) {
		var ret float32
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSpeechRequest) GetSpeedOk() (*float32, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *CreateSpeechRequest) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given float32 and assigns it to the Speed field.
func (o *CreateSpeechRequest) SetSpeed(v float32) {
	o.Speed = &v
}

func (o CreateSpeechRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSpeechRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model"] = o.Model
	toSerialize["input"] = o.Input
	toSerialize["voice"] = o.Voice
	if !IsNil(o.ResponseFormat) {
		toSerialize["response_format"] = o.ResponseFormat
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	return toSerialize, nil
}

func (o *CreateSpeechRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model",
		"input",
		"voice",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSpeechRequest := _CreateSpeechRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSpeechRequest)

	if err != nil {
		return err
	}

	*o = CreateSpeechRequest(varCreateSpeechRequest)

	return err
}

type NullableCreateSpeechRequest struct {
	value *CreateSpeechRequest
	isSet bool
}

func (v NullableCreateSpeechRequest) Get() *CreateSpeechRequest {
	return v.value
}

func (v *NullableCreateSpeechRequest) Set(val *CreateSpeechRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSpeechRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSpeechRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSpeechRequest(val *CreateSpeechRequest) *NullableCreateSpeechRequest {
	return &NullableCreateSpeechRequest{value: val, isSet: true}
}

func (v NullableCreateSpeechRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSpeechRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


