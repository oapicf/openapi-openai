/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTranscriptionResponseJson type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTranscriptionResponseJson{}

// CreateTranscriptionResponseJson Represents a transcription response returned by model, based on the provided input.
type CreateTranscriptionResponseJson struct {
	// The transcribed text.
	Text string `json:"text"`
}

type _CreateTranscriptionResponseJson CreateTranscriptionResponseJson

// NewCreateTranscriptionResponseJson instantiates a new CreateTranscriptionResponseJson object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTranscriptionResponseJson(text string) *CreateTranscriptionResponseJson {
	this := CreateTranscriptionResponseJson{}
	this.Text = text
	return &this
}

// NewCreateTranscriptionResponseJsonWithDefaults instantiates a new CreateTranscriptionResponseJson object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTranscriptionResponseJsonWithDefaults() *CreateTranscriptionResponseJson {
	this := CreateTranscriptionResponseJson{}
	return &this
}

// GetText returns the Text field value
func (o *CreateTranscriptionResponseJson) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *CreateTranscriptionResponseJson) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *CreateTranscriptionResponseJson) SetText(v string) {
	o.Text = v
}

func (o CreateTranscriptionResponseJson) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTranscriptionResponseJson) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["text"] = o.Text
	return toSerialize, nil
}

func (o *CreateTranscriptionResponseJson) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"text",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTranscriptionResponseJson := _CreateTranscriptionResponseJson{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTranscriptionResponseJson)

	if err != nil {
		return err
	}

	*o = CreateTranscriptionResponseJson(varCreateTranscriptionResponseJson)

	return err
}

type NullableCreateTranscriptionResponseJson struct {
	value *CreateTranscriptionResponseJson
	isSet bool
}

func (v NullableCreateTranscriptionResponseJson) Get() *CreateTranscriptionResponseJson {
	return v.value
}

func (v *NullableCreateTranscriptionResponseJson) Set(val *CreateTranscriptionResponseJson) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTranscriptionResponseJson) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTranscriptionResponseJson) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTranscriptionResponseJson(val *CreateTranscriptionResponseJson) *NullableCreateTranscriptionResponseJson {
	return &NullableCreateTranscriptionResponseJson{value: val, isSet: true}
}

func (v NullableCreateTranscriptionResponseJson) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTranscriptionResponseJson) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


