/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTranscriptionResponseVerboseJson type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTranscriptionResponseVerboseJson{}

// CreateTranscriptionResponseVerboseJson Represents a verbose json transcription response returned by model, based on the provided input.
type CreateTranscriptionResponseVerboseJson struct {
	// The language of the input audio.
	Language string `json:"language"`
	// The duration of the input audio.
	Duration string `json:"duration"`
	// The transcribed text.
	Text string `json:"text"`
	// Extracted words and their corresponding timestamps.
	Words []TranscriptionWord `json:"words,omitempty"`
	// Segments of the transcribed text and their corresponding details.
	Segments []TranscriptionSegment `json:"segments,omitempty"`
}

type _CreateTranscriptionResponseVerboseJson CreateTranscriptionResponseVerboseJson

// NewCreateTranscriptionResponseVerboseJson instantiates a new CreateTranscriptionResponseVerboseJson object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTranscriptionResponseVerboseJson(language string, duration string, text string) *CreateTranscriptionResponseVerboseJson {
	this := CreateTranscriptionResponseVerboseJson{}
	this.Language = language
	this.Duration = duration
	this.Text = text
	return &this
}

// NewCreateTranscriptionResponseVerboseJsonWithDefaults instantiates a new CreateTranscriptionResponseVerboseJson object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTranscriptionResponseVerboseJsonWithDefaults() *CreateTranscriptionResponseVerboseJson {
	this := CreateTranscriptionResponseVerboseJson{}
	return &this
}

// GetLanguage returns the Language field value
func (o *CreateTranscriptionResponseVerboseJson) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *CreateTranscriptionResponseVerboseJson) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *CreateTranscriptionResponseVerboseJson) SetLanguage(v string) {
	o.Language = v
}

// GetDuration returns the Duration field value
func (o *CreateTranscriptionResponseVerboseJson) GetDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *CreateTranscriptionResponseVerboseJson) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *CreateTranscriptionResponseVerboseJson) SetDuration(v string) {
	o.Duration = v
}

// GetText returns the Text field value
func (o *CreateTranscriptionResponseVerboseJson) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *CreateTranscriptionResponseVerboseJson) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *CreateTranscriptionResponseVerboseJson) SetText(v string) {
	o.Text = v
}

// GetWords returns the Words field value if set, zero value otherwise.
func (o *CreateTranscriptionResponseVerboseJson) GetWords() []TranscriptionWord {
	if o == nil || IsNil(o.Words) {
		var ret []TranscriptionWord
		return ret
	}
	return o.Words
}

// GetWordsOk returns a tuple with the Words field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTranscriptionResponseVerboseJson) GetWordsOk() ([]TranscriptionWord, bool) {
	if o == nil || IsNil(o.Words) {
		return nil, false
	}
	return o.Words, true
}

// HasWords returns a boolean if a field has been set.
func (o *CreateTranscriptionResponseVerboseJson) HasWords() bool {
	if o != nil && !IsNil(o.Words) {
		return true
	}

	return false
}

// SetWords gets a reference to the given []TranscriptionWord and assigns it to the Words field.
func (o *CreateTranscriptionResponseVerboseJson) SetWords(v []TranscriptionWord) {
	o.Words = v
}

// GetSegments returns the Segments field value if set, zero value otherwise.
func (o *CreateTranscriptionResponseVerboseJson) GetSegments() []TranscriptionSegment {
	if o == nil || IsNil(o.Segments) {
		var ret []TranscriptionSegment
		return ret
	}
	return o.Segments
}

// GetSegmentsOk returns a tuple with the Segments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTranscriptionResponseVerboseJson) GetSegmentsOk() ([]TranscriptionSegment, bool) {
	if o == nil || IsNil(o.Segments) {
		return nil, false
	}
	return o.Segments, true
}

// HasSegments returns a boolean if a field has been set.
func (o *CreateTranscriptionResponseVerboseJson) HasSegments() bool {
	if o != nil && !IsNil(o.Segments) {
		return true
	}

	return false
}

// SetSegments gets a reference to the given []TranscriptionSegment and assigns it to the Segments field.
func (o *CreateTranscriptionResponseVerboseJson) SetSegments(v []TranscriptionSegment) {
	o.Segments = v
}

func (o CreateTranscriptionResponseVerboseJson) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTranscriptionResponseVerboseJson) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["language"] = o.Language
	toSerialize["duration"] = o.Duration
	toSerialize["text"] = o.Text
	if !IsNil(o.Words) {
		toSerialize["words"] = o.Words
	}
	if !IsNil(o.Segments) {
		toSerialize["segments"] = o.Segments
	}
	return toSerialize, nil
}

func (o *CreateTranscriptionResponseVerboseJson) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"language",
		"duration",
		"text",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTranscriptionResponseVerboseJson := _CreateTranscriptionResponseVerboseJson{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTranscriptionResponseVerboseJson)

	if err != nil {
		return err
	}

	*o = CreateTranscriptionResponseVerboseJson(varCreateTranscriptionResponseVerboseJson)

	return err
}

type NullableCreateTranscriptionResponseVerboseJson struct {
	value *CreateTranscriptionResponseVerboseJson
	isSet bool
}

func (v NullableCreateTranscriptionResponseVerboseJson) Get() *CreateTranscriptionResponseVerboseJson {
	return v.value
}

func (v *NullableCreateTranscriptionResponseVerboseJson) Set(val *CreateTranscriptionResponseVerboseJson) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTranscriptionResponseVerboseJson) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTranscriptionResponseVerboseJson) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTranscriptionResponseVerboseJson(val *CreateTranscriptionResponseVerboseJson) *NullableCreateTranscriptionResponseVerboseJson {
	return &NullableCreateTranscriptionResponseVerboseJson{value: val, isSet: true}
}

func (v NullableCreateTranscriptionResponseVerboseJson) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTranscriptionResponseVerboseJson) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


