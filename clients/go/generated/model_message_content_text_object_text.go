/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MessageContentTextObjectText type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageContentTextObjectText{}

// MessageContentTextObjectText struct for MessageContentTextObjectText
type MessageContentTextObjectText struct {
	// The data that makes up the text.
	Value string `json:"value"`
	Annotations []MessageContentTextObjectTextAnnotationsInner `json:"annotations"`
}

type _MessageContentTextObjectText MessageContentTextObjectText

// NewMessageContentTextObjectText instantiates a new MessageContentTextObjectText object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageContentTextObjectText(value string, annotations []MessageContentTextObjectTextAnnotationsInner) *MessageContentTextObjectText {
	this := MessageContentTextObjectText{}
	this.Value = value
	this.Annotations = annotations
	return &this
}

// NewMessageContentTextObjectTextWithDefaults instantiates a new MessageContentTextObjectText object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageContentTextObjectTextWithDefaults() *MessageContentTextObjectText {
	this := MessageContentTextObjectText{}
	return &this
}

// GetValue returns the Value field value
func (o *MessageContentTextObjectText) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *MessageContentTextObjectText) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *MessageContentTextObjectText) SetValue(v string) {
	o.Value = v
}

// GetAnnotations returns the Annotations field value
func (o *MessageContentTextObjectText) GetAnnotations() []MessageContentTextObjectTextAnnotationsInner {
	if o == nil {
		var ret []MessageContentTextObjectTextAnnotationsInner
		return ret
	}

	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value
// and a boolean to check if the value has been set.
func (o *MessageContentTextObjectText) GetAnnotationsOk() ([]MessageContentTextObjectTextAnnotationsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Annotations, true
}

// SetAnnotations sets field value
func (o *MessageContentTextObjectText) SetAnnotations(v []MessageContentTextObjectTextAnnotationsInner) {
	o.Annotations = v
}

func (o MessageContentTextObjectText) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageContentTextObjectText) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value"] = o.Value
	toSerialize["annotations"] = o.Annotations
	return toSerialize, nil
}

func (o *MessageContentTextObjectText) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"value",
		"annotations",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageContentTextObjectText := _MessageContentTextObjectText{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMessageContentTextObjectText)

	if err != nil {
		return err
	}

	*o = MessageContentTextObjectText(varMessageContentTextObjectText)

	return err
}

type NullableMessageContentTextObjectText struct {
	value *MessageContentTextObjectText
	isSet bool
}

func (v NullableMessageContentTextObjectText) Get() *MessageContentTextObjectText {
	return v.value
}

func (v *NullableMessageContentTextObjectText) Set(val *MessageContentTextObjectText) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageContentTextObjectText) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageContentTextObjectText) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageContentTextObjectText(val *MessageContentTextObjectText) *NullableMessageContentTextObjectText {
	return &NullableMessageContentTextObjectText{value: val, isSet: true}
}

func (v NullableMessageContentTextObjectText) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageContentTextObjectText) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


