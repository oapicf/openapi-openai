/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// MessageContentTextObjectTextAnnotationsInner - struct for MessageContentTextObjectTextAnnotationsInner
type MessageContentTextObjectTextAnnotationsInner struct {
	MessageContentTextAnnotationsFileCitationObject *MessageContentTextAnnotationsFileCitationObject
	MessageContentTextAnnotationsFilePathObject *MessageContentTextAnnotationsFilePathObject
}

// MessageContentTextAnnotationsFileCitationObjectAsMessageContentTextObjectTextAnnotationsInner is a convenience function that returns MessageContentTextAnnotationsFileCitationObject wrapped in MessageContentTextObjectTextAnnotationsInner
func MessageContentTextAnnotationsFileCitationObjectAsMessageContentTextObjectTextAnnotationsInner(v *MessageContentTextAnnotationsFileCitationObject) MessageContentTextObjectTextAnnotationsInner {
	return MessageContentTextObjectTextAnnotationsInner{
		MessageContentTextAnnotationsFileCitationObject: v,
	}
}

// MessageContentTextAnnotationsFilePathObjectAsMessageContentTextObjectTextAnnotationsInner is a convenience function that returns MessageContentTextAnnotationsFilePathObject wrapped in MessageContentTextObjectTextAnnotationsInner
func MessageContentTextAnnotationsFilePathObjectAsMessageContentTextObjectTextAnnotationsInner(v *MessageContentTextAnnotationsFilePathObject) MessageContentTextObjectTextAnnotationsInner {
	return MessageContentTextObjectTextAnnotationsInner{
		MessageContentTextAnnotationsFilePathObject: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *MessageContentTextObjectTextAnnotationsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into MessageContentTextAnnotationsFileCitationObject
	err = newStrictDecoder(data).Decode(&dst.MessageContentTextAnnotationsFileCitationObject)
	if err == nil {
		jsonMessageContentTextAnnotationsFileCitationObject, _ := json.Marshal(dst.MessageContentTextAnnotationsFileCitationObject)
		if string(jsonMessageContentTextAnnotationsFileCitationObject) == "{}" { // empty struct
			dst.MessageContentTextAnnotationsFileCitationObject = nil
		} else {
			if err = validator.Validate(dst.MessageContentTextAnnotationsFileCitationObject); err != nil {
				dst.MessageContentTextAnnotationsFileCitationObject = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageContentTextAnnotationsFileCitationObject = nil
	}

	// try to unmarshal data into MessageContentTextAnnotationsFilePathObject
	err = newStrictDecoder(data).Decode(&dst.MessageContentTextAnnotationsFilePathObject)
	if err == nil {
		jsonMessageContentTextAnnotationsFilePathObject, _ := json.Marshal(dst.MessageContentTextAnnotationsFilePathObject)
		if string(jsonMessageContentTextAnnotationsFilePathObject) == "{}" { // empty struct
			dst.MessageContentTextAnnotationsFilePathObject = nil
		} else {
			if err = validator.Validate(dst.MessageContentTextAnnotationsFilePathObject); err != nil {
				dst.MessageContentTextAnnotationsFilePathObject = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageContentTextAnnotationsFilePathObject = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.MessageContentTextAnnotationsFileCitationObject = nil
		dst.MessageContentTextAnnotationsFilePathObject = nil

		return fmt.Errorf("data matches more than one schema in oneOf(MessageContentTextObjectTextAnnotationsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(MessageContentTextObjectTextAnnotationsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src MessageContentTextObjectTextAnnotationsInner) MarshalJSON() ([]byte, error) {
	if src.MessageContentTextAnnotationsFileCitationObject != nil {
		return json.Marshal(&src.MessageContentTextAnnotationsFileCitationObject)
	}

	if src.MessageContentTextAnnotationsFilePathObject != nil {
		return json.Marshal(&src.MessageContentTextAnnotationsFilePathObject)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *MessageContentTextObjectTextAnnotationsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.MessageContentTextAnnotationsFileCitationObject != nil {
		return obj.MessageContentTextAnnotationsFileCitationObject
	}

	if obj.MessageContentTextAnnotationsFilePathObject != nil {
		return obj.MessageContentTextAnnotationsFilePathObject
	}

	// all schemas are nil
	return nil
}

type NullableMessageContentTextObjectTextAnnotationsInner struct {
	value *MessageContentTextObjectTextAnnotationsInner
	isSet bool
}

func (v NullableMessageContentTextObjectTextAnnotationsInner) Get() *MessageContentTextObjectTextAnnotationsInner {
	return v.value
}

func (v *NullableMessageContentTextObjectTextAnnotationsInner) Set(val *MessageContentTextObjectTextAnnotationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageContentTextObjectTextAnnotationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageContentTextObjectTextAnnotationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageContentTextObjectTextAnnotationsInner(val *MessageContentTextObjectTextAnnotationsInner) *NullableMessageContentTextObjectTextAnnotationsInner {
	return &NullableMessageContentTextObjectTextAnnotationsInner{value: val, isSet: true}
}

func (v NullableMessageContentTextObjectTextAnnotationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageContentTextObjectTextAnnotationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


