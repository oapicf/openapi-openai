/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// MessageDeltaContentTextObjectTextAnnotationsInner - struct for MessageDeltaContentTextObjectTextAnnotationsInner
type MessageDeltaContentTextObjectTextAnnotationsInner struct {
	MessageDeltaContentTextAnnotationsFileCitationObject *MessageDeltaContentTextAnnotationsFileCitationObject
	MessageDeltaContentTextAnnotationsFilePathObject *MessageDeltaContentTextAnnotationsFilePathObject
}

// MessageDeltaContentTextAnnotationsFileCitationObjectAsMessageDeltaContentTextObjectTextAnnotationsInner is a convenience function that returns MessageDeltaContentTextAnnotationsFileCitationObject wrapped in MessageDeltaContentTextObjectTextAnnotationsInner
func MessageDeltaContentTextAnnotationsFileCitationObjectAsMessageDeltaContentTextObjectTextAnnotationsInner(v *MessageDeltaContentTextAnnotationsFileCitationObject) MessageDeltaContentTextObjectTextAnnotationsInner {
	return MessageDeltaContentTextObjectTextAnnotationsInner{
		MessageDeltaContentTextAnnotationsFileCitationObject: v,
	}
}

// MessageDeltaContentTextAnnotationsFilePathObjectAsMessageDeltaContentTextObjectTextAnnotationsInner is a convenience function that returns MessageDeltaContentTextAnnotationsFilePathObject wrapped in MessageDeltaContentTextObjectTextAnnotationsInner
func MessageDeltaContentTextAnnotationsFilePathObjectAsMessageDeltaContentTextObjectTextAnnotationsInner(v *MessageDeltaContentTextAnnotationsFilePathObject) MessageDeltaContentTextObjectTextAnnotationsInner {
	return MessageDeltaContentTextObjectTextAnnotationsInner{
		MessageDeltaContentTextAnnotationsFilePathObject: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *MessageDeltaContentTextObjectTextAnnotationsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into MessageDeltaContentTextAnnotationsFileCitationObject
	err = newStrictDecoder(data).Decode(&dst.MessageDeltaContentTextAnnotationsFileCitationObject)
	if err == nil {
		jsonMessageDeltaContentTextAnnotationsFileCitationObject, _ := json.Marshal(dst.MessageDeltaContentTextAnnotationsFileCitationObject)
		if string(jsonMessageDeltaContentTextAnnotationsFileCitationObject) == "{}" { // empty struct
			dst.MessageDeltaContentTextAnnotationsFileCitationObject = nil
		} else {
			if err = validator.Validate(dst.MessageDeltaContentTextAnnotationsFileCitationObject); err != nil {
				dst.MessageDeltaContentTextAnnotationsFileCitationObject = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageDeltaContentTextAnnotationsFileCitationObject = nil
	}

	// try to unmarshal data into MessageDeltaContentTextAnnotationsFilePathObject
	err = newStrictDecoder(data).Decode(&dst.MessageDeltaContentTextAnnotationsFilePathObject)
	if err == nil {
		jsonMessageDeltaContentTextAnnotationsFilePathObject, _ := json.Marshal(dst.MessageDeltaContentTextAnnotationsFilePathObject)
		if string(jsonMessageDeltaContentTextAnnotationsFilePathObject) == "{}" { // empty struct
			dst.MessageDeltaContentTextAnnotationsFilePathObject = nil
		} else {
			if err = validator.Validate(dst.MessageDeltaContentTextAnnotationsFilePathObject); err != nil {
				dst.MessageDeltaContentTextAnnotationsFilePathObject = nil
			} else {
				match++
			}
		}
	} else {
		dst.MessageDeltaContentTextAnnotationsFilePathObject = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.MessageDeltaContentTextAnnotationsFileCitationObject = nil
		dst.MessageDeltaContentTextAnnotationsFilePathObject = nil

		return fmt.Errorf("data matches more than one schema in oneOf(MessageDeltaContentTextObjectTextAnnotationsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(MessageDeltaContentTextObjectTextAnnotationsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src MessageDeltaContentTextObjectTextAnnotationsInner) MarshalJSON() ([]byte, error) {
	if src.MessageDeltaContentTextAnnotationsFileCitationObject != nil {
		return json.Marshal(&src.MessageDeltaContentTextAnnotationsFileCitationObject)
	}

	if src.MessageDeltaContentTextAnnotationsFilePathObject != nil {
		return json.Marshal(&src.MessageDeltaContentTextAnnotationsFilePathObject)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *MessageDeltaContentTextObjectTextAnnotationsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.MessageDeltaContentTextAnnotationsFileCitationObject != nil {
		return obj.MessageDeltaContentTextAnnotationsFileCitationObject
	}

	if obj.MessageDeltaContentTextAnnotationsFilePathObject != nil {
		return obj.MessageDeltaContentTextAnnotationsFilePathObject
	}

	// all schemas are nil
	return nil
}

type NullableMessageDeltaContentTextObjectTextAnnotationsInner struct {
	value *MessageDeltaContentTextObjectTextAnnotationsInner
	isSet bool
}

func (v NullableMessageDeltaContentTextObjectTextAnnotationsInner) Get() *MessageDeltaContentTextObjectTextAnnotationsInner {
	return v.value
}

func (v *NullableMessageDeltaContentTextObjectTextAnnotationsInner) Set(val *MessageDeltaContentTextObjectTextAnnotationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageDeltaContentTextObjectTextAnnotationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageDeltaContentTextObjectTextAnnotationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageDeltaContentTextObjectTextAnnotationsInner(val *MessageDeltaContentTextObjectTextAnnotationsInner) *NullableMessageDeltaContentTextObjectTextAnnotationsInner {
	return &NullableMessageDeltaContentTextObjectTextAnnotationsInner{value: val, isSet: true}
}

func (v NullableMessageDeltaContentTextObjectTextAnnotationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageDeltaContentTextObjectTextAnnotationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


