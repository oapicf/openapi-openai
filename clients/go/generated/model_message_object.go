/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MessageObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageObject{}

// MessageObject Represents a message within a [thread](/docs/api-reference/threads).
type MessageObject struct {
	// The identifier, which can be referenced in API endpoints.
	Id string `json:"id"`
	// The object type, which is always `thread.message`.
	Object string `json:"object"`
	// The Unix timestamp (in seconds) for when the message was created.
	CreatedAt int32 `json:"created_at"`
	// The [thread](/docs/api-reference/threads) ID that this message belongs to.
	ThreadId string `json:"thread_id"`
	// The status of the message, which can be either `in_progress`, `incomplete`, or `completed`.
	Status string `json:"status"`
	IncompleteDetails NullableMessageObjectIncompleteDetails `json:"incomplete_details"`
	// The Unix timestamp (in seconds) for when the message was completed.
	CompletedAt NullableInt32 `json:"completed_at"`
	// The Unix timestamp (in seconds) for when the message was marked as incomplete.
	IncompleteAt NullableInt32 `json:"incomplete_at"`
	// The entity that produced the message. One of `user` or `assistant`.
	Role string `json:"role"`
	// The content of the message in array of text and/or images.
	Content []MessageObjectContentInner `json:"content"`
	// If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message.
	AssistantId NullableString `json:"assistant_id"`
	// The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is `null` when messages are created manually using the create message or create thread endpoints.
	RunId NullableString `json:"run_id"`
	// A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
	FileIds []string `json:"file_ids"`
	// Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
	Metadata map[string]interface{} `json:"metadata"`
}

type _MessageObject MessageObject

// NewMessageObject instantiates a new MessageObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageObject(id string, object string, createdAt int32, threadId string, status string, incompleteDetails NullableMessageObjectIncompleteDetails, completedAt NullableInt32, incompleteAt NullableInt32, role string, content []MessageObjectContentInner, assistantId NullableString, runId NullableString, fileIds []string, metadata map[string]interface{}) *MessageObject {
	this := MessageObject{}
	this.Id = id
	this.Object = object
	this.CreatedAt = createdAt
	this.ThreadId = threadId
	this.Status = status
	this.IncompleteDetails = incompleteDetails
	this.CompletedAt = completedAt
	this.IncompleteAt = incompleteAt
	this.Role = role
	this.Content = content
	this.AssistantId = assistantId
	this.RunId = runId
	this.FileIds = fileIds
	this.Metadata = metadata
	return &this
}

// NewMessageObjectWithDefaults instantiates a new MessageObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageObjectWithDefaults() *MessageObject {
	this := MessageObject{}
	return &this
}

// GetId returns the Id field value
func (o *MessageObject) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MessageObject) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MessageObject) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value
func (o *MessageObject) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *MessageObject) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *MessageObject) SetObject(v string) {
	o.Object = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *MessageObject) GetCreatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *MessageObject) GetCreatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *MessageObject) SetCreatedAt(v int32) {
	o.CreatedAt = v
}

// GetThreadId returns the ThreadId field value
func (o *MessageObject) GetThreadId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ThreadId
}

// GetThreadIdOk returns a tuple with the ThreadId field value
// and a boolean to check if the value has been set.
func (o *MessageObject) GetThreadIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThreadId, true
}

// SetThreadId sets field value
func (o *MessageObject) SetThreadId(v string) {
	o.ThreadId = v
}

// GetStatus returns the Status field value
func (o *MessageObject) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MessageObject) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MessageObject) SetStatus(v string) {
	o.Status = v
}

// GetIncompleteDetails returns the IncompleteDetails field value
// If the value is explicit nil, the zero value for MessageObjectIncompleteDetails will be returned
func (o *MessageObject) GetIncompleteDetails() MessageObjectIncompleteDetails {
	if o == nil || o.IncompleteDetails.Get() == nil {
		var ret MessageObjectIncompleteDetails
		return ret
	}

	return *o.IncompleteDetails.Get()
}

// GetIncompleteDetailsOk returns a tuple with the IncompleteDetails field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageObject) GetIncompleteDetailsOk() (*MessageObjectIncompleteDetails, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncompleteDetails.Get(), o.IncompleteDetails.IsSet()
}

// SetIncompleteDetails sets field value
func (o *MessageObject) SetIncompleteDetails(v MessageObjectIncompleteDetails) {
	o.IncompleteDetails.Set(&v)
}

// GetCompletedAt returns the CompletedAt field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *MessageObject) GetCompletedAt() int32 {
	if o == nil || o.CompletedAt.Get() == nil {
		var ret int32
		return ret
	}

	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageObject) GetCompletedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// SetCompletedAt sets field value
func (o *MessageObject) SetCompletedAt(v int32) {
	o.CompletedAt.Set(&v)
}

// GetIncompleteAt returns the IncompleteAt field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *MessageObject) GetIncompleteAt() int32 {
	if o == nil || o.IncompleteAt.Get() == nil {
		var ret int32
		return ret
	}

	return *o.IncompleteAt.Get()
}

// GetIncompleteAtOk returns a tuple with the IncompleteAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageObject) GetIncompleteAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncompleteAt.Get(), o.IncompleteAt.IsSet()
}

// SetIncompleteAt sets field value
func (o *MessageObject) SetIncompleteAt(v int32) {
	o.IncompleteAt.Set(&v)
}

// GetRole returns the Role field value
func (o *MessageObject) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *MessageObject) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *MessageObject) SetRole(v string) {
	o.Role = v
}

// GetContent returns the Content field value
func (o *MessageObject) GetContent() []MessageObjectContentInner {
	if o == nil {
		var ret []MessageObjectContentInner
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *MessageObject) GetContentOk() ([]MessageObjectContentInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content, true
}

// SetContent sets field value
func (o *MessageObject) SetContent(v []MessageObjectContentInner) {
	o.Content = v
}

// GetAssistantId returns the AssistantId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MessageObject) GetAssistantId() string {
	if o == nil || o.AssistantId.Get() == nil {
		var ret string
		return ret
	}

	return *o.AssistantId.Get()
}

// GetAssistantIdOk returns a tuple with the AssistantId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageObject) GetAssistantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssistantId.Get(), o.AssistantId.IsSet()
}

// SetAssistantId sets field value
func (o *MessageObject) SetAssistantId(v string) {
	o.AssistantId.Set(&v)
}

// GetRunId returns the RunId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MessageObject) GetRunId() string {
	if o == nil || o.RunId.Get() == nil {
		var ret string
		return ret
	}

	return *o.RunId.Get()
}

// GetRunIdOk returns a tuple with the RunId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageObject) GetRunIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunId.Get(), o.RunId.IsSet()
}

// SetRunId sets field value
func (o *MessageObject) SetRunId(v string) {
	o.RunId.Set(&v)
}

// GetFileIds returns the FileIds field value
func (o *MessageObject) GetFileIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FileIds
}

// GetFileIdsOk returns a tuple with the FileIds field value
// and a boolean to check if the value has been set.
func (o *MessageObject) GetFileIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileIds, true
}

// SetFileIds sets field value
func (o *MessageObject) SetFileIds(v []string) {
	o.FileIds = v
}

// GetMetadata returns the Metadata field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *MessageObject) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageObject) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// SetMetadata sets field value
func (o *MessageObject) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o MessageObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["object"] = o.Object
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["thread_id"] = o.ThreadId
	toSerialize["status"] = o.Status
	toSerialize["incomplete_details"] = o.IncompleteDetails.Get()
	toSerialize["completed_at"] = o.CompletedAt.Get()
	toSerialize["incomplete_at"] = o.IncompleteAt.Get()
	toSerialize["role"] = o.Role
	toSerialize["content"] = o.Content
	toSerialize["assistant_id"] = o.AssistantId.Get()
	toSerialize["run_id"] = o.RunId.Get()
	toSerialize["file_ids"] = o.FileIds
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

func (o *MessageObject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"object",
		"created_at",
		"thread_id",
		"status",
		"incomplete_details",
		"completed_at",
		"incomplete_at",
		"role",
		"content",
		"assistant_id",
		"run_id",
		"file_ids",
		"metadata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageObject := _MessageObject{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMessageObject)

	if err != nil {
		return err
	}

	*o = MessageObject(varMessageObject)

	return err
}

type NullableMessageObject struct {
	value *MessageObject
	isSet bool
}

func (v NullableMessageObject) Get() *MessageObject {
	return v.value
}

func (v *NullableMessageObject) Set(val *MessageObject) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageObject) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageObject(val *MessageObject) *NullableMessageObject {
	return &NullableMessageObject{value: val, isSet: true}
}

func (v NullableMessageObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


