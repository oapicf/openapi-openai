/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// RunStepDeltaObjectDeltaStepDetails - The details of the run step.
type RunStepDeltaObjectDeltaStepDetails struct {
	RunStepDeltaStepDetailsMessageCreationObject *RunStepDeltaStepDetailsMessageCreationObject
	RunStepDeltaStepDetailsToolCallsObject *RunStepDeltaStepDetailsToolCallsObject
}

// RunStepDeltaStepDetailsMessageCreationObjectAsRunStepDeltaObjectDeltaStepDetails is a convenience function that returns RunStepDeltaStepDetailsMessageCreationObject wrapped in RunStepDeltaObjectDeltaStepDetails
func RunStepDeltaStepDetailsMessageCreationObjectAsRunStepDeltaObjectDeltaStepDetails(v *RunStepDeltaStepDetailsMessageCreationObject) RunStepDeltaObjectDeltaStepDetails {
	return RunStepDeltaObjectDeltaStepDetails{
		RunStepDeltaStepDetailsMessageCreationObject: v,
	}
}

// RunStepDeltaStepDetailsToolCallsObjectAsRunStepDeltaObjectDeltaStepDetails is a convenience function that returns RunStepDeltaStepDetailsToolCallsObject wrapped in RunStepDeltaObjectDeltaStepDetails
func RunStepDeltaStepDetailsToolCallsObjectAsRunStepDeltaObjectDeltaStepDetails(v *RunStepDeltaStepDetailsToolCallsObject) RunStepDeltaObjectDeltaStepDetails {
	return RunStepDeltaObjectDeltaStepDetails{
		RunStepDeltaStepDetailsToolCallsObject: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *RunStepDeltaObjectDeltaStepDetails) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into RunStepDeltaStepDetailsMessageCreationObject
	err = newStrictDecoder(data).Decode(&dst.RunStepDeltaStepDetailsMessageCreationObject)
	if err == nil {
		jsonRunStepDeltaStepDetailsMessageCreationObject, _ := json.Marshal(dst.RunStepDeltaStepDetailsMessageCreationObject)
		if string(jsonRunStepDeltaStepDetailsMessageCreationObject) == "{}" { // empty struct
			dst.RunStepDeltaStepDetailsMessageCreationObject = nil
		} else {
			match++
		}
	} else {
		dst.RunStepDeltaStepDetailsMessageCreationObject = nil
	}

	// try to unmarshal data into RunStepDeltaStepDetailsToolCallsObject
	err = newStrictDecoder(data).Decode(&dst.RunStepDeltaStepDetailsToolCallsObject)
	if err == nil {
		jsonRunStepDeltaStepDetailsToolCallsObject, _ := json.Marshal(dst.RunStepDeltaStepDetailsToolCallsObject)
		if string(jsonRunStepDeltaStepDetailsToolCallsObject) == "{}" { // empty struct
			dst.RunStepDeltaStepDetailsToolCallsObject = nil
		} else {
			match++
		}
	} else {
		dst.RunStepDeltaStepDetailsToolCallsObject = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.RunStepDeltaStepDetailsMessageCreationObject = nil
		dst.RunStepDeltaStepDetailsToolCallsObject = nil

		return fmt.Errorf("data matches more than one schema in oneOf(RunStepDeltaObjectDeltaStepDetails)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(RunStepDeltaObjectDeltaStepDetails)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src RunStepDeltaObjectDeltaStepDetails) MarshalJSON() ([]byte, error) {
	if src.RunStepDeltaStepDetailsMessageCreationObject != nil {
		return json.Marshal(&src.RunStepDeltaStepDetailsMessageCreationObject)
	}

	if src.RunStepDeltaStepDetailsToolCallsObject != nil {
		return json.Marshal(&src.RunStepDeltaStepDetailsToolCallsObject)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *RunStepDeltaObjectDeltaStepDetails) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.RunStepDeltaStepDetailsMessageCreationObject != nil {
		return obj.RunStepDeltaStepDetailsMessageCreationObject
	}

	if obj.RunStepDeltaStepDetailsToolCallsObject != nil {
		return obj.RunStepDeltaStepDetailsToolCallsObject
	}

	// all schemas are nil
	return nil
}

type NullableRunStepDeltaObjectDeltaStepDetails struct {
	value *RunStepDeltaObjectDeltaStepDetails
	isSet bool
}

func (v NullableRunStepDeltaObjectDeltaStepDetails) Get() *RunStepDeltaObjectDeltaStepDetails {
	return v.value
}

func (v *NullableRunStepDeltaObjectDeltaStepDetails) Set(val *RunStepDeltaObjectDeltaStepDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableRunStepDeltaObjectDeltaStepDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableRunStepDeltaObjectDeltaStepDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunStepDeltaObjectDeltaStepDetails(val *RunStepDeltaObjectDeltaStepDetails) *NullableRunStepDeltaObjectDeltaStepDetails {
	return &NullableRunStepDeltaObjectDeltaStepDetails{value: val, isSet: true}
}

func (v NullableRunStepDeltaObjectDeltaStepDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunStepDeltaObjectDeltaStepDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


