/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner - struct for RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner
type RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner struct {
	RunStepDeltaStepDetailsToolCallsCodeOutputImageObject *RunStepDeltaStepDetailsToolCallsCodeOutputImageObject
	RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject *RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject
}

// RunStepDeltaStepDetailsToolCallsCodeOutputImageObjectAsRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner is a convenience function that returns RunStepDeltaStepDetailsToolCallsCodeOutputImageObject wrapped in RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner
func RunStepDeltaStepDetailsToolCallsCodeOutputImageObjectAsRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner(v *RunStepDeltaStepDetailsToolCallsCodeOutputImageObject) RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner {
	return RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner{
		RunStepDeltaStepDetailsToolCallsCodeOutputImageObject: v,
	}
}

// RunStepDeltaStepDetailsToolCallsCodeOutputLogsObjectAsRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner is a convenience function that returns RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject wrapped in RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner
func RunStepDeltaStepDetailsToolCallsCodeOutputLogsObjectAsRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner(v *RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject) RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner {
	return RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner{
		RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into RunStepDeltaStepDetailsToolCallsCodeOutputImageObject
	err = newStrictDecoder(data).Decode(&dst.RunStepDeltaStepDetailsToolCallsCodeOutputImageObject)
	if err == nil {
		jsonRunStepDeltaStepDetailsToolCallsCodeOutputImageObject, _ := json.Marshal(dst.RunStepDeltaStepDetailsToolCallsCodeOutputImageObject)
		if string(jsonRunStepDeltaStepDetailsToolCallsCodeOutputImageObject) == "{}" { // empty struct
			dst.RunStepDeltaStepDetailsToolCallsCodeOutputImageObject = nil
		} else {
			match++
		}
	} else {
		dst.RunStepDeltaStepDetailsToolCallsCodeOutputImageObject = nil
	}

	// try to unmarshal data into RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject
	err = newStrictDecoder(data).Decode(&dst.RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject)
	if err == nil {
		jsonRunStepDeltaStepDetailsToolCallsCodeOutputLogsObject, _ := json.Marshal(dst.RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject)
		if string(jsonRunStepDeltaStepDetailsToolCallsCodeOutputLogsObject) == "{}" { // empty struct
			dst.RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject = nil
		} else {
			match++
		}
	} else {
		dst.RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.RunStepDeltaStepDetailsToolCallsCodeOutputImageObject = nil
		dst.RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject = nil

		return fmt.Errorf("data matches more than one schema in oneOf(RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) MarshalJSON() ([]byte, error) {
	if src.RunStepDeltaStepDetailsToolCallsCodeOutputImageObject != nil {
		return json.Marshal(&src.RunStepDeltaStepDetailsToolCallsCodeOutputImageObject)
	}

	if src.RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject != nil {
		return json.Marshal(&src.RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.RunStepDeltaStepDetailsToolCallsCodeOutputImageObject != nil {
		return obj.RunStepDeltaStepDetailsToolCallsCodeOutputImageObject
	}

	if obj.RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject != nil {
		return obj.RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject
	}

	// all schemas are nil
	return nil
}

type NullableRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner struct {
	value *RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner
	isSet bool
}

func (v NullableRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) Get() *RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner {
	return v.value
}

func (v *NullableRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) Set(val *RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner(val *RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) *NullableRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner {
	return &NullableRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner{value: val, isSet: true}
}

func (v NullableRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


