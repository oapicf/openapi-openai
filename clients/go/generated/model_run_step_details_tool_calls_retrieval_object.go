/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RunStepDetailsToolCallsRetrievalObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunStepDetailsToolCallsRetrievalObject{}

// RunStepDetailsToolCallsRetrievalObject struct for RunStepDetailsToolCallsRetrievalObject
type RunStepDetailsToolCallsRetrievalObject struct {
	// The ID of the tool call object.
	Id string `json:"id"`
	// The type of tool call. This is always going to be `retrieval` for this type of tool call.
	Type string `json:"type"`
	// For now, this is always going to be an empty object.
	Retrieval map[string]interface{} `json:"retrieval"`
}

type _RunStepDetailsToolCallsRetrievalObject RunStepDetailsToolCallsRetrievalObject

// NewRunStepDetailsToolCallsRetrievalObject instantiates a new RunStepDetailsToolCallsRetrievalObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunStepDetailsToolCallsRetrievalObject(id string, type_ string, retrieval map[string]interface{}) *RunStepDetailsToolCallsRetrievalObject {
	this := RunStepDetailsToolCallsRetrievalObject{}
	this.Id = id
	this.Type = type_
	this.Retrieval = retrieval
	return &this
}

// NewRunStepDetailsToolCallsRetrievalObjectWithDefaults instantiates a new RunStepDetailsToolCallsRetrievalObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunStepDetailsToolCallsRetrievalObjectWithDefaults() *RunStepDetailsToolCallsRetrievalObject {
	this := RunStepDetailsToolCallsRetrievalObject{}
	return &this
}

// GetId returns the Id field value
func (o *RunStepDetailsToolCallsRetrievalObject) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RunStepDetailsToolCallsRetrievalObject) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RunStepDetailsToolCallsRetrievalObject) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *RunStepDetailsToolCallsRetrievalObject) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RunStepDetailsToolCallsRetrievalObject) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RunStepDetailsToolCallsRetrievalObject) SetType(v string) {
	o.Type = v
}

// GetRetrieval returns the Retrieval field value
func (o *RunStepDetailsToolCallsRetrievalObject) GetRetrieval() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Retrieval
}

// GetRetrievalOk returns a tuple with the Retrieval field value
// and a boolean to check if the value has been set.
func (o *RunStepDetailsToolCallsRetrievalObject) GetRetrievalOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Retrieval, true
}

// SetRetrieval sets field value
func (o *RunStepDetailsToolCallsRetrievalObject) SetRetrieval(v map[string]interface{}) {
	o.Retrieval = v
}

func (o RunStepDetailsToolCallsRetrievalObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunStepDetailsToolCallsRetrievalObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["retrieval"] = o.Retrieval
	return toSerialize, nil
}

func (o *RunStepDetailsToolCallsRetrievalObject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"type",
		"retrieval",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRunStepDetailsToolCallsRetrievalObject := _RunStepDetailsToolCallsRetrievalObject{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRunStepDetailsToolCallsRetrievalObject)

	if err != nil {
		return err
	}

	*o = RunStepDetailsToolCallsRetrievalObject(varRunStepDetailsToolCallsRetrievalObject)

	return err
}

type NullableRunStepDetailsToolCallsRetrievalObject struct {
	value *RunStepDetailsToolCallsRetrievalObject
	isSet bool
}

func (v NullableRunStepDetailsToolCallsRetrievalObject) Get() *RunStepDetailsToolCallsRetrievalObject {
	return v.value
}

func (v *NullableRunStepDetailsToolCallsRetrievalObject) Set(val *RunStepDetailsToolCallsRetrievalObject) {
	v.value = val
	v.isSet = true
}

func (v NullableRunStepDetailsToolCallsRetrievalObject) IsSet() bool {
	return v.isSet
}

func (v *NullableRunStepDetailsToolCallsRetrievalObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunStepDetailsToolCallsRetrievalObject(val *RunStepDetailsToolCallsRetrievalObject) *NullableRunStepDetailsToolCallsRetrievalObject {
	return &NullableRunStepDetailsToolCallsRetrievalObject{value: val, isSet: true}
}

func (v NullableRunStepDetailsToolCallsRetrievalObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunStepDetailsToolCallsRetrievalObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


