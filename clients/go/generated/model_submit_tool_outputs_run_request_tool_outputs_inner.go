/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SubmitToolOutputsRunRequestToolOutputsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubmitToolOutputsRunRequestToolOutputsInner{}

// SubmitToolOutputsRunRequestToolOutputsInner struct for SubmitToolOutputsRunRequestToolOutputsInner
type SubmitToolOutputsRunRequestToolOutputsInner struct {
	// The ID of the tool call in the `required_action` object within the run object the output is being submitted for.
	ToolCallId *string `json:"tool_call_id,omitempty"`
	// The output of the tool call to be submitted to continue the run.
	Output *string `json:"output,omitempty"`
}

// NewSubmitToolOutputsRunRequestToolOutputsInner instantiates a new SubmitToolOutputsRunRequestToolOutputsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitToolOutputsRunRequestToolOutputsInner() *SubmitToolOutputsRunRequestToolOutputsInner {
	this := SubmitToolOutputsRunRequestToolOutputsInner{}
	return &this
}

// NewSubmitToolOutputsRunRequestToolOutputsInnerWithDefaults instantiates a new SubmitToolOutputsRunRequestToolOutputsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitToolOutputsRunRequestToolOutputsInnerWithDefaults() *SubmitToolOutputsRunRequestToolOutputsInner {
	this := SubmitToolOutputsRunRequestToolOutputsInner{}
	return &this
}

// GetToolCallId returns the ToolCallId field value if set, zero value otherwise.
func (o *SubmitToolOutputsRunRequestToolOutputsInner) GetToolCallId() string {
	if o == nil || IsNil(o.ToolCallId) {
		var ret string
		return ret
	}
	return *o.ToolCallId
}

// GetToolCallIdOk returns a tuple with the ToolCallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitToolOutputsRunRequestToolOutputsInner) GetToolCallIdOk() (*string, bool) {
	if o == nil || IsNil(o.ToolCallId) {
		return nil, false
	}
	return o.ToolCallId, true
}

// HasToolCallId returns a boolean if a field has been set.
func (o *SubmitToolOutputsRunRequestToolOutputsInner) HasToolCallId() bool {
	if o != nil && !IsNil(o.ToolCallId) {
		return true
	}

	return false
}

// SetToolCallId gets a reference to the given string and assigns it to the ToolCallId field.
func (o *SubmitToolOutputsRunRequestToolOutputsInner) SetToolCallId(v string) {
	o.ToolCallId = &v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *SubmitToolOutputsRunRequestToolOutputsInner) GetOutput() string {
	if o == nil || IsNil(o.Output) {
		var ret string
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitToolOutputsRunRequestToolOutputsInner) GetOutputOk() (*string, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *SubmitToolOutputsRunRequestToolOutputsInner) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given string and assigns it to the Output field.
func (o *SubmitToolOutputsRunRequestToolOutputsInner) SetOutput(v string) {
	o.Output = &v
}

func (o SubmitToolOutputsRunRequestToolOutputsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubmitToolOutputsRunRequestToolOutputsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ToolCallId) {
		toSerialize["tool_call_id"] = o.ToolCallId
	}
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	return toSerialize, nil
}

type NullableSubmitToolOutputsRunRequestToolOutputsInner struct {
	value *SubmitToolOutputsRunRequestToolOutputsInner
	isSet bool
}

func (v NullableSubmitToolOutputsRunRequestToolOutputsInner) Get() *SubmitToolOutputsRunRequestToolOutputsInner {
	return v.value
}

func (v *NullableSubmitToolOutputsRunRequestToolOutputsInner) Set(val *SubmitToolOutputsRunRequestToolOutputsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitToolOutputsRunRequestToolOutputsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitToolOutputsRunRequestToolOutputsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitToolOutputsRunRequestToolOutputsInner(val *SubmitToolOutputsRunRequestToolOutputsInner) *NullableSubmitToolOutputsRunRequestToolOutputsInner {
	return &NullableSubmitToolOutputsRunRequestToolOutputsInner{value: val, isSet: true}
}

func (v NullableSubmitToolOutputsRunRequestToolOutputsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitToolOutputsRunRequestToolOutputsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


