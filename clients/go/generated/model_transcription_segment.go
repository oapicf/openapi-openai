/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.0.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TranscriptionSegment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranscriptionSegment{}

// TranscriptionSegment struct for TranscriptionSegment
type TranscriptionSegment struct {
	// Unique identifier of the segment.
	Id int32 `json:"id"`
	// Seek offset of the segment.
	Seek int32 `json:"seek"`
	// Start time of the segment in seconds.
	Start float32 `json:"start"`
	// End time of the segment in seconds.
	End float32 `json:"end"`
	// Text content of the segment.
	Text string `json:"text"`
	// Array of token IDs for the text content.
	Tokens []int32 `json:"tokens"`
	// Temperature parameter used for generating the segment.
	Temperature float32 `json:"temperature"`
	// Average logprob of the segment. If the value is lower than -1, consider the logprobs failed.
	AvgLogprob float32 `json:"avg_logprob"`
	// Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed.
	CompressionRatio float32 `json:"compression_ratio"`
	// Probability of no speech in the segment. If the value is higher than 1.0 and the `avg_logprob` is below -1, consider this segment silent.
	NoSpeechProb float32 `json:"no_speech_prob"`
}

type _TranscriptionSegment TranscriptionSegment

// NewTranscriptionSegment instantiates a new TranscriptionSegment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranscriptionSegment(id int32, seek int32, start float32, end float32, text string, tokens []int32, temperature float32, avgLogprob float32, compressionRatio float32, noSpeechProb float32) *TranscriptionSegment {
	this := TranscriptionSegment{}
	this.Id = id
	this.Seek = seek
	this.Start = start
	this.End = end
	this.Text = text
	this.Tokens = tokens
	this.Temperature = temperature
	this.AvgLogprob = avgLogprob
	this.CompressionRatio = compressionRatio
	this.NoSpeechProb = noSpeechProb
	return &this
}

// NewTranscriptionSegmentWithDefaults instantiates a new TranscriptionSegment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranscriptionSegmentWithDefaults() *TranscriptionSegment {
	this := TranscriptionSegment{}
	return &this
}

// GetId returns the Id field value
func (o *TranscriptionSegment) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TranscriptionSegment) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TranscriptionSegment) SetId(v int32) {
	o.Id = v
}

// GetSeek returns the Seek field value
func (o *TranscriptionSegment) GetSeek() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Seek
}

// GetSeekOk returns a tuple with the Seek field value
// and a boolean to check if the value has been set.
func (o *TranscriptionSegment) GetSeekOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seek, true
}

// SetSeek sets field value
func (o *TranscriptionSegment) SetSeek(v int32) {
	o.Seek = v
}

// GetStart returns the Start field value
func (o *TranscriptionSegment) GetStart() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *TranscriptionSegment) GetStartOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *TranscriptionSegment) SetStart(v float32) {
	o.Start = v
}

// GetEnd returns the End field value
func (o *TranscriptionSegment) GetEnd() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *TranscriptionSegment) GetEndOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *TranscriptionSegment) SetEnd(v float32) {
	o.End = v
}

// GetText returns the Text field value
func (o *TranscriptionSegment) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *TranscriptionSegment) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *TranscriptionSegment) SetText(v string) {
	o.Text = v
}

// GetTokens returns the Tokens field value
func (o *TranscriptionSegment) GetTokens() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value
// and a boolean to check if the value has been set.
func (o *TranscriptionSegment) GetTokensOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tokens, true
}

// SetTokens sets field value
func (o *TranscriptionSegment) SetTokens(v []int32) {
	o.Tokens = v
}

// GetTemperature returns the Temperature field value
func (o *TranscriptionSegment) GetTemperature() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Temperature
}

// GetTemperatureOk returns a tuple with the Temperature field value
// and a boolean to check if the value has been set.
func (o *TranscriptionSegment) GetTemperatureOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Temperature, true
}

// SetTemperature sets field value
func (o *TranscriptionSegment) SetTemperature(v float32) {
	o.Temperature = v
}

// GetAvgLogprob returns the AvgLogprob field value
func (o *TranscriptionSegment) GetAvgLogprob() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvgLogprob
}

// GetAvgLogprobOk returns a tuple with the AvgLogprob field value
// and a boolean to check if the value has been set.
func (o *TranscriptionSegment) GetAvgLogprobOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvgLogprob, true
}

// SetAvgLogprob sets field value
func (o *TranscriptionSegment) SetAvgLogprob(v float32) {
	o.AvgLogprob = v
}

// GetCompressionRatio returns the CompressionRatio field value
func (o *TranscriptionSegment) GetCompressionRatio() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CompressionRatio
}

// GetCompressionRatioOk returns a tuple with the CompressionRatio field value
// and a boolean to check if the value has been set.
func (o *TranscriptionSegment) GetCompressionRatioOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompressionRatio, true
}

// SetCompressionRatio sets field value
func (o *TranscriptionSegment) SetCompressionRatio(v float32) {
	o.CompressionRatio = v
}

// GetNoSpeechProb returns the NoSpeechProb field value
func (o *TranscriptionSegment) GetNoSpeechProb() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NoSpeechProb
}

// GetNoSpeechProbOk returns a tuple with the NoSpeechProb field value
// and a boolean to check if the value has been set.
func (o *TranscriptionSegment) GetNoSpeechProbOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NoSpeechProb, true
}

// SetNoSpeechProb sets field value
func (o *TranscriptionSegment) SetNoSpeechProb(v float32) {
	o.NoSpeechProb = v
}

func (o TranscriptionSegment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranscriptionSegment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["seek"] = o.Seek
	toSerialize["start"] = o.Start
	toSerialize["end"] = o.End
	toSerialize["text"] = o.Text
	toSerialize["tokens"] = o.Tokens
	toSerialize["temperature"] = o.Temperature
	toSerialize["avg_logprob"] = o.AvgLogprob
	toSerialize["compression_ratio"] = o.CompressionRatio
	toSerialize["no_speech_prob"] = o.NoSpeechProb
	return toSerialize, nil
}

func (o *TranscriptionSegment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"seek",
		"start",
		"end",
		"text",
		"tokens",
		"temperature",
		"avg_logprob",
		"compression_ratio",
		"no_speech_prob",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTranscriptionSegment := _TranscriptionSegment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTranscriptionSegment)

	if err != nil {
		return err
	}

	*o = TranscriptionSegment(varTranscriptionSegment)

	return err
}

type NullableTranscriptionSegment struct {
	value *TranscriptionSegment
	isSet bool
}

func (v NullableTranscriptionSegment) Get() *TranscriptionSegment {
	return v.value
}

func (v *NullableTranscriptionSegment) Set(val *TranscriptionSegment) {
	v.value = val
	v.isSet = true
}

func (v NullableTranscriptionSegment) IsSet() bool {
	return v.isSet
}

func (v *NullableTranscriptionSegment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranscriptionSegment(val *TranscriptionSegment) *NullableTranscriptionSegment {
	return &NullableTranscriptionSegment{value: val, isSet: true}
}

func (v NullableTranscriptionSegment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranscriptionSegment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


