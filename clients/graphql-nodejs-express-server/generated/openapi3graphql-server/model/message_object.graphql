# 
# OpenAI API
# 
# 
# The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
# 
# Version: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech

# Represents a message within a [thread](/docs/api-reference/threads).
type MessageObject {
  # The identifier, which can be referenced in API endpoints.
  id: String!
  # The object type, which is always `thread.message`.
  object: ObjectEnum
  # The Unix timestamp (in seconds) for when the message was created.
  created_at: Int!
  # The [thread](/docs/api-reference/threads) ID that this message belongs to.
  thread_id: String!
  # The status of the message, which can be either `in_progress`, `incomplete`, or `completed`.
  status: StatusEnum
  incomplete_details: MessageObjectIncompleteDetails
  # The Unix timestamp (in seconds) for when the message was completed.
  completed_at: Int
  # The Unix timestamp (in seconds) for when the message was marked as incomplete.
  incomplete_at: Int
  # The entity that produced the message. One of `user` or `assistant`.
  role: RoleEnum
  # The content of the message in array of text and/or images.
  content: [MessageObjectContentInner!]
  # If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message.
  assistant_id: String
  # The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is `null` when messages are created manually using the create message or create thread endpoints.
  run_id: String
  # A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
  file_ids: [String!!]
  # Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
  metadata: TodoObjectMapping
}

input MessageObjectInput {
    # The identifier, which can be referenced in API endpoints.
    id: String!
    # The object type, which is always `thread.message`.
    object: ObjectEnum
    # The Unix timestamp (in seconds) for when the message was created.
    created_at: Int!
    # The [thread](/docs/api-reference/threads) ID that this message belongs to.
    thread_id: String!
    # The status of the message, which can be either `in_progress`, `incomplete`, or `completed`.
    status: StatusEnum
    incomplete_details: MessageObjectIncompleteDetailsInput
    # The Unix timestamp (in seconds) for when the message was completed.
    completed_at: Int
    # The Unix timestamp (in seconds) for when the message was marked as incomplete.
    incomplete_at: Int
    # The entity that produced the message. One of `user` or `assistant`.
    role: RoleEnum
    # The content of the message in array of text and/or images.
    content: [MessageObjectContentInnerInput]
    # If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message.
    assistant_id: String
    # The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is `null` when messages are created manually using the create message or create thread endpoints.
    run_id: String
    # A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
    file_ids: [String!]
    # Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
    metadata: TodoObjectMapping
}

