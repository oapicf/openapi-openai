/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * CreateEmbeddingResponseDataInner
 */
@JsonPropertyOrder({
  CreateEmbeddingResponseDataInner.JSON_PROPERTY_INDEX,
  CreateEmbeddingResponseDataInner.JSON_PROPERTY_OBJECT,
  CreateEmbeddingResponseDataInner.JSON_PROPERTY_EMBEDDING
})
@JsonTypeName("CreateEmbeddingResponse_data_inner")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-03-16T01:12:32.706318857Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class CreateEmbeddingResponseDataInner {
    public static final String JSON_PROPERTY_INDEX = "index";
    private Integer index;

    public static final String JSON_PROPERTY_OBJECT = "object";
    private String _object;

    public static final String JSON_PROPERTY_EMBEDDING = "embedding";
    private List<BigDecimal> embedding = new ArrayList<>();

    public CreateEmbeddingResponseDataInner(Integer index, String _object, List<BigDecimal> embedding) {
        this.index = index;
        this._object = _object;
        this.embedding = embedding;
    }

    public CreateEmbeddingResponseDataInner index(Integer index) {
        this.index = index;
        return this;
    }

    /**
     * Get index
     * @return index
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_INDEX)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getIndex() {
        return index;
    }

    @JsonProperty(JSON_PROPERTY_INDEX)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIndex(Integer index) {
        this.index = index;
    }

    public CreateEmbeddingResponseDataInner _object(String _object) {
        this._object = _object;
        return this;
    }

    /**
     * Get _object
     * @return _object
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_OBJECT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getObject() {
        return _object;
    }

    @JsonProperty(JSON_PROPERTY_OBJECT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setObject(String _object) {
        this._object = _object;
    }

    public CreateEmbeddingResponseDataInner embedding(List<BigDecimal> embedding) {
        this.embedding = embedding;
        return this;
    }

    public CreateEmbeddingResponseDataInner addEmbeddingItem(BigDecimal embeddingItem) {
        this.embedding.add(embeddingItem);
        return this;
    }

    /**
     * Get embedding
     * @return embedding
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_EMBEDDING)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<BigDecimal> getEmbedding() {
        return embedding;
    }

    @JsonProperty(JSON_PROPERTY_EMBEDDING)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEmbedding(List<BigDecimal> embedding) {
        this.embedding = embedding;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateEmbeddingResponseDataInner createEmbeddingResponseDataInner = (CreateEmbeddingResponseDataInner) o;
        return Objects.equals(this.index, createEmbeddingResponseDataInner.index) &&
            Objects.equals(this._object, createEmbeddingResponseDataInner._object) &&
            Objects.equals(this.embedding, createEmbeddingResponseDataInner.embedding);
    }

    @Override
    public int hashCode() {
        return Objects.hash(index, _object, embedding);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateEmbeddingResponseDataInner {\n");
        sb.append("    index: ").append(toIndentedString(index)).append("\n");
        sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
        sb.append("    embedding: ").append(toIndentedString(embedding)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

