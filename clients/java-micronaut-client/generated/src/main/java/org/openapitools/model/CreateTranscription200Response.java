/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.CreateTranscriptionResponseJson;
import org.openapitools.model.CreateTranscriptionResponseVerboseJson;
import org.openapitools.model.TranscriptionSegment;
import org.openapitools.model.TranscriptionWord;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * CreateTranscription200Response
 */
@JsonPropertyOrder({
  CreateTranscription200Response.JSON_PROPERTY_TEXT,
  CreateTranscription200Response.JSON_PROPERTY_LANGUAGE,
  CreateTranscription200Response.JSON_PROPERTY_DURATION,
  CreateTranscription200Response.JSON_PROPERTY_WORDS,
  CreateTranscription200Response.JSON_PROPERTY_SEGMENTS
})
@JsonTypeName("createTranscription_200_response")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-04-14T13:37:52.123317469Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class CreateTranscription200Response {
    public static final String JSON_PROPERTY_TEXT = "text";
    private String text;

    public static final String JSON_PROPERTY_LANGUAGE = "language";
    private String language;

    public static final String JSON_PROPERTY_DURATION = "duration";
    private String duration;

    public static final String JSON_PROPERTY_WORDS = "words";
    private List<@Valid TranscriptionWord> words = null;

    public static final String JSON_PROPERTY_SEGMENTS = "segments";
    private List<@Valid TranscriptionSegment> segments = null;

    public CreateTranscription200Response(String text, String language, String duration) {
        this.text = text;
        this.language = language;
        this.duration = duration;
    }

    public CreateTranscription200Response text(String text) {
        this.text = text;
        return this;
    }

    /**
     * The transcribed text.
     * @return text
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getText() {
        return text;
    }

    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setText(String text) {
        this.text = text;
    }

    public CreateTranscription200Response language(String language) {
        this.language = language;
        return this;
    }

    /**
     * The language of the input audio.
     * @return language
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_LANGUAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getLanguage() {
        return language;
    }

    @JsonProperty(JSON_PROPERTY_LANGUAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLanguage(String language) {
        this.language = language;
    }

    public CreateTranscription200Response duration(String duration) {
        this.duration = duration;
        return this;
    }

    /**
     * The duration of the input audio.
     * @return duration
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_DURATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getDuration() {
        return duration;
    }

    @JsonProperty(JSON_PROPERTY_DURATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDuration(String duration) {
        this.duration = duration;
    }

    public CreateTranscription200Response words(List<@Valid TranscriptionWord> words) {
        this.words = words;
        return this;
    }

    public CreateTranscription200Response addWordsItem(TranscriptionWord wordsItem) {
        if (this.words == null) {
            this.words = new ArrayList<>();
        }
        this.words.add(wordsItem);
        return this;
    }

    /**
     * Extracted words and their corresponding timestamps.
     * @return words
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_WORDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid TranscriptionWord> getWords() {
        return words;
    }

    @JsonProperty(JSON_PROPERTY_WORDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWords(List<@Valid TranscriptionWord> words) {
        this.words = words;
    }

    public CreateTranscription200Response segments(List<@Valid TranscriptionSegment> segments) {
        this.segments = segments;
        return this;
    }

    public CreateTranscription200Response addSegmentsItem(TranscriptionSegment segmentsItem) {
        if (this.segments == null) {
            this.segments = new ArrayList<>();
        }
        this.segments.add(segmentsItem);
        return this;
    }

    /**
     * Segments of the transcribed text and their corresponding details.
     * @return segments
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SEGMENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid TranscriptionSegment> getSegments() {
        return segments;
    }

    @JsonProperty(JSON_PROPERTY_SEGMENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSegments(List<@Valid TranscriptionSegment> segments) {
        this.segments = segments;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateTranscription200Response createTranscription200Response = (CreateTranscription200Response) o;
        return Objects.equals(this.text, createTranscription200Response.text) &&
            Objects.equals(this.language, createTranscription200Response.language) &&
            Objects.equals(this.duration, createTranscription200Response.duration) &&
            Objects.equals(this.words, createTranscription200Response.words) &&
            Objects.equals(this.segments, createTranscription200Response.segments);
    }

    @Override
    public int hashCode() {
        return Objects.hash(text, language, duration, words, segments);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateTranscription200Response {\n");
        sb.append("    text: ").append(toIndentedString(text)).append("\n");
        sb.append("    language: ").append(toIndentedString(language)).append("\n");
        sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
        sb.append("    words: ").append(toIndentedString(words)).append("\n");
        sb.append("    segments: ").append(toIndentedString(segments)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

