/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * ImagesResponseDataInner
 */
@JsonPropertyOrder({
  ImagesResponseDataInner.JSON_PROPERTY_URL,
  ImagesResponseDataInner.JSON_PROPERTY_B64_JSON
})
@JsonTypeName("ImagesResponse_data_inner")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-03-16T01:12:32.706318857Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class ImagesResponseDataInner {
    public static final String JSON_PROPERTY_URL = "url";
    private String url;

    public static final String JSON_PROPERTY_B64_JSON = "b64_json";
    private String b64Json;

    public ImagesResponseDataInner() {
    }

    public ImagesResponseDataInner url(String url) {
        this.url = url;
        return this;
    }

    /**
     * Get url
     * @return url
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getUrl() {
        return url;
    }

    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUrl(String url) {
        this.url = url;
    }

    public ImagesResponseDataInner b64Json(String b64Json) {
        this.b64Json = b64Json;
        return this;
    }

    /**
     * Get b64Json
     * @return b64Json
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_B64_JSON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getB64Json() {
        return b64Json;
    }

    @JsonProperty(JSON_PROPERTY_B64_JSON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setB64Json(String b64Json) {
        this.b64Json = b64Json;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ImagesResponseDataInner imagesResponseDataInner = (ImagesResponseDataInner) o;
        return Objects.equals(this.url, imagesResponseDataInner.url) &&
            Objects.equals(this.b64Json, imagesResponseDataInner.b64Json);
    }

    @Override
    public int hashCode() {
        return Objects.hash(url, b64Json);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ImagesResponseDataInner {\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    b64Json: ").append(toIndentedString(b64Json)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

