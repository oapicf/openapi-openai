/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.MessageContentTextObjectTextAnnotationsInner;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * MessageContentTextObjectText
 */
@JsonPropertyOrder({
  MessageContentTextObjectText.JSON_PROPERTY_VALUE,
  MessageContentTextObjectText.JSON_PROPERTY_ANNOTATIONS
})
@JsonTypeName("MessageContentTextObject_text")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-03T11:06:40.431829781Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class MessageContentTextObjectText {
    public static final String JSON_PROPERTY_VALUE = "value";
    private String value;

    public static final String JSON_PROPERTY_ANNOTATIONS = "annotations";
    private List<MessageContentTextObjectTextAnnotationsInner> annotations = new ArrayList<>();

    public MessageContentTextObjectText(String value, List<MessageContentTextObjectTextAnnotationsInner> annotations) {
        this.value = value;
        this.annotations = annotations;
    }

    public MessageContentTextObjectText value(String value) {
        this.value = value;
        return this;
    }

    /**
     * The data that makes up the text.
     * @return value
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_VALUE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getValue() {
        return value;
    }

    @JsonProperty(JSON_PROPERTY_VALUE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setValue(String value) {
        this.value = value;
    }

    public MessageContentTextObjectText annotations(List<MessageContentTextObjectTextAnnotationsInner> annotations) {
        this.annotations = annotations;
        return this;
    }

    public MessageContentTextObjectText addAnnotationsItem(MessageContentTextObjectTextAnnotationsInner annotationsItem) {
        this.annotations.add(annotationsItem);
        return this;
    }

    /**
     * Get annotations
     * @return annotations
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_ANNOTATIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<MessageContentTextObjectTextAnnotationsInner> getAnnotations() {
        return annotations;
    }

    @JsonProperty(JSON_PROPERTY_ANNOTATIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAnnotations(List<MessageContentTextObjectTextAnnotationsInner> annotations) {
        this.annotations = annotations;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MessageContentTextObjectText messageContentTextObjectText = (MessageContentTextObjectText) o;
        return Objects.equals(this.value, messageContentTextObjectText.value) &&
            Objects.equals(this.annotations, messageContentTextObjectText.annotations);
    }

    @Override
    public int hashCode() {
        return Objects.hash(value, annotations);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MessageContentTextObjectText {\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

