/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.MessageDeltaContentTextAnnotationsFilePathObjectFilePath;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * A URL for the file that&#39;s generated when the assistant used the &#x60;code_interpreter&#x60; tool to generate a file.
 */
@JsonPropertyOrder({
  MessageDeltaContentTextAnnotationsFilePathObject.JSON_PROPERTY_INDEX,
  MessageDeltaContentTextAnnotationsFilePathObject.JSON_PROPERTY_TYPE,
  MessageDeltaContentTextAnnotationsFilePathObject.JSON_PROPERTY_TEXT,
  MessageDeltaContentTextAnnotationsFilePathObject.JSON_PROPERTY_FILE_PATH,
  MessageDeltaContentTextAnnotationsFilePathObject.JSON_PROPERTY_START_INDEX,
  MessageDeltaContentTextAnnotationsFilePathObject.JSON_PROPERTY_END_INDEX
})
@JsonTypeName("MessageDeltaContentTextAnnotationsFilePathObject")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-03T11:06:40.431829781Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class MessageDeltaContentTextAnnotationsFilePathObject {
    public static final String JSON_PROPERTY_INDEX = "index";
    private Integer index;

    /**
     * Always &#x60;file_path&#x60;.
     */
    public enum TypeEnum {
        FILE_PATH("file_path");

        private String value;

        TypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static TypeEnum fromValue(String value) {
            for (TypeEnum b : TypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_TYPE = "type";
    private TypeEnum type;

    public static final String JSON_PROPERTY_TEXT = "text";
    private String text;

    public static final String JSON_PROPERTY_FILE_PATH = "file_path";
    private MessageDeltaContentTextAnnotationsFilePathObjectFilePath filePath;

    public static final String JSON_PROPERTY_START_INDEX = "start_index";
    private Integer startIndex;

    public static final String JSON_PROPERTY_END_INDEX = "end_index";
    private Integer endIndex;

    public MessageDeltaContentTextAnnotationsFilePathObject(Integer index, TypeEnum type) {
        this.index = index;
        this.type = type;
    }

    public MessageDeltaContentTextAnnotationsFilePathObject index(Integer index) {
        this.index = index;
        return this;
    }

    /**
     * The index of the annotation in the text content part.
     * @return index
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_INDEX)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getIndex() {
        return index;
    }

    @JsonProperty(JSON_PROPERTY_INDEX)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIndex(Integer index) {
        this.index = index;
    }

    public MessageDeltaContentTextAnnotationsFilePathObject type(TypeEnum type) {
        this.type = type;
        return this;
    }

    /**
     * Always &#x60;file_path&#x60;.
     * @return type
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TypeEnum getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(TypeEnum type) {
        this.type = type;
    }

    public MessageDeltaContentTextAnnotationsFilePathObject text(String text) {
        this.text = text;
        return this;
    }

    /**
     * The text in the message content that needs to be replaced.
     * @return text
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getText() {
        return text;
    }

    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setText(String text) {
        this.text = text;
    }

    public MessageDeltaContentTextAnnotationsFilePathObject filePath(MessageDeltaContentTextAnnotationsFilePathObjectFilePath filePath) {
        this.filePath = filePath;
        return this;
    }

    /**
     * Get filePath
     * @return filePath
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_FILE_PATH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public MessageDeltaContentTextAnnotationsFilePathObjectFilePath getFilePath() {
        return filePath;
    }

    @JsonProperty(JSON_PROPERTY_FILE_PATH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFilePath(MessageDeltaContentTextAnnotationsFilePathObjectFilePath filePath) {
        this.filePath = filePath;
    }

    public MessageDeltaContentTextAnnotationsFilePathObject startIndex(Integer startIndex) {
        this.startIndex = startIndex;
        return this;
    }

    /**
     * Get startIndex
     * minimum: 0
     * @return startIndex
     */
    @Nullable
    @Min(0)
    @JsonProperty(JSON_PROPERTY_START_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getStartIndex() {
        return startIndex;
    }

    @JsonProperty(JSON_PROPERTY_START_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStartIndex(Integer startIndex) {
        this.startIndex = startIndex;
    }

    public MessageDeltaContentTextAnnotationsFilePathObject endIndex(Integer endIndex) {
        this.endIndex = endIndex;
        return this;
    }

    /**
     * Get endIndex
     * minimum: 0
     * @return endIndex
     */
    @Nullable
    @Min(0)
    @JsonProperty(JSON_PROPERTY_END_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getEndIndex() {
        return endIndex;
    }

    @JsonProperty(JSON_PROPERTY_END_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEndIndex(Integer endIndex) {
        this.endIndex = endIndex;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MessageDeltaContentTextAnnotationsFilePathObject messageDeltaContentTextAnnotationsFilePathObject = (MessageDeltaContentTextAnnotationsFilePathObject) o;
        return Objects.equals(this.index, messageDeltaContentTextAnnotationsFilePathObject.index) &&
            Objects.equals(this.type, messageDeltaContentTextAnnotationsFilePathObject.type) &&
            Objects.equals(this.text, messageDeltaContentTextAnnotationsFilePathObject.text) &&
            Objects.equals(this.filePath, messageDeltaContentTextAnnotationsFilePathObject.filePath) &&
            Objects.equals(this.startIndex, messageDeltaContentTextAnnotationsFilePathObject.startIndex) &&
            Objects.equals(this.endIndex, messageDeltaContentTextAnnotationsFilePathObject.endIndex);
    }

    @Override
    public int hashCode() {
        return Objects.hash(index, type, text, filePath, startIndex, endIndex);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MessageDeltaContentTextAnnotationsFilePathObject {\n");
        sb.append("    index: ").append(toIndentedString(index)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    text: ").append(toIndentedString(text)).append("\n");
        sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
        sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
        sb.append("    endIndex: ").append(toIndentedString(endIndex)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

