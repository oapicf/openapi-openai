/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.MessageObjectContentInner;
import org.openapitools.model.MessageObjectIncompleteDetails;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Represents a message within a [thread](/docs/api-reference/threads).
 */
@JsonPropertyOrder({
  MessageObject.JSON_PROPERTY_ID,
  MessageObject.JSON_PROPERTY_OBJECT,
  MessageObject.JSON_PROPERTY_CREATED_AT,
  MessageObject.JSON_PROPERTY_THREAD_ID,
  MessageObject.JSON_PROPERTY_STATUS,
  MessageObject.JSON_PROPERTY_INCOMPLETE_DETAILS,
  MessageObject.JSON_PROPERTY_COMPLETED_AT,
  MessageObject.JSON_PROPERTY_INCOMPLETE_AT,
  MessageObject.JSON_PROPERTY_ROLE,
  MessageObject.JSON_PROPERTY_CONTENT,
  MessageObject.JSON_PROPERTY_ASSISTANT_ID,
  MessageObject.JSON_PROPERTY_RUN_ID,
  MessageObject.JSON_PROPERTY_FILE_IDS,
  MessageObject.JSON_PROPERTY_METADATA
})
@JsonTypeName("MessageObject")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-04-14T13:37:52.123317469Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class MessageObject {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    /**
     * The object type, which is always &#x60;thread.message&#x60;.
     */
    public enum ObjectEnum {
        THREAD_MESSAGE("thread.message");

        private String value;

        ObjectEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ObjectEnum fromValue(String value) {
            for (ObjectEnum b : ObjectEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_OBJECT = "object";
    private ObjectEnum _object;

    public static final String JSON_PROPERTY_CREATED_AT = "created_at";
    private Integer createdAt;

    public static final String JSON_PROPERTY_THREAD_ID = "thread_id";
    private String threadId;

    /**
     * The status of the message, which can be either &#x60;in_progress&#x60;, &#x60;incomplete&#x60;, or &#x60;completed&#x60;.
     */
    public enum StatusEnum {
        IN_PROGRESS("in_progress"),
        INCOMPLETE("incomplete"),
        COMPLETED("completed");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static StatusEnum fromValue(String value) {
            for (StatusEnum b : StatusEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_STATUS = "status";
    private StatusEnum status;

    public static final String JSON_PROPERTY_INCOMPLETE_DETAILS = "incomplete_details";
    private MessageObjectIncompleteDetails incompleteDetails;

    public static final String JSON_PROPERTY_COMPLETED_AT = "completed_at";
    private Integer completedAt;

    public static final String JSON_PROPERTY_INCOMPLETE_AT = "incomplete_at";
    private Integer incompleteAt;

    /**
     * The entity that produced the message. One of &#x60;user&#x60; or &#x60;assistant&#x60;.
     */
    public enum RoleEnum {
        USER("user"),
        ASSISTANT("assistant");

        private String value;

        RoleEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static RoleEnum fromValue(String value) {
            for (RoleEnum b : RoleEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_ROLE = "role";
    private RoleEnum role;

    public static final String JSON_PROPERTY_CONTENT = "content";
    private List<MessageObjectContentInner> content = new ArrayList<>();

    public static final String JSON_PROPERTY_ASSISTANT_ID = "assistant_id";
    private String assistantId;

    public static final String JSON_PROPERTY_RUN_ID = "run_id";
    private String runId;

    public static final String JSON_PROPERTY_FILE_IDS = "file_ids";
    private List<String> fileIds = new ArrayList<>();

    public static final String JSON_PROPERTY_METADATA = "metadata";
    private Object metadata;

    public MessageObject(String id, ObjectEnum _object, Integer createdAt, String threadId, StatusEnum status, MessageObjectIncompleteDetails incompleteDetails, Integer completedAt, Integer incompleteAt, RoleEnum role, List<MessageObjectContentInner> content, String assistantId, String runId, List<String> fileIds, Object metadata) {
        this.id = id;
        this._object = _object;
        this.createdAt = createdAt;
        this.threadId = threadId;
        this.status = status;
        this.incompleteDetails = incompleteDetails;
        this.completedAt = completedAt;
        this.incompleteAt = incompleteAt;
        this.role = role;
        this.content = content;
        this.assistantId = assistantId;
        this.runId = runId;
        this.fileIds = fileIds;
        this.metadata = metadata;
    }

    public MessageObject id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The identifier, which can be referenced in API endpoints.
     * @return id
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(String id) {
        this.id = id;
    }

    public MessageObject _object(ObjectEnum _object) {
        this._object = _object;
        return this;
    }

    /**
     * The object type, which is always &#x60;thread.message&#x60;.
     * @return _object
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_OBJECT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ObjectEnum getObject() {
        return _object;
    }

    @JsonProperty(JSON_PROPERTY_OBJECT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setObject(ObjectEnum _object) {
        this._object = _object;
    }

    public MessageObject createdAt(Integer createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * The Unix timestamp (in seconds) for when the message was created.
     * @return createdAt
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreatedAt(Integer createdAt) {
        this.createdAt = createdAt;
    }

    public MessageObject threadId(String threadId) {
        this.threadId = threadId;
        return this;
    }

    /**
     * The [thread](/docs/api-reference/threads) ID that this message belongs to.
     * @return threadId
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_THREAD_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getThreadId() {
        return threadId;
    }

    @JsonProperty(JSON_PROPERTY_THREAD_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setThreadId(String threadId) {
        this.threadId = threadId;
    }

    public MessageObject status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * The status of the message, which can be either &#x60;in_progress&#x60;, &#x60;incomplete&#x60;, or &#x60;completed&#x60;.
     * @return status
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public StatusEnum getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    public MessageObject incompleteDetails(MessageObjectIncompleteDetails incompleteDetails) {
        this.incompleteDetails = incompleteDetails;
        return this;
    }

    /**
     * Get incompleteDetails
     * @return incompleteDetails
     **/
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_INCOMPLETE_DETAILS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public MessageObjectIncompleteDetails getIncompleteDetails() {
        return incompleteDetails;
    }

    @JsonProperty(JSON_PROPERTY_INCOMPLETE_DETAILS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIncompleteDetails(MessageObjectIncompleteDetails incompleteDetails) {
        this.incompleteDetails = incompleteDetails;
    }

    public MessageObject completedAt(Integer completedAt) {
        this.completedAt = completedAt;
        return this;
    }

    /**
     * The Unix timestamp (in seconds) for when the message was completed.
     * @return completedAt
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCompletedAt() {
        return completedAt;
    }

    @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCompletedAt(Integer completedAt) {
        this.completedAt = completedAt;
    }

    public MessageObject incompleteAt(Integer incompleteAt) {
        this.incompleteAt = incompleteAt;
        return this;
    }

    /**
     * The Unix timestamp (in seconds) for when the message was marked as incomplete.
     * @return incompleteAt
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_INCOMPLETE_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getIncompleteAt() {
        return incompleteAt;
    }

    @JsonProperty(JSON_PROPERTY_INCOMPLETE_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIncompleteAt(Integer incompleteAt) {
        this.incompleteAt = incompleteAt;
    }

    public MessageObject role(RoleEnum role) {
        this.role = role;
        return this;
    }

    /**
     * The entity that produced the message. One of &#x60;user&#x60; or &#x60;assistant&#x60;.
     * @return role
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_ROLE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public RoleEnum getRole() {
        return role;
    }

    @JsonProperty(JSON_PROPERTY_ROLE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRole(RoleEnum role) {
        this.role = role;
    }

    public MessageObject content(List<MessageObjectContentInner> content) {
        this.content = content;
        return this;
    }

    public MessageObject addContentItem(MessageObjectContentInner contentItem) {
        this.content.add(contentItem);
        return this;
    }

    /**
     * The content of the message in array of text and/or images.
     * @return content
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_CONTENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<MessageObjectContentInner> getContent() {
        return content;
    }

    @JsonProperty(JSON_PROPERTY_CONTENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setContent(List<MessageObjectContentInner> content) {
        this.content = content;
    }

    public MessageObject assistantId(String assistantId) {
        this.assistantId = assistantId;
        return this;
    }

    /**
     * If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message.
     * @return assistantId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ASSISTANT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAssistantId() {
        return assistantId;
    }

    @JsonProperty(JSON_PROPERTY_ASSISTANT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAssistantId(String assistantId) {
        this.assistantId = assistantId;
    }

    public MessageObject runId(String runId) {
        this.runId = runId;
        return this;
    }

    /**
     * The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is &#x60;null&#x60; when messages are created manually using the create message or create thread endpoints.
     * @return runId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_RUN_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getRunId() {
        return runId;
    }

    @JsonProperty(JSON_PROPERTY_RUN_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRunId(String runId) {
        this.runId = runId;
    }

    public MessageObject fileIds(List<String> fileIds) {
        this.fileIds = fileIds;
        return this;
    }

    public MessageObject addFileIdsItem(String fileIdsItem) {
        this.fileIds.add(fileIdsItem);
        return this;
    }

    /**
     * A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
     * @return fileIds
     **/
    @NotNull
    @Size(max=10)
    @JsonProperty(JSON_PROPERTY_FILE_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<String> getFileIds() {
        return fileIds;
    }

    @JsonProperty(JSON_PROPERTY_FILE_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFileIds(List<String> fileIds) {
        this.fileIds = fileIds;
    }

    public MessageObject metadata(Object metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
     * @return metadata
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_METADATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Object getMetadata() {
        return metadata;
    }

    @JsonProperty(JSON_PROPERTY_METADATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMetadata(Object metadata) {
        this.metadata = metadata;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MessageObject messageObject = (MessageObject) o;
        return Objects.equals(this.id, messageObject.id) &&
            Objects.equals(this._object, messageObject._object) &&
            Objects.equals(this.createdAt, messageObject.createdAt) &&
            Objects.equals(this.threadId, messageObject.threadId) &&
            Objects.equals(this.status, messageObject.status) &&
            Objects.equals(this.incompleteDetails, messageObject.incompleteDetails) &&
            Objects.equals(this.completedAt, messageObject.completedAt) &&
            Objects.equals(this.incompleteAt, messageObject.incompleteAt) &&
            Objects.equals(this.role, messageObject.role) &&
            Objects.equals(this.content, messageObject.content) &&
            Objects.equals(this.assistantId, messageObject.assistantId) &&
            Objects.equals(this.runId, messageObject.runId) &&
            Objects.equals(this.fileIds, messageObject.fileIds) &&
            Objects.equals(this.metadata, messageObject.metadata);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, _object, createdAt, threadId, status, incompleteDetails, completedAt, incompleteAt, role, content, assistantId, runId, fileIds, metadata);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MessageObject {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    threadId: ").append(toIndentedString(threadId)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    incompleteDetails: ").append(toIndentedString(incompleteDetails)).append("\n");
        sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
        sb.append("    incompleteAt: ").append(toIndentedString(incompleteAt)).append("\n");
        sb.append("    role: ").append(toIndentedString(role)).append("\n");
        sb.append("    content: ").append(toIndentedString(content)).append("\n");
        sb.append("    assistantId: ").append(toIndentedString(assistantId)).append("\n");
        sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
        sb.append("    fileIds: ").append(toIndentedString(fileIds)).append("\n");
        sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

