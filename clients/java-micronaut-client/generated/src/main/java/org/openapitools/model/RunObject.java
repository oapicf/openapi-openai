/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.AssistantObjectToolsInner;
import org.openapitools.model.AssistantsApiResponseFormatOption;
import org.openapitools.model.AssistantsApiToolChoiceOption;
import org.openapitools.model.RunCompletionUsage;
import org.openapitools.model.RunObjectIncompleteDetails;
import org.openapitools.model.RunObjectLastError;
import org.openapitools.model.RunObjectRequiredAction;
import org.openapitools.model.TruncationObject;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Represents an execution run on a [thread](/docs/api-reference/threads).
 */
@JsonPropertyOrder({
  RunObject.JSON_PROPERTY_ID,
  RunObject.JSON_PROPERTY_OBJECT,
  RunObject.JSON_PROPERTY_CREATED_AT,
  RunObject.JSON_PROPERTY_THREAD_ID,
  RunObject.JSON_PROPERTY_ASSISTANT_ID,
  RunObject.JSON_PROPERTY_STATUS,
  RunObject.JSON_PROPERTY_REQUIRED_ACTION,
  RunObject.JSON_PROPERTY_LAST_ERROR,
  RunObject.JSON_PROPERTY_EXPIRES_AT,
  RunObject.JSON_PROPERTY_STARTED_AT,
  RunObject.JSON_PROPERTY_CANCELLED_AT,
  RunObject.JSON_PROPERTY_FAILED_AT,
  RunObject.JSON_PROPERTY_COMPLETED_AT,
  RunObject.JSON_PROPERTY_INCOMPLETE_DETAILS,
  RunObject.JSON_PROPERTY_MODEL,
  RunObject.JSON_PROPERTY_INSTRUCTIONS,
  RunObject.JSON_PROPERTY_TOOLS,
  RunObject.JSON_PROPERTY_FILE_IDS,
  RunObject.JSON_PROPERTY_METADATA,
  RunObject.JSON_PROPERTY_USAGE,
  RunObject.JSON_PROPERTY_TEMPERATURE,
  RunObject.JSON_PROPERTY_MAX_PROMPT_TOKENS,
  RunObject.JSON_PROPERTY_MAX_COMPLETION_TOKENS,
  RunObject.JSON_PROPERTY_TRUNCATION_STRATEGY,
  RunObject.JSON_PROPERTY_TOOL_CHOICE,
  RunObject.JSON_PROPERTY_RESPONSE_FORMAT
})
@JsonTypeName("RunObject")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-03T11:06:40.431829781Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class RunObject {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    /**
     * The object type, which is always &#x60;thread.run&#x60;.
     */
    public enum ObjectEnum {
        THREAD_RUN("thread.run");

        private String value;

        ObjectEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ObjectEnum fromValue(String value) {
            for (ObjectEnum b : ObjectEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_OBJECT = "object";
    private ObjectEnum _object;

    public static final String JSON_PROPERTY_CREATED_AT = "created_at";
    private Integer createdAt;

    public static final String JSON_PROPERTY_THREAD_ID = "thread_id";
    private String threadId;

    public static final String JSON_PROPERTY_ASSISTANT_ID = "assistant_id";
    private String assistantId;

    /**
     * The status of the run, which can be either &#x60;queued&#x60;, &#x60;in_progress&#x60;, &#x60;requires_action&#x60;, &#x60;cancelling&#x60;, &#x60;cancelled&#x60;, &#x60;failed&#x60;, &#x60;completed&#x60;, or &#x60;expired&#x60;.
     */
    public enum StatusEnum {
        QUEUED("queued"),
        IN_PROGRESS("in_progress"),
        REQUIRES_ACTION("requires_action"),
        CANCELLING("cancelling"),
        CANCELLED("cancelled"),
        FAILED("failed"),
        COMPLETED("completed"),
        EXPIRED("expired");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static StatusEnum fromValue(String value) {
            for (StatusEnum b : StatusEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_STATUS = "status";
    private StatusEnum status;

    public static final String JSON_PROPERTY_REQUIRED_ACTION = "required_action";
    private RunObjectRequiredAction requiredAction;

    public static final String JSON_PROPERTY_LAST_ERROR = "last_error";
    private RunObjectLastError lastError;

    public static final String JSON_PROPERTY_EXPIRES_AT = "expires_at";
    private Integer expiresAt;

    public static final String JSON_PROPERTY_STARTED_AT = "started_at";
    private Integer startedAt;

    public static final String JSON_PROPERTY_CANCELLED_AT = "cancelled_at";
    private Integer cancelledAt;

    public static final String JSON_PROPERTY_FAILED_AT = "failed_at";
    private Integer failedAt;

    public static final String JSON_PROPERTY_COMPLETED_AT = "completed_at";
    private Integer completedAt;

    public static final String JSON_PROPERTY_INCOMPLETE_DETAILS = "incomplete_details";
    private RunObjectIncompleteDetails incompleteDetails;

    public static final String JSON_PROPERTY_MODEL = "model";
    private String model;

    public static final String JSON_PROPERTY_INSTRUCTIONS = "instructions";
    private String instructions;

    public static final String JSON_PROPERTY_TOOLS = "tools";
    private List<AssistantObjectToolsInner> tools = new ArrayList<>();

    public static final String JSON_PROPERTY_FILE_IDS = "file_ids";
    private List<String> fileIds = new ArrayList<>();

    public static final String JSON_PROPERTY_METADATA = "metadata";
    private Object metadata;

    public static final String JSON_PROPERTY_USAGE = "usage";
    private RunCompletionUsage usage;

    public static final String JSON_PROPERTY_TEMPERATURE = "temperature";
    private BigDecimal temperature;

    public static final String JSON_PROPERTY_MAX_PROMPT_TOKENS = "max_prompt_tokens";
    private Integer maxPromptTokens;

    public static final String JSON_PROPERTY_MAX_COMPLETION_TOKENS = "max_completion_tokens";
    private Integer maxCompletionTokens;

    public static final String JSON_PROPERTY_TRUNCATION_STRATEGY = "truncation_strategy";
    private TruncationObject truncationStrategy;

    public static final String JSON_PROPERTY_TOOL_CHOICE = "tool_choice";
    private AssistantsApiToolChoiceOption toolChoice;

    public static final String JSON_PROPERTY_RESPONSE_FORMAT = "response_format";
    private AssistantsApiResponseFormatOption responseFormat;

    public RunObject(String id, ObjectEnum _object, Integer createdAt, String threadId, String assistantId, StatusEnum status, RunObjectRequiredAction requiredAction, RunObjectLastError lastError, Integer expiresAt, Integer startedAt, Integer cancelledAt, Integer failedAt, Integer completedAt, RunObjectIncompleteDetails incompleteDetails, String model, String instructions, List<AssistantObjectToolsInner> tools, List<String> fileIds, Object metadata, RunCompletionUsage usage, Integer maxPromptTokens, Integer maxCompletionTokens, TruncationObject truncationStrategy, AssistantsApiToolChoiceOption toolChoice, AssistantsApiResponseFormatOption responseFormat) {
        this.id = id;
        this._object = _object;
        this.createdAt = createdAt;
        this.threadId = threadId;
        this.assistantId = assistantId;
        this.status = status;
        this.requiredAction = requiredAction;
        this.lastError = lastError;
        this.expiresAt = expiresAt;
        this.startedAt = startedAt;
        this.cancelledAt = cancelledAt;
        this.failedAt = failedAt;
        this.completedAt = completedAt;
        this.incompleteDetails = incompleteDetails;
        this.model = model;
        this.instructions = instructions;
        this.tools = tools;
        this.fileIds = fileIds;
        this.metadata = metadata;
        this.usage = usage;
        this.maxPromptTokens = maxPromptTokens;
        this.maxCompletionTokens = maxCompletionTokens;
        this.truncationStrategy = truncationStrategy;
        this.toolChoice = toolChoice;
        this.responseFormat = responseFormat;
    }

    public RunObject id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The identifier, which can be referenced in API endpoints.
     * @return id
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(String id) {
        this.id = id;
    }

    public RunObject _object(ObjectEnum _object) {
        this._object = _object;
        return this;
    }

    /**
     * The object type, which is always &#x60;thread.run&#x60;.
     * @return _object
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_OBJECT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ObjectEnum getObject() {
        return _object;
    }

    @JsonProperty(JSON_PROPERTY_OBJECT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setObject(ObjectEnum _object) {
        this._object = _object;
    }

    public RunObject createdAt(Integer createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * The Unix timestamp (in seconds) for when the run was created.
     * @return createdAt
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreatedAt(Integer createdAt) {
        this.createdAt = createdAt;
    }

    public RunObject threadId(String threadId) {
        this.threadId = threadId;
        return this;
    }

    /**
     * The ID of the [thread](/docs/api-reference/threads) that was executed on as a part of this run.
     * @return threadId
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_THREAD_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getThreadId() {
        return threadId;
    }

    @JsonProperty(JSON_PROPERTY_THREAD_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setThreadId(String threadId) {
        this.threadId = threadId;
    }

    public RunObject assistantId(String assistantId) {
        this.assistantId = assistantId;
        return this;
    }

    /**
     * The ID of the [assistant](/docs/api-reference/assistants) used for execution of this run.
     * @return assistantId
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_ASSISTANT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAssistantId() {
        return assistantId;
    }

    @JsonProperty(JSON_PROPERTY_ASSISTANT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAssistantId(String assistantId) {
        this.assistantId = assistantId;
    }

    public RunObject status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * The status of the run, which can be either &#x60;queued&#x60;, &#x60;in_progress&#x60;, &#x60;requires_action&#x60;, &#x60;cancelling&#x60;, &#x60;cancelled&#x60;, &#x60;failed&#x60;, &#x60;completed&#x60;, or &#x60;expired&#x60;.
     * @return status
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public StatusEnum getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    public RunObject requiredAction(RunObjectRequiredAction requiredAction) {
        this.requiredAction = requiredAction;
        return this;
    }

    /**
     * Get requiredAction
     * @return requiredAction
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_REQUIRED_ACTION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public RunObjectRequiredAction getRequiredAction() {
        return requiredAction;
    }

    @JsonProperty(JSON_PROPERTY_REQUIRED_ACTION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRequiredAction(RunObjectRequiredAction requiredAction) {
        this.requiredAction = requiredAction;
    }

    public RunObject lastError(RunObjectLastError lastError) {
        this.lastError = lastError;
        return this;
    }

    /**
     * Get lastError
     * @return lastError
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_LAST_ERROR)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public RunObjectLastError getLastError() {
        return lastError;
    }

    @JsonProperty(JSON_PROPERTY_LAST_ERROR)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLastError(RunObjectLastError lastError) {
        this.lastError = lastError;
    }

    public RunObject expiresAt(Integer expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }

    /**
     * The Unix timestamp (in seconds) for when the run will expire.
     * @return expiresAt
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getExpiresAt() {
        return expiresAt;
    }

    @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setExpiresAt(Integer expiresAt) {
        this.expiresAt = expiresAt;
    }

    public RunObject startedAt(Integer startedAt) {
        this.startedAt = startedAt;
        return this;
    }

    /**
     * The Unix timestamp (in seconds) for when the run was started.
     * @return startedAt
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STARTED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getStartedAt() {
        return startedAt;
    }

    @JsonProperty(JSON_PROPERTY_STARTED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStartedAt(Integer startedAt) {
        this.startedAt = startedAt;
    }

    public RunObject cancelledAt(Integer cancelledAt) {
        this.cancelledAt = cancelledAt;
        return this;
    }

    /**
     * The Unix timestamp (in seconds) for when the run was cancelled.
     * @return cancelledAt
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CANCELLED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCancelledAt() {
        return cancelledAt;
    }

    @JsonProperty(JSON_PROPERTY_CANCELLED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCancelledAt(Integer cancelledAt) {
        this.cancelledAt = cancelledAt;
    }

    public RunObject failedAt(Integer failedAt) {
        this.failedAt = failedAt;
        return this;
    }

    /**
     * The Unix timestamp (in seconds) for when the run failed.
     * @return failedAt
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FAILED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getFailedAt() {
        return failedAt;
    }

    @JsonProperty(JSON_PROPERTY_FAILED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFailedAt(Integer failedAt) {
        this.failedAt = failedAt;
    }

    public RunObject completedAt(Integer completedAt) {
        this.completedAt = completedAt;
        return this;
    }

    /**
     * The Unix timestamp (in seconds) for when the run was completed.
     * @return completedAt
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCompletedAt() {
        return completedAt;
    }

    @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCompletedAt(Integer completedAt) {
        this.completedAt = completedAt;
    }

    public RunObject incompleteDetails(RunObjectIncompleteDetails incompleteDetails) {
        this.incompleteDetails = incompleteDetails;
        return this;
    }

    /**
     * Get incompleteDetails
     * @return incompleteDetails
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_INCOMPLETE_DETAILS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public RunObjectIncompleteDetails getIncompleteDetails() {
        return incompleteDetails;
    }

    @JsonProperty(JSON_PROPERTY_INCOMPLETE_DETAILS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIncompleteDetails(RunObjectIncompleteDetails incompleteDetails) {
        this.incompleteDetails = incompleteDetails;
    }

    public RunObject model(String model) {
        this.model = model;
        return this;
    }

    /**
     * The model that the [assistant](/docs/api-reference/assistants) used for this run.
     * @return model
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_MODEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getModel() {
        return model;
    }

    @JsonProperty(JSON_PROPERTY_MODEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setModel(String model) {
        this.model = model;
    }

    public RunObject instructions(String instructions) {
        this.instructions = instructions;
        return this;
    }

    /**
     * The instructions that the [assistant](/docs/api-reference/assistants) used for this run.
     * @return instructions
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_INSTRUCTIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getInstructions() {
        return instructions;
    }

    @JsonProperty(JSON_PROPERTY_INSTRUCTIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setInstructions(String instructions) {
        this.instructions = instructions;
    }

    public RunObject tools(List<AssistantObjectToolsInner> tools) {
        this.tools = tools;
        return this;
    }

    public RunObject addToolsItem(AssistantObjectToolsInner toolsItem) {
        this.tools.add(toolsItem);
        return this;
    }

    /**
     * The list of tools that the [assistant](/docs/api-reference/assistants) used for this run.
     * @return tools
     */
    @NotNull
    @Size(max=20)
    @JsonProperty(JSON_PROPERTY_TOOLS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<AssistantObjectToolsInner> getTools() {
        return tools;
    }

    @JsonProperty(JSON_PROPERTY_TOOLS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTools(List<AssistantObjectToolsInner> tools) {
        this.tools = tools;
    }

    public RunObject fileIds(List<String> fileIds) {
        this.fileIds = fileIds;
        return this;
    }

    public RunObject addFileIdsItem(String fileIdsItem) {
        this.fileIds.add(fileIdsItem);
        return this;
    }

    /**
     * The list of [File](/docs/api-reference/files) IDs the [assistant](/docs/api-reference/assistants) used for this run.
     * @return fileIds
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_FILE_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<String> getFileIds() {
        return fileIds;
    }

    @JsonProperty(JSON_PROPERTY_FILE_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFileIds(List<String> fileIds) {
        this.fileIds = fileIds;
    }

    public RunObject metadata(Object metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
     * @return metadata
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_METADATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Object getMetadata() {
        return metadata;
    }

    @JsonProperty(JSON_PROPERTY_METADATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMetadata(Object metadata) {
        this.metadata = metadata;
    }

    public RunObject usage(RunCompletionUsage usage) {
        this.usage = usage;
        return this;
    }

    /**
     * Get usage
     * @return usage
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_USAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public RunCompletionUsage getUsage() {
        return usage;
    }

    @JsonProperty(JSON_PROPERTY_USAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUsage(RunCompletionUsage usage) {
        this.usage = usage;
    }

    public RunObject temperature(BigDecimal temperature) {
        this.temperature = temperature;
        return this;
    }

    /**
     * The sampling temperature used for this run. If not set, defaults to 1.
     * @return temperature
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_TEMPERATURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getTemperature() {
        return temperature;
    }

    @JsonProperty(JSON_PROPERTY_TEMPERATURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTemperature(BigDecimal temperature) {
        this.temperature = temperature;
    }

    public RunObject maxPromptTokens(Integer maxPromptTokens) {
        this.maxPromptTokens = maxPromptTokens;
        return this;
    }

    /**
     * The maximum number of prompt tokens specified to have been used over the course of the run. 
     * minimum: 256
     * @return maxPromptTokens
     */
    @Nullable
    @Min(256)
    @JsonProperty(JSON_PROPERTY_MAX_PROMPT_TOKENS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getMaxPromptTokens() {
        return maxPromptTokens;
    }

    @JsonProperty(JSON_PROPERTY_MAX_PROMPT_TOKENS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMaxPromptTokens(Integer maxPromptTokens) {
        this.maxPromptTokens = maxPromptTokens;
    }

    public RunObject maxCompletionTokens(Integer maxCompletionTokens) {
        this.maxCompletionTokens = maxCompletionTokens;
        return this;
    }

    /**
     * The maximum number of completion tokens specified to have been used over the course of the run. 
     * minimum: 256
     * @return maxCompletionTokens
     */
    @Nullable
    @Min(256)
    @JsonProperty(JSON_PROPERTY_MAX_COMPLETION_TOKENS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getMaxCompletionTokens() {
        return maxCompletionTokens;
    }

    @JsonProperty(JSON_PROPERTY_MAX_COMPLETION_TOKENS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMaxCompletionTokens(Integer maxCompletionTokens) {
        this.maxCompletionTokens = maxCompletionTokens;
    }

    public RunObject truncationStrategy(TruncationObject truncationStrategy) {
        this.truncationStrategy = truncationStrategy;
        return this;
    }

    /**
     * Get truncationStrategy
     * @return truncationStrategy
     */
    @Valid
    @NotNull
    @JsonProperty(JSON_PROPERTY_TRUNCATION_STRATEGY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TruncationObject getTruncationStrategy() {
        return truncationStrategy;
    }

    @JsonProperty(JSON_PROPERTY_TRUNCATION_STRATEGY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTruncationStrategy(TruncationObject truncationStrategy) {
        this.truncationStrategy = truncationStrategy;
    }

    public RunObject toolChoice(AssistantsApiToolChoiceOption toolChoice) {
        this.toolChoice = toolChoice;
        return this;
    }

    /**
     * Get toolChoice
     * @return toolChoice
     */
    @Valid
    @NotNull
    @JsonProperty(JSON_PROPERTY_TOOL_CHOICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AssistantsApiToolChoiceOption getToolChoice() {
        return toolChoice;
    }

    @JsonProperty(JSON_PROPERTY_TOOL_CHOICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setToolChoice(AssistantsApiToolChoiceOption toolChoice) {
        this.toolChoice = toolChoice;
    }

    public RunObject responseFormat(AssistantsApiResponseFormatOption responseFormat) {
        this.responseFormat = responseFormat;
        return this;
    }

    /**
     * Get responseFormat
     * @return responseFormat
     */
    @Valid
    @NotNull
    @JsonProperty(JSON_PROPERTY_RESPONSE_FORMAT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AssistantsApiResponseFormatOption getResponseFormat() {
        return responseFormat;
    }

    @JsonProperty(JSON_PROPERTY_RESPONSE_FORMAT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setResponseFormat(AssistantsApiResponseFormatOption responseFormat) {
        this.responseFormat = responseFormat;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RunObject runObject = (RunObject) o;
        return Objects.equals(this.id, runObject.id) &&
            Objects.equals(this._object, runObject._object) &&
            Objects.equals(this.createdAt, runObject.createdAt) &&
            Objects.equals(this.threadId, runObject.threadId) &&
            Objects.equals(this.assistantId, runObject.assistantId) &&
            Objects.equals(this.status, runObject.status) &&
            Objects.equals(this.requiredAction, runObject.requiredAction) &&
            Objects.equals(this.lastError, runObject.lastError) &&
            Objects.equals(this.expiresAt, runObject.expiresAt) &&
            Objects.equals(this.startedAt, runObject.startedAt) &&
            Objects.equals(this.cancelledAt, runObject.cancelledAt) &&
            Objects.equals(this.failedAt, runObject.failedAt) &&
            Objects.equals(this.completedAt, runObject.completedAt) &&
            Objects.equals(this.incompleteDetails, runObject.incompleteDetails) &&
            Objects.equals(this.model, runObject.model) &&
            Objects.equals(this.instructions, runObject.instructions) &&
            Objects.equals(this.tools, runObject.tools) &&
            Objects.equals(this.fileIds, runObject.fileIds) &&
            Objects.equals(this.metadata, runObject.metadata) &&
            Objects.equals(this.usage, runObject.usage) &&
            Objects.equals(this.temperature, runObject.temperature) &&
            Objects.equals(this.maxPromptTokens, runObject.maxPromptTokens) &&
            Objects.equals(this.maxCompletionTokens, runObject.maxCompletionTokens) &&
            Objects.equals(this.truncationStrategy, runObject.truncationStrategy) &&
            Objects.equals(this.toolChoice, runObject.toolChoice) &&
            Objects.equals(this.responseFormat, runObject.responseFormat);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, _object, createdAt, threadId, assistantId, status, requiredAction, lastError, expiresAt, startedAt, cancelledAt, failedAt, completedAt, incompleteDetails, model, instructions, tools, fileIds, metadata, usage, temperature, maxPromptTokens, maxCompletionTokens, truncationStrategy, toolChoice, responseFormat);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RunObject {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    threadId: ").append(toIndentedString(threadId)).append("\n");
        sb.append("    assistantId: ").append(toIndentedString(assistantId)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    requiredAction: ").append(toIndentedString(requiredAction)).append("\n");
        sb.append("    lastError: ").append(toIndentedString(lastError)).append("\n");
        sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
        sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
        sb.append("    cancelledAt: ").append(toIndentedString(cancelledAt)).append("\n");
        sb.append("    failedAt: ").append(toIndentedString(failedAt)).append("\n");
        sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
        sb.append("    incompleteDetails: ").append(toIndentedString(incompleteDetails)).append("\n");
        sb.append("    model: ").append(toIndentedString(model)).append("\n");
        sb.append("    instructions: ").append(toIndentedString(instructions)).append("\n");
        sb.append("    tools: ").append(toIndentedString(tools)).append("\n");
        sb.append("    fileIds: ").append(toIndentedString(fileIds)).append("\n");
        sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
        sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
        sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
        sb.append("    maxPromptTokens: ").append(toIndentedString(maxPromptTokens)).append("\n");
        sb.append("    maxCompletionTokens: ").append(toIndentedString(maxCompletionTokens)).append("\n");
        sb.append("    truncationStrategy: ").append(toIndentedString(truncationStrategy)).append("\n");
        sb.append("    toolChoice: ").append(toIndentedString(toolChoice)).append("\n");
        sb.append("    responseFormat: ").append(toIndentedString(responseFormat)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

