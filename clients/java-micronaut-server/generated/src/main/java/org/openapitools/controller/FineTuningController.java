/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.controller;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.core.convert.format.Format;
import io.micronaut.security.annotation.Secured;
import io.micronaut.security.rules.SecurityRule;
import reactor.core.publisher.Mono;
import io.micronaut.http.HttpStatus;
import io.micronaut.http.exceptions.HttpStatusException;
import org.openapitools.model.CreateFineTuningJobRequest;
import org.openapitools.model.FineTuningJob;
import org.openapitools.model.ListFineTuningJobCheckpointsResponse;
import org.openapitools.model.ListFineTuningJobEventsResponse;
import org.openapitools.model.ListPaginatedFineTuningJobsResponse;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-03T11:06:54.019288922Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Controller
@Tag(name = "FineTuning", description = "The FineTuning API")
public class FineTuningController {
    /**
     * Immediately cancel a fine-tune job. 
     *
     * @param fineTuningJobId The ID of the fine-tuning job to cancel.  (required)
     * @return FineTuningJob
     */
    @Operation(
        operationId = "cancelFineTuningJob",
        summary = "Immediately cancel a fine-tune job. ",
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = FineTuningJob.class))
            })
        },
        parameters = {
            @Parameter(name = "fineTuningJobId", description = "The ID of the fine-tuning job to cancel. ", required = true)
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @Post(uri="/fine_tuning/jobs/{fine_tuning_job_id}/cancel")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_AUTHENTICATED})
    public Mono<FineTuningJob> cancelFineTuningJob(
        @PathVariable(value="fine_tuning_job_id") @NotNull String fineTuningJobId
    ) {
        // TODO implement cancelFineTuningJob();
        return Mono.error(new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null));
    }


    /**
     * Creates a fine-tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
     *
     * @param createFineTuningJobRequest  (required)
     * @return FineTuningJob
     */
    @Operation(
        operationId = "createFineTuningJob",
        summary = "Creates a fine-tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about fine-tuning](/docs/guides/fine-tuning) ",
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = FineTuningJob.class))
            })
        },
        parameters = {
            @Parameter(name = "createFineTuningJobRequest", required = true)
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @Post(uri="/fine_tuning/jobs")
    @Produces(value = {"application/json"})
    @Consumes(value = {"application/json"})
    @Secured({SecurityRule.IS_AUTHENTICATED})
    public Mono<FineTuningJob> createFineTuningJob(
        @Body @NotNull @Valid CreateFineTuningJobRequest createFineTuningJobRequest
    ) {
        // TODO implement createFineTuningJob();
        return Mono.error(new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null));
    }


    /**
     * Get status updates for a fine-tuning job. 
     *
     * @param fineTuningJobId The ID of the fine-tuning job to get events for.  (required)
     * @param after Identifier for the last event from the previous pagination request. (optional)
     * @param limit Number of events to retrieve. (optional, default to 20)
     * @return ListFineTuningJobEventsResponse
     */
    @Operation(
        operationId = "listFineTuningEvents",
        summary = "Get status updates for a fine-tuning job. ",
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ListFineTuningJobEventsResponse.class))
            })
        },
        parameters = {
            @Parameter(name = "fineTuningJobId", description = "The ID of the fine-tuning job to get events for. ", required = true),
            @Parameter(name = "after", description = "Identifier for the last event from the previous pagination request."),
            @Parameter(name = "limit", description = "Number of events to retrieve.")
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @Get(uri="/fine_tuning/jobs/{fine_tuning_job_id}/events")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_AUTHENTICATED})
    public Mono<ListFineTuningJobEventsResponse> listFineTuningEvents(
        @PathVariable(value="fine_tuning_job_id") @NotNull String fineTuningJobId, 
        @QueryValue(value="after") @Nullable String after, 
        @QueryValue(value="limit", defaultValue="20") @Nullable Integer limit
    ) {
        // TODO implement listFineTuningEvents();
        return Mono.error(new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null));
    }


    /**
     * List checkpoints for a fine-tuning job. 
     *
     * @param fineTuningJobId The ID of the fine-tuning job to get checkpoints for.  (required)
     * @param after Identifier for the last checkpoint ID from the previous pagination request. (optional)
     * @param limit Number of checkpoints to retrieve. (optional, default to 10)
     * @return ListFineTuningJobCheckpointsResponse
     */
    @Operation(
        operationId = "listFineTuningJobCheckpoints",
        summary = "List checkpoints for a fine-tuning job. ",
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ListFineTuningJobCheckpointsResponse.class))
            })
        },
        parameters = {
            @Parameter(name = "fineTuningJobId", description = "The ID of the fine-tuning job to get checkpoints for. ", required = true),
            @Parameter(name = "after", description = "Identifier for the last checkpoint ID from the previous pagination request."),
            @Parameter(name = "limit", description = "Number of checkpoints to retrieve.")
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @Get(uri="/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_AUTHENTICATED})
    public Mono<ListFineTuningJobCheckpointsResponse> listFineTuningJobCheckpoints(
        @PathVariable(value="fine_tuning_job_id") @NotNull String fineTuningJobId, 
        @QueryValue(value="after") @Nullable String after, 
        @QueryValue(value="limit", defaultValue="10") @Nullable Integer limit
    ) {
        // TODO implement listFineTuningJobCheckpoints();
        return Mono.error(new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null));
    }


    /**
     * List your organization&#39;s fine-tuning jobs 
     *
     * @param after Identifier for the last job from the previous pagination request. (optional)
     * @param limit Number of fine-tuning jobs to retrieve. (optional, default to 20)
     * @return ListPaginatedFineTuningJobsResponse
     */
    @Operation(
        operationId = "listPaginatedFineTuningJobs",
        summary = "List your organization's fine-tuning jobs ",
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ListPaginatedFineTuningJobsResponse.class))
            })
        },
        parameters = {
            @Parameter(name = "after", description = "Identifier for the last job from the previous pagination request."),
            @Parameter(name = "limit", description = "Number of fine-tuning jobs to retrieve.")
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @Get(uri="/fine_tuning/jobs")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_AUTHENTICATED})
    public Mono<ListPaginatedFineTuningJobsResponse> listPaginatedFineTuningJobs(
        @QueryValue(value="after") @Nullable String after, 
        @QueryValue(value="limit", defaultValue="20") @Nullable Integer limit
    ) {
        // TODO implement listPaginatedFineTuningJobs();
        return Mono.error(new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null));
    }


    /**
     * Get info about a fine-tuning job.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
     *
     * @param fineTuningJobId The ID of the fine-tuning job.  (required)
     * @return FineTuningJob
     */
    @Operation(
        operationId = "retrieveFineTuningJob",
        summary = "Get info about a fine-tuning job.  [Learn more about fine-tuning](/docs/guides/fine-tuning) ",
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = FineTuningJob.class))
            })
        },
        parameters = {
            @Parameter(name = "fineTuningJobId", description = "The ID of the fine-tuning job. ", required = true)
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @Get(uri="/fine_tuning/jobs/{fine_tuning_job_id}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_AUTHENTICATED})
    public Mono<FineTuningJob> retrieveFineTuningJob(
        @PathVariable(value="fine_tuning_job_id") @NotNull String fineTuningJobId
    ) {
        // TODO implement retrieveFineTuningJob();
        return Mono.error(new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null));
    }

}
