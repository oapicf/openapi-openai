/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ChatCompletionRequestFunctionMessage
 */
@JsonPropertyOrder({
  ChatCompletionRequestFunctionMessage.JSON_PROPERTY_ROLE,
  ChatCompletionRequestFunctionMessage.JSON_PROPERTY_CONTENT,
  ChatCompletionRequestFunctionMessage.JSON_PROPERTY_NAME
})
@JsonTypeName("ChatCompletionRequestFunctionMessage")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-04-14T13:38:24.957235058Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class ChatCompletionRequestFunctionMessage {
    /**
     * The role of the messages author, in this case &#x60;function&#x60;.
     */
    public enum RoleEnum {
        FUNCTION("function");

        private String value;

        RoleEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static RoleEnum fromValue(String value) {
            for (RoleEnum b : RoleEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_ROLE = "role";
    private RoleEnum role;

    public static final String JSON_PROPERTY_CONTENT = "content";
    private String content;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public ChatCompletionRequestFunctionMessage(RoleEnum role, String content, String name) {
        this.role = role;
        this.content = content;
        this.name = name;
    }

    public ChatCompletionRequestFunctionMessage role(RoleEnum role) {
        this.role = role;
        return this;
    }

    /**
     * The role of the messages author, in this case &#x60;function&#x60;.
     * @return role
     **/
    @NotNull
    @Schema(name = "role", description = "The role of the messages author, in this case `function`.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ROLE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public RoleEnum getRole() {
        return role;
    }

    @JsonProperty(JSON_PROPERTY_ROLE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRole(RoleEnum role) {
        this.role = role;
    }

    public ChatCompletionRequestFunctionMessage content(String content) {
        this.content = content;
        return this;
    }

    /**
     * The contents of the function message.
     * @return content
     **/
    @Nullable
    @Schema(name = "content", description = "The contents of the function message.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CONTENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getContent() {
        return content;
    }

    @JsonProperty(JSON_PROPERTY_CONTENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setContent(String content) {
        this.content = content;
    }

    public ChatCompletionRequestFunctionMessage name(String name) {
        this.name = name;
        return this;
    }

    /**
     * The name of the function to call.
     * @return name
     **/
    @NotNull
    @Schema(name = "name", description = "The name of the function to call.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(String name) {
        this.name = name;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ChatCompletionRequestFunctionMessage chatCompletionRequestFunctionMessage = (ChatCompletionRequestFunctionMessage) o;
        return Objects.equals(this.role, chatCompletionRequestFunctionMessage.role) &&
            Objects.equals(this.content, chatCompletionRequestFunctionMessage.content) &&
            Objects.equals(this.name, chatCompletionRequestFunctionMessage.name);
    }

    @Override
    public int hashCode() {
        return Objects.hash(role, content, name);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ChatCompletionRequestFunctionMessage {\n");
        sb.append("    role: ").append(toIndentedString(role)).append("\n");
        sb.append("    content: ").append(toIndentedString(content)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

