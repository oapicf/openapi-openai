/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.CompletionUsage;
import org.openapitools.model.CreateChatCompletionResponseChoicesInner;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Represents a chat completion response returned by model, based on the provided input.
 */
@Schema(name = "CreateChatCompletionResponse", description = "Represents a chat completion response returned by model, based on the provided input.")
@JsonPropertyOrder({
  CreateChatCompletionResponse.JSON_PROPERTY_ID,
  CreateChatCompletionResponse.JSON_PROPERTY_CHOICES,
  CreateChatCompletionResponse.JSON_PROPERTY_CREATED,
  CreateChatCompletionResponse.JSON_PROPERTY_MODEL,
  CreateChatCompletionResponse.JSON_PROPERTY_SYSTEM_FINGERPRINT,
  CreateChatCompletionResponse.JSON_PROPERTY_OBJECT,
  CreateChatCompletionResponse.JSON_PROPERTY_USAGE
})
@JsonTypeName("CreateChatCompletionResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-03T11:06:54.019288922Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class CreateChatCompletionResponse {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_CHOICES = "choices";
    private List<@Valid CreateChatCompletionResponseChoicesInner> choices = new ArrayList<>();

    public static final String JSON_PROPERTY_CREATED = "created";
    private Integer created;

    public static final String JSON_PROPERTY_MODEL = "model";
    private String model;

    public static final String JSON_PROPERTY_SYSTEM_FINGERPRINT = "system_fingerprint";
    private String systemFingerprint;

    /**
     * The object type, which is always &#x60;chat.completion&#x60;.
     */
    public enum ObjectEnum {
        CHAT_COMPLETION("chat.completion");

        private String value;

        ObjectEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ObjectEnum fromValue(String value) {
            for (ObjectEnum b : ObjectEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_OBJECT = "object";
    private ObjectEnum _object;

    public static final String JSON_PROPERTY_USAGE = "usage";
    private CompletionUsage usage;

    public CreateChatCompletionResponse(String id, List<@Valid CreateChatCompletionResponseChoicesInner> choices, Integer created, String model, ObjectEnum _object) {
        this.id = id;
        this.choices = choices;
        this.created = created;
        this.model = model;
        this._object = _object;
    }

    public CreateChatCompletionResponse id(String id) {
        this.id = id;
        return this;
    }

    /**
     * A unique identifier for the chat completion.
     * @return id
     */
    @NotNull
    @Schema(name = "id", description = "A unique identifier for the chat completion.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(String id) {
        this.id = id;
    }

    public CreateChatCompletionResponse choices(List<@Valid CreateChatCompletionResponseChoicesInner> choices) {
        this.choices = choices;
        return this;
    }

    public CreateChatCompletionResponse addChoicesItem(CreateChatCompletionResponseChoicesInner choicesItem) {
        this.choices.add(choicesItem);
        return this;
    }

    /**
     * A list of chat completion choices. Can be more than one if &#x60;n&#x60; is greater than 1.
     * @return choices
     */
    @NotNull
    @Schema(name = "choices", description = "A list of chat completion choices. Can be more than one if `n` is greater than 1.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CHOICES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Valid CreateChatCompletionResponseChoicesInner> getChoices() {
        return choices;
    }

    @JsonProperty(JSON_PROPERTY_CHOICES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setChoices(List<@Valid CreateChatCompletionResponseChoicesInner> choices) {
        this.choices = choices;
    }

    public CreateChatCompletionResponse created(Integer created) {
        this.created = created;
        return this;
    }

    /**
     * The Unix timestamp (in seconds) of when the chat completion was created.
     * @return created
     */
    @NotNull
    @Schema(name = "created", description = "The Unix timestamp (in seconds) of when the chat completion was created.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCreated() {
        return created;
    }

    @JsonProperty(JSON_PROPERTY_CREATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreated(Integer created) {
        this.created = created;
    }

    public CreateChatCompletionResponse model(String model) {
        this.model = model;
        return this;
    }

    /**
     * The model used for the chat completion.
     * @return model
     */
    @NotNull
    @Schema(name = "model", description = "The model used for the chat completion.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_MODEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getModel() {
        return model;
    }

    @JsonProperty(JSON_PROPERTY_MODEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setModel(String model) {
        this.model = model;
    }

    public CreateChatCompletionResponse systemFingerprint(String systemFingerprint) {
        this.systemFingerprint = systemFingerprint;
        return this;
    }

    /**
     * This fingerprint represents the backend configuration that the model runs with.  Can be used in conjunction with the &#x60;seed&#x60; request parameter to understand when backend changes have been made that might impact determinism. 
     * @return systemFingerprint
     */
    @Nullable
    @Schema(name = "system_fingerprint", description = "This fingerprint represents the backend configuration that the model runs with.  Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SYSTEM_FINGERPRINT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSystemFingerprint() {
        return systemFingerprint;
    }

    @JsonProperty(JSON_PROPERTY_SYSTEM_FINGERPRINT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSystemFingerprint(String systemFingerprint) {
        this.systemFingerprint = systemFingerprint;
    }

    public CreateChatCompletionResponse _object(ObjectEnum _object) {
        this._object = _object;
        return this;
    }

    /**
     * The object type, which is always &#x60;chat.completion&#x60;.
     * @return _object
     */
    @NotNull
    @Schema(name = "object", description = "The object type, which is always `chat.completion`.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_OBJECT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ObjectEnum getObject() {
        return _object;
    }

    @JsonProperty(JSON_PROPERTY_OBJECT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setObject(ObjectEnum _object) {
        this._object = _object;
    }

    public CreateChatCompletionResponse usage(CompletionUsage usage) {
        this.usage = usage;
        return this;
    }

    /**
     * Get usage
     * @return usage
     */
    @Valid
    @Nullable
    @Schema(name = "usage", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public CompletionUsage getUsage() {
        return usage;
    }

    @JsonProperty(JSON_PROPERTY_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUsage(CompletionUsage usage) {
        this.usage = usage;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateChatCompletionResponse createChatCompletionResponse = (CreateChatCompletionResponse) o;
        return Objects.equals(this.id, createChatCompletionResponse.id) &&
            Objects.equals(this.choices, createChatCompletionResponse.choices) &&
            Objects.equals(this.created, createChatCompletionResponse.created) &&
            Objects.equals(this.model, createChatCompletionResponse.model) &&
            Objects.equals(this.systemFingerprint, createChatCompletionResponse.systemFingerprint) &&
            Objects.equals(this._object, createChatCompletionResponse._object) &&
            Objects.equals(this.usage, createChatCompletionResponse.usage);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, choices, created, model, systemFingerprint, _object, usage);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateChatCompletionResponse {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    choices: ").append(toIndentedString(choices)).append("\n");
        sb.append("    created: ").append(toIndentedString(created)).append("\n");
        sb.append("    model: ").append(toIndentedString(model)).append("\n");
        sb.append("    systemFingerprint: ").append(toIndentedString(systemFingerprint)).append("\n");
        sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
        sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

