/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.CreateChatCompletionStreamResponseChoicesInner;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * CreateChatCompletionStreamResponse
 */
@JsonPropertyOrder({
  CreateChatCompletionStreamResponse.JSON_PROPERTY_ID,
  CreateChatCompletionStreamResponse.JSON_PROPERTY_OBJECT,
  CreateChatCompletionStreamResponse.JSON_PROPERTY_CREATED,
  CreateChatCompletionStreamResponse.JSON_PROPERTY_MODEL,
  CreateChatCompletionStreamResponse.JSON_PROPERTY_CHOICES
})
@JsonTypeName("CreateChatCompletionStreamResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-03-16T01:12:38.762786439Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class CreateChatCompletionStreamResponse {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_OBJECT = "object";
    private String _object;

    public static final String JSON_PROPERTY_CREATED = "created";
    private Integer created;

    public static final String JSON_PROPERTY_MODEL = "model";
    private String model;

    public static final String JSON_PROPERTY_CHOICES = "choices";
    private List<@Valid CreateChatCompletionStreamResponseChoicesInner> choices = new ArrayList<>();

    public CreateChatCompletionStreamResponse(String id, String _object, Integer created, String model, List<@Valid CreateChatCompletionStreamResponseChoicesInner> choices) {
        this.id = id;
        this._object = _object;
        this.created = created;
        this.model = model;
        this.choices = choices;
    }

    public CreateChatCompletionStreamResponse id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     * @return id
     **/
    @NotNull
    @Schema(name = "id", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(String id) {
        this.id = id;
    }

    public CreateChatCompletionStreamResponse _object(String _object) {
        this._object = _object;
        return this;
    }

    /**
     * Get _object
     * @return _object
     **/
    @NotNull
    @Schema(name = "object", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_OBJECT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getObject() {
        return _object;
    }

    @JsonProperty(JSON_PROPERTY_OBJECT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setObject(String _object) {
        this._object = _object;
    }

    public CreateChatCompletionStreamResponse created(Integer created) {
        this.created = created;
        return this;
    }

    /**
     * Get created
     * @return created
     **/
    @NotNull
    @Schema(name = "created", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCreated() {
        return created;
    }

    @JsonProperty(JSON_PROPERTY_CREATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreated(Integer created) {
        this.created = created;
    }

    public CreateChatCompletionStreamResponse model(String model) {
        this.model = model;
        return this;
    }

    /**
     * Get model
     * @return model
     **/
    @NotNull
    @Schema(name = "model", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_MODEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getModel() {
        return model;
    }

    @JsonProperty(JSON_PROPERTY_MODEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setModel(String model) {
        this.model = model;
    }

    public CreateChatCompletionStreamResponse choices(List<@Valid CreateChatCompletionStreamResponseChoicesInner> choices) {
        this.choices = choices;
        return this;
    }

    public CreateChatCompletionStreamResponse addChoicesItem(CreateChatCompletionStreamResponseChoicesInner choicesItem) {
        this.choices.add(choicesItem);
        return this;
    }

    /**
     * Get choices
     * @return choices
     **/
    @NotNull
    @Schema(name = "choices", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CHOICES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Valid CreateChatCompletionStreamResponseChoicesInner> getChoices() {
        return choices;
    }

    @JsonProperty(JSON_PROPERTY_CHOICES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setChoices(List<@Valid CreateChatCompletionStreamResponseChoicesInner> choices) {
        this.choices = choices;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateChatCompletionStreamResponse createChatCompletionStreamResponse = (CreateChatCompletionStreamResponse) o;
        return Objects.equals(this.id, createChatCompletionStreamResponse.id) &&
            Objects.equals(this._object, createChatCompletionStreamResponse._object) &&
            Objects.equals(this.created, createChatCompletionStreamResponse.created) &&
            Objects.equals(this.model, createChatCompletionStreamResponse.model) &&
            Objects.equals(this.choices, createChatCompletionStreamResponse.choices);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, _object, created, model, choices);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateChatCompletionStreamResponse {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
        sb.append("    created: ").append(toIndentedString(created)).append("\n");
        sb.append("    model: ").append(toIndentedString(model)).append("\n");
        sb.append("    choices: ").append(toIndentedString(choices)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

