/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.AssistantObjectToolsInner;
import org.openapitools.model.AssistantsApiResponseFormatOption;
import org.openapitools.model.AssistantsApiToolChoiceOption;
import org.openapitools.model.CreateMessageRequest;
import org.openapitools.model.CreateRunRequestModel;
import org.openapitools.model.TruncationObject;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * CreateRunRequest
 */
@JsonPropertyOrder({
  CreateRunRequest.JSON_PROPERTY_ASSISTANT_ID,
  CreateRunRequest.JSON_PROPERTY_MODEL,
  CreateRunRequest.JSON_PROPERTY_INSTRUCTIONS,
  CreateRunRequest.JSON_PROPERTY_ADDITIONAL_INSTRUCTIONS,
  CreateRunRequest.JSON_PROPERTY_ADDITIONAL_MESSAGES,
  CreateRunRequest.JSON_PROPERTY_TOOLS,
  CreateRunRequest.JSON_PROPERTY_METADATA,
  CreateRunRequest.JSON_PROPERTY_TEMPERATURE,
  CreateRunRequest.JSON_PROPERTY_STREAM,
  CreateRunRequest.JSON_PROPERTY_MAX_PROMPT_TOKENS,
  CreateRunRequest.JSON_PROPERTY_MAX_COMPLETION_TOKENS,
  CreateRunRequest.JSON_PROPERTY_TRUNCATION_STRATEGY,
  CreateRunRequest.JSON_PROPERTY_TOOL_CHOICE,
  CreateRunRequest.JSON_PROPERTY_RESPONSE_FORMAT
})
@JsonTypeName("CreateRunRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-03T11:06:54.019288922Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class CreateRunRequest {
    public static final String JSON_PROPERTY_ASSISTANT_ID = "assistant_id";
    private String assistantId;

    public static final String JSON_PROPERTY_MODEL = "model";
    private CreateRunRequestModel model;

    public static final String JSON_PROPERTY_INSTRUCTIONS = "instructions";
    private String instructions;

    public static final String JSON_PROPERTY_ADDITIONAL_INSTRUCTIONS = "additional_instructions";
    private String additionalInstructions;

    public static final String JSON_PROPERTY_ADDITIONAL_MESSAGES = "additional_messages";
    private List<@Valid CreateMessageRequest> additionalMessages = null;

    public static final String JSON_PROPERTY_TOOLS = "tools";
    private List<AssistantObjectToolsInner> tools = null;

    public static final String JSON_PROPERTY_METADATA = "metadata";
    private Object metadata;

    public static final String JSON_PROPERTY_TEMPERATURE = "temperature";
    private BigDecimal temperature = new BigDecimal("1");

    public static final String JSON_PROPERTY_STREAM = "stream";
    private Boolean stream;

    public static final String JSON_PROPERTY_MAX_PROMPT_TOKENS = "max_prompt_tokens";
    private Integer maxPromptTokens;

    public static final String JSON_PROPERTY_MAX_COMPLETION_TOKENS = "max_completion_tokens";
    private Integer maxCompletionTokens;

    public static final String JSON_PROPERTY_TRUNCATION_STRATEGY = "truncation_strategy";
    private TruncationObject truncationStrategy;

    public static final String JSON_PROPERTY_TOOL_CHOICE = "tool_choice";
    private AssistantsApiToolChoiceOption toolChoice;

    public static final String JSON_PROPERTY_RESPONSE_FORMAT = "response_format";
    private AssistantsApiResponseFormatOption responseFormat;

    public CreateRunRequest(String assistantId) {
        this.assistantId = assistantId;
    }

    public CreateRunRequest assistantId(String assistantId) {
        this.assistantId = assistantId;
        return this;
    }

    /**
     * The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.
     * @return assistantId
     */
    @NotNull
    @Schema(name = "assistant_id", description = "The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ASSISTANT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAssistantId() {
        return assistantId;
    }

    @JsonProperty(JSON_PROPERTY_ASSISTANT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAssistantId(String assistantId) {
        this.assistantId = assistantId;
    }

    public CreateRunRequest model(CreateRunRequestModel model) {
        this.model = model;
        return this;
    }

    /**
     * Get model
     * @return model
     */
    @Valid
    @Nullable
    @Schema(name = "model", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MODEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public CreateRunRequestModel getModel() {
        return model;
    }

    @JsonProperty(JSON_PROPERTY_MODEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setModel(CreateRunRequestModel model) {
        this.model = model;
    }

    public CreateRunRequest instructions(String instructions) {
        this.instructions = instructions;
        return this;
    }

    /**
     * Overrides the [instructions](/docs/api-reference/assistants/createAssistant) of the assistant. This is useful for modifying the behavior on a per-run basis.
     * @return instructions
     */
    @Nullable
    @Schema(name = "instructions", description = "Overrides the [instructions](/docs/api-reference/assistants/createAssistant) of the assistant. This is useful for modifying the behavior on a per-run basis.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_INSTRUCTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getInstructions() {
        return instructions;
    }

    @JsonProperty(JSON_PROPERTY_INSTRUCTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInstructions(String instructions) {
        this.instructions = instructions;
    }

    public CreateRunRequest additionalInstructions(String additionalInstructions) {
        this.additionalInstructions = additionalInstructions;
        return this;
    }

    /**
     * Appends additional instructions at the end of the instructions for the run. This is useful for modifying the behavior on a per-run basis without overriding other instructions.
     * @return additionalInstructions
     */
    @Nullable
    @Schema(name = "additional_instructions", description = "Appends additional instructions at the end of the instructions for the run. This is useful for modifying the behavior on a per-run basis without overriding other instructions.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ADDITIONAL_INSTRUCTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAdditionalInstructions() {
        return additionalInstructions;
    }

    @JsonProperty(JSON_PROPERTY_ADDITIONAL_INSTRUCTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdditionalInstructions(String additionalInstructions) {
        this.additionalInstructions = additionalInstructions;
    }

    public CreateRunRequest additionalMessages(List<@Valid CreateMessageRequest> additionalMessages) {
        this.additionalMessages = additionalMessages;
        return this;
    }

    public CreateRunRequest addAdditionalMessagesItem(CreateMessageRequest additionalMessagesItem) {
        if (this.additionalMessages == null) {
            this.additionalMessages = new ArrayList<>();
        }
        this.additionalMessages.add(additionalMessagesItem);
        return this;
    }

    /**
     * Adds additional messages to the thread before creating the run.
     * @return additionalMessages
     */
    @Nullable
    @Schema(name = "additional_messages", description = "Adds additional messages to the thread before creating the run.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ADDITIONAL_MESSAGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid CreateMessageRequest> getAdditionalMessages() {
        return additionalMessages;
    }

    @JsonProperty(JSON_PROPERTY_ADDITIONAL_MESSAGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdditionalMessages(List<@Valid CreateMessageRequest> additionalMessages) {
        this.additionalMessages = additionalMessages;
    }

    public CreateRunRequest tools(List<AssistantObjectToolsInner> tools) {
        this.tools = tools;
        return this;
    }

    public CreateRunRequest addToolsItem(AssistantObjectToolsInner toolsItem) {
        if (this.tools == null) {
            this.tools = new ArrayList<>();
        }
        this.tools.add(toolsItem);
        return this;
    }

    /**
     * Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.
     * @return tools
     */
    @Nullable
    @Size(max=20)
    @Schema(name = "tools", description = "Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TOOLS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<AssistantObjectToolsInner> getTools() {
        return tools;
    }

    @JsonProperty(JSON_PROPERTY_TOOLS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTools(List<AssistantObjectToolsInner> tools) {
        this.tools = tools;
    }

    public CreateRunRequest metadata(Object metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
     * @return metadata
     */
    @Nullable
    @Schema(name = "metadata", description = "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_METADATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Object getMetadata() {
        return metadata;
    }

    @JsonProperty(JSON_PROPERTY_METADATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMetadata(Object metadata) {
        this.metadata = metadata;
    }

    public CreateRunRequest temperature(BigDecimal temperature) {
        this.temperature = temperature;
        return this;
    }

    /**
     * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. 
     * minimum: 0
     * maximum: 2
     * @return temperature
     */
    @Nullable
    @DecimalMin("0")
    @DecimalMax("2")
    @Schema(name = "temperature", example = "1", description = "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TEMPERATURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getTemperature() {
        return temperature;
    }

    @JsonProperty(JSON_PROPERTY_TEMPERATURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTemperature(BigDecimal temperature) {
        this.temperature = temperature;
    }

    public CreateRunRequest stream(Boolean stream) {
        this.stream = stream;
        return this;
    }

    /**
     * If &#x60;true&#x60;, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a &#x60;data: [DONE]&#x60; message. 
     * @return stream
     */
    @Nullable
    @Schema(name = "stream", description = "If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_STREAM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getStream() {
        return stream;
    }

    @JsonProperty(JSON_PROPERTY_STREAM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStream(Boolean stream) {
        this.stream = stream;
    }

    public CreateRunRequest maxPromptTokens(Integer maxPromptTokens) {
        this.maxPromptTokens = maxPromptTokens;
        return this;
    }

    /**
     * The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of prompt tokens specified, the run will end with status &#x60;complete&#x60;. See &#x60;incomplete_details&#x60; for more info. 
     * minimum: 256
     * @return maxPromptTokens
     */
    @Nullable
    @Min(256)
    @Schema(name = "max_prompt_tokens", description = "The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of prompt tokens specified, the run will end with status `complete`. See `incomplete_details` for more info. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MAX_PROMPT_TOKENS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getMaxPromptTokens() {
        return maxPromptTokens;
    }

    @JsonProperty(JSON_PROPERTY_MAX_PROMPT_TOKENS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxPromptTokens(Integer maxPromptTokens) {
        this.maxPromptTokens = maxPromptTokens;
    }

    public CreateRunRequest maxCompletionTokens(Integer maxCompletionTokens) {
        this.maxCompletionTokens = maxCompletionTokens;
        return this;
    }

    /**
     * The maximum number of completion tokens that may be used over the course of the run. The run will make a best effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds the number of completion tokens specified, the run will end with status &#x60;complete&#x60;. See &#x60;incomplete_details&#x60; for more info. 
     * minimum: 256
     * @return maxCompletionTokens
     */
    @Nullable
    @Min(256)
    @Schema(name = "max_completion_tokens", description = "The maximum number of completion tokens that may be used over the course of the run. The run will make a best effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds the number of completion tokens specified, the run will end with status `complete`. See `incomplete_details` for more info. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MAX_COMPLETION_TOKENS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getMaxCompletionTokens() {
        return maxCompletionTokens;
    }

    @JsonProperty(JSON_PROPERTY_MAX_COMPLETION_TOKENS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxCompletionTokens(Integer maxCompletionTokens) {
        this.maxCompletionTokens = maxCompletionTokens;
    }

    public CreateRunRequest truncationStrategy(TruncationObject truncationStrategy) {
        this.truncationStrategy = truncationStrategy;
        return this;
    }

    /**
     * Get truncationStrategy
     * @return truncationStrategy
     */
    @Valid
    @Nullable
    @Schema(name = "truncation_strategy", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TRUNCATION_STRATEGY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TruncationObject getTruncationStrategy() {
        return truncationStrategy;
    }

    @JsonProperty(JSON_PROPERTY_TRUNCATION_STRATEGY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTruncationStrategy(TruncationObject truncationStrategy) {
        this.truncationStrategy = truncationStrategy;
    }

    public CreateRunRequest toolChoice(AssistantsApiToolChoiceOption toolChoice) {
        this.toolChoice = toolChoice;
        return this;
    }

    /**
     * Get toolChoice
     * @return toolChoice
     */
    @Valid
    @Nullable
    @Schema(name = "tool_choice", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TOOL_CHOICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public AssistantsApiToolChoiceOption getToolChoice() {
        return toolChoice;
    }

    @JsonProperty(JSON_PROPERTY_TOOL_CHOICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setToolChoice(AssistantsApiToolChoiceOption toolChoice) {
        this.toolChoice = toolChoice;
    }

    public CreateRunRequest responseFormat(AssistantsApiResponseFormatOption responseFormat) {
        this.responseFormat = responseFormat;
        return this;
    }

    /**
     * Get responseFormat
     * @return responseFormat
     */
    @Valid
    @Nullable
    @Schema(name = "response_format", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_RESPONSE_FORMAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public AssistantsApiResponseFormatOption getResponseFormat() {
        return responseFormat;
    }

    @JsonProperty(JSON_PROPERTY_RESPONSE_FORMAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResponseFormat(AssistantsApiResponseFormatOption responseFormat) {
        this.responseFormat = responseFormat;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateRunRequest createRunRequest = (CreateRunRequest) o;
        return Objects.equals(this.assistantId, createRunRequest.assistantId) &&
            Objects.equals(this.model, createRunRequest.model) &&
            Objects.equals(this.instructions, createRunRequest.instructions) &&
            Objects.equals(this.additionalInstructions, createRunRequest.additionalInstructions) &&
            Objects.equals(this.additionalMessages, createRunRequest.additionalMessages) &&
            Objects.equals(this.tools, createRunRequest.tools) &&
            Objects.equals(this.metadata, createRunRequest.metadata) &&
            Objects.equals(this.temperature, createRunRequest.temperature) &&
            Objects.equals(this.stream, createRunRequest.stream) &&
            Objects.equals(this.maxPromptTokens, createRunRequest.maxPromptTokens) &&
            Objects.equals(this.maxCompletionTokens, createRunRequest.maxCompletionTokens) &&
            Objects.equals(this.truncationStrategy, createRunRequest.truncationStrategy) &&
            Objects.equals(this.toolChoice, createRunRequest.toolChoice) &&
            Objects.equals(this.responseFormat, createRunRequest.responseFormat);
    }

    @Override
    public int hashCode() {
        return Objects.hash(assistantId, model, instructions, additionalInstructions, additionalMessages, tools, metadata, temperature, stream, maxPromptTokens, maxCompletionTokens, truncationStrategy, toolChoice, responseFormat);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateRunRequest {\n");
        sb.append("    assistantId: ").append(toIndentedString(assistantId)).append("\n");
        sb.append("    model: ").append(toIndentedString(model)).append("\n");
        sb.append("    instructions: ").append(toIndentedString(instructions)).append("\n");
        sb.append("    additionalInstructions: ").append(toIndentedString(additionalInstructions)).append("\n");
        sb.append("    additionalMessages: ").append(toIndentedString(additionalMessages)).append("\n");
        sb.append("    tools: ").append(toIndentedString(tools)).append("\n");
        sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
        sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
        sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
        sb.append("    maxPromptTokens: ").append(toIndentedString(maxPromptTokens)).append("\n");
        sb.append("    maxCompletionTokens: ").append(toIndentedString(maxCompletionTokens)).append("\n");
        sb.append("    truncationStrategy: ").append(toIndentedString(truncationStrategy)).append("\n");
        sb.append("    toolChoice: ").append(toIndentedString(toolChoice)).append("\n");
        sb.append("    responseFormat: ").append(toIndentedString(responseFormat)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

