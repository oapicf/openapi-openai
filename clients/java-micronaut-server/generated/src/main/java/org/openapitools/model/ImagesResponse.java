/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.Image;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ImagesResponse
 */
@JsonPropertyOrder({
  ImagesResponse.JSON_PROPERTY_CREATED,
  ImagesResponse.JSON_PROPERTY_DATA
})
@JsonTypeName("ImagesResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-03T11:06:54.019288922Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class ImagesResponse {
    public static final String JSON_PROPERTY_CREATED = "created";
    private Integer created;

    public static final String JSON_PROPERTY_DATA = "data";
    private List<@Valid Image> data = new ArrayList<>();

    public ImagesResponse(Integer created, List<@Valid Image> data) {
        this.created = created;
        this.data = data;
    }

    public ImagesResponse created(Integer created) {
        this.created = created;
        return this;
    }

    /**
     * Get created
     * @return created
     */
    @NotNull
    @Schema(name = "created", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCreated() {
        return created;
    }

    @JsonProperty(JSON_PROPERTY_CREATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreated(Integer created) {
        this.created = created;
    }

    public ImagesResponse data(List<@Valid Image> data) {
        this.data = data;
        return this;
    }

    public ImagesResponse addDataItem(Image dataItem) {
        this.data.add(dataItem);
        return this;
    }

    /**
     * Get data
     * @return data
     */
    @NotNull
    @Schema(name = "data", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Valid Image> getData() {
        return data;
    }

    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setData(List<@Valid Image> data) {
        this.data = data;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ImagesResponse imagesResponse = (ImagesResponse) o;
        return Objects.equals(this.created, imagesResponse.created) &&
            Objects.equals(this.data, imagesResponse.data);
    }

    @Override
    public int hashCode() {
        return Objects.hash(created, data);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ImagesResponse {\n");
        sb.append("    created: ").append(toIndentedString(created)).append("\n");
        sb.append("    data: ").append(toIndentedString(data)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

