/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the \&quot;retrieval\&quot; tool to search files.
 */
@Schema(name = "MessageDeltaContentTextAnnotationsFileCitationObject", description = "A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the \"retrieval\" tool to search files.")
@JsonPropertyOrder({
  MessageDeltaContentTextAnnotationsFileCitationObject.JSON_PROPERTY_INDEX,
  MessageDeltaContentTextAnnotationsFileCitationObject.JSON_PROPERTY_TYPE,
  MessageDeltaContentTextAnnotationsFileCitationObject.JSON_PROPERTY_TEXT,
  MessageDeltaContentTextAnnotationsFileCitationObject.JSON_PROPERTY_FILE_CITATION,
  MessageDeltaContentTextAnnotationsFileCitationObject.JSON_PROPERTY_START_INDEX,
  MessageDeltaContentTextAnnotationsFileCitationObject.JSON_PROPERTY_END_INDEX
})
@JsonTypeName("MessageDeltaContentTextAnnotationsFileCitationObject")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-03T11:06:54.019288922Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class MessageDeltaContentTextAnnotationsFileCitationObject {
    public static final String JSON_PROPERTY_INDEX = "index";
    private Integer index;

    /**
     * Always &#x60;file_citation&#x60;.
     */
    public enum TypeEnum {
        FILE_CITATION("file_citation");

        private String value;

        TypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static TypeEnum fromValue(String value) {
            for (TypeEnum b : TypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_TYPE = "type";
    private TypeEnum type;

    public static final String JSON_PROPERTY_TEXT = "text";
    private String text;

    public static final String JSON_PROPERTY_FILE_CITATION = "file_citation";
    private MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation fileCitation;

    public static final String JSON_PROPERTY_START_INDEX = "start_index";
    private Integer startIndex;

    public static final String JSON_PROPERTY_END_INDEX = "end_index";
    private Integer endIndex;

    public MessageDeltaContentTextAnnotationsFileCitationObject(Integer index, TypeEnum type) {
        this.index = index;
        this.type = type;
    }

    public MessageDeltaContentTextAnnotationsFileCitationObject index(Integer index) {
        this.index = index;
        return this;
    }

    /**
     * The index of the annotation in the text content part.
     * @return index
     */
    @NotNull
    @Schema(name = "index", description = "The index of the annotation in the text content part.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_INDEX)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getIndex() {
        return index;
    }

    @JsonProperty(JSON_PROPERTY_INDEX)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIndex(Integer index) {
        this.index = index;
    }

    public MessageDeltaContentTextAnnotationsFileCitationObject type(TypeEnum type) {
        this.type = type;
        return this;
    }

    /**
     * Always &#x60;file_citation&#x60;.
     * @return type
     */
    @NotNull
    @Schema(name = "type", description = "Always `file_citation`.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TypeEnum getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(TypeEnum type) {
        this.type = type;
    }

    public MessageDeltaContentTextAnnotationsFileCitationObject text(String text) {
        this.text = text;
        return this;
    }

    /**
     * The text in the message content that needs to be replaced.
     * @return text
     */
    @Nullable
    @Schema(name = "text", description = "The text in the message content that needs to be replaced.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getText() {
        return text;
    }

    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setText(String text) {
        this.text = text;
    }

    public MessageDeltaContentTextAnnotationsFileCitationObject fileCitation(MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation fileCitation) {
        this.fileCitation = fileCitation;
        return this;
    }

    /**
     * Get fileCitation
     * @return fileCitation
     */
    @Valid
    @Nullable
    @Schema(name = "file_citation", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FILE_CITATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation getFileCitation() {
        return fileCitation;
    }

    @JsonProperty(JSON_PROPERTY_FILE_CITATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFileCitation(MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation fileCitation) {
        this.fileCitation = fileCitation;
    }

    public MessageDeltaContentTextAnnotationsFileCitationObject startIndex(Integer startIndex) {
        this.startIndex = startIndex;
        return this;
    }

    /**
     * Get startIndex
     * minimum: 0
     * @return startIndex
     */
    @Nullable
    @Min(0)
    @Schema(name = "start_index", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_START_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getStartIndex() {
        return startIndex;
    }

    @JsonProperty(JSON_PROPERTY_START_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStartIndex(Integer startIndex) {
        this.startIndex = startIndex;
    }

    public MessageDeltaContentTextAnnotationsFileCitationObject endIndex(Integer endIndex) {
        this.endIndex = endIndex;
        return this;
    }

    /**
     * Get endIndex
     * minimum: 0
     * @return endIndex
     */
    @Nullable
    @Min(0)
    @Schema(name = "end_index", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_END_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getEndIndex() {
        return endIndex;
    }

    @JsonProperty(JSON_PROPERTY_END_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEndIndex(Integer endIndex) {
        this.endIndex = endIndex;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MessageDeltaContentTextAnnotationsFileCitationObject messageDeltaContentTextAnnotationsFileCitationObject = (MessageDeltaContentTextAnnotationsFileCitationObject) o;
        return Objects.equals(this.index, messageDeltaContentTextAnnotationsFileCitationObject.index) &&
            Objects.equals(this.type, messageDeltaContentTextAnnotationsFileCitationObject.type) &&
            Objects.equals(this.text, messageDeltaContentTextAnnotationsFileCitationObject.text) &&
            Objects.equals(this.fileCitation, messageDeltaContentTextAnnotationsFileCitationObject.fileCitation) &&
            Objects.equals(this.startIndex, messageDeltaContentTextAnnotationsFileCitationObject.startIndex) &&
            Objects.equals(this.endIndex, messageDeltaContentTextAnnotationsFileCitationObject.endIndex);
    }

    @Override
    public int hashCode() {
        return Objects.hash(index, type, text, fileCitation, startIndex, endIndex);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MessageDeltaContentTextAnnotationsFileCitationObject {\n");
        sb.append("    index: ").append(toIndentedString(index)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    text: ").append(toIndentedString(text)).append("\n");
        sb.append("    fileCitation: ").append(toIndentedString(fileCitation)).append("\n");
        sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
        sb.append("    endIndex: ").append(toIndentedString(endIndex)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

