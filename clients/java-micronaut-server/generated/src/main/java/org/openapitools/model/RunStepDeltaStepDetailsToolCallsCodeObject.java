/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Details of the Code Interpreter tool call the run step was involved in.
 */
@Schema(name = "RunStepDeltaStepDetailsToolCallsCodeObject", description = "Details of the Code Interpreter tool call the run step was involved in.")
@JsonPropertyOrder({
  RunStepDeltaStepDetailsToolCallsCodeObject.JSON_PROPERTY_INDEX,
  RunStepDeltaStepDetailsToolCallsCodeObject.JSON_PROPERTY_ID,
  RunStepDeltaStepDetailsToolCallsCodeObject.JSON_PROPERTY_TYPE,
  RunStepDeltaStepDetailsToolCallsCodeObject.JSON_PROPERTY_CODE_INTERPRETER
})
@JsonTypeName("RunStepDeltaStepDetailsToolCallsCodeObject")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-04-14T13:38:24.957235058Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class RunStepDeltaStepDetailsToolCallsCodeObject {
    public static final String JSON_PROPERTY_INDEX = "index";
    private Integer index;

    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    /**
     * The type of tool call. This is always going to be &#x60;code_interpreter&#x60; for this type of tool call.
     */
    public enum TypeEnum {
        CODE_INTERPRETER("code_interpreter");

        private String value;

        TypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static TypeEnum fromValue(String value) {
            for (TypeEnum b : TypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_TYPE = "type";
    private TypeEnum type;

    public static final String JSON_PROPERTY_CODE_INTERPRETER = "code_interpreter";
    private RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter codeInterpreter;

    public RunStepDeltaStepDetailsToolCallsCodeObject(Integer index, TypeEnum type) {
        this.index = index;
        this.type = type;
    }

    public RunStepDeltaStepDetailsToolCallsCodeObject index(Integer index) {
        this.index = index;
        return this;
    }

    /**
     * The index of the tool call in the tool calls array.
     * @return index
     **/
    @NotNull
    @Schema(name = "index", description = "The index of the tool call in the tool calls array.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_INDEX)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getIndex() {
        return index;
    }

    @JsonProperty(JSON_PROPERTY_INDEX)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIndex(Integer index) {
        this.index = index;
    }

    public RunStepDeltaStepDetailsToolCallsCodeObject id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The ID of the tool call.
     * @return id
     **/
    @Nullable
    @Schema(name = "id", description = "The ID of the tool call.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public RunStepDeltaStepDetailsToolCallsCodeObject type(TypeEnum type) {
        this.type = type;
        return this;
    }

    /**
     * The type of tool call. This is always going to be &#x60;code_interpreter&#x60; for this type of tool call.
     * @return type
     **/
    @NotNull
    @Schema(name = "type", description = "The type of tool call. This is always going to be `code_interpreter` for this type of tool call.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TypeEnum getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(TypeEnum type) {
        this.type = type;
    }

    public RunStepDeltaStepDetailsToolCallsCodeObject codeInterpreter(RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter codeInterpreter) {
        this.codeInterpreter = codeInterpreter;
        return this;
    }

    /**
     * Get codeInterpreter
     * @return codeInterpreter
     **/
    @Valid
    @Nullable
    @Schema(name = "code_interpreter", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CODE_INTERPRETER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter getCodeInterpreter() {
        return codeInterpreter;
    }

    @JsonProperty(JSON_PROPERTY_CODE_INTERPRETER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCodeInterpreter(RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter codeInterpreter) {
        this.codeInterpreter = codeInterpreter;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RunStepDeltaStepDetailsToolCallsCodeObject runStepDeltaStepDetailsToolCallsCodeObject = (RunStepDeltaStepDetailsToolCallsCodeObject) o;
        return Objects.equals(this.index, runStepDeltaStepDetailsToolCallsCodeObject.index) &&
            Objects.equals(this.id, runStepDeltaStepDetailsToolCallsCodeObject.id) &&
            Objects.equals(this.type, runStepDeltaStepDetailsToolCallsCodeObject.type) &&
            Objects.equals(this.codeInterpreter, runStepDeltaStepDetailsToolCallsCodeObject.codeInterpreter);
    }

    @Override
    public int hashCode() {
        return Objects.hash(index, id, type, codeInterpreter);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RunStepDeltaStepDetailsToolCallsCodeObject {\n");
        sb.append("    index: ").append(toIndentedString(index)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    codeInterpreter: ").append(toIndentedString(codeInterpreter)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

