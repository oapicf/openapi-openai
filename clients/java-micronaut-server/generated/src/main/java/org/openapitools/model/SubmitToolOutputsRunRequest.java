/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.SubmitToolOutputsRunRequestToolOutputsInner;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * SubmitToolOutputsRunRequest
 */
@JsonPropertyOrder({
  SubmitToolOutputsRunRequest.JSON_PROPERTY_TOOL_OUTPUTS,
  SubmitToolOutputsRunRequest.JSON_PROPERTY_STREAM
})
@JsonTypeName("SubmitToolOutputsRunRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-04-14T13:38:24.957235058Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class SubmitToolOutputsRunRequest {
    public static final String JSON_PROPERTY_TOOL_OUTPUTS = "tool_outputs";
    private List<@Valid SubmitToolOutputsRunRequestToolOutputsInner> toolOutputs = new ArrayList<>();

    public static final String JSON_PROPERTY_STREAM = "stream";
    private Boolean stream;

    public SubmitToolOutputsRunRequest(List<@Valid SubmitToolOutputsRunRequestToolOutputsInner> toolOutputs) {
        this.toolOutputs = toolOutputs;
    }

    public SubmitToolOutputsRunRequest toolOutputs(List<@Valid SubmitToolOutputsRunRequestToolOutputsInner> toolOutputs) {
        this.toolOutputs = toolOutputs;
        return this;
    }

    public SubmitToolOutputsRunRequest addToolOutputsItem(SubmitToolOutputsRunRequestToolOutputsInner toolOutputsItem) {
        this.toolOutputs.add(toolOutputsItem);
        return this;
    }

    /**
     * A list of tools for which the outputs are being submitted.
     * @return toolOutputs
     **/
    @NotNull
    @Schema(name = "tool_outputs", description = "A list of tools for which the outputs are being submitted.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_TOOL_OUTPUTS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Valid SubmitToolOutputsRunRequestToolOutputsInner> getToolOutputs() {
        return toolOutputs;
    }

    @JsonProperty(JSON_PROPERTY_TOOL_OUTPUTS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setToolOutputs(List<@Valid SubmitToolOutputsRunRequestToolOutputsInner> toolOutputs) {
        this.toolOutputs = toolOutputs;
    }

    public SubmitToolOutputsRunRequest stream(Boolean stream) {
        this.stream = stream;
        return this;
    }

    /**
     * If &#x60;true&#x60;, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a &#x60;data: [DONE]&#x60; message. 
     * @return stream
     **/
    @Nullable
    @Schema(name = "stream", description = "If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_STREAM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getStream() {
        return stream;
    }

    @JsonProperty(JSON_PROPERTY_STREAM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStream(Boolean stream) {
        this.stream = stream;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SubmitToolOutputsRunRequest submitToolOutputsRunRequest = (SubmitToolOutputsRunRequest) o;
        return Objects.equals(this.toolOutputs, submitToolOutputsRunRequest.toolOutputs) &&
            Objects.equals(this.stream, submitToolOutputsRunRequest.stream);
    }

    @Override
    public int hashCode() {
        return Objects.hash(toolOutputs, stream);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SubmitToolOutputsRunRequest {\n");
        sb.append("    toolOutputs: ").append(toIndentedString(toolOutputs)).append("\n");
        sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

