/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;

import com.prokarma.pkmst.model.DeleteModelResponse;
import com.prokarma.pkmst.model.ListModelsResponse;
import com.prokarma.pkmst.model.Model;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
/**
 * Provides the info about api methods
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaPKMSTServerCodegen", date = "2024-04-14T13:39:11.640510243Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Api(value = "Models", description = "the Models API")
public interface ModelsApi {

    @ApiOperation(value = "Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.", notes = "", response = DeleteModelResponse.class, authorizations = {
        
        @Authorization(value = "ApiKeyAuth")
         }, tags={ "Models", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = DeleteModelResponse.class) })
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/models/{model}",
        produces = { "application/json" }
    )
    ResponseEntity<DeleteModelResponse> deleteModel(@ApiParam(value = "The model to delete",required=true ) @PathVariable("model") String model, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Lists the currently available models, and provides basic information about each one such as the owner and availability.", notes = "", response = ListModelsResponse.class, authorizations = {
        
        @Authorization(value = "ApiKeyAuth")
         }, tags={ "Models", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ListModelsResponse.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/models",
        produces = { "application/json" }
    )
    ResponseEntity<ListModelsResponse> listModels( @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Retrieves a model instance, providing basic information about the model such as the owner and permissioning.", notes = "", response = Model.class, authorizations = {
        
        @Authorization(value = "ApiKeyAuth")
         }, tags={ "Models", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Model.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/models/{model}",
        produces = { "application/json" }
    )
    ResponseEntity<Model> retrieveModel(@ApiParam(value = "The ID of the model to use for this request",required=true ) @PathVariable("model") String model, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
