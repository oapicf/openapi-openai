/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.prokarma.pkmst.controller;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.prokarma.pkmst.model.DeleteFileResponse;
import java.io.File;
import com.prokarma.pkmst.model.ListFilesResponse;
import com.prokarma.pkmst.model.OpenAIFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;

/**
 * API tests for FilesApi
 */
@Ignore
public class FilesApiTest {

    private final ObjectMapper objectMapper = new ObjectMapper();

    private final FilesApi api = new FilesApiController(objectMapper);

    private final String accept = "application/json";

    
    /**
     * Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.  The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine-tuning API only supports &#x60;.jsonl&#x60; files.  Please [contact us](https://help.openai.com/) if you need to increase these storage limits. 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createFileTest() throws Exception {
        MultipartFile _file = null;
        String purpose = null;
    ResponseEntity<OpenAIFile> response = api.createFile(_file, purpose , accept);

        // TODO: test validations
    }
    
    /**
     * Delete a file.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteFileTest() throws Exception {
        String fileId = null;
    ResponseEntity<DeleteFileResponse> response = api.deleteFile(fileId , accept);

        // TODO: test validations
    }
    
    /**
     * Returns the contents of the specified file.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void downloadFileTest() throws Exception {
        String fileId = null;
    ResponseEntity<String> response = api.downloadFile(fileId , accept);

        // TODO: test validations
    }
    
    /**
     * Returns a list of files that belong to the user&#39;s organization.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listFilesTest() throws Exception {
        String purpose = null;
    ResponseEntity<ListFilesResponse> response = api.listFiles(purpose , accept);

        // TODO: test validations
    }
    
    /**
     * Returns information about a specific file.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void retrieveFileTest() throws Exception {
        String fileId = null;
    ResponseEntity<OpenAIFile> response = api.retrieveFile(fileId , accept);

        // TODO: test validations
    }
    
}
