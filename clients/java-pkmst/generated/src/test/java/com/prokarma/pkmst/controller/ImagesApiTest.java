/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.prokarma.pkmst.controller;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.prokarma.pkmst.model.CreateImageEditRequestModel;
import com.prokarma.pkmst.model.CreateImageRequest;
import java.io.File;
import com.prokarma.pkmst.model.ImagesResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;

/**
 * API tests for ImagesApi
 */
@Ignore
public class ImagesApiTest {

    private final ObjectMapper objectMapper = new ObjectMapper();

    private final ImagesApi api = new ImagesApiController(objectMapper);

    private final String accept = "application/json";

    
    /**
     * Creates an image given a prompt.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createImageTest() throws Exception {
        CreateImageRequest createImageRequest = null;
    ResponseEntity<ImagesResponse> response = api.createImage(createImageRequest , accept);

        // TODO: test validations
    }
    
    /**
     * Creates an edited or extended image given an original image and a prompt.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createImageEditTest() throws Exception {
        MultipartFile image = null;
        String prompt = null;
        MultipartFile mask = null;
        CreateImageEditRequestModel model = null;
        Integer n = null;
        String size = null;
        String responseFormat = null;
        String user = null;
    ResponseEntity<ImagesResponse> response = api.createImageEdit(image, prompt, mask, model, n, size, responseFormat, user , accept);

        // TODO: test validations
    }
    
    /**
     * Creates a variation of a given image.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createImageVariationTest() throws Exception {
        MultipartFile image = null;
        CreateImageEditRequestModel model = null;
        Integer n = null;
        String responseFormat = null;
        String size = null;
        String user = null;
    ResponseEntity<ImagesResponse> response = api.createImageVariation(image, model, n, responseFormat, size, user , accept);

        // TODO: test validations
    }
    
}
