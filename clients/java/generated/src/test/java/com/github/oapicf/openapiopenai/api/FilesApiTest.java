/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.openapiopenai.api;

import com.github.oapicf.openapiopenai.ApiException;
import com.github.oapicf.openapiopenai.model.DeleteFileResponse;
import java.io.File;
import com.github.oapicf.openapiopenai.model.ListFilesResponse;
import com.github.oapicf.openapiopenai.model.OpenAIFile;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FilesApi
 */
@Disabled
public class FilesApiTest {

    private final FilesApi api = new FilesApi();

    /**
     * Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.  The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine-tuning API only supports &#x60;.jsonl&#x60; files.  Please [contact us](https://help.openai.com/) if you need to increase these storage limits. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFileTest() throws ApiException {
        File _file = null;
        String purpose = null;
        OpenAIFile response = api.createFile(_file, purpose);
        // TODO: test validations
    }

    /**
     * Delete a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFileTest() throws ApiException {
        String fileId = null;
        DeleteFileResponse response = api.deleteFile(fileId);
        // TODO: test validations
    }

    /**
     * Returns the contents of the specified file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadFileTest() throws ApiException {
        String fileId = null;
        String response = api.downloadFile(fileId);
        // TODO: test validations
    }

    /**
     * Returns a list of files that belong to the user&#39;s organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFilesTest() throws ApiException {
        String purpose = null;
        ListFilesResponse response = api.listFiles(purpose);
        // TODO: test validations
    }

    /**
     * Returns information about a specific file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveFileTest() throws ApiException {
        String fileId = null;
        OpenAIFile response = api.retrieveFile(fileId);
        // TODO: test validations
    }

}
