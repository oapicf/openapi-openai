/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.openapiopenai.api;

import com.github.oapicf.openapiopenai.ApiException;
import java.math.BigDecimal;
import com.github.oapicf.openapiopenai.model.CreateChatCompletionRequest;
import com.github.oapicf.openapiopenai.model.CreateChatCompletionResponse;
import com.github.oapicf.openapiopenai.model.CreateCompletionRequest;
import com.github.oapicf.openapiopenai.model.CreateCompletionResponse;
import com.github.oapicf.openapiopenai.model.CreateEditRequest;
import com.github.oapicf.openapiopenai.model.CreateEditResponse;
import com.github.oapicf.openapiopenai.model.CreateEmbeddingRequest;
import com.github.oapicf.openapiopenai.model.CreateEmbeddingResponse;
import com.github.oapicf.openapiopenai.model.CreateFineTuneRequest;
import com.github.oapicf.openapiopenai.model.CreateImageRequest;
import com.github.oapicf.openapiopenai.model.CreateModerationRequest;
import com.github.oapicf.openapiopenai.model.CreateModerationResponse;
import com.github.oapicf.openapiopenai.model.CreateTranscriptionRequestModel;
import com.github.oapicf.openapiopenai.model.CreateTranscriptionResponse;
import com.github.oapicf.openapiopenai.model.CreateTranslationResponse;
import com.github.oapicf.openapiopenai.model.DeleteFileResponse;
import com.github.oapicf.openapiopenai.model.DeleteModelResponse;
import java.io.File;
import com.github.oapicf.openapiopenai.model.FineTune;
import com.github.oapicf.openapiopenai.model.ImagesResponse;
import com.github.oapicf.openapiopenai.model.ListFilesResponse;
import com.github.oapicf.openapiopenai.model.ListFineTuneEventsResponse;
import com.github.oapicf.openapiopenai.model.ListFineTunesResponse;
import com.github.oapicf.openapiopenai.model.ListModelsResponse;
import com.github.oapicf.openapiopenai.model.Model;
import com.github.oapicf.openapiopenai.model.OpenAIFile;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OpenAiApi
 */
@Disabled
public class OpenAiApiTest {

    private final OpenAiApi api = new OpenAiApi();

    /**
     * Immediately cancel a fine-tune job. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelFineTuneTest() throws ApiException {
        String fineTuneId = null;
        FineTune response = api.cancelFineTune(fineTuneId);
        // TODO: test validations
    }

    /**
     * Creates a model response for the given chat conversation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createChatCompletionTest() throws ApiException {
        CreateChatCompletionRequest createChatCompletionRequest = null;
        CreateChatCompletionResponse response = api.createChatCompletion(createChatCompletionRequest);
        // TODO: test validations
    }

    /**
     * Creates a completion for the provided prompt and parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCompletionTest() throws ApiException {
        CreateCompletionRequest createCompletionRequest = null;
        CreateCompletionResponse response = api.createCompletion(createCompletionRequest);
        // TODO: test validations
    }

    /**
     * Creates a new edit for the provided input, instruction, and parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEditTest() throws ApiException {
        CreateEditRequest createEditRequest = null;
        CreateEditResponse response = api.createEdit(createEditRequest);
        // TODO: test validations
    }

    /**
     * Creates an embedding vector representing the input text.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEmbeddingTest() throws ApiException {
        CreateEmbeddingRequest createEmbeddingRequest = null;
        CreateEmbeddingResponse response = api.createEmbedding(createEmbeddingRequest);
        // TODO: test validations
    }

    /**
     * Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFileTest() throws ApiException {
        File _file = null;
        String purpose = null;
        OpenAIFile response = api.createFile(_file, purpose);
        // TODO: test validations
    }

    /**
     * Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFineTuneTest() throws ApiException {
        CreateFineTuneRequest createFineTuneRequest = null;
        FineTune response = api.createFineTune(createFineTuneRequest);
        // TODO: test validations
    }

    /**
     * Creates an image given a prompt.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createImageTest() throws ApiException {
        CreateImageRequest createImageRequest = null;
        ImagesResponse response = api.createImage(createImageRequest);
        // TODO: test validations
    }

    /**
     * Creates an edited or extended image given an original image and a prompt.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createImageEditTest() throws ApiException {
        File image = null;
        String prompt = null;
        File mask = null;
        Integer n = null;
        String size = null;
        String responseFormat = null;
        String user = null;
        ImagesResponse response = api.createImageEdit(image, prompt, mask, n, size, responseFormat, user);
        // TODO: test validations
    }

    /**
     * Creates a variation of a given image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createImageVariationTest() throws ApiException {
        File image = null;
        Integer n = null;
        String size = null;
        String responseFormat = null;
        String user = null;
        ImagesResponse response = api.createImageVariation(image, n, size, responseFormat, user);
        // TODO: test validations
    }

    /**
     * Classifies if text violates OpenAI&#39;s Content Policy
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createModerationTest() throws ApiException {
        CreateModerationRequest createModerationRequest = null;
        CreateModerationResponse response = api.createModeration(createModerationRequest);
        // TODO: test validations
    }

    /**
     * Transcribes audio into the input language.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTranscriptionTest() throws ApiException {
        File _file = null;
        CreateTranscriptionRequestModel model = null;
        String prompt = null;
        String responseFormat = null;
        BigDecimal temperature = null;
        String language = null;
        CreateTranscriptionResponse response = api.createTranscription(_file, model, prompt, responseFormat, temperature, language);
        // TODO: test validations
    }

    /**
     * Translates audio into English.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTranslationTest() throws ApiException {
        File _file = null;
        CreateTranscriptionRequestModel model = null;
        String prompt = null;
        String responseFormat = null;
        BigDecimal temperature = null;
        CreateTranslationResponse response = api.createTranslation(_file, model, prompt, responseFormat, temperature);
        // TODO: test validations
    }

    /**
     * Delete a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFileTest() throws ApiException {
        String fileId = null;
        DeleteFileResponse response = api.deleteFile(fileId);
        // TODO: test validations
    }

    /**
     * Delete a fine-tuned model. You must have the Owner role in your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteModelTest() throws ApiException {
        String model = null;
        DeleteModelResponse response = api.deleteModel(model);
        // TODO: test validations
    }

    /**
     * Returns the contents of the specified file
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadFileTest() throws ApiException {
        String fileId = null;
        String response = api.downloadFile(fileId);
        // TODO: test validations
    }

    /**
     * Returns a list of files that belong to the user&#39;s organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFilesTest() throws ApiException {
        ListFilesResponse response = api.listFiles();
        // TODO: test validations
    }

    /**
     * Get fine-grained status updates for a fine-tune job. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFineTuneEventsTest() throws ApiException {
        String fineTuneId = null;
        Boolean stream = null;
        ListFineTuneEventsResponse response = api.listFineTuneEvents(fineTuneId, stream);
        // TODO: test validations
    }

    /**
     * List your organization&#39;s fine-tuning jobs 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFineTunesTest() throws ApiException {
        ListFineTunesResponse response = api.listFineTunes();
        // TODO: test validations
    }

    /**
     * Lists the currently available models, and provides basic information about each one such as the owner and availability.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listModelsTest() throws ApiException {
        ListModelsResponse response = api.listModels();
        // TODO: test validations
    }

    /**
     * Returns information about a specific file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveFileTest() throws ApiException {
        String fileId = null;
        OpenAIFile response = api.retrieveFile(fileId);
        // TODO: test validations
    }

    /**
     * Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveFineTuneTest() throws ApiException {
        String fineTuneId = null;
        FineTune response = api.retrieveFineTune(fineTuneId);
        // TODO: test validations
    }

    /**
     * Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveModelTest() throws ApiException {
        String model = null;
        Model response = api.retrieveModel(model);
        // TODO: test validations
    }

}
