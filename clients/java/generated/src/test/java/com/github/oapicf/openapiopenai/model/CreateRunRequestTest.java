/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.openapiopenai.model;

import com.github.oapicf.openapiopenai.model.AssistantObjectToolsInner;
import com.github.oapicf.openapiopenai.model.AssistantsApiResponseFormatOption;
import com.github.oapicf.openapiopenai.model.AssistantsApiToolChoiceOption;
import com.github.oapicf.openapiopenai.model.CreateMessageRequest;
import com.github.oapicf.openapiopenai.model.CreateRunRequestModel;
import com.github.oapicf.openapiopenai.model.TruncationObject;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateRunRequest
 */
public class CreateRunRequestTest {
    private final CreateRunRequest model = new CreateRunRequest();

    /**
     * Model tests for CreateRunRequest
     */
    @Test
    public void testCreateRunRequest() {
        // TODO: test CreateRunRequest
    }

    /**
     * Test the property 'assistantId'
     */
    @Test
    public void assistantIdTest() {
        // TODO: test assistantId
    }

    /**
     * Test the property 'model'
     */
    @Test
    public void modelTest() {
        // TODO: test model
    }

    /**
     * Test the property 'instructions'
     */
    @Test
    public void instructionsTest() {
        // TODO: test instructions
    }

    /**
     * Test the property 'additionalInstructions'
     */
    @Test
    public void additionalInstructionsTest() {
        // TODO: test additionalInstructions
    }

    /**
     * Test the property 'additionalMessages'
     */
    @Test
    public void additionalMessagesTest() {
        // TODO: test additionalMessages
    }

    /**
     * Test the property 'tools'
     */
    @Test
    public void toolsTest() {
        // TODO: test tools
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'temperature'
     */
    @Test
    public void temperatureTest() {
        // TODO: test temperature
    }

    /**
     * Test the property 'stream'
     */
    @Test
    public void streamTest() {
        // TODO: test stream
    }

    /**
     * Test the property 'maxPromptTokens'
     */
    @Test
    public void maxPromptTokensTest() {
        // TODO: test maxPromptTokens
    }

    /**
     * Test the property 'maxCompletionTokens'
     */
    @Test
    public void maxCompletionTokensTest() {
        // TODO: test maxCompletionTokens
    }

    /**
     * Test the property 'truncationStrategy'
     */
    @Test
    public void truncationStrategyTest() {
        // TODO: test truncationStrategy
    }

    /**
     * Test the property 'toolChoice'
     */
    @Test
    public void toolChoiceTest() {
        // TODO: test toolChoice
    }

    /**
     * Test the property 'responseFormat'
     */
    @Test
    public void responseFormatTest() {
        // TODO: test responseFormat
    }

}
