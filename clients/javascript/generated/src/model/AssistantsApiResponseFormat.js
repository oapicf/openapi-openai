/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssistantsApiResponseFormat model module.
 * @module model/AssistantsApiResponseFormat
 * @version 1.1.1-pre.0
 */
class AssistantsApiResponseFormat {
    /**
     * Constructs a new <code>AssistantsApiResponseFormat</code>.
     * An object describing the expected output of the model. If &#x60;json_object&#x60; only &#x60;function&#x60; type &#x60;tools&#x60; are allowed to be passed to the Run. If &#x60;text&#x60; the model can return text or any value needed. 
     * @alias module:model/AssistantsApiResponseFormat
     */
    constructor() { 
        
        AssistantsApiResponseFormat.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['type'] = 'text';
    }

    /**
     * Constructs a <code>AssistantsApiResponseFormat</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssistantsApiResponseFormat} obj Optional instance to populate.
     * @return {module:model/AssistantsApiResponseFormat} The populated <code>AssistantsApiResponseFormat</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssistantsApiResponseFormat();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssistantsApiResponseFormat</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssistantsApiResponseFormat</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Must be one of `text` or `json_object`.
 * @member {module:model/AssistantsApiResponseFormat.TypeEnum} type
 * @default 'text'
 */
AssistantsApiResponseFormat.prototype['type'] = 'text';





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AssistantsApiResponseFormat['TypeEnum'] = {

    /**
     * value: "text"
     * @const
     */
    "text": "text",

    /**
     * value: "json_object"
     * @const
     */
    "json_object": "json_object"
};



export default AssistantsApiResponseFormat;

