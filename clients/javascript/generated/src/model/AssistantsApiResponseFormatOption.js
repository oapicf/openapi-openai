/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssistantsApiResponseFormat from './AssistantsApiResponseFormat';

/**
 * The AssistantsApiResponseFormatOption model module.
 * @module model/AssistantsApiResponseFormatOption
 * @version 1.0.1-pre.0
 */
class AssistantsApiResponseFormatOption {
    /**
     * Constructs a new <code>AssistantsApiResponseFormatOption</code>.
     * Specifies the format that the model must output. Compatible with [GPT-4 Turbo](/docs/models/gpt-4-and-gpt-4-turbo) and all GPT-3.5 Turbo models newer than &#x60;gpt-3.5-turbo-1106&#x60;.  Setting to &#x60;{ \&quot;type\&quot;: \&quot;json_object\&quot; }&#x60; enables JSON mode, which guarantees the message the model generates is valid JSON.  **Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly \&quot;stuck\&quot; request. Also note that the message content may be partially cut off if &#x60;finish_reason&#x3D;\&quot;length\&quot;&#x60;, which indicates the generation exceeded &#x60;max_tokens&#x60; or the conversation exceeded the max context length. 
     * @alias module:model/AssistantsApiResponseFormatOption
     * @param {(module:model/AssistantsApiResponseFormat|module:model/String)} instance The actual instance to initialize AssistantsApiResponseFormatOption.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        // `auto` is the default value 
        try {
            // validate string
            if (!(typeof instance === 'string')) {
                throw new Error("Invalid value. Must be string. Input: " + JSON.stringify(instance));
            }
            this.actualInstance = instance;
            match++;
        } catch(err) {
            // json data failed to deserialize into String
            errorMessages.push("Failed to construct String: " + err)
        }

        try {
            if (typeof instance === "AssistantsApiResponseFormat") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AssistantsApiResponseFormat.validateJSON(instance); // throw an exception if no match
                // create AssistantsApiResponseFormat from JS object
                this.actualInstance = AssistantsApiResponseFormat.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AssistantsApiResponseFormat
            errorMessages.push("Failed to construct AssistantsApiResponseFormat: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `AssistantsApiResponseFormatOption` with oneOf schemas AssistantsApiResponseFormat, String. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `AssistantsApiResponseFormatOption` with oneOf schemas AssistantsApiResponseFormat, String. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>AssistantsApiResponseFormatOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssistantsApiResponseFormatOption} obj Optional instance to populate.
     * @return {module:model/AssistantsApiResponseFormatOption} The populated <code>AssistantsApiResponseFormatOption</code> instance.
     */
    static constructFromObject(data, obj) {
        return new AssistantsApiResponseFormatOption(data);
    }

    /**
     * Gets the actual instance, which can be <code>AssistantsApiResponseFormat</code>, <code>String</code>.
     * @return {(module:model/AssistantsApiResponseFormat|module:model/String)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>AssistantsApiResponseFormat</code>, <code>String</code>.
     * @param {(module:model/AssistantsApiResponseFormat|module:model/String)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = AssistantsApiResponseFormatOption.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of AssistantsApiResponseFormatOption from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/AssistantsApiResponseFormatOption} An instance of AssistantsApiResponseFormatOption.
     */
    static fromJSON = function(json_string){
        return AssistantsApiResponseFormatOption.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Must be one of `text` or `json_object`.
 * @member {module:model/AssistantsApiResponseFormatOption.TypeEnum} type
 * @default 'text'
 */
AssistantsApiResponseFormatOption.prototype['type'] = 'text';


AssistantsApiResponseFormatOption.OneOf = ["AssistantsApiResponseFormat", "String"];

export default AssistantsApiResponseFormatOption;

