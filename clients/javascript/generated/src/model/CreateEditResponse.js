/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateCompletionResponseUsage from './CreateCompletionResponseUsage';
import CreateEditResponseChoicesInner from './CreateEditResponseChoicesInner';

/**
 * The CreateEditResponse model module.
 * @module model/CreateEditResponse
 * @version 0.9.0-pre.0
 */
class CreateEditResponse {
    /**
     * Constructs a new <code>CreateEditResponse</code>.
     * @alias module:model/CreateEditResponse
     * @param object {String} 
     * @param created {Number} 
     * @param choices {Array.<module:model/CreateEditResponseChoicesInner>} 
     * @param usage {module:model/CreateCompletionResponseUsage} 
     */
    constructor(object, created, choices, usage) { 
        
        CreateEditResponse.initialize(this, object, created, choices, usage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, object, created, choices, usage) { 
        obj['object'] = object;
        obj['created'] = created;
        obj['choices'] = choices;
        obj['usage'] = usage;
    }

    /**
     * Constructs a <code>CreateEditResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateEditResponse} obj Optional instance to populate.
     * @return {module:model/CreateEditResponse} The populated <code>CreateEditResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateEditResponse();

            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('choices')) {
                obj['choices'] = ApiClient.convertToType(data['choices'], [CreateEditResponseChoicesInner]);
            }
            if (data.hasOwnProperty('usage')) {
                obj['usage'] = CreateCompletionResponseUsage.constructFromObject(data['usage']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateEditResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateEditResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateEditResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        if (data['choices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['choices'])) {
                throw new Error("Expected the field `choices` to be an array in the JSON data but got " + data['choices']);
            }
            // validate the optional field `choices` (array)
            for (const item of data['choices']) {
                CreateEditResponseChoicesInner.validateJSON(item);
            };
        }
        // validate the optional field `usage`
        if (data['usage']) { // data not null
          CreateCompletionResponseUsage.validateJSON(data['usage']);
        }

        return true;
    }


}

CreateEditResponse.RequiredProperties = ["object", "created", "choices", "usage"];

/**
 * @member {String} object
 */
CreateEditResponse.prototype['object'] = undefined;

/**
 * @member {Number} created
 */
CreateEditResponse.prototype['created'] = undefined;

/**
 * @member {Array.<module:model/CreateEditResponseChoicesInner>} choices
 */
CreateEditResponse.prototype['choices'] = undefined;

/**
 * @member {module:model/CreateCompletionResponseUsage} usage
 */
CreateEditResponse.prototype['usage'] = undefined;






export default CreateEditResponse;

