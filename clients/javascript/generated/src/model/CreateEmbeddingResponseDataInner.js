/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateEmbeddingResponseDataInner model module.
 * @module model/CreateEmbeddingResponseDataInner
 * @version 0.9.0-pre.0
 */
class CreateEmbeddingResponseDataInner {
    /**
     * Constructs a new <code>CreateEmbeddingResponseDataInner</code>.
     * @alias module:model/CreateEmbeddingResponseDataInner
     * @param index {Number} 
     * @param object {String} 
     * @param embedding {Array.<Number>} 
     */
    constructor(index, object, embedding) { 
        
        CreateEmbeddingResponseDataInner.initialize(this, index, object, embedding);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, index, object, embedding) { 
        obj['index'] = index;
        obj['object'] = object;
        obj['embedding'] = embedding;
    }

    /**
     * Constructs a <code>CreateEmbeddingResponseDataInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateEmbeddingResponseDataInner} obj Optional instance to populate.
     * @return {module:model/CreateEmbeddingResponseDataInner} The populated <code>CreateEmbeddingResponseDataInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateEmbeddingResponseDataInner();

            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('embedding')) {
                obj['embedding'] = ApiClient.convertToType(data['embedding'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateEmbeddingResponseDataInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateEmbeddingResponseDataInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateEmbeddingResponseDataInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['embedding'])) {
            throw new Error("Expected the field `embedding` to be an array in the JSON data but got " + data['embedding']);
        }

        return true;
    }


}

CreateEmbeddingResponseDataInner.RequiredProperties = ["index", "object", "embedding"];

/**
 * @member {Number} index
 */
CreateEmbeddingResponseDataInner.prototype['index'] = undefined;

/**
 * @member {String} object
 */
CreateEmbeddingResponseDataInner.prototype['object'] = undefined;

/**
 * @member {Array.<Number>} embedding
 */
CreateEmbeddingResponseDataInner.prototype['embedding'] = undefined;






export default CreateEmbeddingResponseDataInner;

