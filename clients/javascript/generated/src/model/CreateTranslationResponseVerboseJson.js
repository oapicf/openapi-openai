/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TranscriptionSegment from './TranscriptionSegment';

/**
 * The CreateTranslationResponseVerboseJson model module.
 * @module model/CreateTranslationResponseVerboseJson
 * @version 1.0.1-pre.0
 */
class CreateTranslationResponseVerboseJson {
    /**
     * Constructs a new <code>CreateTranslationResponseVerboseJson</code>.
     * @alias module:model/CreateTranslationResponseVerboseJson
     * @param language {String} The language of the output translation (always `english`).
     * @param duration {String} The duration of the input audio.
     * @param text {String} The translated text.
     */
    constructor(language, duration, text) { 
        
        CreateTranslationResponseVerboseJson.initialize(this, language, duration, text);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, language, duration, text) { 
        obj['language'] = language;
        obj['duration'] = duration;
        obj['text'] = text;
    }

    /**
     * Constructs a <code>CreateTranslationResponseVerboseJson</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateTranslationResponseVerboseJson} obj Optional instance to populate.
     * @return {module:model/CreateTranslationResponseVerboseJson} The populated <code>CreateTranslationResponseVerboseJson</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateTranslationResponseVerboseJson();

            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('segments')) {
                obj['segments'] = ApiClient.convertToType(data['segments'], [TranscriptionSegment]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateTranslationResponseVerboseJson</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateTranslationResponseVerboseJson</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateTranslationResponseVerboseJson.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        if (data['segments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['segments'])) {
                throw new Error("Expected the field `segments` to be an array in the JSON data but got " + data['segments']);
            }
            // validate the optional field `segments` (array)
            for (const item of data['segments']) {
                TranscriptionSegment.validateJSON(item);
            };
        }

        return true;
    }


}

CreateTranslationResponseVerboseJson.RequiredProperties = ["language", "duration", "text"];

/**
 * The language of the output translation (always `english`).
 * @member {String} language
 */
CreateTranslationResponseVerboseJson.prototype['language'] = undefined;

/**
 * The duration of the input audio.
 * @member {String} duration
 */
CreateTranslationResponseVerboseJson.prototype['duration'] = undefined;

/**
 * The translated text.
 * @member {String} text
 */
CreateTranslationResponseVerboseJson.prototype['text'] = undefined;

/**
 * Segments of the translated text and their corresponding details.
 * @member {Array.<module:model/TranscriptionSegment>} segments
 */
CreateTranslationResponseVerboseJson.prototype['segments'] = undefined;






export default CreateTranslationResponseVerboseJson;

