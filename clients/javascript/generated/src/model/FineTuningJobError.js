/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FineTuningJobError model module.
 * @module model/FineTuningJobError
 * @version 1.0.1-pre.0
 */
class FineTuningJobError {
    /**
     * Constructs a new <code>FineTuningJobError</code>.
     * For fine-tuning jobs that have &#x60;failed&#x60;, this will contain more information on the cause of the failure.
     * @alias module:model/FineTuningJobError
     * @param code {String} A machine-readable error code.
     * @param message {String} A human-readable error message.
     * @param param {String} The parameter that was invalid, usually `training_file` or `validation_file`. This field will be null if the failure was not parameter-specific.
     */
    constructor(code, message, param) { 
        
        FineTuningJobError.initialize(this, code, message, param);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, message, param) { 
        obj['code'] = code;
        obj['message'] = message;
        obj['param'] = param;
    }

    /**
     * Constructs a <code>FineTuningJobError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FineTuningJobError} obj Optional instance to populate.
     * @return {module:model/FineTuningJobError} The populated <code>FineTuningJobError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FineTuningJobError();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('param')) {
                obj['param'] = ApiClient.convertToType(data['param'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FineTuningJobError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FineTuningJobError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FineTuningJobError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['param'] && !(typeof data['param'] === 'string' || data['param'] instanceof String)) {
            throw new Error("Expected the field `param` to be a primitive type in the JSON string but got " + data['param']);
        }

        return true;
    }


}

FineTuningJobError.RequiredProperties = ["code", "message", "param"];

/**
 * A machine-readable error code.
 * @member {String} code
 */
FineTuningJobError.prototype['code'] = undefined;

/**
 * A human-readable error message.
 * @member {String} message
 */
FineTuningJobError.prototype['message'] = undefined;

/**
 * The parameter that was invalid, usually `training_file` or `validation_file`. This field will be null if the failure was not parameter-specific.
 * @member {String} param
 */
FineTuningJobError.prototype['param'] = undefined;






export default FineTuningJobError;

