/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MessageContentTextAnnotationsFileCitationObjectFileCitation from './MessageContentTextAnnotationsFileCitationObjectFileCitation';

/**
 * The MessageContentTextAnnotationsFileCitationObject model module.
 * @module model/MessageContentTextAnnotationsFileCitationObject
 * @version 1.0.1-pre.0
 */
class MessageContentTextAnnotationsFileCitationObject {
    /**
     * Constructs a new <code>MessageContentTextAnnotationsFileCitationObject</code>.
     * A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the \&quot;retrieval\&quot; tool to search files.
     * @alias module:model/MessageContentTextAnnotationsFileCitationObject
     * @param type {module:model/MessageContentTextAnnotationsFileCitationObject.TypeEnum} Always `file_citation`.
     * @param text {String} The text in the message content that needs to be replaced.
     * @param fileCitation {module:model/MessageContentTextAnnotationsFileCitationObjectFileCitation} 
     * @param startIndex {Number} 
     * @param endIndex {Number} 
     */
    constructor(type, text, fileCitation, startIndex, endIndex) { 
        
        MessageContentTextAnnotationsFileCitationObject.initialize(this, type, text, fileCitation, startIndex, endIndex);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, text, fileCitation, startIndex, endIndex) { 
        obj['type'] = type;
        obj['text'] = text;
        obj['file_citation'] = fileCitation;
        obj['start_index'] = startIndex;
        obj['end_index'] = endIndex;
    }

    /**
     * Constructs a <code>MessageContentTextAnnotationsFileCitationObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageContentTextAnnotationsFileCitationObject} obj Optional instance to populate.
     * @return {module:model/MessageContentTextAnnotationsFileCitationObject} The populated <code>MessageContentTextAnnotationsFileCitationObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageContentTextAnnotationsFileCitationObject();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('file_citation')) {
                obj['file_citation'] = MessageContentTextAnnotationsFileCitationObjectFileCitation.constructFromObject(data['file_citation']);
            }
            if (data.hasOwnProperty('start_index')) {
                obj['start_index'] = ApiClient.convertToType(data['start_index'], 'Number');
            }
            if (data.hasOwnProperty('end_index')) {
                obj['end_index'] = ApiClient.convertToType(data['end_index'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessageContentTextAnnotationsFileCitationObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessageContentTextAnnotationsFileCitationObject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MessageContentTextAnnotationsFileCitationObject.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // validate the optional field `file_citation`
        if (data['file_citation']) { // data not null
          MessageContentTextAnnotationsFileCitationObjectFileCitation.validateJSON(data['file_citation']);
        }

        return true;
    }


}

MessageContentTextAnnotationsFileCitationObject.RequiredProperties = ["type", "text", "file_citation", "start_index", "end_index"];

/**
 * Always `file_citation`.
 * @member {module:model/MessageContentTextAnnotationsFileCitationObject.TypeEnum} type
 */
MessageContentTextAnnotationsFileCitationObject.prototype['type'] = undefined;

/**
 * The text in the message content that needs to be replaced.
 * @member {String} text
 */
MessageContentTextAnnotationsFileCitationObject.prototype['text'] = undefined;

/**
 * @member {module:model/MessageContentTextAnnotationsFileCitationObjectFileCitation} file_citation
 */
MessageContentTextAnnotationsFileCitationObject.prototype['file_citation'] = undefined;

/**
 * @member {Number} start_index
 */
MessageContentTextAnnotationsFileCitationObject.prototype['start_index'] = undefined;

/**
 * @member {Number} end_index
 */
MessageContentTextAnnotationsFileCitationObject.prototype['end_index'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
MessageContentTextAnnotationsFileCitationObject['TypeEnum'] = {

    /**
     * value: "file_citation"
     * @const
     */
    "file_citation": "file_citation"
};



export default MessageContentTextAnnotationsFileCitationObject;

