/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MessageDeltaContentTextObjectText from './MessageDeltaContentTextObjectText';

/**
 * The MessageDeltaContentTextObject model module.
 * @module model/MessageDeltaContentTextObject
 * @version 1.1.1-pre.0
 */
class MessageDeltaContentTextObject {
    /**
     * Constructs a new <code>MessageDeltaContentTextObject</code>.
     * The text content that is part of a message.
     * @alias module:model/MessageDeltaContentTextObject
     * @param index {Number} The index of the content part in the message.
     * @param type {module:model/MessageDeltaContentTextObject.TypeEnum} Always `text`.
     */
    constructor(index, type) { 
        
        MessageDeltaContentTextObject.initialize(this, index, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, index, type) { 
        obj['index'] = index;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>MessageDeltaContentTextObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageDeltaContentTextObject} obj Optional instance to populate.
     * @return {module:model/MessageDeltaContentTextObject} The populated <code>MessageDeltaContentTextObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageDeltaContentTextObject();

            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = MessageDeltaContentTextObjectText.constructFromObject(data['text']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessageDeltaContentTextObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessageDeltaContentTextObject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MessageDeltaContentTextObject.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `text`
        if (data['text']) { // data not null
          MessageDeltaContentTextObjectText.validateJSON(data['text']);
        }

        return true;
    }


}

MessageDeltaContentTextObject.RequiredProperties = ["index", "type"];

/**
 * The index of the content part in the message.
 * @member {Number} index
 */
MessageDeltaContentTextObject.prototype['index'] = undefined;

/**
 * Always `text`.
 * @member {module:model/MessageDeltaContentTextObject.TypeEnum} type
 */
MessageDeltaContentTextObject.prototype['type'] = undefined;

/**
 * @member {module:model/MessageDeltaContentTextObjectText} text
 */
MessageDeltaContentTextObject.prototype['text'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
MessageDeltaContentTextObject['TypeEnum'] = {

    /**
     * value: "text"
     * @const
     */
    "text": "text"
};



export default MessageDeltaContentTextObject;

