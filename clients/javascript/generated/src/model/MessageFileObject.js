/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MessageFileObject model module.
 * @module model/MessageFileObject
 * @version 1.1.1-pre.0
 */
class MessageFileObject {
    /**
     * Constructs a new <code>MessageFileObject</code>.
     * A list of files attached to a &#x60;message&#x60;.
     * @alias module:model/MessageFileObject
     * @param id {String} The identifier, which can be referenced in API endpoints.
     * @param object {module:model/MessageFileObject.ObjectEnum} The object type, which is always `thread.message.file`.
     * @param createdAt {Number} The Unix timestamp (in seconds) for when the message file was created.
     * @param messageId {String} The ID of the [message](/docs/api-reference/messages) that the [File](/docs/api-reference/files) is attached to.
     */
    constructor(id, object, createdAt, messageId) { 
        
        MessageFileObject.initialize(this, id, object, createdAt, messageId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, object, createdAt, messageId) { 
        obj['id'] = id;
        obj['object'] = object;
        obj['created_at'] = createdAt;
        obj['message_id'] = messageId;
    }

    /**
     * Constructs a <code>MessageFileObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageFileObject} obj Optional instance to populate.
     * @return {module:model/MessageFileObject} The populated <code>MessageFileObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageFileObject();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('message_id')) {
                obj['message_id'] = ApiClient.convertToType(data['message_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessageFileObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessageFileObject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MessageFileObject.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['message_id'] && !(typeof data['message_id'] === 'string' || data['message_id'] instanceof String)) {
            throw new Error("Expected the field `message_id` to be a primitive type in the JSON string but got " + data['message_id']);
        }

        return true;
    }


}

MessageFileObject.RequiredProperties = ["id", "object", "created_at", "message_id"];

/**
 * The identifier, which can be referenced in API endpoints.
 * @member {String} id
 */
MessageFileObject.prototype['id'] = undefined;

/**
 * The object type, which is always `thread.message.file`.
 * @member {module:model/MessageFileObject.ObjectEnum} object
 */
MessageFileObject.prototype['object'] = undefined;

/**
 * The Unix timestamp (in seconds) for when the message file was created.
 * @member {Number} created_at
 */
MessageFileObject.prototype['created_at'] = undefined;

/**
 * The ID of the [message](/docs/api-reference/messages) that the [File](/docs/api-reference/files) is attached to.
 * @member {String} message_id
 */
MessageFileObject.prototype['message_id'] = undefined;





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
MessageFileObject['ObjectEnum'] = {

    /**
     * value: "thread.message.file"
     * @const
     */
    "thread.message.file": "thread.message.file"
};



export default MessageFileObject;

