/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MessageContentImageFileObject from './MessageContentImageFileObject';
import MessageContentImageFileObjectImageFile from './MessageContentImageFileObjectImageFile';
import MessageContentTextObject from './MessageContentTextObject';
import MessageContentTextObjectText from './MessageContentTextObjectText';

/**
 * The MessageObjectContentInner model module.
 * @module model/MessageObjectContentInner
 * @version 1.0.1-pre.0
 */
class MessageObjectContentInner {
    /**
     * Constructs a new <code>MessageObjectContentInner</code>.
     * @alias module:model/MessageObjectContentInner
     * @param {(module:model/MessageContentImageFileObject|module:model/MessageContentTextObject)} instance The actual instance to initialize MessageObjectContentInner.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "MessageContentImageFileObject") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MessageContentImageFileObject.validateJSON(instance); // throw an exception if no match
                // create MessageContentImageFileObject from JS object
                this.actualInstance = MessageContentImageFileObject.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MessageContentImageFileObject
            errorMessages.push("Failed to construct MessageContentImageFileObject: " + err)
        }

        try {
            if (typeof instance === "MessageContentTextObject") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MessageContentTextObject.validateJSON(instance); // throw an exception if no match
                // create MessageContentTextObject from JS object
                this.actualInstance = MessageContentTextObject.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MessageContentTextObject
            errorMessages.push("Failed to construct MessageContentTextObject: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `MessageObjectContentInner` with oneOf schemas MessageContentImageFileObject, MessageContentTextObject. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `MessageObjectContentInner` with oneOf schemas MessageContentImageFileObject, MessageContentTextObject. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>MessageObjectContentInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageObjectContentInner} obj Optional instance to populate.
     * @return {module:model/MessageObjectContentInner} The populated <code>MessageObjectContentInner</code> instance.
     */
    static constructFromObject(data, obj) {
        return new MessageObjectContentInner(data);
    }

    /**
     * Gets the actual instance, which can be <code>MessageContentImageFileObject</code>, <code>MessageContentTextObject</code>.
     * @return {(module:model/MessageContentImageFileObject|module:model/MessageContentTextObject)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>MessageContentImageFileObject</code>, <code>MessageContentTextObject</code>.
     * @param {(module:model/MessageContentImageFileObject|module:model/MessageContentTextObject)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = MessageObjectContentInner.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of MessageObjectContentInner from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/MessageObjectContentInner} An instance of MessageObjectContentInner.
     */
    static fromJSON = function(json_string){
        return MessageObjectContentInner.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Always `image_file`.
 * @member {module:model/MessageObjectContentInner.TypeEnum} type
 */
MessageObjectContentInner.prototype['type'] = undefined;

/**
 * @member {module:model/MessageContentImageFileObjectImageFile} image_file
 */
MessageObjectContentInner.prototype['image_file'] = undefined;

/**
 * @member {module:model/MessageContentTextObjectText} text
 */
MessageObjectContentInner.prototype['text'] = undefined;


MessageObjectContentInner.OneOf = ["MessageContentImageFileObject", "MessageContentTextObject"];

export default MessageObjectContentInner;

