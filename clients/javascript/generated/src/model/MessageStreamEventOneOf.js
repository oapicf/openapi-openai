/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MessageObject from './MessageObject';

/**
 * The MessageStreamEventOneOf model module.
 * @module model/MessageStreamEventOneOf
 * @version 1.0.1-pre.0
 */
class MessageStreamEventOneOf {
    /**
     * Constructs a new <code>MessageStreamEventOneOf</code>.
     * Occurs when a [message](/docs/api-reference/messages/object) is created.
     * @alias module:model/MessageStreamEventOneOf
     * @param event {module:model/MessageStreamEventOneOf.EventEnum} 
     * @param data {module:model/MessageObject} 
     */
    constructor(event, data) { 
        
        MessageStreamEventOneOf.initialize(this, event, data);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, event, data) { 
        obj['event'] = event;
        obj['data'] = data;
    }

    /**
     * Constructs a <code>MessageStreamEventOneOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageStreamEventOneOf} obj Optional instance to populate.
     * @return {module:model/MessageStreamEventOneOf} The populated <code>MessageStreamEventOneOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageStreamEventOneOf();

            if (data.hasOwnProperty('event')) {
                obj['event'] = ApiClient.convertToType(data['event'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = MessageObject.constructFromObject(data['data']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessageStreamEventOneOf</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessageStreamEventOneOf</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MessageStreamEventOneOf.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['event'] && !(typeof data['event'] === 'string' || data['event'] instanceof String)) {
            throw new Error("Expected the field `event` to be a primitive type in the JSON string but got " + data['event']);
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          MessageObject.validateJSON(data['data']);
        }

        return true;
    }


}

MessageStreamEventOneOf.RequiredProperties = ["event", "data"];

/**
 * @member {module:model/MessageStreamEventOneOf.EventEnum} event
 */
MessageStreamEventOneOf.prototype['event'] = undefined;

/**
 * @member {module:model/MessageObject} data
 */
MessageStreamEventOneOf.prototype['data'] = undefined;





/**
 * Allowed values for the <code>event</code> property.
 * @enum {String}
 * @readonly
 */
MessageStreamEventOneOf['EventEnum'] = {

    /**
     * value: "thread.message.created"
     * @const
     */
    "thread.message.created": "thread.message.created"
};



export default MessageStreamEventOneOf;

