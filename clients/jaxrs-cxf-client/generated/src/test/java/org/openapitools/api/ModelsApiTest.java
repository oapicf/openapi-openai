/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.api;

import org.openapitools.model.DeleteModelResponse;
import org.openapitools.model.ListModelsResponse;
import org.openapitools.model.Model;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * OpenAI API
 *
 * <p>The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * API tests for ModelsApi
 */
public class ModelsApiTest {


    private ModelsApi api;

    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);

        api = JAXRSClientFactory.create("https://api.openai.com/v1", ModelsApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteModelTest() {
        String model = null;
        //DeleteModelResponse response = api.deleteModel(model);
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Lists the currently available models, and provides basic information about each one such as the owner and availability.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listModelsTest() {
        //ListModelsResponse response = api.listModels();
        //assertNotNull(response);
        // TODO: test validations


    }
    
    /**
     * Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveModelTest() {
        String model = null;
        //Model response = api.retrieveModel(model);
        //assertNotNull(response);
        // TODO: test validations


    }
    
}
