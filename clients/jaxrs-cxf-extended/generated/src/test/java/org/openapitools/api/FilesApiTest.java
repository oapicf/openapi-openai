/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.api;

import org.openapitools.model.DeleteFileResponse;
import java.io.File;
import org.openapitools.model.ListFilesResponse;
import org.openapitools.model.OpenAIFile;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;
import org.apache.cxf.jaxrs.ext.multipart.Attachment;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;
import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;
import org.apache.cxf.jaxrs.provider.MultipartProvider;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * OpenAI API
 *
 * <p>The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * API tests for FilesApi.
 */
public class FilesApiTest {

    private FilesApi api;

    @Before
    public void setup() {
        List<?> providers = Arrays.asList(new JacksonJsonProvider(), new JacksonXMLProvider(), new MultipartProvider());

        api = JAXRSClientFactory.create("https://api.openai.com/v1", FilesApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.  The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine-tuning API only supports &#x60;.jsonl&#x60; files.  Please [contact us](https://help.openai.com/) if you need to increase these storage limits. 
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void createFileTest() throws Exception {
        // TODO: assign appropriate parameter values
        Attachment _file = new Attachment("_file", MediaType.TEXT_PLAIN, "Dummy attachment content");
        String purpose = null;

        // TODO: delete this line and uncomment the next
        // OpenAIFile response = api.createFile(_file, purpose);
        // TODO: complete test assertions
    }
    
    /**
     * Delete a file.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void deleteFileTest() throws Exception {
        // TODO: assign appropriate parameter values
        String fileId = null;

        // TODO: delete this line and uncomment the next
        // DeleteFileResponse response = api.deleteFile(fileId);
        // TODO: complete test assertions
    }
    
    /**
     * Returns the contents of the specified file.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void downloadFileTest() throws Exception {
        // TODO: assign appropriate parameter values
        String fileId = null;

        // TODO: delete this line and uncomment the next
        // String response = api.downloadFile(fileId);
        // TODO: complete test assertions
    }
    
    /**
     * Returns a list of files that belong to the user&#39;s organization.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void listFilesTest() throws Exception {
        // TODO: assign appropriate parameter values
        String purpose = null;

        // TODO: delete this line and uncomment the next
        // ListFilesResponse response = api.listFiles(purpose);
        // TODO: complete test assertions
    }
    
    /**
     * Returns information about a specific file.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void retrieveFileTest() throws Exception {
        // TODO: assign appropriate parameter values
        String fileId = null;

        // TODO: delete this line and uncomment the next
        // OpenAIFile response = api.retrieveFile(fileId);
        // TODO: complete test assertions
    }
    
}
