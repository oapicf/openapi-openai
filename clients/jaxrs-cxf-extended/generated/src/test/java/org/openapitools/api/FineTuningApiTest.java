/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.api;

import org.openapitools.model.CreateFineTuningJobRequest;
import org.openapitools.model.FineTuningJob;
import org.openapitools.model.ListFineTuningJobCheckpointsResponse;
import org.openapitools.model.ListFineTuningJobEventsResponse;
import org.openapitools.model.ListPaginatedFineTuningJobsResponse;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;
import org.apache.cxf.jaxrs.ext.multipart.Attachment;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;
import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;
import org.apache.cxf.jaxrs.provider.MultipartProvider;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * OpenAI API
 *
 * <p>The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * API tests for FineTuningApi.
 */
public class FineTuningApiTest {

    private FineTuningApi api;

    @Before
    public void setup() {
        List<?> providers = Arrays.asList(new JacksonJsonProvider(), new JacksonXMLProvider(), new MultipartProvider());

        api = JAXRSClientFactory.create("https://api.openai.com/v1", FineTuningApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * Immediately cancel a fine-tune job. 
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void cancelFineTuningJobTest() throws Exception {
        // TODO: assign appropriate parameter values
        String fineTuningJobId = null;

        // TODO: delete this line and uncomment the next
        // FineTuningJob response = api.cancelFineTuningJob(fineTuningJobId);
        // TODO: complete test assertions
    }
    
    /**
     * Creates a fine-tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void createFineTuningJobTest() throws Exception {
        // TODO: assign appropriate parameter values
        CreateFineTuningJobRequest createFineTuningJobRequest = null;

        // TODO: delete this line and uncomment the next
        // FineTuningJob response = api.createFineTuningJob(createFineTuningJobRequest);
        // TODO: complete test assertions
    }
    
    /**
     * Get status updates for a fine-tuning job. 
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void listFineTuningEventsTest() throws Exception {
        // TODO: assign appropriate parameter values
        String fineTuningJobId = null;
        String after = null;
        Integer limit = null;

        // TODO: delete this line and uncomment the next
        // ListFineTuningJobEventsResponse response = api.listFineTuningEvents(fineTuningJobId, after, limit);
        // TODO: complete test assertions
    }
    
    /**
     * List checkpoints for a fine-tuning job. 
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void listFineTuningJobCheckpointsTest() throws Exception {
        // TODO: assign appropriate parameter values
        String fineTuningJobId = null;
        String after = null;
        Integer limit = null;

        // TODO: delete this line and uncomment the next
        // ListFineTuningJobCheckpointsResponse response = api.listFineTuningJobCheckpoints(fineTuningJobId, after, limit);
        // TODO: complete test assertions
    }
    
    /**
     * List your organization&#39;s fine-tuning jobs 
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void listPaginatedFineTuningJobsTest() throws Exception {
        // TODO: assign appropriate parameter values
        String after = null;
        Integer limit = null;

        // TODO: delete this line and uncomment the next
        // ListPaginatedFineTuningJobsResponse response = api.listPaginatedFineTuningJobs(after, limit);
        // TODO: complete test assertions
    }
    
    /**
     * Get info about a fine-tuning job.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void retrieveFineTuningJobTest() throws Exception {
        // TODO: assign appropriate parameter values
        String fineTuningJobId = null;

        // TODO: delete this line and uncomment the next
        // FineTuningJob response = api.retrieveFineTuningJob(fineTuningJobId);
        // TODO: complete test assertions
    }
    
}
