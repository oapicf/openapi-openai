/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Represents the url or the content of an image generated by the OpenAI API.
 */
@ApiModel(description = "Represents the url or the content of an image generated by the OpenAI API.")
@JsonPropertyOrder({
  Image.JSON_PROPERTY_B64_JSON,
  Image.JSON_PROPERTY_URL,
  Image.JSON_PROPERTY_REVISED_PROMPT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2024-11-03T11:08:40.472203335Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class Image   {
  public static final String JSON_PROPERTY_B64_JSON = "b64_json";
  @JsonProperty(JSON_PROPERTY_B64_JSON)
  private String b64Json;

  public static final String JSON_PROPERTY_URL = "url";
  @JsonProperty(JSON_PROPERTY_URL)
  private String url;

  public static final String JSON_PROPERTY_REVISED_PROMPT = "revised_prompt";
  @JsonProperty(JSON_PROPERTY_REVISED_PROMPT)
  private String revisedPrompt;

  public Image b64Json(String b64Json) {
    this.b64Json = b64Json;
    return this;
  }

  /**
   * The base64-encoded JSON of the generated image, if &#x60;response_format&#x60; is &#x60;b64_json&#x60;.
   * @return b64Json
   **/
  @JsonProperty(value = "b64_json")
  @ApiModelProperty(value = "The base64-encoded JSON of the generated image, if `response_format` is `b64_json`.")
  
  public String getB64Json() {
    return b64Json;
  }

  public void setB64Json(String b64Json) {
    this.b64Json = b64Json;
  }

  public Image url(String url) {
    this.url = url;
    return this;
  }

  /**
   * The URL of the generated image, if &#x60;response_format&#x60; is &#x60;url&#x60; (default).
   * @return url
   **/
  @JsonProperty(value = "url")
  @ApiModelProperty(value = "The URL of the generated image, if `response_format` is `url` (default).")
  
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Image revisedPrompt(String revisedPrompt) {
    this.revisedPrompt = revisedPrompt;
    return this;
  }

  /**
   * The prompt that was used to generate the image, if there was any revision to the prompt.
   * @return revisedPrompt
   **/
  @JsonProperty(value = "revised_prompt")
  @ApiModelProperty(value = "The prompt that was used to generate the image, if there was any revision to the prompt.")
  
  public String getRevisedPrompt() {
    return revisedPrompt;
  }

  public void setRevisedPrompt(String revisedPrompt) {
    this.revisedPrompt = revisedPrompt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Image image = (Image) o;
    return Objects.equals(this.b64Json, image.b64Json) &&
        Objects.equals(this.url, image.url) &&
        Objects.equals(this.revisedPrompt, image.revisedPrompt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(b64Json, url, revisedPrompt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Image {\n");
    
    sb.append("    b64Json: ").append(toIndentedString(b64Json)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    revisedPrompt: ").append(toIndentedString(revisedPrompt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

