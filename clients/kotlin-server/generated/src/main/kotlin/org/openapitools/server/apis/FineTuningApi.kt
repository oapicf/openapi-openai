/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.CreateFineTuningJobRequest
import org.openapitools.server.models.FineTuningJob
import org.openapitools.server.models.ListFineTuningJobCheckpointsResponse
import org.openapitools.server.models.ListFineTuningJobEventsResponse
import org.openapitools.server.models.ListPaginatedFineTuningJobsResponse

fun Route.FineTuningApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("ApiKeyAuth") {
    post<Paths.cancelFineTuningJob> {
        
        val principal = null!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "training_file" : "training_file",
              "result_files" : [ "file-abc123", "file-abc123" ],
              "finished_at" : 6,
              "seed" : 5,
              "fine_tuned_model" : "fine_tuned_model",
              "validation_file" : "validation_file",
              "created_at" : 0,
              "error" : {
                "code" : "code",
                "param" : "param",
                "message" : "message"
              },
              "organization_id" : "organization_id",
              "hyperparameters" : {
                "n_epochs" : "auto"
              },
              "model" : "model",
              "id" : "id",
              "trained_tokens" : 1,
              "integrations" : [ {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              } ],
              "object" : "fine_tuning.job",
              "status" : "validating_files"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("ApiKeyAuth") {
    post<Paths.createFineTuningJob> {
        
        val principal = null!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "training_file" : "training_file",
              "result_files" : [ "file-abc123", "file-abc123" ],
              "finished_at" : 6,
              "seed" : 5,
              "fine_tuned_model" : "fine_tuned_model",
              "validation_file" : "validation_file",
              "created_at" : 0,
              "error" : {
                "code" : "code",
                "param" : "param",
                "message" : "message"
              },
              "organization_id" : "organization_id",
              "hyperparameters" : {
                "n_epochs" : "auto"
              },
              "model" : "model",
              "id" : "id",
              "trained_tokens" : 1,
              "integrations" : [ {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              } ],
              "object" : "fine_tuning.job",
              "status" : "validating_files"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("ApiKeyAuth") {
    get<Paths.listFineTuningEvents> {
        
        val principal = null!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "data" : [ {
                "level" : "info",
                "created_at" : 0,
                "id" : "id",
                "message" : "message",
                "object" : "fine_tuning.job.event"
              }, {
                "level" : "info",
                "created_at" : 0,
                "id" : "id",
                "message" : "message",
                "object" : "fine_tuning.job.event"
              } ],
              "object" : "list"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("ApiKeyAuth") {
    get<Paths.listFineTuningJobCheckpoints> {
        
        val principal = null!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "first_id" : "first_id",
              "data" : [ {
                "step_number" : 6,
                "created_at" : 0,
                "fine_tuning_job_id" : "fine_tuning_job_id",
                "id" : "id",
                "metrics" : {
                  "full_valid_mean_token_accuracy" : 3.616076749251911,
                  "valid_loss" : 2.3021358869347655,
                  "full_valid_loss" : 9.301444243932576,
                  "train_mean_token_accuracy" : 5.637376656633329,
                  "valid_mean_token_accuracy" : 7.061401241503109,
                  "train_loss" : 5.962133916683182,
                  "step" : 1.4658129805029452
                },
                "fine_tuned_model_checkpoint" : "fine_tuned_model_checkpoint",
                "object" : "fine_tuning.job.checkpoint"
              }, {
                "step_number" : 6,
                "created_at" : 0,
                "fine_tuning_job_id" : "fine_tuning_job_id",
                "id" : "id",
                "metrics" : {
                  "full_valid_mean_token_accuracy" : 3.616076749251911,
                  "valid_loss" : 2.3021358869347655,
                  "full_valid_loss" : 9.301444243932576,
                  "train_mean_token_accuracy" : 5.637376656633329,
                  "valid_mean_token_accuracy" : 7.061401241503109,
                  "train_loss" : 5.962133916683182,
                  "step" : 1.4658129805029452
                },
                "fine_tuned_model_checkpoint" : "fine_tuned_model_checkpoint",
                "object" : "fine_tuning.job.checkpoint"
              } ],
              "last_id" : "last_id",
              "has_more" : true,
              "object" : "list"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("ApiKeyAuth") {
    get<Paths.listPaginatedFineTuningJobs> {
        
        val principal = null!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "data" : [ {
                "training_file" : "training_file",
                "result_files" : [ "file-abc123", "file-abc123" ],
                "finished_at" : 6,
                "seed" : 5,
                "fine_tuned_model" : "fine_tuned_model",
                "validation_file" : "validation_file",
                "created_at" : 0,
                "error" : {
                  "code" : "code",
                  "param" : "param",
                  "message" : "message"
                },
                "organization_id" : "organization_id",
                "hyperparameters" : {
                  "n_epochs" : "auto"
                },
                "model" : "model",
                "id" : "id",
                "trained_tokens" : 1,
                "integrations" : [ {
                  "wandb" : {
                    "name" : "name",
                    "project" : "my-wandb-project",
                    "entity" : "entity",
                    "tags" : [ "custom-tag", "custom-tag" ]
                  },
                  "type" : "wandb"
                }, {
                  "wandb" : {
                    "name" : "name",
                    "project" : "my-wandb-project",
                    "entity" : "entity",
                    "tags" : [ "custom-tag", "custom-tag" ]
                  },
                  "type" : "wandb"
                }, {
                  "wandb" : {
                    "name" : "name",
                    "project" : "my-wandb-project",
                    "entity" : "entity",
                    "tags" : [ "custom-tag", "custom-tag" ]
                  },
                  "type" : "wandb"
                }, {
                  "wandb" : {
                    "name" : "name",
                    "project" : "my-wandb-project",
                    "entity" : "entity",
                    "tags" : [ "custom-tag", "custom-tag" ]
                  },
                  "type" : "wandb"
                }, {
                  "wandb" : {
                    "name" : "name",
                    "project" : "my-wandb-project",
                    "entity" : "entity",
                    "tags" : [ "custom-tag", "custom-tag" ]
                  },
                  "type" : "wandb"
                } ],
                "object" : "fine_tuning.job",
                "status" : "validating_files"
              }, {
                "training_file" : "training_file",
                "result_files" : [ "file-abc123", "file-abc123" ],
                "finished_at" : 6,
                "seed" : 5,
                "fine_tuned_model" : "fine_tuned_model",
                "validation_file" : "validation_file",
                "created_at" : 0,
                "error" : {
                  "code" : "code",
                  "param" : "param",
                  "message" : "message"
                },
                "organization_id" : "organization_id",
                "hyperparameters" : {
                  "n_epochs" : "auto"
                },
                "model" : "model",
                "id" : "id",
                "trained_tokens" : 1,
                "integrations" : [ {
                  "wandb" : {
                    "name" : "name",
                    "project" : "my-wandb-project",
                    "entity" : "entity",
                    "tags" : [ "custom-tag", "custom-tag" ]
                  },
                  "type" : "wandb"
                }, {
                  "wandb" : {
                    "name" : "name",
                    "project" : "my-wandb-project",
                    "entity" : "entity",
                    "tags" : [ "custom-tag", "custom-tag" ]
                  },
                  "type" : "wandb"
                }, {
                  "wandb" : {
                    "name" : "name",
                    "project" : "my-wandb-project",
                    "entity" : "entity",
                    "tags" : [ "custom-tag", "custom-tag" ]
                  },
                  "type" : "wandb"
                }, {
                  "wandb" : {
                    "name" : "name",
                    "project" : "my-wandb-project",
                    "entity" : "entity",
                    "tags" : [ "custom-tag", "custom-tag" ]
                  },
                  "type" : "wandb"
                }, {
                  "wandb" : {
                    "name" : "name",
                    "project" : "my-wandb-project",
                    "entity" : "entity",
                    "tags" : [ "custom-tag", "custom-tag" ]
                  },
                  "type" : "wandb"
                } ],
                "object" : "fine_tuning.job",
                "status" : "validating_files"
              } ],
              "has_more" : true,
              "object" : "list"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("ApiKeyAuth") {
    get<Paths.retrieveFineTuningJob> {
        
        val principal = null!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "training_file" : "training_file",
              "result_files" : [ "file-abc123", "file-abc123" ],
              "finished_at" : 6,
              "seed" : 5,
              "fine_tuned_model" : "fine_tuned_model",
              "validation_file" : "validation_file",
              "created_at" : 0,
              "error" : {
                "code" : "code",
                "param" : "param",
                "message" : "message"
              },
              "organization_id" : "organization_id",
              "hyperparameters" : {
                "n_epochs" : "auto"
              },
              "model" : "model",
              "id" : "id",
              "trained_tokens" : 1,
              "integrations" : [ {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              }, {
                "wandb" : {
                  "name" : "name",
                  "project" : "my-wandb-project",
                  "entity" : "entity",
                  "tags" : [ "custom-tag", "custom-tag" ]
                },
                "type" : "wandb"
              } ],
              "object" : "fine_tuning.job",
              "status" : "validating_files"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
