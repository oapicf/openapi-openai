/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.CreateModerationRequest
import org.openapitools.server.models.CreateModerationResponse

fun Route.ModerationsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("ApiKeyAuth") {
    post<Paths.createModeration> {
        
        val principal = null!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "model" : "model",
              "id" : "id",
              "results" : [ {
                "category_scores" : {
                  "self-harm/intent" : 2.3021358869347655,
                  "hate/threatening" : 6.027456183070403,
                  "self-harm/instructions" : 7.061401241503109,
                  "sexual/minors" : 3.616076749251911,
                  "harassment/threatening" : 5.962133916683182,
                  "hate" : 0.8008281904610115,
                  "self-harm" : 5.637376656633329,
                  "harassment" : 1.4658129805029452,
                  "sexual" : 9.301444243932576,
                  "violence/graphic" : 4.145608029883936,
                  "violence" : 2.027123023002322
                },
                "flagged" : true,
                "categories" : {
                  "self-harm/intent" : true,
                  "hate/threatening" : true,
                  "self-harm/instructions" : true,
                  "sexual/minors" : true,
                  "harassment/threatening" : true,
                  "hate" : true,
                  "self-harm" : true,
                  "harassment" : true,
                  "sexual" : true,
                  "violence/graphic" : true,
                  "violence" : true
                }
              }, {
                "category_scores" : {
                  "self-harm/intent" : 2.3021358869347655,
                  "hate/threatening" : 6.027456183070403,
                  "self-harm/instructions" : 7.061401241503109,
                  "sexual/minors" : 3.616076749251911,
                  "harassment/threatening" : 5.962133916683182,
                  "hate" : 0.8008281904610115,
                  "self-harm" : 5.637376656633329,
                  "harassment" : 1.4658129805029452,
                  "sexual" : 9.301444243932576,
                  "violence/graphic" : 4.145608029883936,
                  "violence" : 2.027123023002322
                },
                "flagged" : true,
                "categories" : {
                  "self-harm/intent" : true,
                  "hate/threatening" : true,
                  "self-harm/instructions" : true,
                  "sexual/minors" : true,
                  "harassment/threatening" : true,
                  "hate" : true,
                  "self-harm" : true,
                  "harassment" : true,
                  "sexual" : true,
                  "violence/graphic" : true,
                  "violence" : true
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
