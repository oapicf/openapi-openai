/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.models

import org.openapitools.server.models.ChatCompletionResponseMessage

/**
 * 
 * @param finishReason The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence, `length` if the maximum number of tokens specified in the request was reached, `content_filter` if content was omitted due to a flag from our content filters, or `function_call` if the model called a function. 
 * @param index The index of the choice in the list of choices.
 * @param message 
 */
data class CreateChatCompletionFunctionResponseChoicesInner(
    /* The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence, `length` if the maximum number of tokens specified in the request was reached, `content_filter` if content was omitted due to a flag from our content filters, or `function_call` if the model called a function.  */
    val finishReason: CreateChatCompletionFunctionResponseChoicesInner.FinishReason,
    /* The index of the choice in the list of choices. */
    val index: kotlin.Int,
    val message: ChatCompletionResponseMessage
) 
{
    /**
    * The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence, `length` if the maximum number of tokens specified in the request was reached, `content_filter` if content was omitted due to a flag from our content filters, or `function_call` if the model called a function. 
    * Values: stop,length,function_call,content_filter
    */
    enum class FinishReason(val value: kotlin.String){
        stop("stop"),
        length("length"),
        function_call("function_call"),
        content_filter("content_filter");
    }
}

