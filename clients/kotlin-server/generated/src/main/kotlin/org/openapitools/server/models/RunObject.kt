/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.models

import org.openapitools.server.models.AssistantObjectToolsInner
import org.openapitools.server.models.AssistantsApiResponseFormatOption
import org.openapitools.server.models.AssistantsApiToolChoiceOption
import org.openapitools.server.models.RunCompletionUsage
import org.openapitools.server.models.RunObjectIncompleteDetails
import org.openapitools.server.models.RunObjectLastError
import org.openapitools.server.models.RunObjectRequiredAction
import org.openapitools.server.models.TruncationObject

/**
 * Represents an execution run on a [thread](/docs/api-reference/threads).
 * @param id The identifier, which can be referenced in API endpoints.
 * @param `object` The object type, which is always `thread.run`.
 * @param createdAt The Unix timestamp (in seconds) for when the run was created.
 * @param threadId The ID of the [thread](/docs/api-reference/threads) that was executed on as a part of this run.
 * @param assistantId The ID of the [assistant](/docs/api-reference/assistants) used for execution of this run.
 * @param status The status of the run, which can be either `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, or `expired`.
 * @param requiredAction 
 * @param lastError 
 * @param expiresAt The Unix timestamp (in seconds) for when the run will expire.
 * @param startedAt The Unix timestamp (in seconds) for when the run was started.
 * @param cancelledAt The Unix timestamp (in seconds) for when the run was cancelled.
 * @param failedAt The Unix timestamp (in seconds) for when the run failed.
 * @param completedAt The Unix timestamp (in seconds) for when the run was completed.
 * @param incompleteDetails 
 * @param model The model that the [assistant](/docs/api-reference/assistants) used for this run.
 * @param instructions The instructions that the [assistant](/docs/api-reference/assistants) used for this run.
 * @param tools The list of tools that the [assistant](/docs/api-reference/assistants) used for this run.
 * @param fileIds The list of [File](/docs/api-reference/files) IDs the [assistant](/docs/api-reference/assistants) used for this run.
 * @param metadata Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
 * @param usage 
 * @param maxPromptTokens The maximum number of prompt tokens specified to have been used over the course of the run. 
 * @param maxCompletionTokens The maximum number of completion tokens specified to have been used over the course of the run. 
 * @param truncationStrategy 
 * @param toolChoice 
 * @param responseFormat 
 * @param temperature The sampling temperature used for this run. If not set, defaults to 1.
 */
data class RunObject(
    /* The identifier, which can be referenced in API endpoints. */
    val id: kotlin.String,
    /* The object type, which is always `thread.run`. */
    val `object`: RunObject.`Object`,
    /* The Unix timestamp (in seconds) for when the run was created. */
    val createdAt: kotlin.Int,
    /* The ID of the [thread](/docs/api-reference/threads) that was executed on as a part of this run. */
    val threadId: kotlin.String,
    /* The ID of the [assistant](/docs/api-reference/assistants) used for execution of this run. */
    val assistantId: kotlin.String,
    /* The status of the run, which can be either `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, or `expired`. */
    val status: RunObject.Status,
    val requiredAction: RunObjectRequiredAction,
    val lastError: RunObjectLastError,
    /* The Unix timestamp (in seconds) for when the run will expire. */
    val expiresAt: kotlin.Int,
    /* The Unix timestamp (in seconds) for when the run was started. */
    val startedAt: kotlin.Int,
    /* The Unix timestamp (in seconds) for when the run was cancelled. */
    val cancelledAt: kotlin.Int,
    /* The Unix timestamp (in seconds) for when the run failed. */
    val failedAt: kotlin.Int,
    /* The Unix timestamp (in seconds) for when the run was completed. */
    val completedAt: kotlin.Int,
    val incompleteDetails: RunObjectIncompleteDetails,
    /* The model that the [assistant](/docs/api-reference/assistants) used for this run. */
    val model: kotlin.String,
    /* The instructions that the [assistant](/docs/api-reference/assistants) used for this run. */
    val instructions: kotlin.String,
    /* The list of tools that the [assistant](/docs/api-reference/assistants) used for this run. */
    val tools: kotlin.collections.List<AssistantObjectToolsInner>,
    /* The list of [File](/docs/api-reference/files) IDs the [assistant](/docs/api-reference/assistants) used for this run. */
    val fileIds: kotlin.collections.List<kotlin.String>,
    /* Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.  */
    val metadata: kotlin.Any,
    val usage: RunCompletionUsage,
    /* The maximum number of prompt tokens specified to have been used over the course of the run.  */
    val maxPromptTokens: kotlin.Int,
    /* The maximum number of completion tokens specified to have been used over the course of the run.  */
    val maxCompletionTokens: kotlin.Int,
    val truncationStrategy: TruncationObject,
    val toolChoice: AssistantsApiToolChoiceOption,
    val responseFormat: AssistantsApiResponseFormatOption,
    /* The sampling temperature used for this run. If not set, defaults to 1. */
    val temperature: java.math.BigDecimal? = null
) 
{
    /**
    * The object type, which is always `thread.run`.
    * Values: threadPeriodRun
    */
    enum class `Object`(val value: kotlin.String){
        threadPeriodRun("thread.run");
    }
    /**
    * The status of the run, which can be either `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, or `expired`.
    * Values: queued,in_progress,requires_action,cancelling,cancelled,failed,completed,expired
    */
    enum class Status(val value: kotlin.String){
        queued("queued"),
        in_progress("in_progress"),
        requires_action("requires_action"),
        cancelling("cancelling"),
        cancelled("cancelled"),
        failed("failed"),
        completed("completed"),
        expired("expired");
    }
}

