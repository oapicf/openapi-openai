/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.AssistantObjectToolsInner

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Represents an `assistant` that can call the model and use tools.
 * @param id The identifier, which can be referenced in API endpoints.
 * @param &#x60;object&#x60; The object type, which is always `assistant`.
 * @param createdAt The Unix timestamp (in seconds) for when the assistant was created.
 * @param name The name of the assistant. The maximum length is 256 characters. 
 * @param description The description of the assistant. The maximum length is 512 characters. 
 * @param model ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them. 
 * @param instructions The system instructions that the assistant uses. The maximum length is 256,000 characters. 
 * @param tools A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`. 
 * @param fileIds A list of [file](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order. 
 * @param metadata Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class AssistantObject (
    /* The identifier, which can be referenced in API endpoints. */
    @SerializedName("id") private val _id: kotlin.String?,
    /* The object type, which is always `assistant`. */
    @SerializedName("`object`") private val _`object`: AssistantObject.&#x60;Object&#x60;?,
    /* The Unix timestamp (in seconds) for when the assistant was created. */
    @SerializedName("createdAt") private val _createdAt: kotlin.Int?,
    /* The name of the assistant. The maximum length is 256 characters.  */
    @SerializedName("name") private val _name: kotlin.String?,
    /* The description of the assistant. The maximum length is 512 characters.  */
    @SerializedName("description") private val _description: kotlin.String?,
    /* ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.  */
    @SerializedName("model") private val _model: kotlin.String?,
    /* The system instructions that the assistant uses. The maximum length is 256,000 characters.  */
    @SerializedName("instructions") private val _instructions: kotlin.String?,
    /* A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`.  */
    @SerializedName("tools") private val _tools: kotlin.Array<AssistantObjectToolsInner>?,
    /* A list of [file](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order.  */
    @SerializedName("fileIds") private val _fileIds: kotlin.Array<kotlin.String>?,
    /* Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.  */
    @SerializedName("metadata") private val _metadata: kotlin.Any?
) {

    /**
    * The object type, which is always `assistant`.
    * Values: assistant
    */
    enum class &#x60;Object&#x60;(val value: kotlin.String){
    
        assistant("assistant");
    
    }

        val id get() = _id ?: throw IllegalArgumentException("id is required")
                    
        val `object` get() = _`object` ?: throw IllegalArgumentException("`object` is required")
                    
        val createdAt get() = _createdAt ?: throw IllegalArgumentException("createdAt is required")
                    
        val name get() = _name ?: throw IllegalArgumentException("name is required")
                    
        val description get() = _description ?: throw IllegalArgumentException("description is required")
                    
        val model get() = _model ?: throw IllegalArgumentException("model is required")
                    
        val instructions get() = _instructions ?: throw IllegalArgumentException("instructions is required")
                    
        val tools get() = _tools ?: throw IllegalArgumentException("tools is required")
                    
        val fileIds get() = _fileIds ?: throw IllegalArgumentException("fileIds is required")
                    
        val metadata get() = _metadata ?: throw IllegalArgumentException("metadata is required")
                    
}

