/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model


        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param role The role of the messages author, in this case `tool`.
 * @param content The contents of the tool message.
 * @param toolCallId Tool call that this message is responding to.
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class ChatCompletionRequestToolMessage (
    /* The role of the messages author, in this case `tool`. */
    @SerializedName("role") private val _role: ChatCompletionRequestToolMessage.Role?,
    /* The contents of the tool message. */
    @SerializedName("content") private val _content: kotlin.String?,
    /* Tool call that this message is responding to. */
    @SerializedName("toolCallId") private val _toolCallId: kotlin.String?
) {

    /**
    * The role of the messages author, in this case `tool`.
    * Values: tool
    */
    enum class Role(val value: kotlin.String){
    
        tool("tool");
    
    }

        val role get() = _role ?: throw IllegalArgumentException("role is required")
                    
        val content get() = _content ?: throw IllegalArgumentException("content is required")
                    
        val toolCallId get() = _toolCallId ?: throw IllegalArgumentException("toolCallId is required")
                    
}

