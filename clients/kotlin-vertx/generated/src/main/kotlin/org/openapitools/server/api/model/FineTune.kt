/**
* OpenAI API
* APIs for sampling from and fine-tuning language models
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.FineTuneEvent
import org.openapitools.server.api.model.OpenAIFile

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param id 
 * @param &#x60;object&#x60; 
 * @param createdAt 
 * @param updatedAt 
 * @param model 
 * @param fineTunedModel 
 * @param organizationId 
 * @param status 
 * @param hyperparams 
 * @param trainingFiles 
 * @param validationFiles 
 * @param resultFiles 
 * @param events 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class FineTune (
    @SerializedName("id") private val _id: kotlin.String?,
    @SerializedName("`object`") private val _`object`: kotlin.String?,
    @SerializedName("createdAt") private val _createdAt: kotlin.Int?,
    @SerializedName("updatedAt") private val _updatedAt: kotlin.Int?,
    @SerializedName("model") private val _model: kotlin.String?,
    @SerializedName("fineTunedModel") private val _fineTunedModel: kotlin.String?,
    @SerializedName("organizationId") private val _organizationId: kotlin.String?,
    @SerializedName("status") private val _status: kotlin.String?,
    @SerializedName("hyperparams") private val _hyperparams: kotlin.Any?,
    @SerializedName("trainingFiles") private val _trainingFiles: kotlin.Array<OpenAIFile>?,
    @SerializedName("validationFiles") private val _validationFiles: kotlin.Array<OpenAIFile>?,
    @SerializedName("resultFiles") private val _resultFiles: kotlin.Array<OpenAIFile>?,
    val events: kotlin.Array<FineTuneEvent>? = null
) {

        val id get() = _id ?: throw IllegalArgumentException("id is required")
                    
        val `object` get() = _`object` ?: throw IllegalArgumentException("`object` is required")
                    
        val createdAt get() = _createdAt ?: throw IllegalArgumentException("createdAt is required")
                    
        val updatedAt get() = _updatedAt ?: throw IllegalArgumentException("updatedAt is required")
                    
        val model get() = _model ?: throw IllegalArgumentException("model is required")
                    
        val fineTunedModel get() = _fineTunedModel ?: throw IllegalArgumentException("fineTunedModel is required")
                    
        val organizationId get() = _organizationId ?: throw IllegalArgumentException("organizationId is required")
                    
        val status get() = _status ?: throw IllegalArgumentException("status is required")
                    
        val hyperparams get() = _hyperparams ?: throw IllegalArgumentException("hyperparams is required")
                    
        val trainingFiles get() = _trainingFiles ?: throw IllegalArgumentException("trainingFiles is required")
                    
        val validationFiles get() = _validationFiles ?: throw IllegalArgumentException("validationFiles is required")
                    
        val resultFiles get() = _resultFiles ?: throw IllegalArgumentException("resultFiles is required")
                    
}

