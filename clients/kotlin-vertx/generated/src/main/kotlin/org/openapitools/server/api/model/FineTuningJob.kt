/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.FineTuningJobError
import org.openapitools.server.api.model.FineTuningJobHyperparameters
import org.openapitools.server.api.model.FineTuningJobIntegrationsInner

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * The `fine_tuning.job` object represents a fine-tuning job that has been created through the API. 
 * @param id The object identifier, which can be referenced in the API endpoints.
 * @param createdAt The Unix timestamp (in seconds) for when the fine-tuning job was created.
 * @param error 
 * @param fineTunedModel The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
 * @param finishedAt The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.
 * @param hyperparameters 
 * @param model The base model that is being fine-tuned.
 * @param &#x60;object&#x60; The object type, which is always \"fine_tuning.job\".
 * @param organizationId The organization that owns the fine-tuning job.
 * @param resultFiles The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](/docs/api-reference/files/retrieve-contents).
 * @param status The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.
 * @param trainedTokens The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.
 * @param trainingFile The file ID used for training. You can retrieve the training data with the [Files API](/docs/api-reference/files/retrieve-contents).
 * @param validationFile The file ID used for validation. You can retrieve the validation results with the [Files API](/docs/api-reference/files/retrieve-contents).
 * @param seed The seed used for the fine-tuning job.
 * @param integrations A list of integrations to enable for this fine-tuning job.
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class FineTuningJob (
    /* The object identifier, which can be referenced in the API endpoints. */
    @SerializedName("id") private val _id: kotlin.String?,
    /* The Unix timestamp (in seconds) for when the fine-tuning job was created. */
    @SerializedName("createdAt") private val _createdAt: kotlin.Int?,
    @SerializedName("error") private val _error: FineTuningJobError?,
    /* The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running. */
    @SerializedName("fineTunedModel") private val _fineTunedModel: kotlin.String?,
    /* The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running. */
    @SerializedName("finishedAt") private val _finishedAt: kotlin.Int?,
    @SerializedName("hyperparameters") private val _hyperparameters: FineTuningJobHyperparameters?,
    /* The base model that is being fine-tuned. */
    @SerializedName("model") private val _model: kotlin.String?,
    /* The object type, which is always \"fine_tuning.job\". */
    @SerializedName("`object`") private val _`object`: FineTuningJob.&#x60;Object&#x60;?,
    /* The organization that owns the fine-tuning job. */
    @SerializedName("organizationId") private val _organizationId: kotlin.String?,
    /* The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](/docs/api-reference/files/retrieve-contents). */
    @SerializedName("resultFiles") private val _resultFiles: kotlin.Array<kotlin.String>?,
    /* The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`. */
    @SerializedName("status") private val _status: FineTuningJob.Status?,
    /* The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running. */
    @SerializedName("trainedTokens") private val _trainedTokens: kotlin.Int?,
    /* The file ID used for training. You can retrieve the training data with the [Files API](/docs/api-reference/files/retrieve-contents). */
    @SerializedName("trainingFile") private val _trainingFile: kotlin.String?,
    /* The file ID used for validation. You can retrieve the validation results with the [Files API](/docs/api-reference/files/retrieve-contents). */
    @SerializedName("validationFile") private val _validationFile: kotlin.String?,
    /* The seed used for the fine-tuning job. */
    @SerializedName("seed") private val _seed: kotlin.Int?,
    /* A list of integrations to enable for this fine-tuning job. */
    val integrations: kotlin.Array<FineTuningJobIntegrationsInner>? = null
) {

    /**
    * The object type, which is always \"fine_tuning.job\".
    * Values: fine_tuningPeriodJob
    */
    enum class &#x60;Object&#x60;(val value: kotlin.String){
    
        fine_tuningPeriodJob("fine_tuning.job");
    
    }

    /**
    * The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.
    * Values: validating_files,queued,running,succeeded,failed,cancelled
    */
    enum class Status(val value: kotlin.String){
    
        validating_files("validating_files"),
    
        queued("queued"),
    
        running("running"),
    
        succeeded("succeeded"),
    
        failed("failed"),
    
        cancelled("cancelled");
    
    }

        val id get() = _id ?: throw IllegalArgumentException("id is required")
                    
        val createdAt get() = _createdAt ?: throw IllegalArgumentException("createdAt is required")
                    
        val error get() = _error ?: throw IllegalArgumentException("error is required")
                    
        val fineTunedModel get() = _fineTunedModel ?: throw IllegalArgumentException("fineTunedModel is required")
                    
        val finishedAt get() = _finishedAt ?: throw IllegalArgumentException("finishedAt is required")
                    
        val hyperparameters get() = _hyperparameters ?: throw IllegalArgumentException("hyperparameters is required")
                    
        val model get() = _model ?: throw IllegalArgumentException("model is required")
                    
        val `object` get() = _`object` ?: throw IllegalArgumentException("`object` is required")
                    
        val organizationId get() = _organizationId ?: throw IllegalArgumentException("organizationId is required")
                    
        val resultFiles get() = _resultFiles ?: throw IllegalArgumentException("resultFiles is required")
                    
        val status get() = _status ?: throw IllegalArgumentException("status is required")
                    
        val trainedTokens get() = _trainedTokens ?: throw IllegalArgumentException("trainedTokens is required")
                    
        val trainingFile get() = _trainingFile ?: throw IllegalArgumentException("trainingFile is required")
                    
        val validationFile get() = _validationFile ?: throw IllegalArgumentException("validationFile is required")
                    
        val seed get() = _seed ?: throw IllegalArgumentException("seed is required")
                    
}

