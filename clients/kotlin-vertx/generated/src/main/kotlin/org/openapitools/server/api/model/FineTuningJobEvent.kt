/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model


        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Fine-tuning job event object
 * @param id 
 * @param createdAt 
 * @param level 
 * @param message 
 * @param &#x60;object&#x60; 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class FineTuningJobEvent (
    @SerializedName("id") private val _id: kotlin.String?,
    @SerializedName("createdAt") private val _createdAt: kotlin.Int?,
    @SerializedName("level") private val _level: FineTuningJobEvent.Level?,
    @SerializedName("message") private val _message: kotlin.String?,
    @SerializedName("`object`") private val _`object`: FineTuningJobEvent.&#x60;Object&#x60;?
) {

    /**
    * 
    * Values: info,warn,error
    */
    enum class Level(val value: kotlin.String){
    
        info("info"),
    
        warn("warn"),
    
        error("error");
    
    }

    /**
    * 
    * Values: fine_tuningPeriodJobPeriodEvent
    */
    enum class &#x60;Object&#x60;(val value: kotlin.String){
    
        fine_tuningPeriodJobPeriodEvent("fine_tuning.job.event");
    
    }

        val id get() = _id ?: throw IllegalArgumentException("id is required")
                    
        val createdAt get() = _createdAt ?: throw IllegalArgumentException("createdAt is required")
                    
        val level get() = _level ?: throw IllegalArgumentException("level is required")
                    
        val message get() = _message ?: throw IllegalArgumentException("message is required")
                    
        val `object` get() = _`object` ?: throw IllegalArgumentException("`object` is required")
                    
}

