/**
* OpenAI API
* APIs for sampling from and fine-tuning language models
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model


        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param id 
 * @param &#x60;object&#x60; 
 * @param bytes 
 * @param createdAt 
 * @param filename 
 * @param purpose 
 * @param status 
 * @param statusDetails 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class OpenAIFile (
    @SerializedName("id") private val _id: kotlin.String?,
    @SerializedName("`object`") private val _`object`: kotlin.String?,
    @SerializedName("bytes") private val _bytes: kotlin.Int?,
    @SerializedName("createdAt") private val _createdAt: kotlin.Int?,
    @SerializedName("filename") private val _filename: kotlin.String?,
    @SerializedName("purpose") private val _purpose: kotlin.String?,
    val status: kotlin.String? = null,
    val statusDetails: kotlin.Any? = null
) {

        val id get() = _id ?: throw IllegalArgumentException("id is required")
                    
        val `object` get() = _`object` ?: throw IllegalArgumentException("`object` is required")
                    
        val bytes get() = _bytes ?: throw IllegalArgumentException("bytes is required")
                    
        val createdAt get() = _createdAt ?: throw IllegalArgumentException("createdAt is required")
                    
        val filename get() = _filename ?: throw IllegalArgumentException("filename is required")
                    
        val purpose get() = _purpose ?: throw IllegalArgumentException("purpose is required")
                    
}

