/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.RunStepDetailsToolCallsCodeOutputImageObject
import org.openapitools.server.api.model.RunStepDetailsToolCallsCodeOutputImageObjectImage
import org.openapitools.server.api.model.RunStepDetailsToolCallsCodeOutputLogsObject

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param type Always `logs`.
 * @param logs The text output from the Code Interpreter tool call.
 * @param image 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class RunStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner (
    /* Always `logs`. */
    @SerializedName("type") private val _type: RunStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner.Type?,
    /* The text output from the Code Interpreter tool call. */
    @SerializedName("logs") private val _logs: kotlin.String?,
    @SerializedName("image") private val _image: RunStepDetailsToolCallsCodeOutputImageObjectImage?
) {

    /**
    * Always `logs`.
    * Values: logs,image
    */
    enum class Type(val value: kotlin.String){
    
        logs("logs"),
    
        image("image");
    
    }

        val type get() = _type ?: throw IllegalArgumentException("type is required")
                    
        val logs get() = _logs ?: throw IllegalArgumentException("logs is required")
                    
        val image get() = _image ?: throw IllegalArgumentException("image is required")
                    
}

