/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.RunStepCompletionUsage
import org.openapitools.server.api.model.RunStepObjectLastError
import org.openapitools.server.api.model.RunStepObjectStepDetails

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Represents a step in execution of a run. 
 * @param id The identifier of the run step, which can be referenced in API endpoints.
 * @param &#x60;object&#x60; The object type, which is always `thread.run.step`.
 * @param createdAt The Unix timestamp (in seconds) for when the run step was created.
 * @param assistantId The ID of the [assistant](/docs/api-reference/assistants) associated with the run step.
 * @param threadId The ID of the [thread](/docs/api-reference/threads) that was run.
 * @param runId The ID of the [run](/docs/api-reference/runs) that this run step is a part of.
 * @param type The type of run step, which can be either `message_creation` or `tool_calls`.
 * @param status The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.
 * @param stepDetails 
 * @param lastError 
 * @param expiredAt The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.
 * @param cancelledAt The Unix timestamp (in seconds) for when the run step was cancelled.
 * @param failedAt The Unix timestamp (in seconds) for when the run step failed.
 * @param completedAt The Unix timestamp (in seconds) for when the run step completed.
 * @param metadata Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
 * @param usage 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class RunStepObject (
    /* The identifier of the run step, which can be referenced in API endpoints. */
    @SerializedName("id") private val _id: kotlin.String?,
    /* The object type, which is always `thread.run.step`. */
    @SerializedName("`object`") private val _`object`: RunStepObject.&#x60;Object&#x60;?,
    /* The Unix timestamp (in seconds) for when the run step was created. */
    @SerializedName("createdAt") private val _createdAt: kotlin.Int?,
    /* The ID of the [assistant](/docs/api-reference/assistants) associated with the run step. */
    @SerializedName("assistantId") private val _assistantId: kotlin.String?,
    /* The ID of the [thread](/docs/api-reference/threads) that was run. */
    @SerializedName("threadId") private val _threadId: kotlin.String?,
    /* The ID of the [run](/docs/api-reference/runs) that this run step is a part of. */
    @SerializedName("runId") private val _runId: kotlin.String?,
    /* The type of run step, which can be either `message_creation` or `tool_calls`. */
    @SerializedName("type") private val _type: RunStepObject.Type?,
    /* The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`. */
    @SerializedName("status") private val _status: RunStepObject.Status?,
    @SerializedName("stepDetails") private val _stepDetails: RunStepObjectStepDetails?,
    @SerializedName("lastError") private val _lastError: RunStepObjectLastError?,
    /* The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired. */
    @SerializedName("expiredAt") private val _expiredAt: kotlin.Int?,
    /* The Unix timestamp (in seconds) for when the run step was cancelled. */
    @SerializedName("cancelledAt") private val _cancelledAt: kotlin.Int?,
    /* The Unix timestamp (in seconds) for when the run step failed. */
    @SerializedName("failedAt") private val _failedAt: kotlin.Int?,
    /* The Unix timestamp (in seconds) for when the run step completed. */
    @SerializedName("completedAt") private val _completedAt: kotlin.Int?,
    /* Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.  */
    @SerializedName("metadata") private val _metadata: kotlin.Any?,
    @SerializedName("usage") private val _usage: RunStepCompletionUsage?
) {

    /**
    * The object type, which is always `thread.run.step`.
    * Values: threadPeriodRunPeriodStep
    */
    enum class &#x60;Object&#x60;(val value: kotlin.String){
    
        threadPeriodRunPeriodStep("thread.run.step");
    
    }

    /**
    * The type of run step, which can be either `message_creation` or `tool_calls`.
    * Values: message_creation,tool_calls
    */
    enum class Type(val value: kotlin.String){
    
        message_creation("message_creation"),
    
        tool_calls("tool_calls");
    
    }

    /**
    * The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.
    * Values: in_progress,cancelled,failed,completed,expired
    */
    enum class Status(val value: kotlin.String){
    
        in_progress("in_progress"),
    
        cancelled("cancelled"),
    
        failed("failed"),
    
        completed("completed"),
    
        expired("expired");
    
    }

        val id get() = _id ?: throw IllegalArgumentException("id is required")
                    
        val `object` get() = _`object` ?: throw IllegalArgumentException("`object` is required")
                    
        val createdAt get() = _createdAt ?: throw IllegalArgumentException("createdAt is required")
                    
        val assistantId get() = _assistantId ?: throw IllegalArgumentException("assistantId is required")
                    
        val threadId get() = _threadId ?: throw IllegalArgumentException("threadId is required")
                    
        val runId get() = _runId ?: throw IllegalArgumentException("runId is required")
                    
        val type get() = _type ?: throw IllegalArgumentException("type is required")
                    
        val status get() = _status ?: throw IllegalArgumentException("status is required")
                    
        val stepDetails get() = _stepDetails ?: throw IllegalArgumentException("stepDetails is required")
                    
        val lastError get() = _lastError ?: throw IllegalArgumentException("lastError is required")
                    
        val expiredAt get() = _expiredAt ?: throw IllegalArgumentException("expiredAt is required")
                    
        val cancelledAt get() = _cancelledAt ?: throw IllegalArgumentException("cancelledAt is required")
                    
        val failedAt get() = _failedAt ?: throw IllegalArgumentException("failedAt is required")
                    
        val completedAt get() = _completedAt ?: throw IllegalArgumentException("completedAt is required")
                    
        val metadata get() = _metadata ?: throw IllegalArgumentException("metadata is required")
                    
        val usage get() = _usage ?: throw IllegalArgumentException("usage is required")
                    
}

