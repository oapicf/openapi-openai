/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model


        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Represents a thread that contains [messages](/docs/api-reference/messages).
 * @param id The identifier, which can be referenced in API endpoints.
 * @param &#x60;object&#x60; The object type, which is always `thread`.
 * @param createdAt The Unix timestamp (in seconds) for when the thread was created.
 * @param metadata Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class ThreadObject (
    /* The identifier, which can be referenced in API endpoints. */
    @SerializedName("id") private val _id: kotlin.String?,
    /* The object type, which is always `thread`. */
    @SerializedName("`object`") private val _`object`: ThreadObject.&#x60;Object&#x60;?,
    /* The Unix timestamp (in seconds) for when the thread was created. */
    @SerializedName("createdAt") private val _createdAt: kotlin.Int?,
    /* Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.  */
    @SerializedName("metadata") private val _metadata: kotlin.Any?
) {

    /**
    * The object type, which is always `thread`.
    * Values: thread
    */
    enum class &#x60;Object&#x60;(val value: kotlin.String){
    
        thread("thread");
    
    }

        val id get() = _id ?: throw IllegalArgumentException("id is required")
                    
        val `object` get() = _`object` ?: throw IllegalArgumentException("`object` is required")
                    
        val createdAt get() = _createdAt ?: throw IllegalArgumentException("createdAt is required")
                    
        val metadata get() = _metadata ?: throw IllegalArgumentException("metadata is required")
                    
}

