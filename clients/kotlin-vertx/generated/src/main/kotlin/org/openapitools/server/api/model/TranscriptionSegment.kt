/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model


        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param id Unique identifier of the segment.
 * @param seek Seek offset of the segment.
 * @param start Start time of the segment in seconds.
 * @param end End time of the segment in seconds.
 * @param text Text content of the segment.
 * @param tokens Array of token IDs for the text content.
 * @param temperature Temperature parameter used for generating the segment.
 * @param avgLogprob Average logprob of the segment. If the value is lower than -1, consider the logprobs failed.
 * @param compressionRatio Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed.
 * @param noSpeechProb Probability of no speech in the segment. If the value is higher than 1.0 and the `avg_logprob` is below -1, consider this segment silent.
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class TranscriptionSegment (
    /* Unique identifier of the segment. */
    @SerializedName("id") private val _id: kotlin.Int?,
    /* Seek offset of the segment. */
    @SerializedName("seek") private val _seek: kotlin.Int?,
    /* Start time of the segment in seconds. */
    @SerializedName("start") private val _start: kotlin.Float?,
    /* End time of the segment in seconds. */
    @SerializedName("end") private val _end: kotlin.Float?,
    /* Text content of the segment. */
    @SerializedName("text") private val _text: kotlin.String?,
    /* Array of token IDs for the text content. */
    @SerializedName("tokens") private val _tokens: kotlin.Array<kotlin.Int>?,
    /* Temperature parameter used for generating the segment. */
    @SerializedName("temperature") private val _temperature: kotlin.Float?,
    /* Average logprob of the segment. If the value is lower than -1, consider the logprobs failed. */
    @SerializedName("avgLogprob") private val _avgLogprob: kotlin.Float?,
    /* Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed. */
    @SerializedName("compressionRatio") private val _compressionRatio: kotlin.Float?,
    /* Probability of no speech in the segment. If the value is higher than 1.0 and the `avg_logprob` is below -1, consider this segment silent. */
    @SerializedName("noSpeechProb") private val _noSpeechProb: kotlin.Float?
) {

        val id get() = _id ?: throw IllegalArgumentException("id is required")
                    
        val seek get() = _seek ?: throw IllegalArgumentException("seek is required")
                    
        val start get() = _start ?: throw IllegalArgumentException("start is required")
                    
        val end get() = _end ?: throw IllegalArgumentException("end is required")
                    
        val text get() = _text ?: throw IllegalArgumentException("text is required")
                    
        val tokens get() = _tokens ?: throw IllegalArgumentException("tokens is required")
                    
        val temperature get() = _temperature ?: throw IllegalArgumentException("temperature is required")
                    
        val avgLogprob get() = _avgLogprob ?: throw IllegalArgumentException("avgLogprob is required")
                    
        val compressionRatio get() = _compressionRatio ?: throw IllegalArgumentException("compressionRatio is required")
                    
        val noSpeechProb get() = _noSpeechProb ?: throw IllegalArgumentException("noSpeechProb is required")
                    
}

