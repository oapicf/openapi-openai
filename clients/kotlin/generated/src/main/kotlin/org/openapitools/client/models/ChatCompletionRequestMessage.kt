/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ChatCompletionRequestMessageFunctionCall

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param role The role of the messages author. One of `system`, `user`, `assistant`, or `function`.
 * @param content The contents of the message. `content` is required for all messages except assistant messages with function calls.
 * @param name The name of the author of this message. `name` is required if role is `function`, and it should be the name of the function whose response is in the `content`. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of 64 characters.
 * @param functionCall 
 */


data class ChatCompletionRequestMessage (

    /* The role of the messages author. One of `system`, `user`, `assistant`, or `function`. */
    @Json(name = "role")
    val role: ChatCompletionRequestMessage.Role,

    /* The contents of the message. `content` is required for all messages except assistant messages with function calls. */
    @Json(name = "content")
    val content: kotlin.String? = null,

    /* The name of the author of this message. `name` is required if role is `function`, and it should be the name of the function whose response is in the `content`. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of 64 characters. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "function_call")
    val functionCall: ChatCompletionRequestMessageFunctionCall? = null

) {

    /**
     * The role of the messages author. One of `system`, `user`, `assistant`, or `function`.
     *
     * Values: system,user,assistant,function
     */
    @JsonClass(generateAdapter = false)
    enum class Role(val value: kotlin.String) {
        @Json(name = "system") system("system"),
        @Json(name = "user") user("user"),
        @Json(name = "assistant") assistant("assistant"),
        @Json(name = "function") function("function");
    }
}

