/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.MessageObjectContentInner
import org.openapitools.client.models.MessageObjectIncompleteDetails

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Represents a message within a [thread](/docs/api-reference/threads).
 *
 * @param id The identifier, which can be referenced in API endpoints.
 * @param `object` The object type, which is always `thread.message`.
 * @param createdAt The Unix timestamp (in seconds) for when the message was created.
 * @param threadId The [thread](/docs/api-reference/threads) ID that this message belongs to.
 * @param status The status of the message, which can be either `in_progress`, `incomplete`, or `completed`.
 * @param incompleteDetails 
 * @param completedAt The Unix timestamp (in seconds) for when the message was completed.
 * @param incompleteAt The Unix timestamp (in seconds) for when the message was marked as incomplete.
 * @param role The entity that produced the message. One of `user` or `assistant`.
 * @param content The content of the message in array of text and/or images.
 * @param assistantId If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message.
 * @param runId The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is `null` when messages are created manually using the create message or create thread endpoints.
 * @param fileIds A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
 * @param metadata Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
 */


data class MessageObject (

    /* The identifier, which can be referenced in API endpoints. */
    @Json(name = "id")
    val id: kotlin.String,

    /* The object type, which is always `thread.message`. */
    @Json(name = "object")
    val `object`: MessageObject.`Object`,

    /* The Unix timestamp (in seconds) for when the message was created. */
    @Json(name = "created_at")
    val createdAt: kotlin.Int,

    /* The [thread](/docs/api-reference/threads) ID that this message belongs to. */
    @Json(name = "thread_id")
    val threadId: kotlin.String,

    /* The status of the message, which can be either `in_progress`, `incomplete`, or `completed`. */
    @Json(name = "status")
    val status: MessageObject.Status,

    @Json(name = "incomplete_details")
    val incompleteDetails: MessageObjectIncompleteDetails?,

    /* The Unix timestamp (in seconds) for when the message was completed. */
    @Json(name = "completed_at")
    val completedAt: kotlin.Int?,

    /* The Unix timestamp (in seconds) for when the message was marked as incomplete. */
    @Json(name = "incomplete_at")
    val incompleteAt: kotlin.Int?,

    /* The entity that produced the message. One of `user` or `assistant`. */
    @Json(name = "role")
    val role: MessageObject.Role,

    /* The content of the message in array of text and/or images. */
    @Json(name = "content")
    val content: kotlin.collections.List<MessageObjectContentInner>,

    /* If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message. */
    @Json(name = "assistant_id")
    val assistantId: kotlin.String?,

    /* The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is `null` when messages are created manually using the create message or create thread endpoints. */
    @Json(name = "run_id")
    val runId: kotlin.String?,

    /* A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message. */
    @Json(name = "file_ids")
    val fileIds: kotlin.collections.List<kotlin.String> = arrayListOf(),

    /* Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.  */
    @Json(name = "metadata")
    val metadata: kotlin.Any?

) {

    /**
     * The object type, which is always `thread.message`.
     *
     * Values: threadPeriodMessage
     */
    @JsonClass(generateAdapter = false)
    enum class `Object`(val value: kotlin.String) {
        @Json(name = "thread.message") threadPeriodMessage("thread.message");
    }
    /**
     * The status of the message, which can be either `in_progress`, `incomplete`, or `completed`.
     *
     * Values: in_progress,incomplete,completed
     */
    @JsonClass(generateAdapter = false)
    enum class Status(val value: kotlin.String) {
        @Json(name = "in_progress") in_progress("in_progress"),
        @Json(name = "incomplete") incomplete("incomplete"),
        @Json(name = "completed") completed("completed");
    }
    /**
     * The entity that produced the message. One of `user` or `assistant`.
     *
     * Values: user,assistant
     */
    @JsonClass(generateAdapter = false)
    enum class Role(val value: kotlin.String) {
        @Json(name = "user") user("user"),
        @Json(name = "assistant") assistant("assistant");
    }
}

