/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.FilesApi
import org.openapitools.client.models.DeleteFileResponse
import org.openapitools.client.models.ListFilesResponse
import org.openapitools.client.models.OpenAIFile

class FilesApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of FilesApi
        //val apiInstance = FilesApi()

        // to test createFile
        should("test createFile") {
            // uncomment below to test createFile
            //val file : java.io.File = BINARY_DATA_HERE // java.io.File | The File object (not file name) to be uploaded. 
            //val purpose : kotlin.String = purpose_example // kotlin.String | The intended purpose of the uploaded file.  Use \\\"fine-tune\\\" for [Fine-tuning](/docs/api-reference/fine-tuning) and \\\"assistants\\\" for [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages). This allows us to validate the format of the uploaded file is correct for fine-tuning. 
            //val result : OpenAIFile = apiInstance.createFile(file, purpose)
            //result shouldBe ("TODO")
        }

        // to test deleteFile
        should("test deleteFile") {
            // uncomment below to test deleteFile
            //val fileId : kotlin.String = fileId_example // kotlin.String | The ID of the file to use for this request.
            //val result : DeleteFileResponse = apiInstance.deleteFile(fileId)
            //result shouldBe ("TODO")
        }

        // to test downloadFile
        should("test downloadFile") {
            // uncomment below to test downloadFile
            //val fileId : kotlin.String = fileId_example // kotlin.String | The ID of the file to use for this request.
            //val result : kotlin.String = apiInstance.downloadFile(fileId)
            //result shouldBe ("TODO")
        }

        // to test listFiles
        should("test listFiles") {
            // uncomment below to test listFiles
            //val purpose : kotlin.String = purpose_example // kotlin.String | Only return files with the given purpose.
            //val result : ListFilesResponse = apiInstance.listFiles(purpose)
            //result shouldBe ("TODO")
        }

        // to test retrieveFile
        should("test retrieveFile") {
            // uncomment below to test retrieveFile
            //val fileId : kotlin.String = fileId_example // kotlin.String | The ID of the file to use for this request.
            //val result : OpenAIFile = apiInstance.retrieveFile(fileId)
            //result shouldBe ("TODO")
        }

    }
}
