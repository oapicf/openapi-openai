/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.FineTuningJob
import org.openapitools.client.models.FineTuningJobError
import org.openapitools.client.models.FineTuningJobHyperparameters
import org.openapitools.client.models.FineTuningJobIntegrationsInner

class FineTuningJobTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of FineTuningJob
        //val modelInstance = FineTuningJob()

        // to test the property `id` - The object identifier, which can be referenced in the API endpoints.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `createdAt` - The Unix timestamp (in seconds) for when the fine-tuning job was created.
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `error`
        should("test error") {
            // uncomment below to test the property
            //modelInstance.error shouldBe ("TODO")
        }

        // to test the property `fineTunedModel` - The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
        should("test fineTunedModel") {
            // uncomment below to test the property
            //modelInstance.fineTunedModel shouldBe ("TODO")
        }

        // to test the property `finishedAt` - The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.
        should("test finishedAt") {
            // uncomment below to test the property
            //modelInstance.finishedAt shouldBe ("TODO")
        }

        // to test the property `hyperparameters`
        should("test hyperparameters") {
            // uncomment below to test the property
            //modelInstance.hyperparameters shouldBe ("TODO")
        }

        // to test the property `model` - The base model that is being fine-tuned.
        should("test model") {
            // uncomment below to test the property
            //modelInstance.model shouldBe ("TODO")
        }

        // to test the property ``object`` - The object type, which is always \"fine_tuning.job\".
        should("test `object`") {
            // uncomment below to test the property
            //modelInstance.`object` shouldBe ("TODO")
        }

        // to test the property `organizationId` - The organization that owns the fine-tuning job.
        should("test organizationId") {
            // uncomment below to test the property
            //modelInstance.organizationId shouldBe ("TODO")
        }

        // to test the property `resultFiles` - The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](/docs/api-reference/files/retrieve-contents).
        should("test resultFiles") {
            // uncomment below to test the property
            //modelInstance.resultFiles shouldBe ("TODO")
        }

        // to test the property `status` - The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `trainedTokens` - The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.
        should("test trainedTokens") {
            // uncomment below to test the property
            //modelInstance.trainedTokens shouldBe ("TODO")
        }

        // to test the property `trainingFile` - The file ID used for training. You can retrieve the training data with the [Files API](/docs/api-reference/files/retrieve-contents).
        should("test trainingFile") {
            // uncomment below to test the property
            //modelInstance.trainingFile shouldBe ("TODO")
        }

        // to test the property `validationFile` - The file ID used for validation. You can retrieve the validation results with the [Files API](/docs/api-reference/files/retrieve-contents).
        should("test validationFile") {
            // uncomment below to test the property
            //modelInstance.validationFile shouldBe ("TODO")
        }

        // to test the property `seed` - The seed used for the fine-tuning job.
        should("test seed") {
            // uncomment below to test the property
            //modelInstance.seed shouldBe ("TODO")
        }

        // to test the property `integrations` - A list of integrations to enable for this fine-tuning job.
        should("test integrations") {
            // uncomment below to test the property
            //modelInstance.integrations shouldBe ("TODO")
        }

    }
}
