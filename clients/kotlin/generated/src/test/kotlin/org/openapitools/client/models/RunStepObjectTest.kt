/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.RunStepObject
import org.openapitools.client.models.RunStepCompletionUsage
import org.openapitools.client.models.RunStepObjectLastError
import org.openapitools.client.models.RunStepObjectStepDetails

class RunStepObjectTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of RunStepObject
        //val modelInstance = RunStepObject()

        // to test the property `id` - The identifier of the run step, which can be referenced in API endpoints.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property ``object`` - The object type, which is always `thread.run.step`.
        should("test `object`") {
            // uncomment below to test the property
            //modelInstance.`object` shouldBe ("TODO")
        }

        // to test the property `createdAt` - The Unix timestamp (in seconds) for when the run step was created.
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `assistantId` - The ID of the [assistant](/docs/api-reference/assistants) associated with the run step.
        should("test assistantId") {
            // uncomment below to test the property
            //modelInstance.assistantId shouldBe ("TODO")
        }

        // to test the property `threadId` - The ID of the [thread](/docs/api-reference/threads) that was run.
        should("test threadId") {
            // uncomment below to test the property
            //modelInstance.threadId shouldBe ("TODO")
        }

        // to test the property `runId` - The ID of the [run](/docs/api-reference/runs) that this run step is a part of.
        should("test runId") {
            // uncomment below to test the property
            //modelInstance.runId shouldBe ("TODO")
        }

        // to test the property `type` - The type of run step, which can be either `message_creation` or `tool_calls`.
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `status` - The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `stepDetails`
        should("test stepDetails") {
            // uncomment below to test the property
            //modelInstance.stepDetails shouldBe ("TODO")
        }

        // to test the property `lastError`
        should("test lastError") {
            // uncomment below to test the property
            //modelInstance.lastError shouldBe ("TODO")
        }

        // to test the property `expiredAt` - The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.
        should("test expiredAt") {
            // uncomment below to test the property
            //modelInstance.expiredAt shouldBe ("TODO")
        }

        // to test the property `cancelledAt` - The Unix timestamp (in seconds) for when the run step was cancelled.
        should("test cancelledAt") {
            // uncomment below to test the property
            //modelInstance.cancelledAt shouldBe ("TODO")
        }

        // to test the property `failedAt` - The Unix timestamp (in seconds) for when the run step failed.
        should("test failedAt") {
            // uncomment below to test the property
            //modelInstance.failedAt shouldBe ("TODO")
        }

        // to test the property `completedAt` - The Unix timestamp (in seconds) for when the run step completed.
        should("test completedAt") {
            // uncomment below to test the property
            //modelInstance.completedAt shouldBe ("TODO")
        }

        // to test the property `metadata` - Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
        should("test metadata") {
            // uncomment below to test the property
            //modelInstance.metadata shouldBe ("TODO")
        }

        // to test the property `usage`
        should("test usage") {
            // uncomment below to test the property
            //modelInstance.usage shouldBe ("TODO")
        }

    }
}
