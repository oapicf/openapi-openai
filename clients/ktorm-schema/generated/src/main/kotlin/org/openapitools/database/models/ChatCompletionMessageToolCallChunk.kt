/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param index 
 * @param id The ID of the tool call.
 * @param type The type of the tool. Currently, only `function` is supported.
 * @param function 
 */
object ChatCompletionMessageToolCallChunks : BaseTable<ChatCompletionMessageToolCallChunk>("ChatCompletionMessageToolCallChunk") {
    val index = int("index")
    val id = text("id") /* null */ /* The ID of the tool call. */
    val type = text("type").transform({ ChatCompletionMessageToolCallChunk.Type.valueOf(it ?: "function") }, { it.value }) /* null */ /* The type of the tool. Currently, only `function` is supported. */

    val function = long("function") /* null */

    /**
     * Create an entity of type ChatCompletionMessageToolCallChunk from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ChatCompletionMessageToolCallChunk(
        index = row[index] ?: 0 /* kotlin.Int */,
        id = row[id]  /* kotlin.String? */ /* The ID of the tool call. */,
        type = row[type]  /* kotlin.String? */ /* The type of the tool. Currently, only `function` is supported. */,
        function = ChatCompletionMessageToolCallChunkFunctions.createEntity(row, withReferences) /* ChatCompletionMessageToolCallChunkFunction? */
    )

    /**
    * Assign all the columns from the entity of type ChatCompletionMessageToolCallChunk to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ChatCompletionMessageToolCallChunk()
    * database.update(ChatCompletionMessageToolCallChunks, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ChatCompletionMessageToolCallChunk) {
        this.apply {
            set(ChatCompletionMessageToolCallChunks.index, entity.index)
            set(ChatCompletionMessageToolCallChunks.id, entity.id)
            set(ChatCompletionMessageToolCallChunks.type, entity.type)
            set(ChatCompletionMessageToolCallChunks.function, entity.function)
        }
    }

}


