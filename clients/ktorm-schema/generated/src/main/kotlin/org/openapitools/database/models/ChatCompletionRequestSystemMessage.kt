/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param content The contents of the system message.
 * @param role The role of the messages author, in this case `system`.
 * @param name An optional name for the participant. Provides the model information to differentiate between participants of the same role.
 */
object ChatCompletionRequestSystemMessages : BaseTable<ChatCompletionRequestSystemMessage>("ChatCompletionRequestSystemMessage") {
    val content = text("content") /* The contents of the system message. */
    val role = text("role").transform({ ChatCompletionRequestSystemMessage.Role.valueOf(it) }, { it.value }) /* The role of the messages author, in this case `system`. */
    val name = text("name") /* null */ /* An optional name for the participant. Provides the model information to differentiate between participants of the same role. */

    /**
     * Create an entity of type ChatCompletionRequestSystemMessage from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ChatCompletionRequestSystemMessage(
        content = row[content] ?: "" /* kotlin.String */ /* The contents of the system message. */,
        role = row[role] ?: ChatCompletionRequestSystemMessage.Role.valueOf("") /* kotlin.String */ /* The role of the messages author, in this case `system`. */,
        name = row[name]  /* kotlin.String? */ /* An optional name for the participant. Provides the model information to differentiate between participants of the same role. */
    )

    /**
    * Assign all the columns from the entity of type ChatCompletionRequestSystemMessage to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ChatCompletionRequestSystemMessage()
    * database.update(ChatCompletionRequestSystemMessages, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ChatCompletionRequestSystemMessage) {
        this.apply {
            set(ChatCompletionRequestSystemMessages.content, entity.content)
            set(ChatCompletionRequestSystemMessages.role, entity.role)
            set(ChatCompletionRequestSystemMessages.name, entity.name)
        }
    }

}


