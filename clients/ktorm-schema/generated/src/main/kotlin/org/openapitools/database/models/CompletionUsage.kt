/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Usage statistics for the completion request.
 * @param completionTokens Number of tokens in the generated completion.
 * @param promptTokens Number of tokens in the prompt.
 * @param totalTokens Total number of tokens used in the request (prompt + completion).
 */
object CompletionUsages : BaseTable<CompletionUsage>("CompletionUsage") {
    val completionTokens = int("completion_tokens") /* Number of tokens in the generated completion. */
    val promptTokens = int("prompt_tokens") /* Number of tokens in the prompt. */
    val totalTokens = int("total_tokens") /* Total number of tokens used in the request (prompt + completion). */

    /**
     * Create an entity of type CompletionUsage from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CompletionUsage(
        completionTokens = row[completionTokens] ?: 0 /* kotlin.Int */ /* Number of tokens in the generated completion. */,
        promptTokens = row[promptTokens] ?: 0 /* kotlin.Int */ /* Number of tokens in the prompt. */,
        totalTokens = row[totalTokens] ?: 0 /* kotlin.Int */ /* Total number of tokens used in the request (prompt + completion). */
    )

    /**
    * Assign all the columns from the entity of type CompletionUsage to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CompletionUsage()
    * database.update(CompletionUsages, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CompletionUsage) {
        this.apply {
            set(CompletionUsages.completionTokens, entity.completionTokens)
            set(CompletionUsages.promptTokens, entity.promptTokens)
            set(CompletionUsages.totalTokens, entity.totalTokens)
        }
    }

}


