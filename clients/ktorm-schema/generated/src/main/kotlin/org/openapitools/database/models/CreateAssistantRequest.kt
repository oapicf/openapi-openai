/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param model 
 * @param name The name of the assistant. The maximum length is 256 characters. 
 * @param description The description of the assistant. The maximum length is 512 characters. 
 * @param instructions The system instructions that the assistant uses. The maximum length is 256,000 characters. 
 * @param tools A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`. 
 * @param fileIds A list of [file](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order. 
 * @param metadata Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
 */
object CreateAssistantRequests : BaseTable<CreateAssistantRequest>("CreateAssistantRequest") {
    val model = long("model")
    val name = text("name") /* null */ /* The name of the assistant. The maximum length is 256 characters.  */
    val description = text("description") /* null */ /* The description of the assistant. The maximum length is 512 characters.  */
    val instructions = text("instructions") /* null */ /* The system instructions that the assistant uses. The maximum length is 256,000 characters.  */
    val metadata = blob("metadata") /* null */ /* Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.  */

    /**
     * Create an entity of type CreateAssistantRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CreateAssistantRequest(
        model = CreateAssistantRequestModels.createEntity(row, withReferences) /* CreateAssistantRequestModel */,
        name = row[name]  /* kotlin.String? */ /* The name of the assistant. The maximum length is 256 characters.  */,
        description = row[description]  /* kotlin.String? */ /* The description of the assistant. The maximum length is 512 characters.  */,
        instructions = row[instructions]  /* kotlin.String? */ /* The system instructions that the assistant uses. The maximum length is 256,000 characters.  */,
        tools = emptyList() /* kotlin.Array<AssistantObjectToolsInner>? */ /* A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`.  */,
        fileIds = emptyList() /* kotlin.Array<kotlin.String>? */ /* A list of [file](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order.  */,
        metadata = row[metadata]  /* kotlin.Any? */ /* Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.  */
    )

    /**
    * Assign all the columns from the entity of type CreateAssistantRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CreateAssistantRequest()
    * database.update(CreateAssistantRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CreateAssistantRequest) {
        this.apply {
            set(CreateAssistantRequests.model, entity.model)
            set(CreateAssistantRequests.name, entity.name)
            set(CreateAssistantRequests.description, entity.description)
            set(CreateAssistantRequests.instructions, entity.instructions)
            set(CreateAssistantRequests.metadata, entity.metadata)
        }
    }

}


object CreateAssistantRequestAssistantObjectToolsInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("CreateAssistantRequestAssistantObjectToolsInner") {
    val createAssistantRequest = long("createAssistantRequest")
    val assistantObjectToolsInner = long("assistantObjectToolsInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[createAssistantRequest] ?: 0, row[assistantObjectToolsInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(CreateAssistantRequestAssistantObjectToolsInner.createAssistantRequest, entity.first)
            set(CreateAssistantRequestAssistantObjectToolsInner.assistantObjectToolsInner, entity.second)
        }
    }

}

object CreateAssistantRequestFileIds : BaseTable<Pair<kotlin.Long, kotlin.String>>("CreateAssistantRequestFileIds") {
    val createAssistantRequest = long("createAssistantRequest")
    val fileIds = text("fileIds")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[createAssistantRequest] ?: 0, row[fileIds] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(CreateAssistantRequestFileIds.createAssistantRequest, entity.first)
            set(CreateAssistantRequestFileIds.fileIds, entity.second)
        }
    }

}

