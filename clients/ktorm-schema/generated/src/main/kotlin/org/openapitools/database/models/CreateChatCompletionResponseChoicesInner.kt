/**
* OpenAI API
* APIs for sampling from and fine-tuning language models
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param index 
 * @param message 
 * @param finishReason 
 */
object CreateChatCompletionResponseChoicesInners : BaseTable<CreateChatCompletionResponseChoicesInner>("CreateChatCompletionResponse_choices_inner") {
    val index = int("index") /* null */
    val message = long("message") /* null */
    val finishReason = text("finish_reason").transform({ CreateChatCompletionResponseChoicesInner.FinishReason.valueOf(it ?: "stop") }, { it.value }) /* null */


    /**
     * Create an entity of type CreateChatCompletionResponseChoicesInner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CreateChatCompletionResponseChoicesInner(
        index = row[index]  /* kotlin.Int? */,
        message = ChatCompletionResponseMessages.createEntity(row, withReferences) /* ChatCompletionResponseMessage? */,
        finishReason = row[finishReason]  /* kotlin.String? */
    )

    /**
    * Assign all the columns from the entity of type CreateChatCompletionResponseChoicesInner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CreateChatCompletionResponseChoicesInner()
    * database.update(CreateChatCompletionResponseChoicesInners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CreateChatCompletionResponseChoicesInner) {
        this.apply {
            set(CreateChatCompletionResponseChoicesInners.index, entity.index)
            set(CreateChatCompletionResponseChoicesInners.message, entity.message)
            set(CreateChatCompletionResponseChoicesInners.finishReason, entity.finishReason)
        }
    }

}


