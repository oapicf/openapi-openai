/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Log probability information for the choice.
 * @param content A list of message content tokens with log probability information.
 */
object CreateChatCompletionResponseChoicesInnerLogprobss : BaseTable<CreateChatCompletionResponseChoicesInnerLogprobs>("CreateChatCompletionResponse_choices_inner_logprobs") {

    /**
     * Create an entity of type CreateChatCompletionResponseChoicesInnerLogprobs from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CreateChatCompletionResponseChoicesInnerLogprobs(
        content = emptyList() /* kotlin.Array<ChatCompletionTokenLogprob> */ /* A list of message content tokens with log probability information. */
    )

    /**
    * Assign all the columns from the entity of type CreateChatCompletionResponseChoicesInnerLogprobs to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CreateChatCompletionResponseChoicesInnerLogprobs()
    * database.update(CreateChatCompletionResponseChoicesInnerLogprobss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CreateChatCompletionResponseChoicesInnerLogprobs) {
        this.apply {
        }
    }

}


object CreateChatCompletionResponseChoicesInnerLogprobsChatCompletionTokenLogprob : BaseTable<Pair<kotlin.Long, kotlin.Long>>("CreateChatCompletionResponseChoicesInnerLogprobsChatCompletionTokenLogprob") {
    val createChatCompletionResponseChoicesInnerLogprobs = long("createChatCompletionResponseChoicesInnerLogprobs")
    val chatCompletionTokenLogprob = long("chatCompletionTokenLogprob")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[createChatCompletionResponseChoicesInnerLogprobs] ?: 0, row[chatCompletionTokenLogprob] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(CreateChatCompletionResponseChoicesInnerLogprobsChatCompletionTokenLogprob.createChatCompletionResponseChoicesInnerLogprobs, entity.first)
            set(CreateChatCompletionResponseChoicesInnerLogprobsChatCompletionTokenLogprob.chatCompletionTokenLogprob, entity.second)
        }
    }

}

