/**
* OpenAI API
* APIs for sampling from and fine-tuning language models
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param index 
 * @param delta 
 * @param finishReason 
 */
object CreateChatCompletionStreamResponseChoicesInners : BaseTable<CreateChatCompletionStreamResponseChoicesInner>("CreateChatCompletionStreamResponse_choices_inner") {
    val index = int("index") /* null */
    val delta = long("delta") /* null */
    val finishReason = text("finish_reason").transform({ CreateChatCompletionStreamResponseChoicesInner.FinishReason.valueOf(it ?: "stop") }, { it.value }) /* null */


    /**
     * Create an entity of type CreateChatCompletionStreamResponseChoicesInner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CreateChatCompletionStreamResponseChoicesInner(
        index = row[index]  /* kotlin.Int? */,
        delta = ChatCompletionStreamResponseDeltas.createEntity(row, withReferences) /* ChatCompletionStreamResponseDelta? */,
        finishReason = row[finishReason]  /* kotlin.String? */
    )

    /**
    * Assign all the columns from the entity of type CreateChatCompletionStreamResponseChoicesInner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CreateChatCompletionStreamResponseChoicesInner()
    * database.update(CreateChatCompletionStreamResponseChoicesInners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CreateChatCompletionStreamResponseChoicesInner) {
        this.apply {
            set(CreateChatCompletionStreamResponseChoicesInners.index, entity.index)
            set(CreateChatCompletionStreamResponseChoicesInners.delta, entity.delta)
            set(CreateChatCompletionStreamResponseChoicesInners.finishReason, entity.finishReason)
        }
    }

}


