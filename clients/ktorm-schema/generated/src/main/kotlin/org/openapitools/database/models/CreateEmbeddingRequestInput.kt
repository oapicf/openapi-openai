/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array of token arrays. The input must not exceed the max input tokens for the model (8192 tokens for `text-embedding-ada-002`), cannot be an empty string, and any array must be 2048 dimensions or less. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens. 
 */
object CreateEmbeddingRequestInputs : BaseTable<CreateEmbeddingRequestInput>("CreateEmbeddingRequest_input") {

    /**
     * Create an entity of type CreateEmbeddingRequestInput from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CreateEmbeddingRequestInput(
    )

    /**
    * Assign all the columns from the entity of type CreateEmbeddingRequestInput to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CreateEmbeddingRequestInput()
    * database.update(CreateEmbeddingRequestInputs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CreateEmbeddingRequestInput) {
        this.apply {
        }
    }

}


