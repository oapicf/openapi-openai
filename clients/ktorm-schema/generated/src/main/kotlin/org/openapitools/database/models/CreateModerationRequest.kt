/**
* OpenAI API
* APIs for sampling from and fine-tuning language models
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param input 
 * @param model 
 */
object CreateModerationRequests : BaseTable<CreateModerationRequest>("CreateModerationRequest") {
    val input = long("input")
    val model = long("model") /* null */

    /**
     * Create an entity of type CreateModerationRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CreateModerationRequest(
        input = CreateModerationRequestInputs.createEntity(row, withReferences) /* CreateModerationRequestInput */,
        model = CreateModerationRequestModels.createEntity(row, withReferences) /* CreateModerationRequestModel? */
    )

    /**
    * Assign all the columns from the entity of type CreateModerationRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CreateModerationRequest()
    * database.update(CreateModerationRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CreateModerationRequest) {
        this.apply {
            set(CreateModerationRequests.input, entity.input)
            set(CreateModerationRequests.model, entity.model)
        }
    }

}


