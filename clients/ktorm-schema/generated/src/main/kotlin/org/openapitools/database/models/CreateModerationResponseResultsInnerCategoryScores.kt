/**
* OpenAI API
* APIs for sampling from and fine-tuning language models
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param hate 
 * @param hateThreatening 
 * @param selfHarm 
 * @param sexual 
 * @param sexualMinors 
 * @param violence 
 * @param violenceGraphic 
 */
object CreateModerationResponseResultsInnerCategoryScoress : BaseTable<CreateModerationResponseResultsInnerCategoryScores>("CreateModerationResponse_results_inner_category_scores") {
    val hate = decimal("hate")
    val hateThreatening = decimal("hatethreatening")
    val selfHarm = decimal("selfharm")
    val sexual = decimal("sexual")
    val sexualMinors = decimal("sexualminors")
    val violence = decimal("violence")
    val violenceGraphic = decimal("violencegraphic")

    /**
     * Create an entity of type CreateModerationResponseResultsInnerCategoryScores from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CreateModerationResponseResultsInnerCategoryScores(
        hate = row[hate] ?: 0 /* java.math.BigDecimal */,
        hateThreatening = row[hateThreatening] ?: 0 /* java.math.BigDecimal */,
        selfHarm = row[selfHarm] ?: 0 /* java.math.BigDecimal */,
        sexual = row[sexual] ?: 0 /* java.math.BigDecimal */,
        sexualMinors = row[sexualMinors] ?: 0 /* java.math.BigDecimal */,
        violence = row[violence] ?: 0 /* java.math.BigDecimal */,
        violenceGraphic = row[violenceGraphic] ?: 0 /* java.math.BigDecimal */
    )

    /**
    * Assign all the columns from the entity of type CreateModerationResponseResultsInnerCategoryScores to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CreateModerationResponseResultsInnerCategoryScores()
    * database.update(CreateModerationResponseResultsInnerCategoryScoress, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CreateModerationResponseResultsInnerCategoryScores) {
        this.apply {
            set(CreateModerationResponseResultsInnerCategoryScoress.hate, entity.hate)
            set(CreateModerationResponseResultsInnerCategoryScoress.hateThreatening, entity.hateThreatening)
            set(CreateModerationResponseResultsInnerCategoryScoress.selfHarm, entity.selfHarm)
            set(CreateModerationResponseResultsInnerCategoryScoress.sexual, entity.sexual)
            set(CreateModerationResponseResultsInnerCategoryScoress.sexualMinors, entity.sexualMinors)
            set(CreateModerationResponseResultsInnerCategoryScoress.violence, entity.violence)
            set(CreateModerationResponseResultsInnerCategoryScoress.violenceGraphic, entity.violenceGraphic)
        }
    }

}


