/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Metrics at the step number during the fine-tuning job.
 * @param step 
 * @param trainLoss 
 * @param trainMeanTokenAccuracy 
 * @param validLoss 
 * @param validMeanTokenAccuracy 
 * @param fullValidLoss 
 * @param fullValidMeanTokenAccuracy 
 */
object FineTuningJobCheckpointMetricss : BaseTable<FineTuningJobCheckpointMetrics>("FineTuningJobCheckpoint_metrics") {
    val step = decimal("step") /* null */
    val trainLoss = decimal("train_loss") /* null */
    val trainMeanTokenAccuracy = decimal("train_mean_token_accuracy") /* null */
    val validLoss = decimal("valid_loss") /* null */
    val validMeanTokenAccuracy = decimal("valid_mean_token_accuracy") /* null */
    val fullValidLoss = decimal("full_valid_loss") /* null */
    val fullValidMeanTokenAccuracy = decimal("full_valid_mean_token_accuracy") /* null */

    /**
     * Create an entity of type FineTuningJobCheckpointMetrics from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = FineTuningJobCheckpointMetrics(
        step = row[step]  /* java.math.BigDecimal? */,
        trainLoss = row[trainLoss]  /* java.math.BigDecimal? */,
        trainMeanTokenAccuracy = row[trainMeanTokenAccuracy]  /* java.math.BigDecimal? */,
        validLoss = row[validLoss]  /* java.math.BigDecimal? */,
        validMeanTokenAccuracy = row[validMeanTokenAccuracy]  /* java.math.BigDecimal? */,
        fullValidLoss = row[fullValidLoss]  /* java.math.BigDecimal? */,
        fullValidMeanTokenAccuracy = row[fullValidMeanTokenAccuracy]  /* java.math.BigDecimal? */
    )

    /**
    * Assign all the columns from the entity of type FineTuningJobCheckpointMetrics to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = FineTuningJobCheckpointMetrics()
    * database.update(FineTuningJobCheckpointMetricss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: FineTuningJobCheckpointMetrics) {
        this.apply {
            set(FineTuningJobCheckpointMetricss.step, entity.step)
            set(FineTuningJobCheckpointMetricss.trainLoss, entity.trainLoss)
            set(FineTuningJobCheckpointMetricss.trainMeanTokenAccuracy, entity.trainMeanTokenAccuracy)
            set(FineTuningJobCheckpointMetricss.validLoss, entity.validLoss)
            set(FineTuningJobCheckpointMetricss.validMeanTokenAccuracy, entity.validMeanTokenAccuracy)
            set(FineTuningJobCheckpointMetricss.fullValidLoss, entity.fullValidLoss)
            set(FineTuningJobCheckpointMetricss.fullValidMeanTokenAccuracy, entity.fullValidMeanTokenAccuracy)
        }
    }

}


