/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param object 
 * @param data 
 * @param firstId 
 * @param lastId 
 * @param hasMore 
 */
object ListAssistantsResponses : BaseTable<ListAssistantsResponse>("ListAssistantsResponse") {
    val object = text("object")
    val firstId = text("first_id")
    val lastId = text("last_id")
    val hasMore = boolean("has_more")

    /**
     * Create an entity of type ListAssistantsResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ListAssistantsResponse(
        object = row[object] ?: "" /* kotlin.String */,
        data = emptyList() /* kotlin.Array<AssistantObject> */,
        firstId = row[firstId] ?: "" /* kotlin.String */,
        lastId = row[lastId] ?: "" /* kotlin.String */,
        hasMore = row[hasMore] ?: false /* kotlin.Boolean */
    )

    /**
    * Assign all the columns from the entity of type ListAssistantsResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ListAssistantsResponse()
    * database.update(ListAssistantsResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ListAssistantsResponse) {
        this.apply {
            set(ListAssistantsResponses.object, entity.object)
            set(ListAssistantsResponses.firstId, entity.firstId)
            set(ListAssistantsResponses.lastId, entity.lastId)
            set(ListAssistantsResponses.hasMore, entity.hasMore)
        }
    }

}


object ListAssistantsResponseAssistantObject : BaseTable<Pair<kotlin.Long, kotlin.Long>>("ListAssistantsResponseAssistantObject") {
    val listAssistantsResponse = long("listAssistantsResponse")
    val assistantObject = long("assistantObject")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[listAssistantsResponse] ?: 0, row[assistantObject] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(ListAssistantsResponseAssistantObject.listAssistantsResponse, entity.first)
            set(ListAssistantsResponseAssistantObject.assistantObject, entity.second)
        }
    }

}

