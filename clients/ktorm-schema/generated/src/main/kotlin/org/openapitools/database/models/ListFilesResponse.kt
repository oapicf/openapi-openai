/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param data 
 * @param object 
 */
object ListFilesResponses : BaseTable<ListFilesResponse>("ListFilesResponse") {
    val object = text("object").transform({ ListFilesResponse.Object.valueOf(it) }, { it.value })

    /**
     * Create an entity of type ListFilesResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ListFilesResponse(
        data = emptyList() /* kotlin.Array<OpenAIFile> */,
        object = row[object] ?: ListFilesResponse.Object.valueOf("") /* kotlin.String */
    )

    /**
    * Assign all the columns from the entity of type ListFilesResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ListFilesResponse()
    * database.update(ListFilesResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ListFilesResponse) {
        this.apply {
            set(ListFilesResponses.object, entity.object)
        }
    }

}


object ListFilesResponseOpenAIFile : BaseTable<Pair<kotlin.Long, kotlin.Long>>("ListFilesResponseOpenAIFile") {
    val listFilesResponse = long("listFilesResponse")
    val openAIFile = long("openAIFile")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[listFilesResponse] ?: 0, row[openAIFile] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(ListFilesResponseOpenAIFile.listFilesResponse, entity.first)
            set(ListFilesResponseOpenAIFile.openAIFile, entity.second)
        }
    }

}

