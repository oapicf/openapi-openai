/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param data 
 * @param object 
 * @param hasMore 
 * @param firstId 
 * @param lastId 
 */
object ListFineTuningJobCheckpointsResponses : BaseTable<ListFineTuningJobCheckpointsResponse>("ListFineTuningJobCheckpointsResponse") {
    val object = text("object").transform({ ListFineTuningJobCheckpointsResponse.Object.valueOf(it) }, { it.value })
    val hasMore = boolean("has_more")
    val firstId = text("first_id") /* null */
    val lastId = text("last_id") /* null */

    /**
     * Create an entity of type ListFineTuningJobCheckpointsResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ListFineTuningJobCheckpointsResponse(
        data = emptyList() /* kotlin.Array<FineTuningJobCheckpoint> */,
        object = row[object] ?: ListFineTuningJobCheckpointsResponse.Object.valueOf("") /* kotlin.String */,
        hasMore = row[hasMore] ?: false /* kotlin.Boolean */,
        firstId = row[firstId]  /* kotlin.String? */,
        lastId = row[lastId]  /* kotlin.String? */
    )

    /**
    * Assign all the columns from the entity of type ListFineTuningJobCheckpointsResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ListFineTuningJobCheckpointsResponse()
    * database.update(ListFineTuningJobCheckpointsResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ListFineTuningJobCheckpointsResponse) {
        this.apply {
            set(ListFineTuningJobCheckpointsResponses.object, entity.object)
            set(ListFineTuningJobCheckpointsResponses.hasMore, entity.hasMore)
            set(ListFineTuningJobCheckpointsResponses.firstId, entity.firstId)
            set(ListFineTuningJobCheckpointsResponses.lastId, entity.lastId)
        }
    }

}


object ListFineTuningJobCheckpointsResponseFineTuningJobCheckpoint : BaseTable<Pair<kotlin.Long, kotlin.Long>>("ListFineTuningJobCheckpointsResponseFineTuningJobCheckpoint") {
    val listFineTuningJobCheckpointsResponse = long("listFineTuningJobCheckpointsResponse")
    val fineTuningJobCheckpoint = long("fineTuningJobCheckpoint")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[listFineTuningJobCheckpointsResponse] ?: 0, row[fineTuningJobCheckpoint] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(ListFineTuningJobCheckpointsResponseFineTuningJobCheckpoint.listFineTuningJobCheckpointsResponse, entity.first)
            set(ListFineTuningJobCheckpointsResponseFineTuningJobCheckpoint.fineTuningJobCheckpoint, entity.second)
        }
    }

}

