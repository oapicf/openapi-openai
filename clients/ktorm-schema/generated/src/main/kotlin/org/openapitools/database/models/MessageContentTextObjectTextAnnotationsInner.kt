/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param type Always `file_citation`.
 * @param text The text in the message content that needs to be replaced.
 * @param fileCitation 
 * @param startIndex 
 * @param endIndex 
 * @param filePath 
 */
object MessageContentTextObjectTextAnnotationsInners : BaseTable<MessageContentTextObjectTextAnnotationsInner>("MessageContentTextObject_text_annotations_inner") {
    val type = text("type").transform({ MessageContentTextObjectTextAnnotationsInner.Type.valueOf(it) }, { it.value }) /* Always `file_citation`. */
    val text = text("text") /* The text in the message content that needs to be replaced. */
    val fileCitation = long("file_citation")
    val startIndex = int("start_index")
    val endIndex = int("end_index")
    val filePath = long("file_path")

    /**
     * Create an entity of type MessageContentTextObjectTextAnnotationsInner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = MessageContentTextObjectTextAnnotationsInner(
        type = row[type] ?: MessageContentTextObjectTextAnnotationsInner.Type.valueOf("") /* kotlin.String */ /* Always `file_citation`. */,
        text = row[text] ?: "" /* kotlin.String */ /* The text in the message content that needs to be replaced. */,
        fileCitation = MessageContentTextAnnotationsFileCitationObjectFileCitations.createEntity(row, withReferences) /* MessageContentTextAnnotationsFileCitationObjectFileCitation */,
        startIndex = row[startIndex] ?: 0 /* kotlin.Int */,
        endIndex = row[endIndex] ?: 0 /* kotlin.Int */,
        filePath = MessageContentTextAnnotationsFilePathObjectFilePaths.createEntity(row, withReferences) /* MessageContentTextAnnotationsFilePathObjectFilePath */
    )

    /**
    * Assign all the columns from the entity of type MessageContentTextObjectTextAnnotationsInner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = MessageContentTextObjectTextAnnotationsInner()
    * database.update(MessageContentTextObjectTextAnnotationsInners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: MessageContentTextObjectTextAnnotationsInner) {
        this.apply {
            set(MessageContentTextObjectTextAnnotationsInners.type, entity.type)
            set(MessageContentTextObjectTextAnnotationsInners.text, entity.text)
            set(MessageContentTextObjectTextAnnotationsInners.fileCitation, entity.fileCitation)
            set(MessageContentTextObjectTextAnnotationsInners.startIndex, entity.startIndex)
            set(MessageContentTextObjectTextAnnotationsInners.endIndex, entity.endIndex)
            set(MessageContentTextObjectTextAnnotationsInners.filePath, entity.filePath)
        }
    }

}


