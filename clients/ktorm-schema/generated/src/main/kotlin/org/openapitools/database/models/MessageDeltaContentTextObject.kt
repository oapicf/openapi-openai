/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * The text content that is part of a message.
 * @param index The index of the content part in the message.
 * @param type Always `text`.
 * @param text 
 */
object MessageDeltaContentTextObjects : BaseTable<MessageDeltaContentTextObject>("MessageDeltaContentTextObject") {
    val index = int("index") /* The index of the content part in the message. */
    val type = text("type").transform({ MessageDeltaContentTextObject.Type.valueOf(it) }, { it.value }) /* Always `text`. */
    val text = long("text") /* null */

    /**
     * Create an entity of type MessageDeltaContentTextObject from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = MessageDeltaContentTextObject(
        index = row[index] ?: 0 /* kotlin.Int */ /* The index of the content part in the message. */,
        type = row[type] ?: MessageDeltaContentTextObject.Type.valueOf("") /* kotlin.String */ /* Always `text`. */,
        text = MessageDeltaContentTextObjectTexts.createEntity(row, withReferences) /* MessageDeltaContentTextObjectText? */
    )

    /**
    * Assign all the columns from the entity of type MessageDeltaContentTextObject to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = MessageDeltaContentTextObject()
    * database.update(MessageDeltaContentTextObjects, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: MessageDeltaContentTextObject) {
        this.apply {
            set(MessageDeltaContentTextObjects.index, entity.index)
            set(MessageDeltaContentTextObjects.type, entity.type)
            set(MessageDeltaContentTextObjects.text, entity.text)
        }
    }

}


