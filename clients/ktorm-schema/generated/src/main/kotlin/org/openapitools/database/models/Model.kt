/**
* OpenAI API
* APIs for sampling from and fine-tuning language models
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param id 
 * @param object 
 * @param created 
 * @param ownedBy 
 */
object Models : BaseTable<Model>("Model") {
    val id = text("id")
    val object = text("object")
    val created = int("created")
    val ownedBy = text("owned_by")

    /**
     * Create an entity of type Model from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = Model(
        id = row[id] ?: "" /* kotlin.String */,
        object = row[object] ?: "" /* kotlin.String */,
        created = row[created] ?: 0 /* kotlin.Int */,
        ownedBy = row[ownedBy] ?: "" /* kotlin.String */
    )

    /**
    * Assign all the columns from the entity of type Model to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = Model()
    * database.update(Models, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: Model) {
        this.apply {
            set(Models.id, entity.id)
            set(Models.object, entity.object)
            set(Models.created, entity.created)
            set(Models.ownedBy, entity.ownedBy)
        }
    }

}


