/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param index The index of the output in the outputs array.
 * @param type Always `image`.
 * @param image 
 */
object RunStepDeltaStepDetailsToolCallsCodeOutputImageObjects : BaseTable<RunStepDeltaStepDetailsToolCallsCodeOutputImageObject>("RunStepDeltaStepDetailsToolCallsCodeOutputImageObject") {
    val index = int("index") /* The index of the output in the outputs array. */
    val type = text("type").transform({ RunStepDeltaStepDetailsToolCallsCodeOutputImageObject.Type.valueOf(it) }, { it.value }) /* Always `image`. */
    val image = long("image") /* null */

    /**
     * Create an entity of type RunStepDeltaStepDetailsToolCallsCodeOutputImageObject from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = RunStepDeltaStepDetailsToolCallsCodeOutputImageObject(
        index = row[index] ?: 0 /* kotlin.Int */ /* The index of the output in the outputs array. */,
        type = row[type] ?: RunStepDeltaStepDetailsToolCallsCodeOutputImageObject.Type.valueOf("") /* kotlin.String */ /* Always `image`. */,
        image = RunStepDeltaStepDetailsToolCallsCodeOutputImageObjectImages.createEntity(row, withReferences) /* RunStepDeltaStepDetailsToolCallsCodeOutputImageObjectImage? */
    )

    /**
    * Assign all the columns from the entity of type RunStepDeltaStepDetailsToolCallsCodeOutputImageObject to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = RunStepDeltaStepDetailsToolCallsCodeOutputImageObject()
    * database.update(RunStepDeltaStepDetailsToolCallsCodeOutputImageObjects, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: RunStepDeltaStepDetailsToolCallsCodeOutputImageObject) {
        this.apply {
            set(RunStepDeltaStepDetailsToolCallsCodeOutputImageObjects.index, entity.index)
            set(RunStepDeltaStepDetailsToolCallsCodeOutputImageObjects.type, entity.type)
            set(RunStepDeltaStepDetailsToolCallsCodeOutputImageObjects.image, entity.image)
        }
    }

}


