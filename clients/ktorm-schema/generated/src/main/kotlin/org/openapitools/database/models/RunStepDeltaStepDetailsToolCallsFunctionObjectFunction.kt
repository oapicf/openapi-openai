/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * The definition of the function that was called.
 * @param name The name of the function.
 * @param arguments The arguments passed to the function.
 * @param output The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet.
 */
object RunStepDeltaStepDetailsToolCallsFunctionObjectFunctions : BaseTable<RunStepDeltaStepDetailsToolCallsFunctionObjectFunction>("RunStepDeltaStepDetailsToolCallsFunctionObject_function") {
    val name = text("name") /* null */ /* The name of the function. */
    val arguments = text("arguments") /* null */ /* The arguments passed to the function. */
    val output = text("output") /* null */ /* The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet. */

    /**
     * Create an entity of type RunStepDeltaStepDetailsToolCallsFunctionObjectFunction from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = RunStepDeltaStepDetailsToolCallsFunctionObjectFunction(
        name = row[name]  /* kotlin.String? */ /* The name of the function. */,
        arguments = row[arguments]  /* kotlin.String? */ /* The arguments passed to the function. */,
        output = row[output]  /* kotlin.String? */ /* The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet. */
    )

    /**
    * Assign all the columns from the entity of type RunStepDeltaStepDetailsToolCallsFunctionObjectFunction to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = RunStepDeltaStepDetailsToolCallsFunctionObjectFunction()
    * database.update(RunStepDeltaStepDetailsToolCallsFunctionObjectFunctions, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: RunStepDeltaStepDetailsToolCallsFunctionObjectFunction) {
        this.apply {
            set(RunStepDeltaStepDetailsToolCallsFunctionObjectFunctions.name, entity.name)
            set(RunStepDeltaStepDetailsToolCallsFunctionObjectFunctions.arguments, entity.arguments)
            set(RunStepDeltaStepDetailsToolCallsFunctionObjectFunctions.output, entity.output)
        }
    }

}


