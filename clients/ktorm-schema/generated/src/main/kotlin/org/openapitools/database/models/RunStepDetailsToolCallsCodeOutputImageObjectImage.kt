/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param fileId The [file](/docs/api-reference/files) ID of the image.
 */
object RunStepDetailsToolCallsCodeOutputImageObjectImages : BaseTable<RunStepDetailsToolCallsCodeOutputImageObjectImage>("RunStepDetailsToolCallsCodeOutputImageObject_image") {
    val fileId = text("file_id") /* The [file](/docs/api-reference/files) ID of the image. */

    /**
     * Create an entity of type RunStepDetailsToolCallsCodeOutputImageObjectImage from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = RunStepDetailsToolCallsCodeOutputImageObjectImage(
        fileId = row[fileId] ?: "" /* kotlin.String */ /* The [file](/docs/api-reference/files) ID of the image. */
    )

    /**
    * Assign all the columns from the entity of type RunStepDetailsToolCallsCodeOutputImageObjectImage to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = RunStepDetailsToolCallsCodeOutputImageObjectImage()
    * database.update(RunStepDetailsToolCallsCodeOutputImageObjectImages, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: RunStepDetailsToolCallsCodeOutputImageObjectImage) {
        this.apply {
            set(RunStepDetailsToolCallsCodeOutputImageObjectImages.fileId, entity.fileId)
        }
    }

}


