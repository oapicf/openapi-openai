/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Details of the tool call.
 * @param type Always `tool_calls`.
 * @param toolCalls An array of tool calls the run step was involved in. These can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`. 
 */
object RunStepDetailsToolCallsObjects : BaseTable<RunStepDetailsToolCallsObject>("RunStepDetailsToolCallsObject") {
    val type = text("type").transform({ RunStepDetailsToolCallsObject.Type.valueOf(it) }, { it.value }) /* Always `tool_calls`. */

    /**
     * Create an entity of type RunStepDetailsToolCallsObject from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = RunStepDetailsToolCallsObject(
        type = row[type] ?: RunStepDetailsToolCallsObject.Type.valueOf("") /* kotlin.String */ /* Always `tool_calls`. */,
        toolCalls = emptyList() /* kotlin.Array<RunStepDetailsToolCallsObjectToolCallsInner> */ /* An array of tool calls the run step was involved in. These can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.  */
    )

    /**
    * Assign all the columns from the entity of type RunStepDetailsToolCallsObject to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = RunStepDetailsToolCallsObject()
    * database.update(RunStepDetailsToolCallsObjects, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: RunStepDetailsToolCallsObject) {
        this.apply {
            set(RunStepDetailsToolCallsObjects.type, entity.type)
        }
    }

}


object RunStepDetailsToolCallsObjectRunStepDetailsToolCallsObjectToolCallsInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("RunStepDetailsToolCallsObjectRunStepDetailsToolCallsObjectToolCallsInner") {
    val runStepDetailsToolCallsObject = long("runStepDetailsToolCallsObject")
    val runStepDetailsToolCallsObjectToolCallsInner = long("runStepDetailsToolCallsObjectToolCallsInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[runStepDetailsToolCallsObject] ?: 0, row[runStepDetailsToolCallsObjectToolCallsInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(RunStepDetailsToolCallsObjectRunStepDetailsToolCallsObjectToolCallsInner.runStepDetailsToolCallsObject, entity.first)
            set(RunStepDetailsToolCallsObjectRunStepDetailsToolCallsObjectToolCallsInner.runStepDetailsToolCallsObjectToolCallsInner, entity.second)
        }
    }

}

