/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param id The ID of the tool call object.
 * @param type The type of tool call. This is always going to be `retrieval` for this type of tool call.
 * @param retrieval For now, this is always going to be an empty object.
 */
object RunStepDetailsToolCallsRetrievalObjects : BaseTable<RunStepDetailsToolCallsRetrievalObject>("RunStepDetailsToolCallsRetrievalObject") {
    val id = text("id") /* The ID of the tool call object. */
    val type = text("type").transform({ RunStepDetailsToolCallsRetrievalObject.Type.valueOf(it) }, { it.value }) /* The type of tool call. This is always going to be `retrieval` for this type of tool call. */
    val retrieval = blob("retrieval") /* For now, this is always going to be an empty object. */

    /**
     * Create an entity of type RunStepDetailsToolCallsRetrievalObject from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = RunStepDetailsToolCallsRetrievalObject(
        id = row[id] ?: "" /* kotlin.String */ /* The ID of the tool call object. */,
        type = row[type] ?: RunStepDetailsToolCallsRetrievalObject.Type.valueOf("") /* kotlin.String */ /* The type of tool call. This is always going to be `retrieval` for this type of tool call. */,
        retrieval = row[retrieval] /* kotlin.Any */ /* For now, this is always going to be an empty object. */
    )

    /**
    * Assign all the columns from the entity of type RunStepDetailsToolCallsRetrievalObject to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = RunStepDetailsToolCallsRetrievalObject()
    * database.update(RunStepDetailsToolCallsRetrievalObjects, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: RunStepDetailsToolCallsRetrievalObject) {
        this.apply {
            set(RunStepDetailsToolCallsRetrievalObjects.id, entity.id)
            set(RunStepDetailsToolCallsRetrievalObjects.type, entity.type)
            set(RunStepDetailsToolCallsRetrievalObjects.retrieval, entity.retrieval)
        }
    }

}


