/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param word The text content of the word.
 * @param start Start time of the word in seconds.
 * @param end End time of the word in seconds.
 */
object TranscriptionWords : BaseTable<TranscriptionWord>("TranscriptionWord") {
    val word = text("word") /* The text content of the word. */
    val start = float("start") /* Start time of the word in seconds. */
    val end = float("end") /* End time of the word in seconds. */

    /**
     * Create an entity of type TranscriptionWord from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = TranscriptionWord(
        word = row[word] ?: "" /* kotlin.String */ /* The text content of the word. */,
        start = row[start] ?: 0 /* kotlin.Float */ /* Start time of the word in seconds. */,
        end = row[end] ?: 0 /* kotlin.Float */ /* End time of the word in seconds. */
    )

    /**
    * Assign all the columns from the entity of type TranscriptionWord to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = TranscriptionWord()
    * database.update(TranscriptionWords, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: TranscriptionWord) {
        this.apply {
            set(TranscriptionWords.word, entity.word)
            set(TranscriptionWords.start, entity.start)
            set(TranscriptionWords.end, entity.end)
        }
    }

}


