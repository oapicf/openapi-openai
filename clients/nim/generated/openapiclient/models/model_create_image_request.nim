#
# OpenAI API
# 
# APIs for sampling from and fine-tuning language models
# The version of the OpenAPI document: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by: https://openapi-generator.tech
#

import json
import tables


type Size* {.pure.} = enum
  `256x256`
  `512x512`
  `1024x1024`

type ResponseFormat* {.pure.} = enum
  Url
  B64Json

type CreateImageRequest* = object
  ## 
  prompt*: string ## A text description of the desired image(s). The maximum length is 1000 characters.
  n*: int ## The number of images to generate. Must be between 1 and 10.
  size*: Size ## The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
  responseFormat*: ResponseFormat ## The format in which the generated images are returned. Must be one of `url` or `b64_json`.
  user*: string ## A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 

func `%`*(v: Size): JsonNode =
  let str = case v:
    of Size.`256x256`: "256x256"
    of Size.`512x512`: "512x512"
    of Size.`1024x1024`: "1024x1024"

  JsonNode(kind: JString, str: str)

func `$`*(v: Size): string =
  result = case v:
    of Size.`256x256`: "256x256"
    of Size.`512x512`: "512x512"
    of Size.`1024x1024`: "1024x1024"

func `%`*(v: ResponseFormat): JsonNode =
  let str = case v:
    of ResponseFormat.Url: "url"
    of ResponseFormat.B64Json: "b64_json"

  JsonNode(kind: JString, str: str)

func `$`*(v: ResponseFormat): string =
  result = case v:
    of ResponseFormat.Url: "url"
    of ResponseFormat.B64Json: "b64_json"
