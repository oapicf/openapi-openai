#
# OpenAI API
# 
# The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
# The version of the OpenAPI document: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by: https://openapi-generator.tech
#

import json
import tables

import model_message_object_content_inner
import model_message_object_incomplete_details
import model_object

type `Object`* {.pure.} = enum
  ThreadMessage

type Status* {.pure.} = enum
  InProgress
  Incomplete
  Completed

type Role* {.pure.} = enum
  User
  Assistant

type MessageObject* = object
  ## Represents a message within a [thread](/docs/api-reference/threads).
  id*: string ## The identifier, which can be referenced in API endpoints.
  `object`*: `Object` ## The object type, which is always `thread.message`.
  createdAt*: int ## The Unix timestamp (in seconds) for when the message was created.
  threadId*: string ## The [thread](/docs/api-reference/threads) ID that this message belongs to.
  status*: Status ## The status of the message, which can be either `in_progress`, `incomplete`, or `completed`.
  incompleteDetails*: MessageObject_incomplete_details
  completedAt*: int ## The Unix timestamp (in seconds) for when the message was completed.
  incompleteAt*: int ## The Unix timestamp (in seconds) for when the message was marked as incomplete.
  role*: Role ## The entity that produced the message. One of `user` or `assistant`.
  content*: seq[MessageObject_content_inner] ## The content of the message in array of text and/or images.
  assistantId*: string ## If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message.
  runId*: string ## The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is `null` when messages are created manually using the create message or create thread endpoints.
  fileIds*: seq[string] ## A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
  metadata*: object ## Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 

func `%`*(v: `Object`): JsonNode =
  let str = case v:
    of `Object`.ThreadMessage: "thread.message"

  JsonNode(kind: JString, str: str)

func `$`*(v: `Object`): string =
  result = case v:
    of `Object`.ThreadMessage: "thread.message"

func `%`*(v: Status): JsonNode =
  let str = case v:
    of Status.InProgress: "in_progress"
    of Status.Incomplete: "incomplete"
    of Status.Completed: "completed"

  JsonNode(kind: JString, str: str)

func `$`*(v: Status): string =
  result = case v:
    of Status.InProgress: "in_progress"
    of Status.Incomplete: "incomplete"
    of Status.Completed: "completed"

func `%`*(v: Role): JsonNode =
  let str = case v:
    of Role.User: "user"
    of Role.Assistant: "assistant"

  JsonNode(kind: JString, str: str)

func `$`*(v: Role): string =
  result = case v:
    of Role.User: "user"
    of Role.Assistant: "assistant"
