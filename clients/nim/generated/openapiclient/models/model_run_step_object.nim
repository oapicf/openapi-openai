#
# OpenAI API
# 
# The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
# The version of the OpenAPI document: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by: https://openapi-generator.tech
#

import json
import tables

import model_object
import model_run_step_completion_usage
import model_run_step_object_last_error
import model_run_step_object_step_details

type `Object`* {.pure.} = enum
  ThreadRunStep

type `Type`* {.pure.} = enum
  MessageCreation
  ToolCalls

type Status* {.pure.} = enum
  InProgress
  Cancelled
  Failed
  Completed
  Expired

type RunStepObject* = object
  ## Represents a step in execution of a run. 
  id*: string ## The identifier of the run step, which can be referenced in API endpoints.
  `object`*: `Object` ## The object type, which is always `thread.run.step`.
  createdAt*: int ## The Unix timestamp (in seconds) for when the run step was created.
  assistantId*: string ## The ID of the [assistant](/docs/api-reference/assistants) associated with the run step.
  threadId*: string ## The ID of the [thread](/docs/api-reference/threads) that was run.
  runId*: string ## The ID of the [run](/docs/api-reference/runs) that this run step is a part of.
  `type`*: `Type` ## The type of run step, which can be either `message_creation` or `tool_calls`.
  status*: Status ## The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.
  stepDetails*: RunStepObject_step_details
  lastError*: RunStepObject_last_error
  expiredAt*: int ## The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.
  cancelledAt*: int ## The Unix timestamp (in seconds) for when the run step was cancelled.
  failedAt*: int ## The Unix timestamp (in seconds) for when the run step failed.
  completedAt*: int ## The Unix timestamp (in seconds) for when the run step completed.
  metadata*: object ## Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
  usage*: RunStepCompletionUsage

func `%`*(v: `Object`): JsonNode =
  let str = case v:
    of `Object`.ThreadRunStep: "thread.run.step"

  JsonNode(kind: JString, str: str)

func `$`*(v: `Object`): string =
  result = case v:
    of `Object`.ThreadRunStep: "thread.run.step"

func `%`*(v: `Type`): JsonNode =
  let str = case v:
    of `Type`.MessageCreation: "message_creation"
    of `Type`.ToolCalls: "tool_calls"

  JsonNode(kind: JString, str: str)

func `$`*(v: `Type`): string =
  result = case v:
    of `Type`.MessageCreation: "message_creation"
    of `Type`.ToolCalls: "tool_calls"

func `%`*(v: Status): JsonNode =
  let str = case v:
    of Status.InProgress: "in_progress"
    of Status.Cancelled: "cancelled"
    of Status.Failed: "failed"
    of Status.Completed: "completed"
    of Status.Expired: "expired"

  JsonNode(kind: JString, str: str)

func `$`*(v: Status): string =
  result = case v:
    of Status.InProgress: "in_progress"
    of Status.Cancelled: "cancelled"
    of Status.Failed: "failed"
    of Status.Completed: "completed"
    of Status.Expired: "expired"
