#import <Foundation/Foundation.h>
#import "OAICreateSpeechRequest.h"
#import "OAICreateTranscription200Response.h"
#import "OAICreateTranscriptionRequestModel.h"
#import "OAICreateTranslation200Response.h"
#import "OAIApi.h"

/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIAudioApi: NSObject <OAIApi>

extern NSString* kOAIAudioApiErrorDomain;
extern NSInteger kOAIAudioApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Generates audio from the input text.
/// 
///
/// @param createSpeechRequest 
/// 
///  code:200 message:"OK"
///
/// @return NSURL*
-(NSURLSessionTask*) createSpeechWithCreateSpeechRequest: (OAICreateSpeechRequest*) createSpeechRequest
    completionHandler: (void (^)(NSURL* output, NSError* error)) handler;


/// Transcribes audio into the input language.
/// 
///
/// @param file The audio file object (not file name) to transcribe, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm. 
/// @param model 
/// @param language The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.  (optional)
/// @param prompt An optional text to guide the model&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.  (optional)
/// @param responseFormat The format of the transcript output, in one of these options: &#x60;json&#x60;, &#x60;text&#x60;, &#x60;srt&#x60;, &#x60;verbose_json&#x60;, or &#x60;vtt&#x60;.  (optional) (default to @"json")
/// @param temperature The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.  (optional) (default to @0)
/// @param timestampGranularities The timestamp granularities to populate for this transcription. &#x60;response_format&#x60; must be set &#x60;verbose_json&#x60; to use timestamp granularities. Either or both of these options are supported: &#x60;word&#x60;, or &#x60;segment&#x60;. Note: There is no additional latency for segment timestamps, but generating word timestamps incurs additional latency.  (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAICreateTranscription200Response*
-(NSURLSessionTask*) createTranscriptionWithFile: (NSURL*) file
    model: (OAICreateTranscriptionRequestModel*) model
    language: (NSString*) language
    prompt: (NSString*) prompt
    responseFormat: (NSString*) responseFormat
    temperature: (NSNumber*) temperature
    timestampGranularities: (NSArray<NSString*>*) timestampGranularities
    completionHandler: (void (^)(OAICreateTranscription200Response* output, NSError* error)) handler;


/// Translates audio into English.
/// 
///
/// @param file The audio file object (not file name) translate, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm. 
/// @param model 
/// @param prompt An optional text to guide the model&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.  (optional)
/// @param responseFormat The format of the transcript output, in one of these options: &#x60;json&#x60;, &#x60;text&#x60;, &#x60;srt&#x60;, &#x60;verbose_json&#x60;, or &#x60;vtt&#x60;.  (optional) (default to @"json")
/// @param temperature The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.  (optional) (default to @0)
/// 
///  code:200 message:"OK"
///
/// @return OAICreateTranslation200Response*
-(NSURLSessionTask*) createTranslationWithFile: (NSURL*) file
    model: (OAICreateTranscriptionRequestModel*) model
    prompt: (NSString*) prompt
    responseFormat: (NSString*) responseFormat
    temperature: (NSNumber*) temperature
    completionHandler: (void (^)(OAICreateTranslation200Response* output, NSError* error)) handler;



@end
