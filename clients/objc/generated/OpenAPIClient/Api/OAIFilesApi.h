#import <Foundation/Foundation.h>
#import "OAIDeleteFileResponse.h"
#import "OAIListFilesResponse.h"
#import "OAIOpenAIFile.h"
#import "OAIApi.h"

/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIFilesApi: NSObject <OAIApi>

extern NSString* kOAIFilesApiErrorDomain;
extern NSInteger kOAIFilesApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.  The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine-tuning API only supports `.jsonl` files.  Please [contact us](https://help.openai.com/) if you need to increase these storage limits. 
/// 
///
/// @param file The File object (not file name) to be uploaded. 
/// @param purpose The intended purpose of the uploaded file.  Use \\\&quot;fine-tune\\\&quot; for [Fine-tuning](/docs/api-reference/fine-tuning) and \\\&quot;assistants\\\&quot; for [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages). This allows us to validate the format of the uploaded file is correct for fine-tuning. 
/// 
///  code:200 message:"OK"
///
/// @return OAIOpenAIFile*
-(NSURLSessionTask*) createFileWithFile: (NSURL*) file
    purpose: (NSString*) purpose
    completionHandler: (void (^)(OAIOpenAIFile* output, NSError* error)) handler;


/// Delete a file.
/// 
///
/// @param fileId The ID of the file to use for this request.
/// 
///  code:200 message:"OK"
///
/// @return OAIDeleteFileResponse*
-(NSURLSessionTask*) deleteFileWithFileId: (NSString*) fileId
    completionHandler: (void (^)(OAIDeleteFileResponse* output, NSError* error)) handler;


/// Returns the contents of the specified file.
/// 
///
/// @param fileId The ID of the file to use for this request.
/// 
///  code:200 message:"OK"
///
/// @return NSString*
-(NSURLSessionTask*) downloadFileWithFileId: (NSString*) fileId
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Returns a list of files that belong to the user's organization.
/// 
///
/// @param purpose Only return files with the given purpose. (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIListFilesResponse*
-(NSURLSessionTask*) listFilesWithPurpose: (NSString*) purpose
    completionHandler: (void (^)(OAIListFilesResponse* output, NSError* error)) handler;


/// Returns information about a specific file.
/// 
///
/// @param fileId The ID of the file to use for this request.
/// 
///  code:200 message:"OK"
///
/// @return OAIOpenAIFile*
-(NSURLSessionTask*) retrieveFileWithFileId: (NSString*) fileId
    completionHandler: (void (^)(OAIOpenAIFile* output, NSError* error)) handler;



@end
