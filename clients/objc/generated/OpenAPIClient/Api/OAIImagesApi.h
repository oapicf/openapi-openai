#import <Foundation/Foundation.h>
#import "OAICreateImageEditRequestModel.h"
#import "OAICreateImageRequest.h"
#import "OAIImagesResponse.h"
#import "OAIApi.h"

/**
* OpenAI API
* The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
*
* The version of the OpenAPI document: 2.0.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIImagesApi: NSObject <OAIApi>

extern NSString* kOAIImagesApiErrorDomain;
extern NSInteger kOAIImagesApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Creates an image given a prompt.
/// 
///
/// @param createImageRequest 
/// 
///  code:200 message:"OK"
///
/// @return OAIImagesResponse*
-(NSURLSessionTask*) createImageWithCreateImageRequest: (OAICreateImageRequest*) createImageRequest
    completionHandler: (void (^)(OAIImagesResponse* output, NSError* error)) handler;


/// Creates an edited or extended image given an original image and a prompt.
/// 
///
/// @param image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.
/// @param prompt A text description of the desired image(s). The maximum length is 1000 characters.
/// @param mask An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;. (optional)
/// @param model  (optional)
/// @param n The number of images to generate. Must be between 1 and 10. (optional) (default to @1)
/// @param size The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional) (default to @"1024x1024")
/// @param responseFormat The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional) (default to @"url")
/// @param user A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).  (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIImagesResponse*
-(NSURLSessionTask*) createImageEditWithImage: (NSURL*) image
    prompt: (NSString*) prompt
    mask: (NSURL*) mask
    model: (OAICreateImageEditRequestModel*) model
    n: (NSNumber*) n
    size: (NSString*) size
    responseFormat: (NSString*) responseFormat
    user: (NSString*) user
    completionHandler: (void (^)(OAIImagesResponse* output, NSError* error)) handler;


/// Creates a variation of a given image.
/// 
///
/// @param image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.
/// @param model  (optional)
/// @param n The number of images to generate. Must be between 1 and 10. For &#x60;dall-e-3&#x60;, only &#x60;n&#x3D;1&#x60; is supported. (optional) (default to @1)
/// @param responseFormat The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional) (default to @"url")
/// @param size The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional) (default to @"1024x1024")
/// @param user A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).  (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIImagesResponse*
-(NSURLSessionTask*) createImageVariationWithImage: (NSURL*) image
    model: (OAICreateImageEditRequestModel*) model
    n: (NSNumber*) n
    responseFormat: (NSString*) responseFormat
    size: (NSString*) size
    user: (NSString*) user
    completionHandler: (void (^)(OAIImagesResponse* output, NSError* error)) handler;



@end
