<?php

/**
 * OpenAI API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */
namespace OpenAPIServer\Api;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Api\AssistantsApi;

/**
 * AssistantsApiTest Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Api\AssistantsApi
 */
class AssistantsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for cancelRun
     *
     * Cancels a run that is `in_progress`..
     *
     * @covers ::cancelRun
     */
    public function testCancelRun()
    {
        self::markTestIncomplete(
            'Test of "cancelRun" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createAssistant
     *
     * Create an assistant with a model and instructions..
     *
     * @covers ::createAssistant
     */
    public function testCreateAssistant()
    {
        self::markTestIncomplete(
            'Test of "createAssistant" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createAssistantFile
     *
     * Create an assistant file by attaching a [File](/docs/api-reference/files) to an [assistant](/docs/api-reference/assistants)..
     *
     * @covers ::createAssistantFile
     */
    public function testCreateAssistantFile()
    {
        self::markTestIncomplete(
            'Test of "createAssistantFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createMessage
     *
     * Create a message..
     *
     * @covers ::createMessage
     */
    public function testCreateMessage()
    {
        self::markTestIncomplete(
            'Test of "createMessage" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createRun
     *
     * Create a run..
     *
     * @covers ::createRun
     */
    public function testCreateRun()
    {
        self::markTestIncomplete(
            'Test of "createRun" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createThread
     *
     * Create a thread..
     *
     * @covers ::createThread
     */
    public function testCreateThread()
    {
        self::markTestIncomplete(
            'Test of "createThread" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createThreadAndRun
     *
     * Create a thread and run it in one request..
     *
     * @covers ::createThreadAndRun
     */
    public function testCreateThreadAndRun()
    {
        self::markTestIncomplete(
            'Test of "createThreadAndRun" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteAssistant
     *
     * Delete an assistant..
     *
     * @covers ::deleteAssistant
     */
    public function testDeleteAssistant()
    {
        self::markTestIncomplete(
            'Test of "deleteAssistant" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteAssistantFile
     *
     * Delete an assistant file..
     *
     * @covers ::deleteAssistantFile
     */
    public function testDeleteAssistantFile()
    {
        self::markTestIncomplete(
            'Test of "deleteAssistantFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteThread
     *
     * Delete a thread..
     *
     * @covers ::deleteThread
     */
    public function testDeleteThread()
    {
        self::markTestIncomplete(
            'Test of "deleteThread" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getAssistant
     *
     * Retrieves an assistant..
     *
     * @covers ::getAssistant
     */
    public function testGetAssistant()
    {
        self::markTestIncomplete(
            'Test of "getAssistant" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getAssistantFile
     *
     * Retrieves an AssistantFile..
     *
     * @covers ::getAssistantFile
     */
    public function testGetAssistantFile()
    {
        self::markTestIncomplete(
            'Test of "getAssistantFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getMessage
     *
     * Retrieve a message..
     *
     * @covers ::getMessage
     */
    public function testGetMessage()
    {
        self::markTestIncomplete(
            'Test of "getMessage" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getMessageFile
     *
     * Retrieves a message file..
     *
     * @covers ::getMessageFile
     */
    public function testGetMessageFile()
    {
        self::markTestIncomplete(
            'Test of "getMessageFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getRun
     *
     * Retrieves a run..
     *
     * @covers ::getRun
     */
    public function testGetRun()
    {
        self::markTestIncomplete(
            'Test of "getRun" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getRunStep
     *
     * Retrieves a run step..
     *
     * @covers ::getRunStep
     */
    public function testGetRunStep()
    {
        self::markTestIncomplete(
            'Test of "getRunStep" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getThread
     *
     * Retrieves a thread..
     *
     * @covers ::getThread
     */
    public function testGetThread()
    {
        self::markTestIncomplete(
            'Test of "getThread" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listAssistantFiles
     *
     * Returns a list of assistant files..
     *
     * @covers ::listAssistantFiles
     */
    public function testListAssistantFiles()
    {
        self::markTestIncomplete(
            'Test of "listAssistantFiles" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listAssistants
     *
     * Returns a list of assistants..
     *
     * @covers ::listAssistants
     */
    public function testListAssistants()
    {
        self::markTestIncomplete(
            'Test of "listAssistants" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listMessageFiles
     *
     * Returns a list of message files..
     *
     * @covers ::listMessageFiles
     */
    public function testListMessageFiles()
    {
        self::markTestIncomplete(
            'Test of "listMessageFiles" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listMessages
     *
     * Returns a list of messages for a given thread..
     *
     * @covers ::listMessages
     */
    public function testListMessages()
    {
        self::markTestIncomplete(
            'Test of "listMessages" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listRunSteps
     *
     * Returns a list of run steps belonging to a run..
     *
     * @covers ::listRunSteps
     */
    public function testListRunSteps()
    {
        self::markTestIncomplete(
            'Test of "listRunSteps" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listRuns
     *
     * Returns a list of runs belonging to a thread..
     *
     * @covers ::listRuns
     */
    public function testListRuns()
    {
        self::markTestIncomplete(
            'Test of "listRuns" method has not been implemented yet.'
        );
    }

    /**
     * Test case for modifyAssistant
     *
     * Modifies an assistant..
     *
     * @covers ::modifyAssistant
     */
    public function testModifyAssistant()
    {
        self::markTestIncomplete(
            'Test of "modifyAssistant" method has not been implemented yet.'
        );
    }

    /**
     * Test case for modifyMessage
     *
     * Modifies a message..
     *
     * @covers ::modifyMessage
     */
    public function testModifyMessage()
    {
        self::markTestIncomplete(
            'Test of "modifyMessage" method has not been implemented yet.'
        );
    }

    /**
     * Test case for modifyRun
     *
     * Modifies a run..
     *
     * @covers ::modifyRun
     */
    public function testModifyRun()
    {
        self::markTestIncomplete(
            'Test of "modifyRun" method has not been implemented yet.'
        );
    }

    /**
     * Test case for modifyThread
     *
     * Modifies a thread..
     *
     * @covers ::modifyThread
     */
    public function testModifyThread()
    {
        self::markTestIncomplete(
            'Test of "modifyThread" method has not been implemented yet.'
        );
    }

    /**
     * Test case for submitToolOuputsToRun
     *
     * When a run has the `status: \"requires_action\"` and `required_action.type` is `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request..
     *
     * @covers ::submitToolOuputsToRun
     */
    public function testSubmitToolOuputsToRun()
    {
        self::markTestIncomplete(
            'Test of "submitToolOuputsToRun" method has not been implemented yet.'
        );
    }
}
