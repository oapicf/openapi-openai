<?php

/**
 * OpenAI API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */
namespace OpenAPIServer\Api;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Api\FilesApi;

/**
 * FilesApiTest Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Api\FilesApi
 */
class FilesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createFile
     *
     * Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.  The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine-tuning API only supports `.jsonl` files.  Please [contact us](https://help.openai.com/) if you need to increase these storage limits..
     *
     * @covers ::createFile
     */
    public function testCreateFile()
    {
        self::markTestIncomplete(
            'Test of "createFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteFile
     *
     * Delete a file..
     *
     * @covers ::deleteFile
     */
    public function testDeleteFile()
    {
        self::markTestIncomplete(
            'Test of "deleteFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadFile
     *
     * Returns the contents of the specified file..
     *
     * @covers ::downloadFile
     */
    public function testDownloadFile()
    {
        self::markTestIncomplete(
            'Test of "downloadFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listFiles
     *
     * Returns a list of files that belong to the user's organization..
     *
     * @covers ::listFiles
     */
    public function testListFiles()
    {
        self::markTestIncomplete(
            'Test of "listFiles" method has not been implemented yet.'
        );
    }

    /**
     * Test case for retrieveFile
     *
     * Returns information about a specific file..
     *
     * @covers ::retrieveFile
     */
    public function testRetrieveFile()
    {
        self::markTestIncomplete(
            'Test of "retrieveFile" method has not been implemented yet.'
        );
    }
}
