<?php

/**
 * OpenAI API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * APIs for sampling from and fine-tuning language models
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */
namespace OpenAPIServer\Api;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Api\OpenAIApi;

/**
 * OpenAIApiTest Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Api\OpenAIApi
 */
class OpenAIApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for cancelFineTune
     *
     * Immediately cancel a fine-tune job..
     *
     * @covers ::cancelFineTune
     */
    public function testCancelFineTune()
    {
        self::markTestIncomplete(
            'Test of "cancelFineTune" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createChatCompletion
     *
     * Creates a model response for the given chat conversation..
     *
     * @covers ::createChatCompletion
     */
    public function testCreateChatCompletion()
    {
        self::markTestIncomplete(
            'Test of "createChatCompletion" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createCompletion
     *
     * Creates a completion for the provided prompt and parameters..
     *
     * @covers ::createCompletion
     */
    public function testCreateCompletion()
    {
        self::markTestIncomplete(
            'Test of "createCompletion" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createEdit
     *
     * Creates a new edit for the provided input, instruction, and parameters..
     *
     * @covers ::createEdit
     */
    public function testCreateEdit()
    {
        self::markTestIncomplete(
            'Test of "createEdit" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createEmbedding
     *
     * Creates an embedding vector representing the input text..
     *
     * @covers ::createEmbedding
     */
    public function testCreateEmbedding()
    {
        self::markTestIncomplete(
            'Test of "createEmbedding" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createFile
     *
     * Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit..
     *
     * @covers ::createFile
     */
    public function testCreateFile()
    {
        self::markTestIncomplete(
            'Test of "createFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createFineTune
     *
     * Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning).
     *
     * @covers ::createFineTune
     */
    public function testCreateFineTune()
    {
        self::markTestIncomplete(
            'Test of "createFineTune" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createImage
     *
     * Creates an image given a prompt..
     *
     * @covers ::createImage
     */
    public function testCreateImage()
    {
        self::markTestIncomplete(
            'Test of "createImage" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createImageEdit
     *
     * Creates an edited or extended image given an original image and a prompt..
     *
     * @covers ::createImageEdit
     */
    public function testCreateImageEdit()
    {
        self::markTestIncomplete(
            'Test of "createImageEdit" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createImageVariation
     *
     * Creates a variation of a given image..
     *
     * @covers ::createImageVariation
     */
    public function testCreateImageVariation()
    {
        self::markTestIncomplete(
            'Test of "createImageVariation" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createModeration
     *
     * Classifies if text violates OpenAI's Content Policy.
     *
     * @covers ::createModeration
     */
    public function testCreateModeration()
    {
        self::markTestIncomplete(
            'Test of "createModeration" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createTranscription
     *
     * Transcribes audio into the input language..
     *
     * @covers ::createTranscription
     */
    public function testCreateTranscription()
    {
        self::markTestIncomplete(
            'Test of "createTranscription" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createTranslation
     *
     * Translates audio into English..
     *
     * @covers ::createTranslation
     */
    public function testCreateTranslation()
    {
        self::markTestIncomplete(
            'Test of "createTranslation" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteFile
     *
     * Delete a file..
     *
     * @covers ::deleteFile
     */
    public function testDeleteFile()
    {
        self::markTestIncomplete(
            'Test of "deleteFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteModel
     *
     * Delete a fine-tuned model. You must have the Owner role in your organization..
     *
     * @covers ::deleteModel
     */
    public function testDeleteModel()
    {
        self::markTestIncomplete(
            'Test of "deleteModel" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadFile
     *
     * Returns the contents of the specified file.
     *
     * @covers ::downloadFile
     */
    public function testDownloadFile()
    {
        self::markTestIncomplete(
            'Test of "downloadFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listFiles
     *
     * Returns a list of files that belong to the user's organization..
     *
     * @covers ::listFiles
     */
    public function testListFiles()
    {
        self::markTestIncomplete(
            'Test of "listFiles" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listFineTuneEvents
     *
     * Get fine-grained status updates for a fine-tune job..
     *
     * @covers ::listFineTuneEvents
     */
    public function testListFineTuneEvents()
    {
        self::markTestIncomplete(
            'Test of "listFineTuneEvents" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listFineTunes
     *
     * List your organization's fine-tuning jobs.
     *
     * @covers ::listFineTunes
     */
    public function testListFineTunes()
    {
        self::markTestIncomplete(
            'Test of "listFineTunes" method has not been implemented yet.'
        );
    }

    /**
     * Test case for listModels
     *
     * Lists the currently available models, and provides basic information about each one such as the owner and availability..
     *
     * @covers ::listModels
     */
    public function testListModels()
    {
        self::markTestIncomplete(
            'Test of "listModels" method has not been implemented yet.'
        );
    }

    /**
     * Test case for retrieveFile
     *
     * Returns information about a specific file..
     *
     * @covers ::retrieveFile
     */
    public function testRetrieveFile()
    {
        self::markTestIncomplete(
            'Test of "retrieveFile" method has not been implemented yet.'
        );
    }

    /**
     * Test case for retrieveFineTune
     *
     * Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning).
     *
     * @covers ::retrieveFineTune
     */
    public function testRetrieveFineTune()
    {
        self::markTestIncomplete(
            'Test of "retrieveFineTune" method has not been implemented yet.'
        );
    }

    /**
     * Test case for retrieveModel
     *
     * Retrieves a model instance, providing basic information about the model such as the owner and permissioning..
     *
     * @covers ::retrieveModel
     */
    public function testRetrieveModel()
    {
        self::markTestIncomplete(
            'Test of "retrieveModel" method has not been implemented yet.'
        );
    }
}
