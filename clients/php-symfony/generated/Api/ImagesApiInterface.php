<?php
/**
 * ImagesApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\CreateImageEditRequestModel;
use OpenAPI\Server\Model\CreateImageRequest;
use OpenAPI\Server\Model\ImagesResponse;

/**
 * ImagesApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface ImagesApiInterface
{

    /**
     * Sets authentication method ApiKeyAuth
     *
     * @param string|null $value Value of the ApiKeyAuth authentication method.
     *
     * @return void
     */
    public function setApiKeyAuth(?string $value): void;

    /**
     * Operation createImage
     *
     * Creates an image given a prompt.
     *
     * @param  CreateImageRequest $createImageRequest   (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createImage(
        CreateImageRequest $createImageRequest,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation createImageEdit
     *
     * Creates an edited or extended image given an original image and a prompt.
     *
     * @param  UploadedFile $image  The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask. (required)
     * @param  string $prompt  A text description of the desired image(s). The maximum length is 1000 characters. (required)
     * @param  UploadedFile|null $mask  An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;. (optional)
     * @param  CreateImageEditRequestModel|null $model   (optional)
     * @param  int $n  The number of images to generate. Must be between 1 and 10. (optional, default to 1)
     * @param  string $size  The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional, default to '1024x1024')
     * @param  string $responseFormat  The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional, default to 'url')
     * @param  string|null $user  A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createImageEdit(
        UploadedFile $image,
        string $prompt,
        ?UploadedFile $mask,
        ?CreateImageEditRequestModel $model,
        int $n,
        string $size,
        string $responseFormat,
        ?string $user,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation createImageVariation
     *
     * Creates a variation of a given image.
     *
     * @param  UploadedFile $image  The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square. (required)
     * @param  CreateImageEditRequestModel|null $model   (optional)
     * @param  int $n  The number of images to generate. Must be between 1 and 10. For &#x60;dall-e-3&#x60;, only &#x60;n&#x3D;1&#x60; is supported. (optional, default to 1)
     * @param  string $responseFormat  The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional, default to 'url')
     * @param  string $size  The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional, default to '1024x1024')
     * @param  string|null $user  A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createImageVariation(
        UploadedFile $image,
        ?CreateImageEditRequestModel $model,
        int $n,
        string $responseFormat,
        string $size,
        ?string $user,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;
}
