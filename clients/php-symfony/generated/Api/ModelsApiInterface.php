<?php
/**
 * ModelsApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\DeleteModelResponse;
use OpenAPI\Server\Model\ListModelsResponse;
use OpenAPI\Server\Model\Model;

/**
 * ModelsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface ModelsApiInterface
{

    /**
     * Sets authentication method ApiKeyAuth
     *
     * @param string|null $value Value of the ApiKeyAuth authentication method.
     *
     * @return void
     */
    public function setApiKeyAuth(?string $value): void;

    /**
     * Operation deleteModel
     *
     * Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
     *
     * @param  string $model  The model to delete (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function deleteModel(
        string $model,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation listModels
     *
     * Lists the currently available models, and provides basic information about each one such as the owner and availability.
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function listModels(
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation retrieveModel
     *
     * Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
     *
     * @param  string $model  The ID of the model to use for this request (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function retrieveModel(
        string $model,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;
}
