<?php
/**
 * ChatCompletionRequestAssistantMessage
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ChatCompletionRequestAssistantMessage model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ChatCompletionRequestAssistantMessage 
{
        /**
     * The contents of the assistant message. Required unless &#x60;tool_calls&#x60; or &#x60;function_call&#x60; is specified.
     *
     * @var string|null
     * @SerializedName("content")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $content = null;

    /**
     * The role of the messages author, in this case &#x60;assistant&#x60;.
     *
     * @var string|null
     * @SerializedName("role")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Choice(["assistant"])]
    #[Assert\Type("string")]
    protected ?string $role = null;

    /**
     * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
     *
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * The tool calls generated by the model, such as function calls.
     *
     * @var ChatCompletionMessageToolCall[]|null
     * @SerializedName("tool_calls")
     * @Type("array<OpenAPI\Server\Model\ChatCompletionMessageToolCall>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\ChatCompletionMessageToolCall"),
    ])]
    protected ?array $toolCalls = null;

    /**
     * @var ChatCompletionRequestAssistantMessageFunctionCall|null
     * @SerializedName("function_call")
     * @Type("OpenAPI\Server\Model\ChatCompletionRequestAssistantMessageFunctionCall")
    */
    #[Assert\Type("OpenAPI\Server\Model\ChatCompletionRequestAssistantMessageFunctionCall")]
    protected ?ChatCompletionRequestAssistantMessageFunctionCall $functionCall = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->content = array_key_exists('content', $data) ? $data['content'] : $this->content;
            $this->role = array_key_exists('role', $data) ? $data['role'] : $this->role;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->toolCalls = array_key_exists('toolCalls', $data) ? $data['toolCalls'] : $this->toolCalls;
            $this->functionCall = array_key_exists('functionCall', $data) ? $data['functionCall'] : $this->functionCall;
        }
    }

    /**
     * Gets content.
     *
     * @return string|null
     */
    public function getContent(): ?string
    {
        return $this->content;
    }

    /**
    * Sets content.
    *
    * @param string|null $content  The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.
    *
    * @return $this
    */
    public function setContent(?string $content = null): self
    {
        $this->content = $content;

        return $this;
    }




    /**
     * Gets role.
     *
     * @return string|null
     */
    public function getRole(): ?string
    {
        return $this->role;
    }

    /**
    * Sets role.
    *
    * @param string|null $role  The role of the messages author, in this case `assistant`.
    *
    * @return $this
    */
    public function setRole(?string $role): self
    {
        $this->role = $role;

        return $this;
    }




    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name  An optional name for the participant. Provides the model information to differentiate between participants of the same role.
    *
    * @return $this
    */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets toolCalls.
     *
     * @return ChatCompletionMessageToolCall[]|null
     */
    public function getToolCalls(): ?array
    {
        return $this->toolCalls;
    }

    /**
    * Sets toolCalls.
    *
    * @param ChatCompletionMessageToolCall[]|null $toolCalls  The tool calls generated by the model, such as function calls.
    *
    * @return $this
    */
    public function setToolCalls(?array $toolCalls = null): self
    {
        $this->toolCalls = $toolCalls;

        return $this;
    }




    /**
     * Gets functionCall.
     *
     * @return ChatCompletionRequestAssistantMessageFunctionCall|null
     */
    public function getFunctionCall(): ?ChatCompletionRequestAssistantMessageFunctionCall
    {
        return $this->functionCall;
    }

    /**
    * Sets functionCall.
    *
    * @param ChatCompletionRequestAssistantMessageFunctionCall|null $functionCall
    *
    * @return $this
    */
    public function setFunctionCall(?ChatCompletionRequestAssistantMessageFunctionCall $functionCall = null): self
    {
        $this->functionCall = $functionCall;

        return $this;
    }



}


