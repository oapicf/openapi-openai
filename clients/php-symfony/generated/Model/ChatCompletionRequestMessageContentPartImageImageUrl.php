<?php
/**
 * ChatCompletionRequestMessageContentPartImageImageUrl
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ChatCompletionRequestMessageContentPartImageImageUrl model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ChatCompletionRequestMessageContentPartImageImageUrl 
{
        /**
     * Either a URL of the image or the base64 encoded image data.
     *
     * @var string|null
     * @SerializedName("url")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $url = null;

    /**
     * Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding).
     *
     * @var string|null
     * @SerializedName("detail")
     * @Type("string")
    */
    #[Assert\Choice(["auto", "low", "high"])]
    #[Assert\Type("string")]
    protected ?string $detail = 'auto';

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->url = array_key_exists('url', $data) ? $data['url'] : $this->url;
            $this->detail = array_key_exists('detail', $data) ? $data['detail'] : $this->detail;
        }
    }

    /**
     * Gets url.
     *
     * @return string|null
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
    * Sets url.
    *
    * @param string|null $url  Either a URL of the image or the base64 encoded image data.
    *
    * @return $this
    */
    public function setUrl(?string $url): self
    {
        $this->url = $url;

        return $this;
    }




    /**
     * Gets detail.
     *
     * @return string|null
     */
    public function getDetail(): ?string
    {
        return $this->detail;
    }

    /**
    * Sets detail.
    *
    * @param string|null $detail  Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding).
    *
    * @return $this
    */
    public function setDetail(?string $detail = null): self
    {
        $this->detail = $detail;

        return $this;
    }



}


