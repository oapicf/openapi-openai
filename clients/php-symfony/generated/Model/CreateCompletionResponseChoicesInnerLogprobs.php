<?php
/**
 * CreateCompletionResponseChoicesInnerLogprobs
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CreateCompletionResponseChoicesInnerLogprobs model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CreateCompletionResponseChoicesInnerLogprobs 
{
        /**
     * @var int[]|null
     * @SerializedName("text_offset")
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     */
    protected ?array $textOffset = null;

    /**
     * @var float[]|null
     * @SerializedName("token_logprobs")
     * @Assert\All({
     *   @Assert\Type("float")
     * })
     * @Type("array<float>")
     */
    protected ?array $tokenLogprobs = null;

    /**
     * @var string[]|null
     * @SerializedName("tokens")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected ?array $tokens = null;

    /**
     * @var float[]|null
     * @SerializedName("top_logprobs")
     * @Assert\All({
     *   @Assert\Type("float")
     * })
     * @Type("array<float>")
     */
    protected ?array $topLogprobs = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->textOffset = array_key_exists('textOffset', $data) ? $data['textOffset'] : $this->textOffset;
            $this->tokenLogprobs = array_key_exists('tokenLogprobs', $data) ? $data['tokenLogprobs'] : $this->tokenLogprobs;
            $this->tokens = array_key_exists('tokens', $data) ? $data['tokens'] : $this->tokens;
            $this->topLogprobs = array_key_exists('topLogprobs', $data) ? $data['topLogprobs'] : $this->topLogprobs;
        }
    }

    /**
     * Gets textOffset.
     *
     * @return int[]|null
     */
    public function getTextOffset(): ?array
    {
        return $this->textOffset;
    }



    /**
     * Sets textOffset.
     *
     * @param int[]|null $textOffset
     *
     * @return $this
     */
    public function setTextOffset(?array $textOffset = null): self
    {
        $this->textOffset = $textOffset;

        return $this;
    }

    /**
     * Gets tokenLogprobs.
     *
     * @return float[]|null
     */
    public function getTokenLogprobs(): ?array
    {
        return $this->tokenLogprobs;
    }



    /**
     * Sets tokenLogprobs.
     *
     * @param float[]|null $tokenLogprobs
     *
     * @return $this
     */
    public function setTokenLogprobs(?array $tokenLogprobs = null): self
    {
        $this->tokenLogprobs = $tokenLogprobs;

        return $this;
    }

    /**
     * Gets tokens.
     *
     * @return string[]|null
     */
    public function getTokens(): ?array
    {
        return $this->tokens;
    }



    /**
     * Sets tokens.
     *
     * @param string[]|null $tokens
     *
     * @return $this
     */
    public function setTokens(?array $tokens = null): self
    {
        $this->tokens = $tokens;

        return $this;
    }

    /**
     * Gets topLogprobs.
     *
     * @return float[]|null
     */
    public function getTopLogprobs(): ?array
    {
        return $this->topLogprobs;
    }



    /**
     * Sets topLogprobs.
     *
     * @param float[]|null $topLogprobs
     *
     * @return $this
     */
    public function setTopLogprobs(?array $topLogprobs = null): self
    {
        $this->topLogprobs = $topLogprobs;

        return $this;
    }
}


