<?php
/**
 * CreateEmbeddingRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CreateEmbeddingRequest model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CreateEmbeddingRequest 
{
        /**
     * @var CreateEmbeddingRequestModel|null
     * @SerializedName("model")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\CreateEmbeddingRequestModel")
     * @Type("OpenAPI\Server\Model\CreateEmbeddingRequestModel")
     */
    protected ?CreateEmbeddingRequestModel $model = null;

    /**
     * @var CreateEmbeddingRequestInput|null
     * @SerializedName("input")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\CreateEmbeddingRequestInput")
     * @Type("OpenAPI\Server\Model\CreateEmbeddingRequestInput")
     */
    protected ?CreateEmbeddingRequestInput $input = null;

    /**
     * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).
     *
     * @var string|null
     * @SerializedName("user")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $user = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->model = array_key_exists('model', $data) ? $data['model'] : $this->model;
            $this->input = array_key_exists('input', $data) ? $data['input'] : $this->input;
            $this->user = array_key_exists('user', $data) ? $data['user'] : $this->user;
        }
    }

    /**
     * Gets model.
     *
     * @return CreateEmbeddingRequestModel|null
     */
    public function getModel(): ?CreateEmbeddingRequestModel
    {
        return $this->model;
    }



    /**
     * Sets model.
     *
     * @param CreateEmbeddingRequestModel|null $model
     *
     * @return $this
     */
    public function setModel(?CreateEmbeddingRequestModel $model): self
    {
        $this->model = $model;

        return $this;
    }

    /**
     * Gets input.
     *
     * @return CreateEmbeddingRequestInput|null
     */
    public function getInput(): ?CreateEmbeddingRequestInput
    {
        return $this->input;
    }



    /**
     * Sets input.
     *
     * @param CreateEmbeddingRequestInput|null $input
     *
     * @return $this
     */
    public function setInput(?CreateEmbeddingRequestInput $input): self
    {
        $this->input = $input;

        return $this;
    }

    /**
     * Gets user.
     *
     * @return string|null
     */
    public function getUser(): ?string
    {
        return $this->user;
    }



    /**
     * Sets user.
     *
     * @param string|null $user  A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).
     *
     * @return $this
     */
    public function setUser(?string $user = null): self
    {
        $this->user = $user;

        return $this;
    }
}


