<?php
/**
 * CreateFineTuningJobRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CreateFineTuningJobRequest model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CreateFineTuningJobRequest 
{
        /**
     * @var CreateFineTuningJobRequestModel|null
     * @SerializedName("model")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\CreateFineTuningJobRequestModel")
     * @Type("OpenAPI\Server\Model\CreateFineTuningJobRequestModel")
     */
    protected ?CreateFineTuningJobRequestModel $model = null;

    /**
     * The ID of an uploaded file that contains training data.  See [upload file](/docs/api-reference/files/upload) for how to upload a file.  Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose &#x60;fine-tune&#x60;.  See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.
     *
     * @var string|null
     * @SerializedName("training_file")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $trainingFile = null;

    /**
     * @var CreateFineTuningJobRequestHyperparameters|null
     * @SerializedName("hyperparameters")
     * @Assert\Type("OpenAPI\Server\Model\CreateFineTuningJobRequestHyperparameters")
     * @Type("OpenAPI\Server\Model\CreateFineTuningJobRequestHyperparameters")
     */
    protected ?CreateFineTuningJobRequestHyperparameters $hyperparameters = null;

    /**
     * A string of up to 18 characters that will be added to your fine-tuned model name.  For example, a &#x60;suffix&#x60; of \&quot;custom-model-name\&quot; would produce a model name like &#x60;ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel&#x60;.
     *
     * @var string|null
     * @SerializedName("suffix")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 40
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $suffix = null;

    /**
     * The ID of an uploaded file that contains validation data.  If you provide this file, the data is used to generate validation metrics periodically during fine-tuning. These metrics can be viewed in the fine-tuning results file. The same data should not be present in both train and validation files.  Your dataset must be formatted as a JSONL file. You must upload your file with the purpose &#x60;fine-tune&#x60;.  See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.
     *
     * @var string|null
     * @SerializedName("validation_file")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $validationFile = null;

    /**
     * A list of integrations to enable for your fine-tuning job.
     *
     * @var CreateFineTuningJobRequestIntegrationsInner[]|null
     * @SerializedName("integrations")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\CreateFineTuningJobRequestIntegrationsInner")
     * })
     * @Type("array<OpenAPI\Server\Model\CreateFineTuningJobRequestIntegrationsInner>")
     */
    protected ?array $integrations = null;

    /**
     * The seed controls the reproducibility of the job. Passing in the same seed and job parameters should produce the same results, but may differ in rare cases. If a seed is not specified, one will be generated for you.
     *
     * @var int|null
     * @SerializedName("seed")
     * @Assert\Type("int")
     * @Type("int")
     * @Assert\GreaterThanOrEqual(0)
     * @Assert\LessThanOrEqual(2147483647)
     */
    protected ?int $seed = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->model = array_key_exists('model', $data) ? $data['model'] : $this->model;
            $this->trainingFile = array_key_exists('trainingFile', $data) ? $data['trainingFile'] : $this->trainingFile;
            $this->hyperparameters = array_key_exists('hyperparameters', $data) ? $data['hyperparameters'] : $this->hyperparameters;
            $this->suffix = array_key_exists('suffix', $data) ? $data['suffix'] : $this->suffix;
            $this->validationFile = array_key_exists('validationFile', $data) ? $data['validationFile'] : $this->validationFile;
            $this->integrations = array_key_exists('integrations', $data) ? $data['integrations'] : $this->integrations;
            $this->seed = array_key_exists('seed', $data) ? $data['seed'] : $this->seed;
        }
    }

    /**
     * Gets model.
     *
     * @return CreateFineTuningJobRequestModel|null
     */
    public function getModel(): ?CreateFineTuningJobRequestModel
    {
        return $this->model;
    }



    /**
     * Sets model.
     *
     * @param CreateFineTuningJobRequestModel|null $model
     *
     * @return $this
     */
    public function setModel(?CreateFineTuningJobRequestModel $model): self
    {
        $this->model = $model;

        return $this;
    }

    /**
     * Gets trainingFile.
     *
     * @return string|null
     */
    public function getTrainingFile(): ?string
    {
        return $this->trainingFile;
    }



    /**
     * Sets trainingFile.
     *
     * @param string|null $trainingFile  The ID of an uploaded file that contains training data.  See [upload file](/docs/api-reference/files/upload) for how to upload a file.  Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose `fine-tune`.  See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.
     *
     * @return $this
     */
    public function setTrainingFile(?string $trainingFile): self
    {
        $this->trainingFile = $trainingFile;

        return $this;
    }

    /**
     * Gets hyperparameters.
     *
     * @return CreateFineTuningJobRequestHyperparameters|null
     */
    public function getHyperparameters(): ?CreateFineTuningJobRequestHyperparameters
    {
        return $this->hyperparameters;
    }



    /**
     * Sets hyperparameters.
     *
     * @param CreateFineTuningJobRequestHyperparameters|null $hyperparameters
     *
     * @return $this
     */
    public function setHyperparameters(?CreateFineTuningJobRequestHyperparameters $hyperparameters = null): self
    {
        $this->hyperparameters = $hyperparameters;

        return $this;
    }

    /**
     * Gets suffix.
     *
     * @return string|null
     */
    public function getSuffix(): ?string
    {
        return $this->suffix;
    }



    /**
     * Sets suffix.
     *
     * @param string|null $suffix  A string of up to 18 characters that will be added to your fine-tuned model name.  For example, a `suffix` of \"custom-model-name\" would produce a model name like `ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel`.
     *
     * @return $this
     */
    public function setSuffix(?string $suffix = null): self
    {
        $this->suffix = $suffix;

        return $this;
    }

    /**
     * Gets validationFile.
     *
     * @return string|null
     */
    public function getValidationFile(): ?string
    {
        return $this->validationFile;
    }



    /**
     * Sets validationFile.
     *
     * @param string|null $validationFile  The ID of an uploaded file that contains validation data.  If you provide this file, the data is used to generate validation metrics periodically during fine-tuning. These metrics can be viewed in the fine-tuning results file. The same data should not be present in both train and validation files.  Your dataset must be formatted as a JSONL file. You must upload your file with the purpose `fine-tune`.  See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.
     *
     * @return $this
     */
    public function setValidationFile(?string $validationFile = null): self
    {
        $this->validationFile = $validationFile;

        return $this;
    }

    /**
     * Gets integrations.
     *
     * @return CreateFineTuningJobRequestIntegrationsInner[]|null
     */
    public function getIntegrations(): ?array
    {
        return $this->integrations;
    }



    /**
     * Sets integrations.
     *
     * @param CreateFineTuningJobRequestIntegrationsInner[]|null $integrations  A list of integrations to enable for your fine-tuning job.
     *
     * @return $this
     */
    public function setIntegrations(?array $integrations = null): self
    {
        $this->integrations = $integrations;

        return $this;
    }

    /**
     * Gets seed.
     *
     * @return int|null
     */
    public function getSeed(): ?int
    {
        return $this->seed;
    }



    /**
     * Sets seed.
     *
     * @param int|null $seed  The seed controls the reproducibility of the job. Passing in the same seed and job parameters should produce the same results, but may differ in rare cases. If a seed is not specified, one will be generated for you.
     *
     * @return $this
     */
    public function setSeed(?int $seed = null): self
    {
        $this->seed = $seed;

        return $this;
    }
}


