<?php
/**
 * CreateModerationResponseResultsInnerCategoryScores
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CreateModerationResponseResultsInnerCategoryScores model.
 *
 * A list of the categories along with their scores as predicted by model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CreateModerationResponseResultsInnerCategoryScores 
{
        /**
     * The score for the category &#39;hate&#39;.
     *
     * @var float|null
     * @SerializedName("hate")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $hate = null;

    /**
     * The score for the category &#39;hate/threatening&#39;.
     *
     * @var float|null
     * @SerializedName("hate/threatening")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $hateThreatening = null;

    /**
     * The score for the category &#39;harassment&#39;.
     *
     * @var float|null
     * @SerializedName("harassment")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $harassment = null;

    /**
     * The score for the category &#39;harassment/threatening&#39;.
     *
     * @var float|null
     * @SerializedName("harassment/threatening")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $harassmentThreatening = null;

    /**
     * The score for the category &#39;self-harm&#39;.
     *
     * @var float|null
     * @SerializedName("self-harm")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $selfHarm = null;

    /**
     * The score for the category &#39;self-harm/intent&#39;.
     *
     * @var float|null
     * @SerializedName("self-harm/intent")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $selfHarmIntent = null;

    /**
     * The score for the category &#39;self-harm/instructions&#39;.
     *
     * @var float|null
     * @SerializedName("self-harm/instructions")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $selfHarmInstructions = null;

    /**
     * The score for the category &#39;sexual&#39;.
     *
     * @var float|null
     * @SerializedName("sexual")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $sexual = null;

    /**
     * The score for the category &#39;sexual/minors&#39;.
     *
     * @var float|null
     * @SerializedName("sexual/minors")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $sexualMinors = null;

    /**
     * The score for the category &#39;violence&#39;.
     *
     * @var float|null
     * @SerializedName("violence")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $violence = null;

    /**
     * The score for the category &#39;violence/graphic&#39;.
     *
     * @var float|null
     * @SerializedName("violence/graphic")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $violenceGraphic = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->hate = array_key_exists('hate', $data) ? $data['hate'] : $this->hate;
            $this->hateThreatening = array_key_exists('hateThreatening', $data) ? $data['hateThreatening'] : $this->hateThreatening;
            $this->harassment = array_key_exists('harassment', $data) ? $data['harassment'] : $this->harassment;
            $this->harassmentThreatening = array_key_exists('harassmentThreatening', $data) ? $data['harassmentThreatening'] : $this->harassmentThreatening;
            $this->selfHarm = array_key_exists('selfHarm', $data) ? $data['selfHarm'] : $this->selfHarm;
            $this->selfHarmIntent = array_key_exists('selfHarmIntent', $data) ? $data['selfHarmIntent'] : $this->selfHarmIntent;
            $this->selfHarmInstructions = array_key_exists('selfHarmInstructions', $data) ? $data['selfHarmInstructions'] : $this->selfHarmInstructions;
            $this->sexual = array_key_exists('sexual', $data) ? $data['sexual'] : $this->sexual;
            $this->sexualMinors = array_key_exists('sexualMinors', $data) ? $data['sexualMinors'] : $this->sexualMinors;
            $this->violence = array_key_exists('violence', $data) ? $data['violence'] : $this->violence;
            $this->violenceGraphic = array_key_exists('violenceGraphic', $data) ? $data['violenceGraphic'] : $this->violenceGraphic;
        }
    }

    /**
     * Gets hate.
     *
     * @return float|null
     */
    public function getHate(): ?float
    {
        return $this->hate;
    }

    /**
    * Sets hate.
    *
    * @param float|null $hate  The score for the category 'hate'.
    *
    * @return $this
    */
    public function setHate(?float $hate): self
    {
        $this->hate = $hate;

        return $this;
    }




    /**
     * Gets hateThreatening.
     *
     * @return float|null
     */
    public function getHateThreatening(): ?float
    {
        return $this->hateThreatening;
    }

    /**
    * Sets hateThreatening.
    *
    * @param float|null $hateThreatening  The score for the category 'hate/threatening'.
    *
    * @return $this
    */
    public function setHateThreatening(?float $hateThreatening): self
    {
        $this->hateThreatening = $hateThreatening;

        return $this;
    }




    /**
     * Gets harassment.
     *
     * @return float|null
     */
    public function getHarassment(): ?float
    {
        return $this->harassment;
    }

    /**
    * Sets harassment.
    *
    * @param float|null $harassment  The score for the category 'harassment'.
    *
    * @return $this
    */
    public function setHarassment(?float $harassment): self
    {
        $this->harassment = $harassment;

        return $this;
    }




    /**
     * Gets harassmentThreatening.
     *
     * @return float|null
     */
    public function getHarassmentThreatening(): ?float
    {
        return $this->harassmentThreatening;
    }

    /**
    * Sets harassmentThreatening.
    *
    * @param float|null $harassmentThreatening  The score for the category 'harassment/threatening'.
    *
    * @return $this
    */
    public function setHarassmentThreatening(?float $harassmentThreatening): self
    {
        $this->harassmentThreatening = $harassmentThreatening;

        return $this;
    }




    /**
     * Gets selfHarm.
     *
     * @return float|null
     */
    public function getSelfHarm(): ?float
    {
        return $this->selfHarm;
    }

    /**
    * Sets selfHarm.
    *
    * @param float|null $selfHarm  The score for the category 'self-harm'.
    *
    * @return $this
    */
    public function setSelfHarm(?float $selfHarm): self
    {
        $this->selfHarm = $selfHarm;

        return $this;
    }




    /**
     * Gets selfHarmIntent.
     *
     * @return float|null
     */
    public function getSelfHarmIntent(): ?float
    {
        return $this->selfHarmIntent;
    }

    /**
    * Sets selfHarmIntent.
    *
    * @param float|null $selfHarmIntent  The score for the category 'self-harm/intent'.
    *
    * @return $this
    */
    public function setSelfHarmIntent(?float $selfHarmIntent): self
    {
        $this->selfHarmIntent = $selfHarmIntent;

        return $this;
    }




    /**
     * Gets selfHarmInstructions.
     *
     * @return float|null
     */
    public function getSelfHarmInstructions(): ?float
    {
        return $this->selfHarmInstructions;
    }

    /**
    * Sets selfHarmInstructions.
    *
    * @param float|null $selfHarmInstructions  The score for the category 'self-harm/instructions'.
    *
    * @return $this
    */
    public function setSelfHarmInstructions(?float $selfHarmInstructions): self
    {
        $this->selfHarmInstructions = $selfHarmInstructions;

        return $this;
    }




    /**
     * Gets sexual.
     *
     * @return float|null
     */
    public function getSexual(): ?float
    {
        return $this->sexual;
    }

    /**
    * Sets sexual.
    *
    * @param float|null $sexual  The score for the category 'sexual'.
    *
    * @return $this
    */
    public function setSexual(?float $sexual): self
    {
        $this->sexual = $sexual;

        return $this;
    }




    /**
     * Gets sexualMinors.
     *
     * @return float|null
     */
    public function getSexualMinors(): ?float
    {
        return $this->sexualMinors;
    }

    /**
    * Sets sexualMinors.
    *
    * @param float|null $sexualMinors  The score for the category 'sexual/minors'.
    *
    * @return $this
    */
    public function setSexualMinors(?float $sexualMinors): self
    {
        $this->sexualMinors = $sexualMinors;

        return $this;
    }




    /**
     * Gets violence.
     *
     * @return float|null
     */
    public function getViolence(): ?float
    {
        return $this->violence;
    }

    /**
    * Sets violence.
    *
    * @param float|null $violence  The score for the category 'violence'.
    *
    * @return $this
    */
    public function setViolence(?float $violence): self
    {
        $this->violence = $violence;

        return $this;
    }




    /**
     * Gets violenceGraphic.
     *
     * @return float|null
     */
    public function getViolenceGraphic(): ?float
    {
        return $this->violenceGraphic;
    }

    /**
    * Sets violenceGraphic.
    *
    * @param float|null $violenceGraphic  The score for the category 'violence/graphic'.
    *
    * @return $this
    */
    public function setViolenceGraphic(?float $violenceGraphic): self
    {
        $this->violenceGraphic = $violenceGraphic;

        return $this;
    }



}


