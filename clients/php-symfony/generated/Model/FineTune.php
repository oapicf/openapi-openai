<?php
/**
 * FineTune
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the FineTune model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class FineTune 
{
        /**
     * @var string|null
     * @SerializedName("id")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $id = null;

    /**
     * @var string|null
     * @SerializedName("object")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $object = null;

    /**
     * @var int|null
     * @SerializedName("created_at")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $createdAt = null;

    /**
     * @var int|null
     * @SerializedName("updated_at")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $updatedAt = null;

    /**
     * @var string|null
     * @SerializedName("model")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $model = null;

    /**
     * @var string|null
     * @SerializedName("fine_tuned_model")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $fineTunedModel = null;

    /**
     * @var string|null
     * @SerializedName("organization_id")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $organizationId = null;

    /**
     * @var string|null
     * @SerializedName("status")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $status = null;

    /**
     * @var array|null
     * @SerializedName("hyperparams")
     * @Assert\NotNull()
     * @Assert\Type("array")
     * @Type("array")
     */
    protected ?array $hyperparams = null;

    /**
     * @var OpenAIFile[]|null
     * @SerializedName("training_files")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\OpenAIFile")
     * })
     * @Type("array<OpenAPI\Server\Model\OpenAIFile>")
     */
    protected ?array $trainingFiles = null;

    /**
     * @var OpenAIFile[]|null
     * @SerializedName("validation_files")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\OpenAIFile")
     * })
     * @Type("array<OpenAPI\Server\Model\OpenAIFile>")
     */
    protected ?array $validationFiles = null;

    /**
     * @var OpenAIFile[]|null
     * @SerializedName("result_files")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\OpenAIFile")
     * })
     * @Type("array<OpenAPI\Server\Model\OpenAIFile>")
     */
    protected ?array $resultFiles = null;

    /**
     * @var FineTuneEvent[]|null
     * @SerializedName("events")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\FineTuneEvent")
     * })
     * @Type("array<OpenAPI\Server\Model\FineTuneEvent>")
     */
    protected ?array $events = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->object = array_key_exists('object', $data) ? $data['object'] : $this->object;
            $this->createdAt = array_key_exists('createdAt', $data) ? $data['createdAt'] : $this->createdAt;
            $this->updatedAt = array_key_exists('updatedAt', $data) ? $data['updatedAt'] : $this->updatedAt;
            $this->model = array_key_exists('model', $data) ? $data['model'] : $this->model;
            $this->fineTunedModel = array_key_exists('fineTunedModel', $data) ? $data['fineTunedModel'] : $this->fineTunedModel;
            $this->organizationId = array_key_exists('organizationId', $data) ? $data['organizationId'] : $this->organizationId;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->hyperparams = array_key_exists('hyperparams', $data) ? $data['hyperparams'] : $this->hyperparams;
            $this->trainingFiles = array_key_exists('trainingFiles', $data) ? $data['trainingFiles'] : $this->trainingFiles;
            $this->validationFiles = array_key_exists('validationFiles', $data) ? $data['validationFiles'] : $this->validationFiles;
            $this->resultFiles = array_key_exists('resultFiles', $data) ? $data['resultFiles'] : $this->resultFiles;
            $this->events = array_key_exists('events', $data) ? $data['events'] : $this->events;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }



    /**
     * Sets id.
     *
     * @param string|null $id
     *
     * @return $this
     */
    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets object.
     *
     * @return string|null
     */
    public function getObject(): ?string
    {
        return $this->object;
    }



    /**
     * Sets object.
     *
     * @param string|null $object
     *
     * @return $this
     */
    public function setObject(?string $object): self
    {
        $this->object = $object;

        return $this;
    }

    /**
     * Gets createdAt.
     *
     * @return int|null
     */
    public function getCreatedAt(): ?int
    {
        return $this->createdAt;
    }



    /**
     * Sets createdAt.
     *
     * @param int|null $createdAt
     *
     * @return $this
     */
    public function setCreatedAt(?int $createdAt): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Gets updatedAt.
     *
     * @return int|null
     */
    public function getUpdatedAt(): ?int
    {
        return $this->updatedAt;
    }



    /**
     * Sets updatedAt.
     *
     * @param int|null $updatedAt
     *
     * @return $this
     */
    public function setUpdatedAt(?int $updatedAt): self
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Gets model.
     *
     * @return string|null
     */
    public function getModel(): ?string
    {
        return $this->model;
    }



    /**
     * Sets model.
     *
     * @param string|null $model
     *
     * @return $this
     */
    public function setModel(?string $model): self
    {
        $this->model = $model;

        return $this;
    }

    /**
     * Gets fineTunedModel.
     *
     * @return string|null
     */
    public function getFineTunedModel(): ?string
    {
        return $this->fineTunedModel;
    }



    /**
     * Sets fineTunedModel.
     *
     * @param string|null $fineTunedModel
     *
     * @return $this
     */
    public function setFineTunedModel(?string $fineTunedModel): self
    {
        $this->fineTunedModel = $fineTunedModel;

        return $this;
    }

    /**
     * Gets organizationId.
     *
     * @return string|null
     */
    public function getOrganizationId(): ?string
    {
        return $this->organizationId;
    }



    /**
     * Sets organizationId.
     *
     * @param string|null $organizationId
     *
     * @return $this
     */
    public function setOrganizationId(?string $organizationId): self
    {
        $this->organizationId = $organizationId;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }



    /**
     * Sets status.
     *
     * @param string|null $status
     *
     * @return $this
     */
    public function setStatus(?string $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets hyperparams.
     *
     * @return array|null
     */
    public function getHyperparams(): ?array
    {
        return $this->hyperparams;
    }



    /**
     * Sets hyperparams.
     *
     * @param array|null $hyperparams
     *
     * @return $this
     */
    public function setHyperparams(?array $hyperparams): self
    {
        $this->hyperparams = $hyperparams;

        return $this;
    }

    /**
     * Gets trainingFiles.
     *
     * @return OpenAIFile[]|null
     */
    public function getTrainingFiles(): ?array
    {
        return $this->trainingFiles;
    }



    /**
     * Sets trainingFiles.
     *
     * @param OpenAIFile[]|null $trainingFiles
     *
     * @return $this
     */
    public function setTrainingFiles(?array $trainingFiles): self
    {
        $this->trainingFiles = $trainingFiles;

        return $this;
    }

    /**
     * Gets validationFiles.
     *
     * @return OpenAIFile[]|null
     */
    public function getValidationFiles(): ?array
    {
        return $this->validationFiles;
    }



    /**
     * Sets validationFiles.
     *
     * @param OpenAIFile[]|null $validationFiles
     *
     * @return $this
     */
    public function setValidationFiles(?array $validationFiles): self
    {
        $this->validationFiles = $validationFiles;

        return $this;
    }

    /**
     * Gets resultFiles.
     *
     * @return OpenAIFile[]|null
     */
    public function getResultFiles(): ?array
    {
        return $this->resultFiles;
    }



    /**
     * Sets resultFiles.
     *
     * @param OpenAIFile[]|null $resultFiles
     *
     * @return $this
     */
    public function setResultFiles(?array $resultFiles): self
    {
        $this->resultFiles = $resultFiles;

        return $this;
    }

    /**
     * Gets events.
     *
     * @return FineTuneEvent[]|null
     */
    public function getEvents(): ?array
    {
        return $this->events;
    }



    /**
     * Sets events.
     *
     * @param FineTuneEvent[]|null $events
     *
     * @return $this
     */
    public function setEvents(?array $events = null): self
    {
        $this->events = $events;

        return $this;
    }
}


