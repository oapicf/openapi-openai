<?php
/**
 * FineTuningJob
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the FineTuningJob model.
 *
 * The &#x60;fine_tuning.job&#x60; object represents a fine-tuning job that has been created through the API.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class FineTuningJob 
{
        /**
     * The object identifier, which can be referenced in the API endpoints.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $id = null;

    /**
     * The Unix timestamp (in seconds) for when the fine-tuning job was created.
     *
     * @var int|null
     * @SerializedName("created_at")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $createdAt = null;

    /**
     * @var FineTuningJobError|null
     * @SerializedName("error")
     * @Type("OpenAPI\Server\Model\FineTuningJobError")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\FineTuningJobError")]
    protected ?FineTuningJobError $error = null;

    /**
     * The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
     *
     * @var string|null
     * @SerializedName("fine_tuned_model")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $fineTunedModel = null;

    /**
     * The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.
     *
     * @var int|null
     * @SerializedName("finished_at")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $finishedAt = null;

    /**
     * @var FineTuningJobHyperparameters|null
     * @SerializedName("hyperparameters")
     * @Type("OpenAPI\Server\Model\FineTuningJobHyperparameters")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\FineTuningJobHyperparameters")]
    protected ?FineTuningJobHyperparameters $hyperparameters = null;

    /**
     * The base model that is being fine-tuned.
     *
     * @var string|null
     * @SerializedName("model")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $model = null;

    /**
     * The object type, which is always \&quot;fine_tuning.job\&quot;.
     *
     * @var string|null
     * @SerializedName("object")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Choice(["fine_tuning.job"])]
    #[Assert\Type("string")]
    protected ?string $object = null;

    /**
     * The organization that owns the fine-tuning job.
     *
     * @var string|null
     * @SerializedName("organization_id")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $organizationId = null;

    /**
     * The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](/docs/api-reference/files/retrieve-contents).
     *
     * @var string[]|null
     * @SerializedName("result_files")
     * @Type("array<string>")
    */
    #[Assert\NotNull]
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $resultFiles = null;

    /**
     * The current status of the fine-tuning job, which can be either &#x60;validating_files&#x60;, &#x60;queued&#x60;, &#x60;running&#x60;, &#x60;succeeded&#x60;, &#x60;failed&#x60;, or &#x60;cancelled&#x60;.
     *
     * @var string|null
     * @SerializedName("status")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Choice(["validating_files", "queued", "running", "succeeded", "failed", "cancelled"])]
    #[Assert\Type("string")]
    protected ?string $status = null;

    /**
     * The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.
     *
     * @var int|null
     * @SerializedName("trained_tokens")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $trainedTokens = null;

    /**
     * The file ID used for training. You can retrieve the training data with the [Files API](/docs/api-reference/files/retrieve-contents).
     *
     * @var string|null
     * @SerializedName("training_file")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $trainingFile = null;

    /**
     * The file ID used for validation. You can retrieve the validation results with the [Files API](/docs/api-reference/files/retrieve-contents).
     *
     * @var string|null
     * @SerializedName("validation_file")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $validationFile = null;

    /**
     * A list of integrations to enable for this fine-tuning job.
     *
     * @var FineTuningJobIntegrationsInner[]|null
     * @SerializedName("integrations")
     * @Type("array<OpenAPI\Server\Model\FineTuningJobIntegrationsInner>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\FineTuningJobIntegrationsInner"),
    ])]
    #[Assert\Count(max: 5)]
    protected ?array $integrations = null;

    /**
     * The seed used for the fine-tuning job.
     *
     * @var int|null
     * @SerializedName("seed")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $seed = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->createdAt = array_key_exists('createdAt', $data) ? $data['createdAt'] : $this->createdAt;
            $this->error = array_key_exists('error', $data) ? $data['error'] : $this->error;
            $this->fineTunedModel = array_key_exists('fineTunedModel', $data) ? $data['fineTunedModel'] : $this->fineTunedModel;
            $this->finishedAt = array_key_exists('finishedAt', $data) ? $data['finishedAt'] : $this->finishedAt;
            $this->hyperparameters = array_key_exists('hyperparameters', $data) ? $data['hyperparameters'] : $this->hyperparameters;
            $this->model = array_key_exists('model', $data) ? $data['model'] : $this->model;
            $this->object = array_key_exists('object', $data) ? $data['object'] : $this->object;
            $this->organizationId = array_key_exists('organizationId', $data) ? $data['organizationId'] : $this->organizationId;
            $this->resultFiles = array_key_exists('resultFiles', $data) ? $data['resultFiles'] : $this->resultFiles;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->trainedTokens = array_key_exists('trainedTokens', $data) ? $data['trainedTokens'] : $this->trainedTokens;
            $this->trainingFile = array_key_exists('trainingFile', $data) ? $data['trainingFile'] : $this->trainingFile;
            $this->validationFile = array_key_exists('validationFile', $data) ? $data['validationFile'] : $this->validationFile;
            $this->integrations = array_key_exists('integrations', $data) ? $data['integrations'] : $this->integrations;
            $this->seed = array_key_exists('seed', $data) ? $data['seed'] : $this->seed;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  The object identifier, which can be referenced in the API endpoints.
    *
    * @return $this
    */
    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets createdAt.
     *
     * @return int|null
     */
    public function getCreatedAt(): ?int
    {
        return $this->createdAt;
    }

    /**
    * Sets createdAt.
    *
    * @param int|null $createdAt  The Unix timestamp (in seconds) for when the fine-tuning job was created.
    *
    * @return $this
    */
    public function setCreatedAt(?int $createdAt): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }




    /**
     * Gets error.
     *
     * @return FineTuningJobError|null
     */
    public function getError(): ?FineTuningJobError
    {
        return $this->error;
    }

    /**
    * Sets error.
    *
    * @param FineTuningJobError|null $error
    *
    * @return $this
    */
    public function setError(?FineTuningJobError $error): self
    {
        $this->error = $error;

        return $this;
    }




    /**
     * Gets fineTunedModel.
     *
     * @return string|null
     */
    public function getFineTunedModel(): ?string
    {
        return $this->fineTunedModel;
    }

    /**
    * Sets fineTunedModel.
    *
    * @param string|null $fineTunedModel  The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
    *
    * @return $this
    */
    public function setFineTunedModel(?string $fineTunedModel): self
    {
        $this->fineTunedModel = $fineTunedModel;

        return $this;
    }




    /**
     * Gets finishedAt.
     *
     * @return int|null
     */
    public function getFinishedAt(): ?int
    {
        return $this->finishedAt;
    }

    /**
    * Sets finishedAt.
    *
    * @param int|null $finishedAt  The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.
    *
    * @return $this
    */
    public function setFinishedAt(?int $finishedAt): self
    {
        $this->finishedAt = $finishedAt;

        return $this;
    }




    /**
     * Gets hyperparameters.
     *
     * @return FineTuningJobHyperparameters|null
     */
    public function getHyperparameters(): ?FineTuningJobHyperparameters
    {
        return $this->hyperparameters;
    }

    /**
    * Sets hyperparameters.
    *
    * @param FineTuningJobHyperparameters|null $hyperparameters
    *
    * @return $this
    */
    public function setHyperparameters(?FineTuningJobHyperparameters $hyperparameters): self
    {
        $this->hyperparameters = $hyperparameters;

        return $this;
    }




    /**
     * Gets model.
     *
     * @return string|null
     */
    public function getModel(): ?string
    {
        return $this->model;
    }

    /**
    * Sets model.
    *
    * @param string|null $model  The base model that is being fine-tuned.
    *
    * @return $this
    */
    public function setModel(?string $model): self
    {
        $this->model = $model;

        return $this;
    }




    /**
     * Gets object.
     *
     * @return string|null
     */
    public function getObject(): ?string
    {
        return $this->object;
    }

    /**
    * Sets object.
    *
    * @param string|null $object  The object type, which is always \"fine_tuning.job\".
    *
    * @return $this
    */
    public function setObject(?string $object): self
    {
        $this->object = $object;

        return $this;
    }




    /**
     * Gets organizationId.
     *
     * @return string|null
     */
    public function getOrganizationId(): ?string
    {
        return $this->organizationId;
    }

    /**
    * Sets organizationId.
    *
    * @param string|null $organizationId  The organization that owns the fine-tuning job.
    *
    * @return $this
    */
    public function setOrganizationId(?string $organizationId): self
    {
        $this->organizationId = $organizationId;

        return $this;
    }




    /**
     * Gets resultFiles.
     *
     * @return string[]|null
     */
    public function getResultFiles(): ?array
    {
        return $this->resultFiles;
    }

    /**
    * Sets resultFiles.
    *
    * @param string[]|null $resultFiles  The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](/docs/api-reference/files/retrieve-contents).
    *
    * @return $this
    */
    public function setResultFiles(?array $resultFiles): self
    {
        $this->resultFiles = $resultFiles;

        return $this;
    }




    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
    * Sets status.
    *
    * @param string|null $status  The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.
    *
    * @return $this
    */
    public function setStatus(?string $status): self
    {
        $this->status = $status;

        return $this;
    }




    /**
     * Gets trainedTokens.
     *
     * @return int|null
     */
    public function getTrainedTokens(): ?int
    {
        return $this->trainedTokens;
    }

    /**
    * Sets trainedTokens.
    *
    * @param int|null $trainedTokens  The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.
    *
    * @return $this
    */
    public function setTrainedTokens(?int $trainedTokens): self
    {
        $this->trainedTokens = $trainedTokens;

        return $this;
    }




    /**
     * Gets trainingFile.
     *
     * @return string|null
     */
    public function getTrainingFile(): ?string
    {
        return $this->trainingFile;
    }

    /**
    * Sets trainingFile.
    *
    * @param string|null $trainingFile  The file ID used for training. You can retrieve the training data with the [Files API](/docs/api-reference/files/retrieve-contents).
    *
    * @return $this
    */
    public function setTrainingFile(?string $trainingFile): self
    {
        $this->trainingFile = $trainingFile;

        return $this;
    }




    /**
     * Gets validationFile.
     *
     * @return string|null
     */
    public function getValidationFile(): ?string
    {
        return $this->validationFile;
    }

    /**
    * Sets validationFile.
    *
    * @param string|null $validationFile  The file ID used for validation. You can retrieve the validation results with the [Files API](/docs/api-reference/files/retrieve-contents).
    *
    * @return $this
    */
    public function setValidationFile(?string $validationFile): self
    {
        $this->validationFile = $validationFile;

        return $this;
    }




    /**
     * Gets integrations.
     *
     * @return FineTuningJobIntegrationsInner[]|null
     */
    public function getIntegrations(): ?array
    {
        return $this->integrations;
    }

    /**
    * Sets integrations.
    *
    * @param FineTuningJobIntegrationsInner[]|null $integrations  A list of integrations to enable for this fine-tuning job.
    *
    * @return $this
    */
    public function setIntegrations(?array $integrations = null): self
    {
        $this->integrations = $integrations;

        return $this;
    }




    /**
     * Gets seed.
     *
     * @return int|null
     */
    public function getSeed(): ?int
    {
        return $this->seed;
    }

    /**
    * Sets seed.
    *
    * @param int|null $seed  The seed used for the fine-tuning job.
    *
    * @return $this
    */
    public function setSeed(?int $seed): self
    {
        $this->seed = $seed;

        return $this;
    }



}


