<?php
/**
 * MessageDeltaContentTextObjectText
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the MessageDeltaContentTextObjectText model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class MessageDeltaContentTextObjectText 
{
        /**
     * The data that makes up the text.
     *
     * @var string|null
     * @SerializedName("value")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $value = null;

    /**
     * @var MessageDeltaContentTextObjectTextAnnotationsInner[]|null
     * @SerializedName("annotations")
     * @Type("array<OpenAPI\Server\Model\MessageDeltaContentTextObjectTextAnnotationsInner>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\MessageDeltaContentTextObjectTextAnnotationsInner"),
    ])]
    protected ?array $annotations = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->value = array_key_exists('value', $data) ? $data['value'] : $this->value;
            $this->annotations = array_key_exists('annotations', $data) ? $data['annotations'] : $this->annotations;
        }
    }

    /**
     * Gets value.
     *
     * @return string|null
     */
    public function getValue(): ?string
    {
        return $this->value;
    }

    /**
    * Sets value.
    *
    * @param string|null $value  The data that makes up the text.
    *
    * @return $this
    */
    public function setValue(?string $value = null): self
    {
        $this->value = $value;

        return $this;
    }




    /**
     * Gets annotations.
     *
     * @return MessageDeltaContentTextObjectTextAnnotationsInner[]|null
     */
    public function getAnnotations(): ?array
    {
        return $this->annotations;
    }

    /**
    * Sets annotations.
    *
    * @param MessageDeltaContentTextObjectTextAnnotationsInner[]|null $annotations
    *
    * @return $this
    */
    public function setAnnotations(?array $annotations = null): self
    {
        $this->annotations = $annotations;

        return $this;
    }



}


