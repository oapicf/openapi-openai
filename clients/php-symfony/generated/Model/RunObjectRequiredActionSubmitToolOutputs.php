<?php
/**
 * RunObjectRequiredActionSubmitToolOutputs
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the RunObjectRequiredActionSubmitToolOutputs model.
 *
 * Details on the tool outputs needed for this run to continue.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class RunObjectRequiredActionSubmitToolOutputs 
{
        /**
     * A list of the relevant tool calls.
     *
     * @var RunToolCallObject[]|null
     * @SerializedName("tool_calls")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\RunToolCallObject")
     * })
     * @Type("array<OpenAPI\Server\Model\RunToolCallObject>")
     */
    protected ?array $toolCalls = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->toolCalls = array_key_exists('toolCalls', $data) ? $data['toolCalls'] : $this->toolCalls;
        }
    }

    /**
     * Gets toolCalls.
     *
     * @return RunToolCallObject[]|null
     */
    public function getToolCalls(): ?array
    {
        return $this->toolCalls;
    }



    /**
     * Sets toolCalls.
     *
     * @param RunToolCallObject[]|null $toolCalls  A list of the relevant tool calls.
     *
     * @return $this
     */
    public function setToolCalls(?array $toolCalls): self
    {
        $this->toolCalls = $toolCalls;

        return $this;
    }
}


