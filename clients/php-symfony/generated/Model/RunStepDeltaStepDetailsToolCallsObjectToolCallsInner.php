<?php
/**
 * RunStepDeltaStepDetailsToolCallsObjectToolCallsInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the RunStepDeltaStepDetailsToolCallsObjectToolCallsInner model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class RunStepDeltaStepDetailsToolCallsObjectToolCallsInner 
{
        /**
     * The index of the tool call in the tool calls array.
     *
     * @var int|null
     * @SerializedName("index")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $index = null;

    /**
     * The ID of the tool call object.
     *
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $id = null;

    /**
     * The type of tool call. This is always going to be &#x60;code_interpreter&#x60; for this type of tool call.
     *
     * @var string|null
     * @SerializedName("type")
     * @Assert\NotNull()
     * @Assert\Choice({ "code_interpreter", "retrieval", "function" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $type = null;

    /**
     * @var RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter|null
     * @SerializedName("code_interpreter")
     * @Assert\Type("OpenAPI\Server\Model\RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter")
     * @Type("OpenAPI\Server\Model\RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter")
     */
    protected ?RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter $codeInterpreter = null;

    /**
     * For now, this is always going to be an empty object.
     *
     * @var array|null
     * @SerializedName("retrieval")
     * @Assert\Type("array")
     * @Type("array")
     */
    protected ?array $retrieval = null;

    /**
     * @var RunStepDeltaStepDetailsToolCallsFunctionObjectFunction|null
     * @SerializedName("function")
     * @Assert\Type("OpenAPI\Server\Model\RunStepDeltaStepDetailsToolCallsFunctionObjectFunction")
     * @Type("OpenAPI\Server\Model\RunStepDeltaStepDetailsToolCallsFunctionObjectFunction")
     */
    protected ?RunStepDeltaStepDetailsToolCallsFunctionObjectFunction $function = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->index = array_key_exists('index', $data) ? $data['index'] : $this->index;
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->codeInterpreter = array_key_exists('codeInterpreter', $data) ? $data['codeInterpreter'] : $this->codeInterpreter;
            $this->retrieval = array_key_exists('retrieval', $data) ? $data['retrieval'] : $this->retrieval;
            $this->function = array_key_exists('function', $data) ? $data['function'] : $this->function;
        }
    }

    /**
     * Gets index.
     *
     * @return int|null
     */
    public function getIndex(): ?int
    {
        return $this->index;
    }



    /**
     * Sets index.
     *
     * @param int|null $index  The index of the tool call in the tool calls array.
     *
     * @return $this
     */
    public function setIndex(?int $index): self
    {
        $this->index = $index;

        return $this;
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }



    /**
     * Sets id.
     *
     * @param string|null $id  The ID of the tool call object.
     *
     * @return $this
     */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets type.
     *
     * @return string|null
     */
    public function getType(): ?string
    {
        return $this->type;
    }



    /**
     * Sets type.
     *
     * @param string|null $type  The type of tool call. This is always going to be `code_interpreter` for this type of tool call.
     *
     * @return $this
     */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Gets codeInterpreter.
     *
     * @return RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter|null
     */
    public function getCodeInterpreter(): ?RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter
    {
        return $this->codeInterpreter;
    }



    /**
     * Sets codeInterpreter.
     *
     * @param RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter|null $codeInterpreter
     *
     * @return $this
     */
    public function setCodeInterpreter(?RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter $codeInterpreter = null): self
    {
        $this->codeInterpreter = $codeInterpreter;

        return $this;
    }

    /**
     * Gets retrieval.
     *
     * @return array|null
     */
    public function getRetrieval(): ?array
    {
        return $this->retrieval;
    }



    /**
     * Sets retrieval.
     *
     * @param array|null $retrieval  For now, this is always going to be an empty object.
     *
     * @return $this
     */
    public function setRetrieval(?array $retrieval = null): self
    {
        $this->retrieval = $retrieval;

        return $this;
    }

    /**
     * Gets function.
     *
     * @return RunStepDeltaStepDetailsToolCallsFunctionObjectFunction|null
     */
    public function getFunction(): ?RunStepDeltaStepDetailsToolCallsFunctionObjectFunction
    {
        return $this->function;
    }



    /**
     * Sets function.
     *
     * @param RunStepDeltaStepDetailsToolCallsFunctionObjectFunction|null $function
     *
     * @return $this
     */
    public function setFunction(?RunStepDeltaStepDetailsToolCallsFunctionObjectFunction $function = null): self
    {
        $this->function = $function;

        return $this;
    }
}


