<?php
/**
 * RunToolCallObjectFunction
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the RunToolCallObjectFunction model.
 *
 * The function definition.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class RunToolCallObjectFunction 
{
        /**
     * The name of the function.
     *
     * @var string|null
     * @SerializedName("name")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $name = null;

    /**
     * The arguments that the model expects you to pass to the function.
     *
     * @var string|null
     * @SerializedName("arguments")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $arguments = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->arguments = array_key_exists('arguments', $data) ? $data['arguments'] : $this->arguments;
        }
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }



    /**
     * Sets name.
     *
     * @param string|null $name  The name of the function.
     *
     * @return $this
     */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets arguments.
     *
     * @return string|null
     */
    public function getArguments(): ?string
    {
        return $this->arguments;
    }



    /**
     * Sets arguments.
     *
     * @param string|null $arguments  The arguments that the model expects you to pass to the function.
     *
     * @return $this
     */
    public function setArguments(?string $arguments): self
    {
        $this->arguments = $arguments;

        return $this;
    }
}


