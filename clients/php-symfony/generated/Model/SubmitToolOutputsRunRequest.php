<?php
/**
 * SubmitToolOutputsRunRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the SubmitToolOutputsRunRequest model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class SubmitToolOutputsRunRequest 
{
        /**
     * A list of tools for which the outputs are being submitted.
     *
     * @var SubmitToolOutputsRunRequestToolOutputsInner[]|null
     * @SerializedName("tool_outputs")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\SubmitToolOutputsRunRequestToolOutputsInner")
     * })
     * @Type("array<OpenAPI\Server\Model\SubmitToolOutputsRunRequestToolOutputsInner>")
     */
    protected ?array $toolOutputs = null;

    /**
     * If &#x60;true&#x60;, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a &#x60;data: [DONE]&#x60; message.
     *
     * @var bool|null
     * @SerializedName("stream")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $stream = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->toolOutputs = array_key_exists('toolOutputs', $data) ? $data['toolOutputs'] : $this->toolOutputs;
            $this->stream = array_key_exists('stream', $data) ? $data['stream'] : $this->stream;
        }
    }

    /**
     * Gets toolOutputs.
     *
     * @return SubmitToolOutputsRunRequestToolOutputsInner[]|null
     */
    public function getToolOutputs(): ?array
    {
        return $this->toolOutputs;
    }



    /**
     * Sets toolOutputs.
     *
     * @param SubmitToolOutputsRunRequestToolOutputsInner[]|null $toolOutputs  A list of tools for which the outputs are being submitted.
     *
     * @return $this
     */
    public function setToolOutputs(?array $toolOutputs): self
    {
        $this->toolOutputs = $toolOutputs;

        return $this;
    }

    /**
     * Gets stream.
     *
     * @return bool|null
     */
    public function isStream(): ?bool
    {
        return $this->stream;
    }



    /**
     * Sets stream.
     *
     * @param bool|null $stream  If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message.
     *
     * @return $this
     */
    public function setStream(?bool $stream = null): self
    {
        $this->stream = $stream;

        return $this;
    }
}


