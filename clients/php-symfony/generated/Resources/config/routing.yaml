# NOTE: This file is auto generated by the openapi generator program.
# https://github.com/openapitools/openapi-generator
# Do not edit the class manually.

# assistants
open_api_server_assistants_cancelrun:
    path:     /threads/{thread_id}/runs/{run_id}/cancel
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::cancelRunAction
    requirements:
        threadId: '[a-z0-9]+'
        runId: '[a-z0-9]+'

open_api_server_assistants_createassistant:
    path:     /assistants
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::createAssistantAction

open_api_server_assistants_createassistantfile:
    path:     /assistants/{assistant_id}/files
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::createAssistantFileAction
    requirements:
        assistantId: '[a-z0-9]+'

open_api_server_assistants_createmessage:
    path:     /threads/{thread_id}/messages
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::createMessageAction
    requirements:
        threadId: '[a-z0-9]+'

open_api_server_assistants_createrun:
    path:     /threads/{thread_id}/runs
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::createRunAction
    requirements:
        threadId: '[a-z0-9]+'

open_api_server_assistants_createthread:
    path:     /threads
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::createThreadAction

open_api_server_assistants_createthreadandrun:
    path:     /threads/runs
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::createThreadAndRunAction

open_api_server_assistants_deleteassistant:
    path:     /assistants/{assistant_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.assistants::deleteAssistantAction
    requirements:
        assistantId: '[a-z0-9]+'

open_api_server_assistants_deleteassistantfile:
    path:     /assistants/{assistant_id}/files/{file_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.assistants::deleteAssistantFileAction
    requirements:
        assistantId: '[a-z0-9]+'
        fileId: '[a-z0-9]+'

open_api_server_assistants_deletethread:
    path:     /threads/{thread_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.assistants::deleteThreadAction
    requirements:
        threadId: '[a-z0-9]+'

open_api_server_assistants_getassistant:
    path:     /assistants/{assistant_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::getAssistantAction
    requirements:
        assistantId: '[a-z0-9]+'

open_api_server_assistants_getassistantfile:
    path:     /assistants/{assistant_id}/files/{file_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::getAssistantFileAction
    requirements:
        assistantId: '[a-z0-9]+'
        fileId: '[a-z0-9]+'

open_api_server_assistants_getmessage:
    path:     /threads/{thread_id}/messages/{message_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::getMessageAction
    requirements:
        threadId: '[a-z0-9]+'
        messageId: '[a-z0-9]+'

open_api_server_assistants_getmessagefile:
    path:     /threads/{thread_id}/messages/{message_id}/files/{file_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::getMessageFileAction
    requirements:
        threadId: '[a-z0-9]+'
        messageId: '[a-z0-9]+'
        fileId: '[a-z0-9]+'

open_api_server_assistants_getrun:
    path:     /threads/{thread_id}/runs/{run_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::getRunAction
    requirements:
        threadId: '[a-z0-9]+'
        runId: '[a-z0-9]+'

open_api_server_assistants_getrunstep:
    path:     /threads/{thread_id}/runs/{run_id}/steps/{step_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::getRunStepAction
    requirements:
        threadId: '[a-z0-9]+'
        runId: '[a-z0-9]+'
        stepId: '[a-z0-9]+'

open_api_server_assistants_getthread:
    path:     /threads/{thread_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::getThreadAction
    requirements:
        threadId: '[a-z0-9]+'

open_api_server_assistants_listassistantfiles:
    path:     /assistants/{assistant_id}/files
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::listAssistantFilesAction
    requirements:
        assistantId: '[a-z0-9]+'

open_api_server_assistants_listassistants:
    path:     /assistants
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::listAssistantsAction

open_api_server_assistants_listmessagefiles:
    path:     /threads/{thread_id}/messages/{message_id}/files
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::listMessageFilesAction
    requirements:
        threadId: '[a-z0-9]+'
        messageId: '[a-z0-9]+'

open_api_server_assistants_listmessages:
    path:     /threads/{thread_id}/messages
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::listMessagesAction
    requirements:
        threadId: '[a-z0-9]+'

open_api_server_assistants_listrunsteps:
    path:     /threads/{thread_id}/runs/{run_id}/steps
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::listRunStepsAction
    requirements:
        threadId: '[a-z0-9]+'
        runId: '[a-z0-9]+'

open_api_server_assistants_listruns:
    path:     /threads/{thread_id}/runs
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.assistants::listRunsAction
    requirements:
        threadId: '[a-z0-9]+'

open_api_server_assistants_modifyassistant:
    path:     /assistants/{assistant_id}
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::modifyAssistantAction
    requirements:
        assistantId: '[a-z0-9]+'

open_api_server_assistants_modifymessage:
    path:     /threads/{thread_id}/messages/{message_id}
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::modifyMessageAction
    requirements:
        threadId: '[a-z0-9]+'
        messageId: '[a-z0-9]+'

open_api_server_assistants_modifyrun:
    path:     /threads/{thread_id}/runs/{run_id}
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::modifyRunAction
    requirements:
        threadId: '[a-z0-9]+'
        runId: '[a-z0-9]+'

open_api_server_assistants_modifythread:
    path:     /threads/{thread_id}
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::modifyThreadAction
    requirements:
        threadId: '[a-z0-9]+'

open_api_server_assistants_submittoolouputstorun:
    path:     /threads/{thread_id}/runs/{run_id}/submit_tool_outputs
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.assistants::submitToolOuputsToRunAction
    requirements:
        threadId: '[a-z0-9]+'
        runId: '[a-z0-9]+'

# audio
open_api_server_audio_createspeech:
    path:     /audio/speech
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.audio::createSpeechAction

open_api_server_audio_createtranscription:
    path:     /audio/transcriptions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.audio::createTranscriptionAction

open_api_server_audio_createtranslation:
    path:     /audio/translations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.audio::createTranslationAction

# chat
open_api_server_chat_createchatcompletion:
    path:     /chat/completions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.chat::createChatCompletionAction

# completions
open_api_server_completions_createcompletion:
    path:     /completions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.completions::createCompletionAction

# embeddings
open_api_server_embeddings_createembedding:
    path:     /embeddings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.embeddings::createEmbeddingAction

# files
open_api_server_files_createfile:
    path:     /files
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.files::createFileAction

open_api_server_files_deletefile:
    path:     /files/{file_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.files::deleteFileAction
    requirements:
        fileId: '[a-z0-9]+'

open_api_server_files_downloadfile:
    path:     /files/{file_id}/content
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.files::downloadFileAction
    requirements:
        fileId: '[a-z0-9]+'

open_api_server_files_listfiles:
    path:     /files
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.files::listFilesAction

open_api_server_files_retrievefile:
    path:     /files/{file_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.files::retrieveFileAction
    requirements:
        fileId: '[a-z0-9]+'

# fineTuning
open_api_server_fineTuning_cancelfinetuningjob:
    path:     /fine_tuning/jobs/{fine_tuning_job_id}/cancel
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fineTuning::cancelFineTuningJobAction
    requirements:
        fineTuningJobId: '[a-z0-9]+'

open_api_server_fineTuning_createfinetuningjob:
    path:     /fine_tuning/jobs
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fineTuning::createFineTuningJobAction

open_api_server_fineTuning_listfinetuningevents:
    path:     /fine_tuning/jobs/{fine_tuning_job_id}/events
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fineTuning::listFineTuningEventsAction
    requirements:
        fineTuningJobId: '[a-z0-9]+'

open_api_server_fineTuning_listfinetuningjobcheckpoints:
    path:     /fine_tuning/jobs/{fine_tuning_job_id}/checkpoints
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fineTuning::listFineTuningJobCheckpointsAction
    requirements:
        fineTuningJobId: '[a-z0-9]+'

open_api_server_fineTuning_listpaginatedfinetuningjobs:
    path:     /fine_tuning/jobs
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fineTuning::listPaginatedFineTuningJobsAction

open_api_server_fineTuning_retrievefinetuningjob:
    path:     /fine_tuning/jobs/{fine_tuning_job_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fineTuning::retrieveFineTuningJobAction
    requirements:
        fineTuningJobId: '[a-z0-9]+'

# images
open_api_server_images_createimage:
    path:     /images/generations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.images::createImageAction

open_api_server_images_createimageedit:
    path:     /images/edits
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.images::createImageEditAction

open_api_server_images_createimagevariation:
    path:     /images/variations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.images::createImageVariationAction

# models
open_api_server_models_deletemodel:
    path:     /models/{model}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.models::deleteModelAction
    requirements:
        model: '[a-z0-9]+'

open_api_server_models_listmodels:
    path:     /models
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.models::listModelsAction

open_api_server_models_retrievemodel:
    path:     /models/{model}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.models::retrieveModelAction
    requirements:
        model: '[a-z0-9]+'

# moderations
open_api_server_moderations_createmoderation:
    path:     /moderations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.moderations::createModerationAction

