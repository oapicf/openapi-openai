<?php
/**
 * AssistantsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AssistantsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AssistantsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for cancelRun
     *
     * Cancels a run that is `in_progress`..
     *
     */
    public function testCancelRun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAssistant
     *
     * Create an assistant with a model and instructions..
     *
     */
    public function testCreateAssistant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAssistantFile
     *
     * Create an assistant file by attaching a [File](/docs/api-reference/files) to an [assistant](/docs/api-reference/assistants)..
     *
     */
    public function testCreateAssistantFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createMessage
     *
     * Create a message..
     *
     */
    public function testCreateMessage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createRun
     *
     * Create a run..
     *
     */
    public function testCreateRun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createThread
     *
     * Create a thread..
     *
     */
    public function testCreateThread()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createThreadAndRun
     *
     * Create a thread and run it in one request..
     *
     */
    public function testCreateThreadAndRun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAssistant
     *
     * Delete an assistant..
     *
     */
    public function testDeleteAssistant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAssistantFile
     *
     * Delete an assistant file..
     *
     */
    public function testDeleteAssistantFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteThread
     *
     * Delete a thread..
     *
     */
    public function testDeleteThread()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAssistant
     *
     * Retrieves an assistant..
     *
     */
    public function testGetAssistant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAssistantFile
     *
     * Retrieves an AssistantFile..
     *
     */
    public function testGetAssistantFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMessage
     *
     * Retrieve a message..
     *
     */
    public function testGetMessage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMessageFile
     *
     * Retrieves a message file..
     *
     */
    public function testGetMessageFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRun
     *
     * Retrieves a run..
     *
     */
    public function testGetRun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRunStep
     *
     * Retrieves a run step..
     *
     */
    public function testGetRunStep()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getThread
     *
     * Retrieves a thread..
     *
     */
    public function testGetThread()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAssistantFiles
     *
     * Returns a list of assistant files..
     *
     */
    public function testListAssistantFiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAssistants
     *
     * Returns a list of assistants..
     *
     */
    public function testListAssistants()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listMessageFiles
     *
     * Returns a list of message files..
     *
     */
    public function testListMessageFiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listMessages
     *
     * Returns a list of messages for a given thread..
     *
     */
    public function testListMessages()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listRunSteps
     *
     * Returns a list of run steps belonging to a run..
     *
     */
    public function testListRunSteps()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listRuns
     *
     * Returns a list of runs belonging to a thread..
     *
     */
    public function testListRuns()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifyAssistant
     *
     * Modifies an assistant..
     *
     */
    public function testModifyAssistant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifyMessage
     *
     * Modifies a message..
     *
     */
    public function testModifyMessage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifyRun
     *
     * Modifies a run..
     *
     */
    public function testModifyRun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifyThread
     *
     * Modifies a thread..
     *
     */
    public function testModifyThread()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitToolOuputsToRun
     *
     * When a run has the `status: \"requires_action\"` and `required_action.type` is `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request..
     *
     */
    public function testSubmitToolOuputsToRun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
