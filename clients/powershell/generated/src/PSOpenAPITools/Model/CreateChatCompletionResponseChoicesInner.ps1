#
# OpenAI API
# APIs for sampling from and fine-tuning language models
# Version: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Index
No description available.
.PARAMETER Message
No description available.
.PARAMETER FinishReason
No description available.
.OUTPUTS

CreateChatCompletionResponseChoicesInner<PSCustomObject>
#>

function Initialize-CreateChatCompletionResponseChoicesInner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Index},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Message},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("stop", "length", "function_call")]
        [String]
        ${FinishReason}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CreateChatCompletionResponseChoicesInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "index" = ${Index}
            "message" = ${Message}
            "finish_reason" = ${FinishReason}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CreateChatCompletionResponseChoicesInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to CreateChatCompletionResponseChoicesInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CreateChatCompletionResponseChoicesInner<PSCustomObject>
#>
function ConvertFrom-JsonToCreateChatCompletionResponseChoicesInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CreateChatCompletionResponseChoicesInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CreateChatCompletionResponseChoicesInner
        $AllProperties = ("index", "message", "finish_reason")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "index"))) { #optional property not found
            $Index = $null
        } else {
            $Index = $JsonParameters.PSobject.Properties["index"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "message"))) { #optional property not found
            $Message = $null
        } else {
            $Message = $JsonParameters.PSobject.Properties["message"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "finish_reason"))) { #optional property not found
            $FinishReason = $null
        } else {
            $FinishReason = $JsonParameters.PSobject.Properties["finish_reason"].value
        }

        $PSO = [PSCustomObject]@{
            "index" = ${Index}
            "message" = ${Message}
            "finish_reason" = ${FinishReason}
        }

        return $PSO
    }

}

