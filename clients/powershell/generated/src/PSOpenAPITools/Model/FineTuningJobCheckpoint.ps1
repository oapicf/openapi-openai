#
# OpenAI API
# The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
# Version: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The `fine_tuning.job.checkpoint` object represents a model checkpoint for a fine-tuning job that is ready to use. 

.PARAMETER Id
The checkpoint identifier, which can be referenced in the API endpoints.
.PARAMETER CreatedAt
The Unix timestamp (in seconds) for when the checkpoint was created.
.PARAMETER FineTunedModelCheckpoint
The name of the fine-tuned checkpoint model that is created.
.PARAMETER StepNumber
The step number that the checkpoint was created at.
.PARAMETER Metrics
No description available.
.PARAMETER FineTuningJobId
The name of the fine-tuning job that this checkpoint was created from.
.PARAMETER Object
The object type, which is always ""fine_tuning.job.checkpoint"".
.OUTPUTS

FineTuningJobCheckpoint<PSCustomObject>
#>

function Initialize-FineTuningJobCheckpoint {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [Int32]
        ${CreatedAt},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FineTunedModelCheckpoint},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [Int32]
        ${StepNumber},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Metrics},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FineTuningJobId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("fine_tuning.job.checkpoint")]
        [String]
        ${Object}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => FineTuningJobCheckpoint' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Id) {
            throw "invalid value for 'Id', 'Id' cannot be null."
        }

        if ($null -eq $CreatedAt) {
            throw "invalid value for 'CreatedAt', 'CreatedAt' cannot be null."
        }

        if ($null -eq $FineTunedModelCheckpoint) {
            throw "invalid value for 'FineTunedModelCheckpoint', 'FineTunedModelCheckpoint' cannot be null."
        }

        if ($null -eq $StepNumber) {
            throw "invalid value for 'StepNumber', 'StepNumber' cannot be null."
        }

        if ($null -eq $Metrics) {
            throw "invalid value for 'Metrics', 'Metrics' cannot be null."
        }

        if ($null -eq $FineTuningJobId) {
            throw "invalid value for 'FineTuningJobId', 'FineTuningJobId' cannot be null."
        }

        if ($null -eq $Object) {
            throw "invalid value for 'Object', 'Object' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "created_at" = ${CreatedAt}
            "fine_tuned_model_checkpoint" = ${FineTunedModelCheckpoint}
            "step_number" = ${StepNumber}
            "metrics" = ${Metrics}
            "fine_tuning_job_id" = ${FineTuningJobId}
            "object" = ${Object}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FineTuningJobCheckpoint<PSCustomObject>

.DESCRIPTION

Convert from JSON to FineTuningJobCheckpoint<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FineTuningJobCheckpoint<PSCustomObject>
#>
function ConvertFrom-JsonToFineTuningJobCheckpoint {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => FineTuningJobCheckpoint' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in FineTuningJobCheckpoint
        $AllProperties = ("id", "created_at", "fine_tuned_model_checkpoint", "step_number", "metrics", "fine_tuning_job_id", "object")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'id' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'id' missing."
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "created_at"))) {
            throw "Error! JSON cannot be serialized due to the required property 'created_at' missing."
        } else {
            $CreatedAt = $JsonParameters.PSobject.Properties["created_at"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fine_tuned_model_checkpoint"))) {
            throw "Error! JSON cannot be serialized due to the required property 'fine_tuned_model_checkpoint' missing."
        } else {
            $FineTunedModelCheckpoint = $JsonParameters.PSobject.Properties["fine_tuned_model_checkpoint"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "step_number"))) {
            throw "Error! JSON cannot be serialized due to the required property 'step_number' missing."
        } else {
            $StepNumber = $JsonParameters.PSobject.Properties["step_number"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "metrics"))) {
            throw "Error! JSON cannot be serialized due to the required property 'metrics' missing."
        } else {
            $Metrics = $JsonParameters.PSobject.Properties["metrics"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fine_tuning_job_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'fine_tuning_job_id' missing."
        } else {
            $FineTuningJobId = $JsonParameters.PSobject.Properties["fine_tuning_job_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "object"))) {
            throw "Error! JSON cannot be serialized due to the required property 'object' missing."
        } else {
            $Object = $JsonParameters.PSobject.Properties["object"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "created_at" = ${CreatedAt}
            "fine_tuned_model_checkpoint" = ${FineTunedModelCheckpoint}
            "step_number" = ${StepNumber}
            "metrics" = ${Metrics}
            "fine_tuning_job_id" = ${FineTuningJobId}
            "object" = ${Object}
        }

        return $PSO
    }

}

