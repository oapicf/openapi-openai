#
# OpenAI API
# The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
# Version: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Metrics at the step number during the fine-tuning job.

.PARAMETER Step
No description available.
.PARAMETER TrainLoss
No description available.
.PARAMETER TrainMeanTokenAccuracy
No description available.
.PARAMETER ValidLoss
No description available.
.PARAMETER ValidMeanTokenAccuracy
No description available.
.PARAMETER FullValidLoss
No description available.
.PARAMETER FullValidMeanTokenAccuracy
No description available.
.OUTPUTS

FineTuningJobCheckpointMetrics<PSCustomObject>
#>

function Initialize-FineTuningJobCheckpointMetrics {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${Step},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${TrainLoss},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${TrainMeanTokenAccuracy},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${ValidLoss},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${ValidMeanTokenAccuracy},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${FullValidLoss},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${FullValidMeanTokenAccuracy}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => FineTuningJobCheckpointMetrics' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "step" = ${Step}
            "train_loss" = ${TrainLoss}
            "train_mean_token_accuracy" = ${TrainMeanTokenAccuracy}
            "valid_loss" = ${ValidLoss}
            "valid_mean_token_accuracy" = ${ValidMeanTokenAccuracy}
            "full_valid_loss" = ${FullValidLoss}
            "full_valid_mean_token_accuracy" = ${FullValidMeanTokenAccuracy}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FineTuningJobCheckpointMetrics<PSCustomObject>

.DESCRIPTION

Convert from JSON to FineTuningJobCheckpointMetrics<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FineTuningJobCheckpointMetrics<PSCustomObject>
#>
function ConvertFrom-JsonToFineTuningJobCheckpointMetrics {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => FineTuningJobCheckpointMetrics' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in FineTuningJobCheckpointMetrics
        $AllProperties = ("step", "train_loss", "train_mean_token_accuracy", "valid_loss", "valid_mean_token_accuracy", "full_valid_loss", "full_valid_mean_token_accuracy")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "step"))) { #optional property not found
            $Step = $null
        } else {
            $Step = $JsonParameters.PSobject.Properties["step"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "train_loss"))) { #optional property not found
            $TrainLoss = $null
        } else {
            $TrainLoss = $JsonParameters.PSobject.Properties["train_loss"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "train_mean_token_accuracy"))) { #optional property not found
            $TrainMeanTokenAccuracy = $null
        } else {
            $TrainMeanTokenAccuracy = $JsonParameters.PSobject.Properties["train_mean_token_accuracy"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "valid_loss"))) { #optional property not found
            $ValidLoss = $null
        } else {
            $ValidLoss = $JsonParameters.PSobject.Properties["valid_loss"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "valid_mean_token_accuracy"))) { #optional property not found
            $ValidMeanTokenAccuracy = $null
        } else {
            $ValidMeanTokenAccuracy = $JsonParameters.PSobject.Properties["valid_mean_token_accuracy"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "full_valid_loss"))) { #optional property not found
            $FullValidLoss = $null
        } else {
            $FullValidLoss = $JsonParameters.PSobject.Properties["full_valid_loss"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "full_valid_mean_token_accuracy"))) { #optional property not found
            $FullValidMeanTokenAccuracy = $null
        } else {
            $FullValidMeanTokenAccuracy = $JsonParameters.PSobject.Properties["full_valid_mean_token_accuracy"].value
        }

        $PSO = [PSCustomObject]@{
            "step" = ${Step}
            "train_loss" = ${TrainLoss}
            "train_mean_token_accuracy" = ${TrainMeanTokenAccuracy}
            "valid_loss" = ${ValidLoss}
            "valid_mean_token_accuracy" = ${ValidMeanTokenAccuracy}
            "full_valid_loss" = ${FullValidLoss}
            "full_valid_mean_token_accuracy" = ${FullValidMeanTokenAccuracy}
        }

        return $PSO
    }

}

