#
# OpenAI API
# The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
# Version: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

For fine-tuning jobs that have `failed`, this will contain more information on the cause of the failure.

.PARAMETER Code
A machine-readable error code.
.PARAMETER Message
A human-readable error message.
.PARAMETER VarParam
The parameter that was invalid, usually `training_file` or `validation_file`. This field will be null if the failure was not parameter-specific.
.OUTPUTS

FineTuningJobError<PSCustomObject>
#>

function Initialize-FineTuningJobError {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Code},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Message},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VarParam}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => FineTuningJobError' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Code) {
            throw "invalid value for 'Code', 'Code' cannot be null."
        }

        if ($null -eq $Message) {
            throw "invalid value for 'Message', 'Message' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "code" = ${Code}
            "message" = ${Message}
            "param" = ${VarParam}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FineTuningJobError<PSCustomObject>

.DESCRIPTION

Convert from JSON to FineTuningJobError<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FineTuningJobError<PSCustomObject>
#>
function ConvertFrom-JsonToFineTuningJobError {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => FineTuningJobError' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in FineTuningJobError
        $AllProperties = ("code", "message", "param")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'code' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "code"))) {
            throw "Error! JSON cannot be serialized due to the required property 'code' missing."
        } else {
            $Code = $JsonParameters.PSobject.Properties["code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "message"))) {
            throw "Error! JSON cannot be serialized due to the required property 'message' missing."
        } else {
            $Message = $JsonParameters.PSobject.Properties["message"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "param"))) {
            throw "Error! JSON cannot be serialized due to the required property 'param' missing."
        } else {
            $VarParam = $JsonParameters.PSobject.Properties["param"].value
        }

        $PSO = [PSCustomObject]@{
            "code" = ${Code}
            "message" = ${Message}
            "param" = ${VarParam}
        }

        return $PSO
    }

}

