#
# OpenAI API
# The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
# Version: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The Code Interpreter tool call definition.

.PARAMETER VarInput
The input to the Code Interpreter tool call.
.PARAMETER Outputs
The outputs from the Code Interpreter tool call. Code Interpreter can output one or more items, including text (`logs`) or images (`image`). Each of these are represented by a different object type.
.OUTPUTS

RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter<PSCustomObject>
#>

function Initialize-RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VarInput},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Outputs}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "input" = ${VarInput}
            "outputs" = ${Outputs}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter<PSCustomObject>

.DESCRIPTION

Convert from JSON to RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter<PSCustomObject>
#>
function ConvertFrom-JsonToRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter
        $AllProperties = ("input", "outputs")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "input"))) { #optional property not found
            $VarInput = $null
        } else {
            $VarInput = $JsonParameters.PSobject.Properties["input"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "outputs"))) { #optional property not found
            $Outputs = $null
        } else {
            $Outputs = $JsonParameters.PSobject.Properties["outputs"].value
        }

        $PSO = [PSCustomObject]@{
            "input" = ${VarInput}
            "outputs" = ${Outputs}
        }

        return $PSO
    }

}

