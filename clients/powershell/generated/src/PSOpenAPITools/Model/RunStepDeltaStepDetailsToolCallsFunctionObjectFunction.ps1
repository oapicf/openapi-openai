#
# OpenAI API
# The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
# Version: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The definition of the function that was called.

.PARAMETER Name
The name of the function.
.PARAMETER Arguments
The arguments passed to the function.
.PARAMETER Output
The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet.
.OUTPUTS

RunStepDeltaStepDetailsToolCallsFunctionObjectFunction<PSCustomObject>
#>

function Initialize-RunStepDeltaStepDetailsToolCallsFunctionObjectFunction {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Arguments},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Output}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => RunStepDeltaStepDetailsToolCallsFunctionObjectFunction' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "arguments" = ${Arguments}
            "output" = ${Output}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to RunStepDeltaStepDetailsToolCallsFunctionObjectFunction<PSCustomObject>

.DESCRIPTION

Convert from JSON to RunStepDeltaStepDetailsToolCallsFunctionObjectFunction<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

RunStepDeltaStepDetailsToolCallsFunctionObjectFunction<PSCustomObject>
#>
function ConvertFrom-JsonToRunStepDeltaStepDetailsToolCallsFunctionObjectFunction {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => RunStepDeltaStepDetailsToolCallsFunctionObjectFunction' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RunStepDeltaStepDetailsToolCallsFunctionObjectFunction
        $AllProperties = ("name", "arguments", "output")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "arguments"))) { #optional property not found
            $Arguments = $null
        } else {
            $Arguments = $JsonParameters.PSobject.Properties["arguments"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "output"))) { #optional property not found
            $Output = $null
        } else {
            $Output = $JsonParameters.PSobject.Properties["output"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "arguments" = ${Arguments}
            "output" = ${Output}
        }

        return $PSO
    }

}

