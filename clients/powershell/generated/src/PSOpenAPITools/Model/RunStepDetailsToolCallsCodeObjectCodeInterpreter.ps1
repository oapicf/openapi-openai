#
# OpenAI API
# The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
# Version: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The Code Interpreter tool call definition.

.PARAMETER VarInput
The input to the Code Interpreter tool call.
.PARAMETER Outputs
The outputs from the Code Interpreter tool call. Code Interpreter can output one or more items, including text (`logs`) or images (`image`). Each of these are represented by a different object type.
.OUTPUTS

RunStepDetailsToolCallsCodeObjectCodeInterpreter<PSCustomObject>
#>

function Initialize-RunStepDetailsToolCallsCodeObjectCodeInterpreter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VarInput},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Outputs}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => RunStepDetailsToolCallsCodeObjectCodeInterpreter' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $VarInput) {
            throw "invalid value for 'VarInput', 'VarInput' cannot be null."
        }

        if ($null -eq $Outputs) {
            throw "invalid value for 'Outputs', 'Outputs' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "input" = ${VarInput}
            "outputs" = ${Outputs}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to RunStepDetailsToolCallsCodeObjectCodeInterpreter<PSCustomObject>

.DESCRIPTION

Convert from JSON to RunStepDetailsToolCallsCodeObjectCodeInterpreter<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

RunStepDetailsToolCallsCodeObjectCodeInterpreter<PSCustomObject>
#>
function ConvertFrom-JsonToRunStepDetailsToolCallsCodeObjectCodeInterpreter {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => RunStepDetailsToolCallsCodeObjectCodeInterpreter' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RunStepDetailsToolCallsCodeObjectCodeInterpreter
        $AllProperties = ("input", "outputs")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'input' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "input"))) {
            throw "Error! JSON cannot be serialized due to the required property 'input' missing."
        } else {
            $VarInput = $JsonParameters.PSobject.Properties["input"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "outputs"))) {
            throw "Error! JSON cannot be serialized due to the required property 'outputs' missing."
        } else {
            $Outputs = $JsonParameters.PSobject.Properties["outputs"].value
        }

        $PSO = [PSCustomObject]@{
            "input" = ${VarInput}
            "outputs" = ${Outputs}
        }

        return $PSO
    }

}

