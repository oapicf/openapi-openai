#
# OpenAI API
# The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
# Version: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Type
The truncation strategy to use for the thread. The default is `auto`. If set to `last_messages`, the thread will be truncated to the n most recent messages in the thread. When set to `auto`, messages in the middle of the thread will be dropped to fit the context length of the model, `max_prompt_tokens`.
.PARAMETER LastMessages
The number of most recent messages from the thread when constructing the context for the run.
.OUTPUTS

TruncationObject<PSCustomObject>
#>

function Initialize-TruncationObject {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("auto", "last_messages")]
        [String]
        ${Type},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${LastMessages}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => TruncationObject' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($LastMessages -and $LastMessages -lt 1) {
          throw "invalid value for 'LastMessages', must be greater than or equal to 1."
        }


        $PSO = [PSCustomObject]@{
            "type" = ${Type}
            "last_messages" = ${LastMessages}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TruncationObject<PSCustomObject>

.DESCRIPTION

Convert from JSON to TruncationObject<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TruncationObject<PSCustomObject>
#>
function ConvertFrom-JsonToTruncationObject {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => TruncationObject' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TruncationObject
        $AllProperties = ("type", "last_messages")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_messages"))) { #optional property not found
            $LastMessages = $null
        } else {
            $LastMessages = $JsonParameters.PSobject.Properties["last_messages"].value
        }

        $PSO = [PSCustomObject]@{
            "type" = ${Type}
            "last_messages" = ${LastMessages}
        }

        return $PSO
    }

}

