#
# OpenAI API
# APIs for sampling from and fine-tuning language models
# Version: 2.0.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'OpenAIApi' {
    Context 'Stop-FineTune' {
        It 'Test Stop-FineTune' {
            #$TestResult = Stop-FineTune -FineTuneId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-ChatCompletion' {
        It 'Test New-ChatCompletion' {
            #$TestResult = New-ChatCompletion -CreateChatCompletionRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Completion' {
        It 'Test New-Completion' {
            #$TestResult = New-Completion -CreateCompletionRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Edit' {
        It 'Test New-Edit' {
            #$TestResult = New-Edit -CreateEditRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Embedding' {
        It 'Test New-Embedding' {
            #$TestResult = New-Embedding -CreateEmbeddingRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-File' {
        It 'Test New-File' {
            #$TestResult = New-File -File "TEST_VALUE" -Purpose "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-FineTune' {
        It 'Test New-FineTune' {
            #$TestResult = New-FineTune -CreateFineTuneRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Image' {
        It 'Test New-Image' {
            #$TestResult = New-Image -CreateImageRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-ImageEdit' {
        It 'Test New-ImageEdit' {
            #$TestResult = New-ImageEdit -Image "TEST_VALUE" -Prompt "TEST_VALUE" -Mask "TEST_VALUE" -N "TEST_VALUE" -Size "TEST_VALUE" -ResponseFormat "TEST_VALUE" -User "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-ImageVariation' {
        It 'Test New-ImageVariation' {
            #$TestResult = New-ImageVariation -Image "TEST_VALUE" -N "TEST_VALUE" -Size "TEST_VALUE" -ResponseFormat "TEST_VALUE" -User "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Moderation' {
        It 'Test New-Moderation' {
            #$TestResult = New-Moderation -CreateModerationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Transcription' {
        It 'Test New-Transcription' {
            #$TestResult = New-Transcription -File "TEST_VALUE" -Model "TEST_VALUE" -Prompt "TEST_VALUE" -ResponseFormat "TEST_VALUE" -Temperature "TEST_VALUE" -Language "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Translation' {
        It 'Test New-Translation' {
            #$TestResult = New-Translation -File "TEST_VALUE" -Model "TEST_VALUE" -Prompt "TEST_VALUE" -ResponseFormat "TEST_VALUE" -Temperature "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteFile' {
        It 'Test Invoke-DeleteFile' {
            #$TestResult = Invoke-DeleteFile -FileId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteModel' {
        It 'Test Invoke-DeleteModel' {
            #$TestResult = Invoke-DeleteModel -Model "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DownloadFile' {
        It 'Test Invoke-DownloadFile' {
            #$TestResult = Invoke-DownloadFile -FileId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListFiles' {
        It 'Test Invoke-ListFiles' {
            #$TestResult = Invoke-ListFiles
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListFineTuneEvents' {
        It 'Test Invoke-ListFineTuneEvents' {
            #$TestResult = Invoke-ListFineTuneEvents -FineTuneId "TEST_VALUE" -Stream "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListFineTunes' {
        It 'Test Invoke-ListFineTunes' {
            #$TestResult = Invoke-ListFineTunes
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListModels' {
        It 'Test Invoke-ListModels' {
            #$TestResult = Invoke-ListModels
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RetrieveFile' {
        It 'Test Invoke-RetrieveFile' {
            #$TestResult = Invoke-RetrieveFile -FileId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RetrieveFineTune' {
        It 'Test Invoke-RetrieveFineTune' {
            #$TestResult = Invoke-RetrieveFineTune -FineTuneId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RetrieveModel' {
        It 'Test Invoke-RetrieveModel' {
            #$TestResult = Invoke-RetrieveModel -Model "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
