/*
  OpenAI API

  The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

  The version of the OpenAPI document: 2.0.0

  Contact: blah+oapicf@cliffano.com

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools;

import public "models/assistant_object_tools_inner.proto";
import public "models/assistants_api_response_format_option.proto";
import public "models/assistants_api_tool_choice_option.proto";
import public "models/create_message_request.proto";
import public "models/create_run_request_model.proto";
import public "models/todo_object_mapping.proto";
import public "models/truncation_object.proto";

message CreateRunRequest {

  // The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.
  string assistant_id = 396383718;

  CreateRunRequestModel model = 104069929;

  // Overrides the [instructions](/docs/api-reference/assistants/createAssistant) of the assistant. This is useful for modifying the behavior on a per-run basis.
  optional string instructions = 220505510;

  // Appends additional instructions at the end of the instructions for the run. This is useful for modifying the behavior on a per-run basis without overriding other instructions.
  optional string additional_instructions = 318754495;

  // Adds additional messages to the thread before creating the run.
  repeated CreateMessageRequest additional_messages = 364934757;

  // Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.
  repeated AssistantObjectToolsInner tools = 110545371;

  // Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
  TODO_OBJECT_MAPPING metadata = 450004177;

  // What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. 
  optional float temperature = 321701236;

  // If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message. 
  optional bool stream = 355119233;

  // The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of prompt tokens specified, the run will end with status `complete`. See `incomplete_details` for more info. 
  optional int32 max_prompt_tokens = 390515005;

  // The maximum number of completion tokens that may be used over the course of the run. The run will make a best effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds the number of completion tokens specified, the run will end with status `complete`. See `incomplete_details` for more info. 
  optional int32 max_completion_tokens = 454249795;

  TruncationObject truncation_strategy = 189201961;

  AssistantsApiToolChoiceOption tool_choice = 260999641;

  AssistantsApiResponseFormatOption response_format = 367445429;

}
