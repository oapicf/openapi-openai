# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_fine_tuning_job_request_integrations_inner_type import CreateFineTuningJobRequestIntegrationsInnerType
from openapi_server.models.create_fine_tuning_job_request_integrations_inner_wandb import CreateFineTuningJobRequestIntegrationsInnerWandb
from openapi_server import util


class CreateFineTuningJobRequestIntegrationsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: CreateFineTuningJobRequestIntegrationsInnerType=None, wandb: CreateFineTuningJobRequestIntegrationsInnerWandb=None):
        """CreateFineTuningJobRequestIntegrationsInner - a model defined in OpenAPI

        :param type: The type of this CreateFineTuningJobRequestIntegrationsInner.
        :param wandb: The wandb of this CreateFineTuningJobRequestIntegrationsInner.
        """
        self.openapi_types = {
            'type': CreateFineTuningJobRequestIntegrationsInnerType,
            'wandb': CreateFineTuningJobRequestIntegrationsInnerWandb
        }

        self.attribute_map = {
            'type': 'type',
            'wandb': 'wandb'
        }

        self._type = type
        self._wandb = wandb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFineTuningJobRequestIntegrationsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFineTuningJobRequest_integrations_inner of this CreateFineTuningJobRequestIntegrationsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this CreateFineTuningJobRequestIntegrationsInner.


        :return: The type of this CreateFineTuningJobRequestIntegrationsInner.
        :rtype: CreateFineTuningJobRequestIntegrationsInnerType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CreateFineTuningJobRequestIntegrationsInner.


        :param type: The type of this CreateFineTuningJobRequestIntegrationsInner.
        :type type: CreateFineTuningJobRequestIntegrationsInnerType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def wandb(self):
        """Gets the wandb of this CreateFineTuningJobRequestIntegrationsInner.


        :return: The wandb of this CreateFineTuningJobRequestIntegrationsInner.
        :rtype: CreateFineTuningJobRequestIntegrationsInnerWandb
        """
        return self._wandb

    @wandb.setter
    def wandb(self, wandb):
        """Sets the wandb of this CreateFineTuningJobRequestIntegrationsInner.


        :param wandb: The wandb of this CreateFineTuningJobRequestIntegrationsInner.
        :type wandb: CreateFineTuningJobRequestIntegrationsInnerWandb
        """
        if wandb is None:
            raise ValueError("Invalid value for `wandb`, must not be `None`")

        self._wandb = wandb
