# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_message_request import CreateMessageRequest
from openapi_server import util


class CreateThreadRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, messages: List[CreateMessageRequest]=None, metadata: object=None):
        """CreateThreadRequest - a model defined in OpenAPI

        :param messages: The messages of this CreateThreadRequest.
        :param metadata: The metadata of this CreateThreadRequest.
        """
        self.openapi_types = {
            'messages': List[CreateMessageRequest],
            'metadata': object
        }

        self.attribute_map = {
            'messages': 'messages',
            'metadata': 'metadata'
        }

        self._messages = messages
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateThreadRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateThreadRequest of this CreateThreadRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def messages(self):
        """Gets the messages of this CreateThreadRequest.

        A list of [messages](/docs/api-reference/messages) to start the thread with.

        :return: The messages of this CreateThreadRequest.
        :rtype: List[CreateMessageRequest]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this CreateThreadRequest.

        A list of [messages](/docs/api-reference/messages) to start the thread with.

        :param messages: The messages of this CreateThreadRequest.
        :type messages: List[CreateMessageRequest]
        """

        self._messages = messages

    @property
    def metadata(self):
        """Gets the metadata of this CreateThreadRequest.

        Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 

        :return: The metadata of this CreateThreadRequest.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this CreateThreadRequest.

        Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 

        :param metadata: The metadata of this CreateThreadRequest.
        :type metadata: object
        """

        self._metadata = metadata
