# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_delta_content_image_file_object import MessageDeltaContentImageFileObject
from openapi_server.models.message_delta_content_image_file_object_image_file import MessageDeltaContentImageFileObjectImageFile
from openapi_server.models.message_delta_content_text_object import MessageDeltaContentTextObject
from openapi_server.models.message_delta_content_text_object_text import MessageDeltaContentTextObjectText
from openapi_server import util


class MessageDeltaObjectDeltaContentInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index: int=None, type: str=None, image_file: MessageDeltaContentImageFileObjectImageFile=None, text: MessageDeltaContentTextObjectText=None):
        """MessageDeltaObjectDeltaContentInner - a model defined in OpenAPI

        :param index: The index of this MessageDeltaObjectDeltaContentInner.
        :param type: The type of this MessageDeltaObjectDeltaContentInner.
        :param image_file: The image_file of this MessageDeltaObjectDeltaContentInner.
        :param text: The text of this MessageDeltaObjectDeltaContentInner.
        """
        self.openapi_types = {
            'index': int,
            'type': str,
            'image_file': MessageDeltaContentImageFileObjectImageFile,
            'text': MessageDeltaContentTextObjectText
        }

        self.attribute_map = {
            'index': 'index',
            'type': 'type',
            'image_file': 'image_file',
            'text': 'text'
        }

        self._index = index
        self._type = type
        self._image_file = image_file
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageDeltaObjectDeltaContentInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MessageDeltaObject_delta_content_inner of this MessageDeltaObjectDeltaContentInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index(self):
        """Gets the index of this MessageDeltaObjectDeltaContentInner.

        The index of the content part in the message.

        :return: The index of this MessageDeltaObjectDeltaContentInner.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this MessageDeltaObjectDeltaContentInner.

        The index of the content part in the message.

        :param index: The index of this MessageDeltaObjectDeltaContentInner.
        :type index: int
        """
        if index is None:
            raise ValueError("Invalid value for `index`, must not be `None`")

        self._index = index

    @property
    def type(self):
        """Gets the type of this MessageDeltaObjectDeltaContentInner.

        Always `image_file`.

        :return: The type of this MessageDeltaObjectDeltaContentInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MessageDeltaObjectDeltaContentInner.

        Always `image_file`.

        :param type: The type of this MessageDeltaObjectDeltaContentInner.
        :type type: str
        """
        allowed_values = ["image_file", "text"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def image_file(self):
        """Gets the image_file of this MessageDeltaObjectDeltaContentInner.


        :return: The image_file of this MessageDeltaObjectDeltaContentInner.
        :rtype: MessageDeltaContentImageFileObjectImageFile
        """
        return self._image_file

    @image_file.setter
    def image_file(self, image_file):
        """Sets the image_file of this MessageDeltaObjectDeltaContentInner.


        :param image_file: The image_file of this MessageDeltaObjectDeltaContentInner.
        :type image_file: MessageDeltaContentImageFileObjectImageFile
        """

        self._image_file = image_file

    @property
    def text(self):
        """Gets the text of this MessageDeltaObjectDeltaContentInner.


        :return: The text of this MessageDeltaObjectDeltaContentInner.
        :rtype: MessageDeltaContentTextObjectText
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this MessageDeltaObjectDeltaContentInner.


        :param text: The text of this MessageDeltaObjectDeltaContentInner.
        :type text: MessageDeltaContentTextObjectText
        """

        self._text = text
