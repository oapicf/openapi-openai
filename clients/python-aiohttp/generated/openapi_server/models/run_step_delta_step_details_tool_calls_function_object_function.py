# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RunStepDeltaStepDetailsToolCallsFunctionObjectFunction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, arguments: str=None, output: str=None):
        """RunStepDeltaStepDetailsToolCallsFunctionObjectFunction - a model defined in OpenAPI

        :param name: The name of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.
        :param arguments: The arguments of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.
        :param output: The output of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.
        """
        self.openapi_types = {
            'name': str,
            'arguments': str,
            'output': str
        }

        self.attribute_map = {
            'name': 'name',
            'arguments': 'arguments',
            'output': 'output'
        }

        self._name = name
        self._arguments = arguments
        self._output = output

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RunStepDeltaStepDetailsToolCallsFunctionObjectFunction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RunStepDeltaStepDetailsToolCallsFunctionObject_function of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.

        The name of the function.

        :return: The name of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.

        The name of the function.

        :param name: The name of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.
        :type name: str
        """

        self._name = name

    @property
    def arguments(self):
        """Gets the arguments of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.

        The arguments passed to the function.

        :return: The arguments of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.
        :rtype: str
        """
        return self._arguments

    @arguments.setter
    def arguments(self, arguments):
        """Sets the arguments of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.

        The arguments passed to the function.

        :param arguments: The arguments of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.
        :type arguments: str
        """

        self._arguments = arguments

    @property
    def output(self):
        """Gets the output of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.

        The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet.

        :return: The output of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.
        :rtype: str
        """
        return self._output

    @output.setter
    def output(self, output):
        """Sets the output of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.

        The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet.

        :param output: The output of this RunStepDeltaStepDetailsToolCallsFunctionObjectFunction.
        :type output: str
        """

        self._output = output
