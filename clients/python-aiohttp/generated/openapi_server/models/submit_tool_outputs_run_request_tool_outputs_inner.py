# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubmitToolOutputsRunRequestToolOutputsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tool_call_id: str=None, output: str=None):
        """SubmitToolOutputsRunRequestToolOutputsInner - a model defined in OpenAPI

        :param tool_call_id: The tool_call_id of this SubmitToolOutputsRunRequestToolOutputsInner.
        :param output: The output of this SubmitToolOutputsRunRequestToolOutputsInner.
        """
        self.openapi_types = {
            'tool_call_id': str,
            'output': str
        }

        self.attribute_map = {
            'tool_call_id': 'tool_call_id',
            'output': 'output'
        }

        self._tool_call_id = tool_call_id
        self._output = output

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubmitToolOutputsRunRequestToolOutputsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubmitToolOutputsRunRequest_tool_outputs_inner of this SubmitToolOutputsRunRequestToolOutputsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tool_call_id(self):
        """Gets the tool_call_id of this SubmitToolOutputsRunRequestToolOutputsInner.

        The ID of the tool call in the `required_action` object within the run object the output is being submitted for.

        :return: The tool_call_id of this SubmitToolOutputsRunRequestToolOutputsInner.
        :rtype: str
        """
        return self._tool_call_id

    @tool_call_id.setter
    def tool_call_id(self, tool_call_id):
        """Sets the tool_call_id of this SubmitToolOutputsRunRequestToolOutputsInner.

        The ID of the tool call in the `required_action` object within the run object the output is being submitted for.

        :param tool_call_id: The tool_call_id of this SubmitToolOutputsRunRequestToolOutputsInner.
        :type tool_call_id: str
        """

        self._tool_call_id = tool_call_id

    @property
    def output(self):
        """Gets the output of this SubmitToolOutputsRunRequestToolOutputsInner.

        The output of the tool call to be submitted to continue the run.

        :return: The output of this SubmitToolOutputsRunRequestToolOutputsInner.
        :rtype: str
        """
        return self._output

    @output.setter
    def output(self, output):
        """Sets the output of this SubmitToolOutputsRunRequestToolOutputsInner.

        The output of the tool call to be submitted to continue the run.

        :param output: The output of this SubmitToolOutputsRunRequestToolOutputsInner.
        :type output: str
        """

        self._output = output
