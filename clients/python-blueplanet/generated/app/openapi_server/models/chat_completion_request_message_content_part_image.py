# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.openapi_server.models.base_model import Model
from app.openapi_server.models.chat_completion_request_message_content_part_image_image_url import ChatCompletionRequestMessageContentPartImageImageUrl  # noqa: F401,E501
from openapi_server import util


class ChatCompletionRequestMessageContentPartImage(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, image_url: ChatCompletionRequestMessageContentPartImageImageUrl=None):  # noqa: E501
        """ChatCompletionRequestMessageContentPartImage - a model defined in Swagger

        :param type: The type of this ChatCompletionRequestMessageContentPartImage.  # noqa: E501
        :type type: str
        :param image_url: The image_url of this ChatCompletionRequestMessageContentPartImage.  # noqa: E501
        :type image_url: ChatCompletionRequestMessageContentPartImageImageUrl
        """
        self.swagger_types = {
            'type': str,
            'image_url': ChatCompletionRequestMessageContentPartImageImageUrl
        }

        self.attribute_map = {
            'type': 'type',
            'image_url': 'image_url'
        }

        self._type = type
        self._image_url = image_url

    @classmethod
    def from_dict(cls, dikt) -> 'ChatCompletionRequestMessageContentPartImage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChatCompletionRequestMessageContentPartImage of this ChatCompletionRequestMessageContentPartImage.  # noqa: E501
        :rtype: ChatCompletionRequestMessageContentPartImage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this ChatCompletionRequestMessageContentPartImage.

        The type of the content part.  # noqa: E501

        :return: The type of this ChatCompletionRequestMessageContentPartImage.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this ChatCompletionRequestMessageContentPartImage.

        The type of the content part.  # noqa: E501

        :param type: The type of this ChatCompletionRequestMessageContentPartImage.
        :type type: str
        """
        allowed_values = ["image_url"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def image_url(self) -> ChatCompletionRequestMessageContentPartImageImageUrl:
        """Gets the image_url of this ChatCompletionRequestMessageContentPartImage.


        :return: The image_url of this ChatCompletionRequestMessageContentPartImage.
        :rtype: ChatCompletionRequestMessageContentPartImageImageUrl
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url: ChatCompletionRequestMessageContentPartImageImageUrl):
        """Sets the image_url of this ChatCompletionRequestMessageContentPartImage.


        :param image_url: The image_url of this ChatCompletionRequestMessageContentPartImage.
        :type image_url: ChatCompletionRequestMessageContentPartImageImageUrl
        """
        if image_url is None:
            raise ValueError("Invalid value for `image_url`, must not be `None`")  # noqa: E501

        self._image_url = image_url
