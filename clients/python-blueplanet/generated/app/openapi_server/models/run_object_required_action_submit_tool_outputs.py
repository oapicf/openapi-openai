# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.openapi_server.models.base_model import Model
from app.openapi_server.models.run_tool_call_object import RunToolCallObject  # noqa: F401,E501
from openapi_server import util


class RunObjectRequiredActionSubmitToolOutputs(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, tool_calls: List[RunToolCallObject]=None):  # noqa: E501
        """RunObjectRequiredActionSubmitToolOutputs - a model defined in Swagger

        :param tool_calls: The tool_calls of this RunObjectRequiredActionSubmitToolOutputs.  # noqa: E501
        :type tool_calls: List[RunToolCallObject]
        """
        self.swagger_types = {
            'tool_calls': List[RunToolCallObject]
        }

        self.attribute_map = {
            'tool_calls': 'tool_calls'
        }

        self._tool_calls = tool_calls

    @classmethod
    def from_dict(cls, dikt) -> 'RunObjectRequiredActionSubmitToolOutputs':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RunObject_required_action_submit_tool_outputs of this RunObjectRequiredActionSubmitToolOutputs.  # noqa: E501
        :rtype: RunObjectRequiredActionSubmitToolOutputs
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tool_calls(self) -> List[RunToolCallObject]:
        """Gets the tool_calls of this RunObjectRequiredActionSubmitToolOutputs.

        A list of the relevant tool calls.  # noqa: E501

        :return: The tool_calls of this RunObjectRequiredActionSubmitToolOutputs.
        :rtype: List[RunToolCallObject]
        """
        return self._tool_calls

    @tool_calls.setter
    def tool_calls(self, tool_calls: List[RunToolCallObject]):
        """Sets the tool_calls of this RunObjectRequiredActionSubmitToolOutputs.

        A list of the relevant tool calls.  # noqa: E501

        :param tool_calls: The tool_calls of this RunObjectRequiredActionSubmitToolOutputs.
        :type tool_calls: List[RunToolCallObject]
        """
        if tool_calls is None:
            raise ValueError("Invalid value for `tool_calls`, must not be `None`")  # noqa: E501

        self._tool_calls = tool_calls
