# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.openapi_server.models.base_model import Model
from openapi_server import util


class RunStepDetailsToolCallsFunctionObjectFunction(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, arguments: str=None, output: str=None):  # noqa: E501
        """RunStepDetailsToolCallsFunctionObjectFunction - a model defined in Swagger

        :param name: The name of this RunStepDetailsToolCallsFunctionObjectFunction.  # noqa: E501
        :type name: str
        :param arguments: The arguments of this RunStepDetailsToolCallsFunctionObjectFunction.  # noqa: E501
        :type arguments: str
        :param output: The output of this RunStepDetailsToolCallsFunctionObjectFunction.  # noqa: E501
        :type output: str
        """
        self.swagger_types = {
            'name': str,
            'arguments': str,
            'output': str
        }

        self.attribute_map = {
            'name': 'name',
            'arguments': 'arguments',
            'output': 'output'
        }

        self._name = name
        self._arguments = arguments
        self._output = output

    @classmethod
    def from_dict(cls, dikt) -> 'RunStepDetailsToolCallsFunctionObjectFunction':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RunStepDetailsToolCallsFunctionObject_function of this RunStepDetailsToolCallsFunctionObjectFunction.  # noqa: E501
        :rtype: RunStepDetailsToolCallsFunctionObjectFunction
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this RunStepDetailsToolCallsFunctionObjectFunction.

        The name of the function.  # noqa: E501

        :return: The name of this RunStepDetailsToolCallsFunctionObjectFunction.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this RunStepDetailsToolCallsFunctionObjectFunction.

        The name of the function.  # noqa: E501

        :param name: The name of this RunStepDetailsToolCallsFunctionObjectFunction.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def arguments(self) -> str:
        """Gets the arguments of this RunStepDetailsToolCallsFunctionObjectFunction.

        The arguments passed to the function.  # noqa: E501

        :return: The arguments of this RunStepDetailsToolCallsFunctionObjectFunction.
        :rtype: str
        """
        return self._arguments

    @arguments.setter
    def arguments(self, arguments: str):
        """Sets the arguments of this RunStepDetailsToolCallsFunctionObjectFunction.

        The arguments passed to the function.  # noqa: E501

        :param arguments: The arguments of this RunStepDetailsToolCallsFunctionObjectFunction.
        :type arguments: str
        """
        if arguments is None:
            raise ValueError("Invalid value for `arguments`, must not be `None`")  # noqa: E501

        self._arguments = arguments

    @property
    def output(self) -> str:
        """Gets the output of this RunStepDetailsToolCallsFunctionObjectFunction.

        The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet.  # noqa: E501

        :return: The output of this RunStepDetailsToolCallsFunctionObjectFunction.
        :rtype: str
        """
        return self._output

    @output.setter
    def output(self, output: str):
        """Sets the output of this RunStepDetailsToolCallsFunctionObjectFunction.

        The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet.  # noqa: E501

        :param output: The output of this RunStepDetailsToolCallsFunctionObjectFunction.
        :type output: str
        """
        if output is None:
            raise ValueError("Invalid value for `output`, must not be `None`")  # noqa: E501

        self._output = output
