"$schema"   = "http://cyaninc.com/json-schemas/tosca-lite-v1/definition-module#"
title       = "openapi_server ChatCompletionFunctions"
package     = openapi_server
version     = "1.0"
description = "Defines a ChatCompletionFunctions"
authors     = ["F. Bar (foo@bar.baz)"]

imports {
  Root = tosca.resourceTypes.Root
}
resourceTypes {

  ChatCompletionFunctions {
    title = ChatCompletionFunctions
    description = ChatCompletionFunctions
    derivedFrom = Root
    properties {
        name {
          type =  string
          description = "The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64."
          optional = true
        }
        description {
          type =  string
          description = "The description of what the function does."
          optional = false
        }
        parameters {
          # TODO
          description = "The parameters the functions accepts, described as a JSON Schema object. See the [guide](/docs/guides/gpt/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation about the format."
          optional = false
        }
    }
  }
}

serviceTemplates {

  ChatCompletionFunctions {
    title = ChatCompletionFunctions
    description = ChatCompletionFunctions
    implements = openapi_server.resourceTypes.ChatCompletionFunctions

  }
}
