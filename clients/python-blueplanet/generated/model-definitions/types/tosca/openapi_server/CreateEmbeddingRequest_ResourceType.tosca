"$schema"   = "http://cyaninc.com/json-schemas/tosca-lite-v1/definition-module#"
title       = "openapi_server CreateEmbeddingRequest"
package     = openapi_server
version     = "1.0"
description = "Defines a CreateEmbeddingRequest"
authors     = ["F. Bar (foo@bar.baz)"]

imports {
  Root = tosca.resourceTypes.Root
  CreateEmbeddingRequestInput = openapi_server.resourceTypes.CreateEmbeddingRequestInput
  CreateEmbeddingRequestModel = openapi_server.resourceTypes.CreateEmbeddingRequestModel
}
resourceTypes {

  CreateEmbeddingRequest {
    title = CreateEmbeddingRequest
    description = CreateEmbeddingRequest
    derivedFrom = Root
    properties {
        input {
          type = CreateEmbeddingRequestInput
          description = ""
          optional = true
        }
        model {
          type = CreateEmbeddingRequestModel
          description = ""
          optional = true
        }
        encoding_format {
          type =  string
          description = "The format to return the embeddings in. Can be either &#x60;float&#x60; or [&#x60;base64&#x60;](https://pypi.org/project/pybase64/)."
          enum = ["float", "base64"]
          optional = false
        }
        dimensions {
          type =  integer
          description = "The number of dimensions the resulting output embeddings should have. Only supported in &#x60;text-embedding-3&#x60; and later models. "
          optional = false
        }
        user {
          type =  string
          description = "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). "
          optional = false
        }
    }
  }
}

serviceTemplates {

  CreateEmbeddingRequest {
    title = CreateEmbeddingRequest
    description = CreateEmbeddingRequest
    implements = openapi_server.resourceTypes.CreateEmbeddingRequest

  }
}
