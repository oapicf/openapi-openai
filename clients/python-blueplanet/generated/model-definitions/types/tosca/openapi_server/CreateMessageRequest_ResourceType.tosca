"$schema"   = "http://cyaninc.com/json-schemas/tosca-lite-v1/definition-module#"
title       = "openapi_server CreateMessageRequest"
package     = openapi_server
version     = "1.0"
description = "Defines a CreateMessageRequest"
authors     = ["F. Bar (foo@bar.baz)"]

imports {
  Root = tosca.resourceTypes.Root
}
resourceTypes {

  CreateMessageRequest {
    title = CreateMessageRequest
    description = CreateMessageRequest
    derivedFrom = Root
    properties {
        role {
          type =  string
          description = "The role of the entity that is creating the message. Allowed values include: - &#x60;user&#x60;: Indicates the message is sent by an actual user and should be used in most cases to represent user-generated messages. - &#x60;assistant&#x60;: Indicates the message is generated by the assistant. Use this value to insert messages from the assistant into the conversation. "
          enum = ["user", "assistant"]
          optional = true
        }
        content {
          type =  string
          description = "The content of the message."
          optional = true
        }
        file_ids {
          type = array
          items.type =  string
          description = "A list of [File](/docs/api-reference/files) IDs that the message should use. There can be a maximum of 10 files attached to a message. Useful for tools like &#x60;retrieval&#x60; and &#x60;code_interpreter&#x60; that can access and use files."
          optional = false
        }
        metadata {
          type =  
          description = "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. "
          optional = false
        }
    }
  }
}

serviceTemplates {

  CreateMessageRequest {
    title = CreateMessageRequest
    description = CreateMessageRequest
    implements = openapi_server.resourceTypes.CreateMessageRequest

  }
}
