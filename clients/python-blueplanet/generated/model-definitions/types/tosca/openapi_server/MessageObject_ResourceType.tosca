"$schema"   = "http://cyaninc.com/json-schemas/tosca-lite-v1/definition-module#"
title       = "openapi_server MessageObject"
package     = openapi_server
version     = "1.0"
description = "Defines a MessageObject"
authors     = ["F. Bar (foo@bar.baz)"]

imports {
  Root = tosca.resourceTypes.Root
  MessageObjectContentInner = openapi_server.resourceTypes.MessageObjectContentInner
  MessageObjectIncompleteDetails = openapi_server.resourceTypes.MessageObjectIncompleteDetails
}
resourceTypes {

  MessageObject {
    title = MessageObject
    description = MessageObject
    derivedFrom = Root
    properties {
        id {
          type =  string
          description = "The identifier, which can be referenced in API endpoints."
          optional = true
        }
        object {
          type =  string
          description = "The object type, which is always &#x60;thread.message&#x60;."
          enum = ["thread.message"]
          optional = true
        }
        created_at {
          type =  integer
          description = "The Unix timestamp (in seconds) for when the message was created."
          optional = true
        }
        thread_id {
          type =  string
          description = "The [thread](/docs/api-reference/threads) ID that this message belongs to."
          optional = true
        }
        status {
          type =  string
          description = "The status of the message, which can be either &#x60;in_progress&#x60;, &#x60;incomplete&#x60;, or &#x60;completed&#x60;."
          enum = ["in_progress", "incomplete", "completed"]
          optional = true
        }
        incomplete_details {
          type = MessageObjectIncompleteDetails
          description = ""
          optional = true
        }
        completed_at {
          type =  integer
          description = "The Unix timestamp (in seconds) for when the message was completed."
          optional = true
        }
        incomplete_at {
          type =  integer
          description = "The Unix timestamp (in seconds) for when the message was marked as incomplete."
          optional = true
        }
        role {
          type =  string
          description = "The entity that produced the message. One of &#x60;user&#x60; or &#x60;assistant&#x60;."
          enum = ["user", "assistant"]
          optional = true
        }
        content {
          type = array
          items.type = MessageObjectContentInner
          description = "The content of the message in array of text and/or images."
          optional = true
        }
        assistant_id {
          type =  string
          description = "If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message."
          optional = true
        }
        run_id {
          type =  string
          description = "The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is &#x60;null&#x60; when messages are created manually using the create message or create thread endpoints."
          optional = true
        }
        file_ids {
          type = array
          items.type =  string
          description = "A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message."
          optional = true
        }
        metadata {
          type =  
          description = "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. "
          optional = true
        }
    }
  }
}

serviceTemplates {

  MessageObject {
    title = MessageObject
    description = MessageObject
    implements = openapi_server.resourceTypes.MessageObject

  }
}
