from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ChatCompletionRequestToolMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, role=None, content=None, tool_call_id=None):  # noqa: E501
        """ChatCompletionRequestToolMessage - a model defined in OpenAPI

        :param role: The role of this ChatCompletionRequestToolMessage.  # noqa: E501
        :type role: str
        :param content: The content of this ChatCompletionRequestToolMessage.  # noqa: E501
        :type content: str
        :param tool_call_id: The tool_call_id of this ChatCompletionRequestToolMessage.  # noqa: E501
        :type tool_call_id: str
        """
        self.openapi_types = {
            'role': str,
            'content': str,
            'tool_call_id': str
        }

        self.attribute_map = {
            'role': 'role',
            'content': 'content',
            'tool_call_id': 'tool_call_id'
        }

        self._role = role
        self._content = content
        self._tool_call_id = tool_call_id

    @classmethod
    def from_dict(cls, dikt) -> 'ChatCompletionRequestToolMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChatCompletionRequestToolMessage of this ChatCompletionRequestToolMessage.  # noqa: E501
        :rtype: ChatCompletionRequestToolMessage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def role(self) -> str:
        """Gets the role of this ChatCompletionRequestToolMessage.

        The role of the messages author, in this case `tool`.  # noqa: E501

        :return: The role of this ChatCompletionRequestToolMessage.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this ChatCompletionRequestToolMessage.

        The role of the messages author, in this case `tool`.  # noqa: E501

        :param role: The role of this ChatCompletionRequestToolMessage.
        :type role: str
        """
        allowed_values = ["tool"]  # noqa: E501
        if role not in allowed_values:
            raise ValueError(
                "Invalid value for `role` ({0}), must be one of {1}"
                .format(role, allowed_values)
            )

        self._role = role

    @property
    def content(self) -> str:
        """Gets the content of this ChatCompletionRequestToolMessage.

        The contents of the tool message.  # noqa: E501

        :return: The content of this ChatCompletionRequestToolMessage.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this ChatCompletionRequestToolMessage.

        The contents of the tool message.  # noqa: E501

        :param content: The content of this ChatCompletionRequestToolMessage.
        :type content: str
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")  # noqa: E501

        self._content = content

    @property
    def tool_call_id(self) -> str:
        """Gets the tool_call_id of this ChatCompletionRequestToolMessage.

        Tool call that this message is responding to.  # noqa: E501

        :return: The tool_call_id of this ChatCompletionRequestToolMessage.
        :rtype: str
        """
        return self._tool_call_id

    @tool_call_id.setter
    def tool_call_id(self, tool_call_id: str):
        """Sets the tool_call_id of this ChatCompletionRequestToolMessage.

        Tool call that this message is responding to.  # noqa: E501

        :param tool_call_id: The tool_call_id of this ChatCompletionRequestToolMessage.
        :type tool_call_id: str
        """
        if tool_call_id is None:
            raise ValueError("Invalid value for `tool_call_id`, must not be `None`")  # noqa: E501

        self._tool_call_id = tool_call_id
