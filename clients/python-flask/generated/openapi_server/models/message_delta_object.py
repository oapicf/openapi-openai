from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.message_delta_object_delta import MessageDeltaObjectDelta
from openapi_server import util

from openapi_server.models.message_delta_object_delta import MessageDeltaObjectDelta  # noqa: E501

class MessageDeltaObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, object=None, delta=None):  # noqa: E501
        """MessageDeltaObject - a model defined in OpenAPI

        :param id: The id of this MessageDeltaObject.  # noqa: E501
        :type id: str
        :param object: The object of this MessageDeltaObject.  # noqa: E501
        :type object: str
        :param delta: The delta of this MessageDeltaObject.  # noqa: E501
        :type delta: MessageDeltaObjectDelta
        """
        self.openapi_types = {
            'id': str,
            'object': str,
            'delta': MessageDeltaObjectDelta
        }

        self.attribute_map = {
            'id': 'id',
            'object': 'object',
            'delta': 'delta'
        }

        self._id = id
        self._object = object
        self._delta = delta

    @classmethod
    def from_dict(cls, dikt) -> 'MessageDeltaObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MessageDeltaObject of this MessageDeltaObject.  # noqa: E501
        :rtype: MessageDeltaObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this MessageDeltaObject.

        The identifier of the message, which can be referenced in API endpoints.  # noqa: E501

        :return: The id of this MessageDeltaObject.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this MessageDeltaObject.

        The identifier of the message, which can be referenced in API endpoints.  # noqa: E501

        :param id: The id of this MessageDeltaObject.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def object(self) -> str:
        """Gets the object of this MessageDeltaObject.

        The object type, which is always `thread.message.delta`.  # noqa: E501

        :return: The object of this MessageDeltaObject.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object: str):
        """Sets the object of this MessageDeltaObject.

        The object type, which is always `thread.message.delta`.  # noqa: E501

        :param object: The object of this MessageDeltaObject.
        :type object: str
        """
        allowed_values = ["thread.message.delta"]  # noqa: E501
        if object not in allowed_values:
            raise ValueError(
                "Invalid value for `object` ({0}), must be one of {1}"
                .format(object, allowed_values)
            )

        self._object = object

    @property
    def delta(self) -> MessageDeltaObjectDelta:
        """Gets the delta of this MessageDeltaObject.


        :return: The delta of this MessageDeltaObject.
        :rtype: MessageDeltaObjectDelta
        """
        return self._delta

    @delta.setter
    def delta(self, delta: MessageDeltaObjectDelta):
        """Sets the delta of this MessageDeltaObject.


        :param delta: The delta of this MessageDeltaObject.
        :type delta: MessageDeltaObjectDelta
        """
        if delta is None:
            raise ValueError("Invalid value for `delta`, must not be `None`")  # noqa: E501

        self._delta = delta
