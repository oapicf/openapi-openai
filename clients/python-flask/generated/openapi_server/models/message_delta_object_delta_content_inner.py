from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.message_delta_content_image_file_object import MessageDeltaContentImageFileObject
from openapi_server.models.message_delta_content_image_file_object_image_file import MessageDeltaContentImageFileObjectImageFile
from openapi_server.models.message_delta_content_text_object import MessageDeltaContentTextObject
from openapi_server.models.message_delta_content_text_object_text import MessageDeltaContentTextObjectText
from openapi_server import util

from openapi_server.models.message_delta_content_image_file_object import MessageDeltaContentImageFileObject  # noqa: E501
from openapi_server.models.message_delta_content_image_file_object_image_file import MessageDeltaContentImageFileObjectImageFile  # noqa: E501
from openapi_server.models.message_delta_content_text_object import MessageDeltaContentTextObject  # noqa: E501
from openapi_server.models.message_delta_content_text_object_text import MessageDeltaContentTextObjectText  # noqa: E501

class MessageDeltaObjectDeltaContentInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index=None, type=None, image_file=None, text=None):  # noqa: E501
        """MessageDeltaObjectDeltaContentInner - a model defined in OpenAPI

        :param index: The index of this MessageDeltaObjectDeltaContentInner.  # noqa: E501
        :type index: int
        :param type: The type of this MessageDeltaObjectDeltaContentInner.  # noqa: E501
        :type type: str
        :param image_file: The image_file of this MessageDeltaObjectDeltaContentInner.  # noqa: E501
        :type image_file: MessageDeltaContentImageFileObjectImageFile
        :param text: The text of this MessageDeltaObjectDeltaContentInner.  # noqa: E501
        :type text: MessageDeltaContentTextObjectText
        """
        self.openapi_types = {
            'index': int,
            'type': str,
            'image_file': MessageDeltaContentImageFileObjectImageFile,
            'text': MessageDeltaContentTextObjectText
        }

        self.attribute_map = {
            'index': 'index',
            'type': 'type',
            'image_file': 'image_file',
            'text': 'text'
        }

        self._index = index
        self._type = type
        self._image_file = image_file
        self._text = text

    @classmethod
    def from_dict(cls, dikt) -> 'MessageDeltaObjectDeltaContentInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MessageDeltaObject_delta_content_inner of this MessageDeltaObjectDeltaContentInner.  # noqa: E501
        :rtype: MessageDeltaObjectDeltaContentInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index(self) -> int:
        """Gets the index of this MessageDeltaObjectDeltaContentInner.

        The index of the content part in the message.  # noqa: E501

        :return: The index of this MessageDeltaObjectDeltaContentInner.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index: int):
        """Sets the index of this MessageDeltaObjectDeltaContentInner.

        The index of the content part in the message.  # noqa: E501

        :param index: The index of this MessageDeltaObjectDeltaContentInner.
        :type index: int
        """
        if index is None:
            raise ValueError("Invalid value for `index`, must not be `None`")  # noqa: E501

        self._index = index

    @property
    def type(self) -> str:
        """Gets the type of this MessageDeltaObjectDeltaContentInner.

        Always `image_file`.  # noqa: E501

        :return: The type of this MessageDeltaObjectDeltaContentInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this MessageDeltaObjectDeltaContentInner.

        Always `image_file`.  # noqa: E501

        :param type: The type of this MessageDeltaObjectDeltaContentInner.
        :type type: str
        """
        allowed_values = ["image_file", "text"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def image_file(self) -> MessageDeltaContentImageFileObjectImageFile:
        """Gets the image_file of this MessageDeltaObjectDeltaContentInner.


        :return: The image_file of this MessageDeltaObjectDeltaContentInner.
        :rtype: MessageDeltaContentImageFileObjectImageFile
        """
        return self._image_file

    @image_file.setter
    def image_file(self, image_file: MessageDeltaContentImageFileObjectImageFile):
        """Sets the image_file of this MessageDeltaObjectDeltaContentInner.


        :param image_file: The image_file of this MessageDeltaObjectDeltaContentInner.
        :type image_file: MessageDeltaContentImageFileObjectImageFile
        """

        self._image_file = image_file

    @property
    def text(self) -> MessageDeltaContentTextObjectText:
        """Gets the text of this MessageDeltaObjectDeltaContentInner.


        :return: The text of this MessageDeltaObjectDeltaContentInner.
        :rtype: MessageDeltaContentTextObjectText
        """
        return self._text

    @text.setter
    def text(self, text: MessageDeltaContentTextObjectText):
        """Sets the text of this MessageDeltaObjectDeltaContentInner.


        :param text: The text of this MessageDeltaObjectDeltaContentInner.
        :type text: MessageDeltaContentTextObjectText
        """

        self._text = text
