from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.run_step_details_tool_calls_code_object import RunStepDetailsToolCallsCodeObject
from openapi_server.models.run_step_details_tool_calls_code_object_code_interpreter import RunStepDetailsToolCallsCodeObjectCodeInterpreter
from openapi_server.models.run_step_details_tool_calls_function_object import RunStepDetailsToolCallsFunctionObject
from openapi_server.models.run_step_details_tool_calls_function_object_function import RunStepDetailsToolCallsFunctionObjectFunction
from openapi_server.models.run_step_details_tool_calls_retrieval_object import RunStepDetailsToolCallsRetrievalObject
from openapi_server import util

from openapi_server.models.run_step_details_tool_calls_code_object import RunStepDetailsToolCallsCodeObject  # noqa: E501
from openapi_server.models.run_step_details_tool_calls_code_object_code_interpreter import RunStepDetailsToolCallsCodeObjectCodeInterpreter  # noqa: E501
from openapi_server.models.run_step_details_tool_calls_function_object import RunStepDetailsToolCallsFunctionObject  # noqa: E501
from openapi_server.models.run_step_details_tool_calls_function_object_function import RunStepDetailsToolCallsFunctionObjectFunction  # noqa: E501
from openapi_server.models.run_step_details_tool_calls_retrieval_object import RunStepDetailsToolCallsRetrievalObject  # noqa: E501

class RunStepDetailsToolCallsObjectToolCallsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, type=None, code_interpreter=None, retrieval=None, function=None):  # noqa: E501
        """RunStepDetailsToolCallsObjectToolCallsInner - a model defined in OpenAPI

        :param id: The id of this RunStepDetailsToolCallsObjectToolCallsInner.  # noqa: E501
        :type id: str
        :param type: The type of this RunStepDetailsToolCallsObjectToolCallsInner.  # noqa: E501
        :type type: str
        :param code_interpreter: The code_interpreter of this RunStepDetailsToolCallsObjectToolCallsInner.  # noqa: E501
        :type code_interpreter: RunStepDetailsToolCallsCodeObjectCodeInterpreter
        :param retrieval: The retrieval of this RunStepDetailsToolCallsObjectToolCallsInner.  # noqa: E501
        :type retrieval: object
        :param function: The function of this RunStepDetailsToolCallsObjectToolCallsInner.  # noqa: E501
        :type function: RunStepDetailsToolCallsFunctionObjectFunction
        """
        self.openapi_types = {
            'id': str,
            'type': str,
            'code_interpreter': RunStepDetailsToolCallsCodeObjectCodeInterpreter,
            'retrieval': object,
            'function': RunStepDetailsToolCallsFunctionObjectFunction
        }

        self.attribute_map = {
            'id': 'id',
            'type': 'type',
            'code_interpreter': 'code_interpreter',
            'retrieval': 'retrieval',
            'function': 'function'
        }

        self._id = id
        self._type = type
        self._code_interpreter = code_interpreter
        self._retrieval = retrieval
        self._function = function

    @classmethod
    def from_dict(cls, dikt) -> 'RunStepDetailsToolCallsObjectToolCallsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RunStepDetailsToolCallsObject_tool_calls_inner of this RunStepDetailsToolCallsObjectToolCallsInner.  # noqa: E501
        :rtype: RunStepDetailsToolCallsObjectToolCallsInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this RunStepDetailsToolCallsObjectToolCallsInner.

        The ID of the tool call object.  # noqa: E501

        :return: The id of this RunStepDetailsToolCallsObjectToolCallsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this RunStepDetailsToolCallsObjectToolCallsInner.

        The ID of the tool call object.  # noqa: E501

        :param id: The id of this RunStepDetailsToolCallsObjectToolCallsInner.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def type(self) -> str:
        """Gets the type of this RunStepDetailsToolCallsObjectToolCallsInner.

        The type of tool call. This is always going to be `code_interpreter` for this type of tool call.  # noqa: E501

        :return: The type of this RunStepDetailsToolCallsObjectToolCallsInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this RunStepDetailsToolCallsObjectToolCallsInner.

        The type of tool call. This is always going to be `code_interpreter` for this type of tool call.  # noqa: E501

        :param type: The type of this RunStepDetailsToolCallsObjectToolCallsInner.
        :type type: str
        """
        allowed_values = ["code_interpreter", "retrieval", "function"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def code_interpreter(self) -> RunStepDetailsToolCallsCodeObjectCodeInterpreter:
        """Gets the code_interpreter of this RunStepDetailsToolCallsObjectToolCallsInner.


        :return: The code_interpreter of this RunStepDetailsToolCallsObjectToolCallsInner.
        :rtype: RunStepDetailsToolCallsCodeObjectCodeInterpreter
        """
        return self._code_interpreter

    @code_interpreter.setter
    def code_interpreter(self, code_interpreter: RunStepDetailsToolCallsCodeObjectCodeInterpreter):
        """Sets the code_interpreter of this RunStepDetailsToolCallsObjectToolCallsInner.


        :param code_interpreter: The code_interpreter of this RunStepDetailsToolCallsObjectToolCallsInner.
        :type code_interpreter: RunStepDetailsToolCallsCodeObjectCodeInterpreter
        """
        if code_interpreter is None:
            raise ValueError("Invalid value for `code_interpreter`, must not be `None`")  # noqa: E501

        self._code_interpreter = code_interpreter

    @property
    def retrieval(self) -> object:
        """Gets the retrieval of this RunStepDetailsToolCallsObjectToolCallsInner.

        For now, this is always going to be an empty object.  # noqa: E501

        :return: The retrieval of this RunStepDetailsToolCallsObjectToolCallsInner.
        :rtype: object
        """
        return self._retrieval

    @retrieval.setter
    def retrieval(self, retrieval: object):
        """Sets the retrieval of this RunStepDetailsToolCallsObjectToolCallsInner.

        For now, this is always going to be an empty object.  # noqa: E501

        :param retrieval: The retrieval of this RunStepDetailsToolCallsObjectToolCallsInner.
        :type retrieval: object
        """
        if retrieval is None:
            raise ValueError("Invalid value for `retrieval`, must not be `None`")  # noqa: E501

        self._retrieval = retrieval

    @property
    def function(self) -> RunStepDetailsToolCallsFunctionObjectFunction:
        """Gets the function of this RunStepDetailsToolCallsObjectToolCallsInner.


        :return: The function of this RunStepDetailsToolCallsObjectToolCallsInner.
        :rtype: RunStepDetailsToolCallsFunctionObjectFunction
        """
        return self._function

    @function.setter
    def function(self, function: RunStepDetailsToolCallsFunctionObjectFunction):
        """Sets the function of this RunStepDetailsToolCallsObjectToolCallsInner.


        :param function: The function of this RunStepDetailsToolCallsObjectToolCallsInner.
        :type function: RunStepDetailsToolCallsFunctionObjectFunction
        """
        if function is None:
            raise ValueError("Invalid value for `function`, must not be `None`")  # noqa: E501

        self._function = function
