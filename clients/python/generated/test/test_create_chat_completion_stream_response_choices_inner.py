# coding: utf-8

"""
    OpenAI API

    APIs for sampling from and fine-tuning language models

    The version of the OpenAPI document: 2.0.0
    Contact: blah+oapicf@cliffano.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapiopenai.models.create_chat_completion_stream_response_choices_inner import CreateChatCompletionStreamResponseChoicesInner

class TestCreateChatCompletionStreamResponseChoicesInner(unittest.TestCase):
    """CreateChatCompletionStreamResponseChoicesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateChatCompletionStreamResponseChoicesInner:
        """Test CreateChatCompletionStreamResponseChoicesInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateChatCompletionStreamResponseChoicesInner`
        """
        model = CreateChatCompletionStreamResponseChoicesInner()
        if include_optional:
            return CreateChatCompletionStreamResponseChoicesInner(
                index = 56,
                delta = openapiopenai.models.chat_completion_stream_response_delta.ChatCompletionStreamResponseDelta(
                    role = 'system', 
                    content = '', 
                    function_call = openapiopenai.models.chat_completion_request_message_function_call.ChatCompletionRequestMessage_function_call(
                        name = '', 
                        arguments = '', ), ),
                finish_reason = 'stop'
            )
        else:
            return CreateChatCompletionStreamResponseChoicesInner(
        )
        """

    def testCreateChatCompletionStreamResponseChoicesInner(self):
        """Test CreateChatCompletionStreamResponseChoicesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
