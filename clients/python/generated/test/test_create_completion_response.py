# coding: utf-8

"""
    OpenAI API

    The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

    The version of the OpenAPI document: 2.0.0
    Contact: blah+oapicf@cliffano.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapiopenai.models.create_completion_response import CreateCompletionResponse

class TestCreateCompletionResponse(unittest.TestCase):
    """CreateCompletionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateCompletionResponse:
        """Test CreateCompletionResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateCompletionResponse`
        """
        model = CreateCompletionResponse()
        if include_optional:
            return CreateCompletionResponse(
                id = '',
                choices = [
                    openapiopenai.models.create_completion_response_choices_inner.CreateCompletionResponse_choices_inner(
                        finish_reason = 'stop', 
                        index = 56, 
                        logprobs = openapiopenai.models.create_completion_response_choices_inner_logprobs.CreateCompletionResponse_choices_inner_logprobs(
                            text_offset = [
                                56
                                ], 
                            token_logprobs = [
                                1.337
                                ], 
                            tokens = [
                                ''
                                ], 
                            top_logprobs = [
                                {
                                    'key' : 1.337
                                    }
                                ], ), 
                        text = '', )
                    ],
                created = 56,
                model = '',
                system_fingerprint = '',
                object = 'text_completion',
                usage = openapiopenai.models.completion_usage.CompletionUsage(
                    completion_tokens = 56, 
                    prompt_tokens = 56, 
                    total_tokens = 56, )
            )
        else:
            return CreateCompletionResponse(
                id = '',
                choices = [
                    openapiopenai.models.create_completion_response_choices_inner.CreateCompletionResponse_choices_inner(
                        finish_reason = 'stop', 
                        index = 56, 
                        logprobs = openapiopenai.models.create_completion_response_choices_inner_logprobs.CreateCompletionResponse_choices_inner_logprobs(
                            text_offset = [
                                56
                                ], 
                            token_logprobs = [
                                1.337
                                ], 
                            tokens = [
                                ''
                                ], 
                            top_logprobs = [
                                {
                                    'key' : 1.337
                                    }
                                ], ), 
                        text = '', )
                    ],
                created = 56,
                model = '',
                object = 'text_completion',
        )
        """

    def testCreateCompletionResponse(self):
        """Test CreateCompletionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
