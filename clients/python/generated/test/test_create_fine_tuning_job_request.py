# coding: utf-8

"""
    OpenAI API

    The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

    The version of the OpenAPI document: 2.0.0
    Contact: blah+oapicf@cliffano.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapiopenai.models.create_fine_tuning_job_request import CreateFineTuningJobRequest

class TestCreateFineTuningJobRequest(unittest.TestCase):
    """CreateFineTuningJobRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateFineTuningJobRequest:
        """Test CreateFineTuningJobRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateFineTuningJobRequest`
        """
        model = CreateFineTuningJobRequest()
        if include_optional:
            return CreateFineTuningJobRequest(
                model = gpt-3.5-turbo,
                training_file = 'file-abc123',
                hyperparameters = openapiopenai.models.create_fine_tuning_job_request_hyperparameters.CreateFineTuningJobRequest_hyperparameters(
                    batch_size = null, 
                    learning_rate_multiplier = null, 
                    n_epochs = null, ),
                suffix = '0',
                validation_file = 'file-abc123',
                integrations = [
                    openapiopenai.models.create_fine_tuning_job_request_integrations_inner.CreateFineTuningJobRequest_integrations_inner(
                        type = null, 
                        wandb = openapiopenai.models.create_fine_tuning_job_request_integrations_inner_wandb.CreateFineTuningJobRequest_integrations_inner_wandb(
                            project = 'my-wandb-project', 
                            name = '', 
                            entity = '', 
                            tags = [
                                'custom-tag'
                                ], ), )
                    ],
                seed = 42
            )
        else:
            return CreateFineTuningJobRequest(
                model = gpt-3.5-turbo,
                training_file = 'file-abc123',
        )
        """

    def testCreateFineTuningJobRequest(self):
        """Test CreateFineTuningJobRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
