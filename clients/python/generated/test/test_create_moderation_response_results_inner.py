# coding: utf-8

"""
    OpenAI API

    APIs for sampling from and fine-tuning language models

    The version of the OpenAPI document: 2.0.0
    Contact: blah+oapicf@cliffano.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapiopenai.models.create_moderation_response_results_inner import CreateModerationResponseResultsInner

class TestCreateModerationResponseResultsInner(unittest.TestCase):
    """CreateModerationResponseResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateModerationResponseResultsInner:
        """Test CreateModerationResponseResultsInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateModerationResponseResultsInner`
        """
        model = CreateModerationResponseResultsInner()
        if include_optional:
            return CreateModerationResponseResultsInner(
                flagged = True,
                categories = openapiopenai.models.create_moderation_response_results_inner_categories.CreateModerationResponse_results_inner_categories(
                    hate = True, 
                    hate/threatening = True, 
                    self_harm = True, 
                    sexual = True, 
                    sexual/minors = True, 
                    violence = True, 
                    violence/graphic = True, ),
                category_scores = openapiopenai.models.create_moderation_response_results_inner_category_scores.CreateModerationResponse_results_inner_category_scores(
                    hate = 1.337, 
                    hate/threatening = 1.337, 
                    self_harm = 1.337, 
                    sexual = 1.337, 
                    sexual/minors = 1.337, 
                    violence = 1.337, 
                    violence/graphic = 1.337, )
            )
        else:
            return CreateModerationResponseResultsInner(
                flagged = True,
                categories = openapiopenai.models.create_moderation_response_results_inner_categories.CreateModerationResponse_results_inner_categories(
                    hate = True, 
                    hate/threatening = True, 
                    self_harm = True, 
                    sexual = True, 
                    sexual/minors = True, 
                    violence = True, 
                    violence/graphic = True, ),
                category_scores = openapiopenai.models.create_moderation_response_results_inner_category_scores.CreateModerationResponse_results_inner_category_scores(
                    hate = 1.337, 
                    hate/threatening = 1.337, 
                    self_harm = 1.337, 
                    sexual = 1.337, 
                    sexual/minors = 1.337, 
                    violence = 1.337, 
                    violence/graphic = 1.337, ),
        )
        """

    def testCreateModerationResponseResultsInner(self):
        """Test CreateModerationResponseResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
