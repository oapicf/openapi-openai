=begin
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

The version of the OpenAPI document: 2.0.0
Contact: blah+oapicf@cliffano.com
Generated by: https://github.com/openapitools/openapi-generator.git

=end
class AssistantsController < ApplicationController

  def cancel_run
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def create_assistant_file
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def create_message
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def create_run
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def create_thread
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def create_thread_and_run
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def destroy
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def delete_assistant_file
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def delete_thread
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def show
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def get_assistant_file
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def get_message
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def get_message_file
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def get_run
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def get_run_step
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def get_thread
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def list_assistant_files
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def index
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def list_message_files
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def list_messages
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def list_run_steps
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def list_runs
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def modify_assistant
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def modify_message
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def modify_run
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def modify_thread
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def submit_tool_ouputs_to_run
    # Your code here

    render json: {"message" => "yes, it worked"}
  end
end
