=begin
#OpenAI API

#APIs for sampling from and fine-tuning language models

The version of the OpenAPI document: 2.0.0
Contact: blah+oapicf@cliffano.com
Generated by: https://openapi-generator.tech
Generator version: 7.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenApiOpenAIClient::OpenAIApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OpenAIApi' do
  before do
    # run before each test
    @api_instance = OpenApiOpenAIClient::OpenAIApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OpenAIApi' do
    it 'should create an instance of OpenAIApi' do
      expect(@api_instance).to be_instance_of(OpenApiOpenAIClient::OpenAIApi)
    end
  end

  # unit tests for cancel_fine_tune
  # Immediately cancel a fine-tune job. 
  # @param fine_tune_id The ID of the fine-tune job to cancel 
  # @param [Hash] opts the optional parameters
  # @return [FineTune]
  describe 'cancel_fine_tune test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_chat_completion
  # Creates a model response for the given chat conversation.
  # @param create_chat_completion_request 
  # @param [Hash] opts the optional parameters
  # @return [CreateChatCompletionResponse]
  describe 'create_chat_completion test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_completion
  # Creates a completion for the provided prompt and parameters.
  # @param create_completion_request 
  # @param [Hash] opts the optional parameters
  # @return [CreateCompletionResponse]
  describe 'create_completion test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_edit
  # Creates a new edit for the provided input, instruction, and parameters.
  # @param create_edit_request 
  # @param [Hash] opts the optional parameters
  # @return [CreateEditResponse]
  describe 'create_edit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_embedding
  # Creates an embedding vector representing the input text.
  # @param create_embedding_request 
  # @param [Hash] opts the optional parameters
  # @return [CreateEmbeddingResponse]
  describe 'create_embedding test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_file
  # Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit. 
  # @param file Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.  If the &#x60;purpose&#x60; is set to \\\&quot;fine-tune\\\&quot;, each line is a JSON record with \\\&quot;prompt\\\&quot; and \\\&quot;completion\\\&quot; fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data). 
  # @param purpose The intended purpose of the uploaded documents.  Use \\\&quot;fine-tune\\\&quot; for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the format of the uploaded file. 
  # @param [Hash] opts the optional parameters
  # @return [OpenAIFile]
  describe 'create_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_fine_tune
  # Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning) 
  # @param create_fine_tune_request 
  # @param [Hash] opts the optional parameters
  # @return [FineTune]
  describe 'create_fine_tune test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_image
  # Creates an image given a prompt.
  # @param create_image_request 
  # @param [Hash] opts the optional parameters
  # @return [ImagesResponse]
  describe 'create_image test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_image_edit
  # Creates an edited or extended image given an original image and a prompt.
  # @param image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.
  # @param prompt A text description of the desired image(s). The maximum length is 1000 characters.
  # @param [Hash] opts the optional parameters
  # @option opts [File] :mask An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.
  # @option opts [Integer] :n The number of images to generate. Must be between 1 and 10.
  # @option opts [String] :size The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.
  # @option opts [String] :response_format The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.
  # @option opts [String] :user A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
  # @return [ImagesResponse]
  describe 'create_image_edit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_image_variation
  # Creates a variation of a given image.
  # @param image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :n The number of images to generate. Must be between 1 and 10.
  # @option opts [String] :size The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.
  # @option opts [String] :response_format The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.
  # @option opts [String] :user A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
  # @return [ImagesResponse]
  describe 'create_image_variation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_moderation
  # Classifies if text violates OpenAI&#39;s Content Policy
  # @param create_moderation_request 
  # @param [Hash] opts the optional parameters
  # @return [CreateModerationResponse]
  describe 'create_moderation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_transcription
  # Transcribes audio into the input language.
  # @param file The audio file object (not file name) to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm. 
  # @param model 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :prompt An optional text to guide the model&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language. 
  # @option opts [String] :response_format The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt. 
  # @option opts [Float] :temperature The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit. 
  # @option opts [String] :language The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency. 
  # @return [CreateTranscriptionResponse]
  describe 'create_transcription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_translation
  # Translates audio into English.
  # @param file The audio file object (not file name) translate, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm. 
  # @param model 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :prompt An optional text to guide the model&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English. 
  # @option opts [String] :response_format The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt. 
  # @option opts [Float] :temperature The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit. 
  # @return [CreateTranslationResponse]
  describe 'create_translation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_file
  # Delete a file.
  # @param file_id The ID of the file to use for this request
  # @param [Hash] opts the optional parameters
  # @return [DeleteFileResponse]
  describe 'delete_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_model
  # Delete a fine-tuned model. You must have the Owner role in your organization.
  # @param model The model to delete
  # @param [Hash] opts the optional parameters
  # @return [DeleteModelResponse]
  describe 'delete_model test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for download_file
  # Returns the contents of the specified file
  # @param file_id The ID of the file to use for this request
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'download_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_files
  # Returns a list of files that belong to the user&#39;s organization.
  # @param [Hash] opts the optional parameters
  # @return [ListFilesResponse]
  describe 'list_files test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_fine_tune_events
  # Get fine-grained status updates for a fine-tune job. 
  # @param fine_tune_id The ID of the fine-tune job to get events for. 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :stream Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available. The stream will terminate with a &#x60;data: [DONE]&#x60; message when the job is finished (succeeded, cancelled, or failed).  If set to false, only events generated so far will be returned. 
  # @return [ListFineTuneEventsResponse]
  describe 'list_fine_tune_events test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_fine_tunes
  # List your organization&#39;s fine-tuning jobs 
  # @param [Hash] opts the optional parameters
  # @return [ListFineTunesResponse]
  describe 'list_fine_tunes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_models
  # Lists the currently available models, and provides basic information about each one such as the owner and availability.
  # @param [Hash] opts the optional parameters
  # @return [ListModelsResponse]
  describe 'list_models test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_file
  # Returns information about a specific file.
  # @param file_id The ID of the file to use for this request
  # @param [Hash] opts the optional parameters
  # @return [OpenAIFile]
  describe 'retrieve_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_fine_tune
  # Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning) 
  # @param fine_tune_id The ID of the fine-tune job 
  # @param [Hash] opts the optional parameters
  # @return [FineTune]
  describe 'retrieve_fine_tune test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_model
  # Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
  # @param model The ID of the model to use for this request
  # @param [Hash] opts the optional parameters
  # @return [Model]
  describe 'retrieve_model test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
