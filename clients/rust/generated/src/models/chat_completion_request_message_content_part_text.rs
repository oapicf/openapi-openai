/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChatCompletionRequestMessageContentPartText {
    /// The type of the content part.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The text content.
    #[serde(rename = "text")]
    pub text: String,
}

impl ChatCompletionRequestMessageContentPartText {
    pub fn new(r#type: Type, text: String) -> ChatCompletionRequestMessageContentPartText {
        ChatCompletionRequestMessageContentPartText {
            r#type,
            text,
        }
    }
}
/// The type of the content part.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "text")]
    Text,
}

impl Default for Type {
    fn default() -> Type {
        Self::Text
    }
}

