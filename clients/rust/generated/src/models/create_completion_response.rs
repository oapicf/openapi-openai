/*
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateCompletionResponse {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "object")]
    pub object: String,
    #[serde(rename = "created")]
    pub created: i32,
    #[serde(rename = "model")]
    pub model: String,
    #[serde(rename = "choices")]
    pub choices: Vec<models::CreateCompletionResponseChoicesInner>,
    #[serde(rename = "usage", skip_serializing_if = "Option::is_none")]
    pub usage: Option<Box<models::CreateCompletionResponseUsage>>,
}

impl CreateCompletionResponse {
    pub fn new(id: String, object: String, created: i32, model: String, choices: Vec<models::CreateCompletionResponseChoicesInner>) -> CreateCompletionResponse {
        CreateCompletionResponse {
            id,
            object,
            created,
            model,
            choices,
            usage: None,
        }
    }
}

