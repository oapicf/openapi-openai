/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateEmbeddingResponse {
    /// The list of embeddings generated by the model.
    #[serde(rename = "data")]
    pub data: Vec<models::Embedding>,
    /// The name of the model used to generate the embedding.
    #[serde(rename = "model")]
    pub model: String,
    /// The object type, which is always \"list\".
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "usage")]
    pub usage: Box<models::CreateEmbeddingResponseUsage>,
}

impl CreateEmbeddingResponse {
    pub fn new(data: Vec<models::Embedding>, model: String, object: Object, usage: models::CreateEmbeddingResponseUsage) -> CreateEmbeddingResponse {
        CreateEmbeddingResponse {
            data,
            model,
            object,
            usage: Box::new(usage),
        }
    }
}
/// The object type, which is always \"list\".
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "list")]
    List,
}

impl Default for Object {
    fn default() -> Object {
        Self::List
    }
}

