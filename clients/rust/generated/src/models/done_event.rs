/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DoneEvent : Occurs when a stream ends.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DoneEvent {
    #[serde(rename = "event")]
    pub event: Event,
    #[serde(rename = "data")]
    pub data: Data,
}

impl DoneEvent {
    /// Occurs when a stream ends.
    pub fn new(event: Event, data: Data) -> DoneEvent {
        DoneEvent {
            event,
            data,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Event {
    #[serde(rename = "done")]
    Done,
}

impl Default for Event {
    fn default() -> Event {
        Self::Done
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Data {
    #[serde(rename = "[DONE]")]
    LeftSquareBracketDoneRightSquareBracket,
}

impl Default for Data {
    fn default() -> Data {
        Self::LeftSquareBracketDoneRightSquareBracket
    }
}

