/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// MessageContentTextObject : The text content that is part of a message.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MessageContentTextObject {
    /// Always `text`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "text")]
    pub text: Box<models::MessageContentTextObjectText>,
}

impl MessageContentTextObject {
    /// The text content that is part of a message.
    pub fn new(r#type: Type, text: models::MessageContentTextObjectText) -> MessageContentTextObject {
        MessageContentTextObject {
            r#type,
            text: Box::new(text),
        }
    }
}
/// Always `text`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "text")]
    Text,
}

impl Default for Type {
    fn default() -> Type {
        Self::Text
    }
}

