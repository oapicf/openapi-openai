/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RunObjectLastError : The last error associated with this run. Will be `null` if there are no errors.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunObjectLastError {
    /// One of `server_error`, `rate_limit_exceeded`, or `invalid_prompt`.
    #[serde(rename = "code")]
    pub code: Code,
    /// A human-readable description of the error.
    #[serde(rename = "message")]
    pub message: String,
}

impl RunObjectLastError {
    /// The last error associated with this run. Will be `null` if there are no errors.
    pub fn new(code: Code, message: String) -> RunObjectLastError {
        RunObjectLastError {
            code,
            message,
        }
    }
}
/// One of `server_error`, `rate_limit_exceeded`, or `invalid_prompt`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Code {
    #[serde(rename = "server_error")]
    ServerError,
    #[serde(rename = "rate_limit_exceeded")]
    RateLimitExceeded,
    #[serde(rename = "invalid_prompt")]
    InvalidPrompt,
}

impl Default for Code {
    fn default() -> Code {
        Self::ServerError
    }
}

