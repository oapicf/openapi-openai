/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// RunObjectRequiredAction : Details on the action required to continue the run. Will be `null` if no action is required.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunObjectRequiredAction {
    /// For now, this is always `submit_tool_outputs`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "submit_tool_outputs")]
    pub submit_tool_outputs: Box<models::RunObjectRequiredActionSubmitToolOutputs>,
}

impl RunObjectRequiredAction {
    /// Details on the action required to continue the run. Will be `null` if no action is required.
    pub fn new(r#type: Type, submit_tool_outputs: models::RunObjectRequiredActionSubmitToolOutputs) -> RunObjectRequiredAction {
        RunObjectRequiredAction {
            r#type,
            submit_tool_outputs: Box::new(submit_tool_outputs),
        }
    }
}
/// For now, this is always `submit_tool_outputs`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "submit_tool_outputs")]
    SubmitToolOutputs,
}

impl Default for Type {
    fn default() -> Type {
        Self::SubmitToolOutputs
    }
}

