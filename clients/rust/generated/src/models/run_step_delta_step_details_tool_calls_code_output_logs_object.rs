/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject : Text output from the Code Interpreter tool call as part of a run step.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject {
    /// The index of the output in the outputs array.
    #[serde(rename = "index")]
    pub index: i32,
    /// Always `logs`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The text output from the Code Interpreter tool call.
    #[serde(rename = "logs", skip_serializing_if = "Option::is_none")]
    pub logs: Option<String>,
}

impl RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject {
    /// Text output from the Code Interpreter tool call as part of a run step.
    pub fn new(index: i32, r#type: Type) -> RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject {
        RunStepDeltaStepDetailsToolCallsCodeOutputLogsObject {
            index,
            r#type,
            logs: None,
        }
    }
}
/// Always `logs`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "logs")]
    Logs,
}

impl Default for Type {
    fn default() -> Type {
        Self::Logs
    }
}

