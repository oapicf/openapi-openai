/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RunStepDetailsMessageCreationObject : Details of the message creation by the run step.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunStepDetailsMessageCreationObject {
    /// Always `message_creation`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "message_creation")]
    pub message_creation: Box<models::RunStepDetailsMessageCreationObjectMessageCreation>,
}

impl RunStepDetailsMessageCreationObject {
    /// Details of the message creation by the run step.
    pub fn new(r#type: Type, message_creation: models::RunStepDetailsMessageCreationObjectMessageCreation) -> RunStepDetailsMessageCreationObject {
        RunStepDetailsMessageCreationObject {
            r#type,
            message_creation: Box::new(message_creation),
        }
    }
}
/// Always `message_creation`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "message_creation")]
    MessageCreation,
}

impl Default for Type {
    fn default() -> Type {
        Self::MessageCreation
    }
}

