/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RunStepDetailsToolCallsCodeObject : Details of the Code Interpreter tool call the run step was involved in.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunStepDetailsToolCallsCodeObject {
    /// The ID of the tool call.
    #[serde(rename = "id")]
    pub id: String,
    /// The type of tool call. This is always going to be `code_interpreter` for this type of tool call.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "code_interpreter")]
    pub code_interpreter: Box<models::RunStepDetailsToolCallsCodeObjectCodeInterpreter>,
}

impl RunStepDetailsToolCallsCodeObject {
    /// Details of the Code Interpreter tool call the run step was involved in.
    pub fn new(id: String, r#type: Type, code_interpreter: models::RunStepDetailsToolCallsCodeObjectCodeInterpreter) -> RunStepDetailsToolCallsCodeObject {
        RunStepDetailsToolCallsCodeObject {
            id,
            r#type,
            code_interpreter: Box::new(code_interpreter),
        }
    }
}
/// The type of tool call. This is always going to be `code_interpreter` for this type of tool call.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "code_interpreter")]
    CodeInterpreter,
}

impl Default for Type {
    fn default() -> Type {
        Self::CodeInterpreter
    }
}

