package org.openapitools.models

import io.circe._
import io.finch.circe._
import io.circe.generic.semiauto._
import io.circe.java8.time._
import org.openapitools._
import org.openapitools.models.ChatCompletionMessageToolCall
import org.openapitools.models.ChatCompletionRequestAssistantMessage
import org.openapitools.models.ChatCompletionRequestAssistantMessageFunctionCall
import org.openapitools.models.ChatCompletionRequestFunctionMessage
import org.openapitools.models.ChatCompletionRequestSystemMessage
import org.openapitools.models.ChatCompletionRequestToolMessage
import org.openapitools.models.ChatCompletionRequestUserMessage
import scala.collection.immutable.Seq

/**
 * 
 * @param content The contents of the function message.
 * @param role The role of the messages author, in this case `function`.
 * @param name The name of the function to call.
 * @param toolUnderscorecalls The tool calls generated by the model, such as function calls.
 * @param functionUnderscorecall 
 * @param toolUnderscorecallUnderscoreid Tool call that this message is responding to.
 */
case class ChatCompletionRequestMessage(content: String,
                role: String,
                name: String,
                toolUnderscorecalls: Option[Seq[ChatCompletionMessageToolCall]],
                functionUnderscorecall: Option[ChatCompletionRequestAssistantMessageFunctionCall],
                toolUnderscorecallUnderscoreid: String
                )

object ChatCompletionRequestMessage {
    /**
     * Creates the codec for converting ChatCompletionRequestMessage from and to JSON.
     */
    implicit val decoder: Decoder[ChatCompletionRequestMessage] = deriveDecoder
    implicit val encoder: ObjectEncoder[ChatCompletionRequestMessage] = deriveEncoder
}
