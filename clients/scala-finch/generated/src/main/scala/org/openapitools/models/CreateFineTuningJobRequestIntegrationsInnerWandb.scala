package org.openapitools.models

import io.circe._
import io.finch.circe._
import io.circe.generic.semiauto._
import io.circe.java8.time._
import org.openapitools._
import scala.collection.immutable.Seq

/**
 * The settings for your integration with Weights and Biases. This payload specifies the project that metrics will be sent to. Optionally, you can set an explicit display name for your run, add tags to your run, and set a default entity (team, username, etc) to be associated with your run. 
 * @param project The name of the project that the new run will be created under. 
 * @param name A display name to set for the run. If not set, we will use the Job ID as the name. 
 * @param entity The entity to use for the run. This allows you to set the team or username of the WandB user that you would like associated with the run. If not set, the default entity for the registered WandB API key is used. 
 * @param tags A list of tags to be attached to the newly created run. These tags are passed through directly to WandB. Some default tags are generated by OpenAI: \"openai/finetune\", \"openai/{base-model}\", \"openai/{ftjob-abcdef}\". 
 */
case class CreateFineTuningJobRequestIntegrationsInnerWandb(project: String,
                name: Option[String],
                entity: Option[String],
                tags: Option[Seq[String]]
                )

object CreateFineTuningJobRequestIntegrationsInnerWandb {
    /**
     * Creates the codec for converting CreateFineTuningJobRequestIntegrationsInnerWandb from and to JSON.
     */
    implicit val decoder: Decoder[CreateFineTuningJobRequestIntegrationsInnerWandb] = deriveDecoder
    implicit val encoder: ObjectEncoder[CreateFineTuningJobRequestIntegrationsInnerWandb] = deriveEncoder
}
