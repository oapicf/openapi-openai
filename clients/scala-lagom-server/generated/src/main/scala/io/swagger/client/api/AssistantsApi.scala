/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.AssistantFileObject
import io.swagger.client.model.AssistantObject
import io.swagger.client.model.CreateAssistantFileRequest
import io.swagger.client.model.CreateAssistantRequest
import io.swagger.client.model.CreateMessageRequest
import io.swagger.client.model.CreateRunRequest
import io.swagger.client.model.CreateThreadAndRunRequest
import io.swagger.client.model.CreateThreadRequest
import io.swagger.client.model.DeleteAssistantFileResponse
import io.swagger.client.model.DeleteAssistantResponse
import io.swagger.client.model.DeleteThreadResponse
import io.swagger.client.model.ListAssistantFilesResponse
import io.swagger.client.model.ListAssistantsResponse
import io.swagger.client.model.ListMessageFilesResponse
import io.swagger.client.model.ListMessagesResponse
import io.swagger.client.model.ListRunStepsResponse
import io.swagger.client.model.ListRunsResponse
import io.swagger.client.model.MessageFileObject
import io.swagger.client.model.MessageObject
import io.swagger.client.model.ModifyAssistantRequest
import io.swagger.client.model.ModifyMessageRequest
import io.swagger.client.model.ModifyRunRequest
import io.swagger.client.model.ModifyThreadRequest
import io.swagger.client.model.RunObject
import io.swagger.client.model.RunStepObject
import io.swagger.client.model.SubmitToolOutputsRunRequest
import io.swagger.client.model.ThreadObject

trait AssistantsApi extends Service {


  final override def descriptor = {
    import Service._
    named("AssistantsApi").withCalls(
      restCall(Method.POST, "/threads/:thread_id/runs/:run_id/cancel", cancelRun _), 
      restCall(Method.POST, "/assistants", createAssistant _), 
      restCall(Method.POST, "/assistants/:assistant_id/files", createAssistantFile _), 
      restCall(Method.POST, "/threads/:thread_id/messages", createMessage _), 
      restCall(Method.POST, "/threads/:thread_id/runs", createRun _), 
      restCall(Method.POST, "/threads", createThread _), 
      restCall(Method.POST, "/threads/runs", createThreadAndRun _), 
      restCall(Method.DELETE, "/assistants/:assistant_id", deleteAssistant _), 
      restCall(Method.DELETE, "/assistants/:assistant_id/files/:file_id", deleteAssistantFile _), 
      restCall(Method.DELETE, "/threads/:thread_id", deleteThread _), 
      restCall(Method.GET, "/assistants/:assistant_id", getAssistant _), 
      restCall(Method.GET, "/assistants/:assistant_id/files/:file_id", getAssistantFile _), 
      restCall(Method.GET, "/threads/:thread_id/messages/:message_id", getMessage _), 
      restCall(Method.GET, "/threads/:thread_id/messages/:message_id/files/:file_id", getMessageFile _), 
      restCall(Method.GET, "/threads/:thread_id/runs/:run_id", getRun _), 
      restCall(Method.GET, "/threads/:thread_id/runs/:run_id/steps/:step_id", getRunStep _), 
      restCall(Method.GET, "/threads/:thread_id", getThread _), 
      restCall(Method.GET, "/assistants/:assistant_id/files?limit&order&after&before", listAssistantFiles _), 
      restCall(Method.GET, "/assistants?limit&order&after&before", listAssistants _), 
      restCall(Method.GET, "/threads/:thread_id/messages/:message_id/files?limit&order&after&before", listMessageFiles _), 
      restCall(Method.GET, "/threads/:thread_id/messages?limit&order&after&before&runId", listMessages _), 
      restCall(Method.GET, "/threads/:thread_id/runs/:run_id/steps?limit&order&after&before", listRunSteps _), 
      restCall(Method.GET, "/threads/:thread_id/runs?limit&order&after&before", listRuns _), 
      restCall(Method.POST, "/assistants/:assistant_id", modifyAssistant _), 
      restCall(Method.POST, "/threads/:thread_id/messages/:message_id", modifyMessage _), 
      restCall(Method.POST, "/threads/:thread_id/runs/:run_id", modifyRun _), 
      restCall(Method.POST, "/threads/:thread_id", modifyThread _), 
      restCall(Method.POST, "/threads/:thread_id/runs/:run_id/submit_tool_outputs", submitToolOuputsToRun _)
    ).withAutoAcl(true)
  }


  /**
    * Cancels a run that is &#x60;in_progress&#x60;.
    * 
    *  
    * @param threadId The ID of the thread to which this run belongs.  
    * @param runId The ID of the run to cancel. 
    * @return RunObject
    */
  def cancelRun(threadId: String, runId: String): ServiceCall[NotUsed ,RunObject]
  
  /**
    * Create an assistant with a model and instructions.
    * 
    *  
    * @return AssistantObject Body Parameter   
    */
  def createAssistant(): ServiceCall[CreateAssistantRequest ,AssistantObject]
  
  /**
    * Create an assistant file by attaching a [File](/docs/api-reference/files) to an [assistant](/docs/api-reference/assistants).
    * 
    *  
    * @param assistantId The ID of the assistant for which to create a File.   
    * @return AssistantFileObject Body Parameter   
    */
  def createAssistantFile(assistantId: String): ServiceCall[CreateAssistantFileRequest ,AssistantFileObject]
  
  /**
    * Create a message.
    * 
    *  
    * @param threadId The ID of the [thread](/docs/api-reference/threads) to create a message for.  
    * @return MessageObject Body Parameter   
    */
  def createMessage(threadId: String): ServiceCall[CreateMessageRequest ,MessageObject]
  
  /**
    * Create a run.
    * 
    *  
    * @param threadId The ID of the thread to run.  
    * @return RunObject Body Parameter   
    */
  def createRun(threadId: String): ServiceCall[CreateRunRequest ,RunObject]
  
  /**
    * Create a thread.
    * 
    *  
    * @return ThreadObject Body Parameter   
    */
  def createThread(): ServiceCall[CreateThreadRequest ,ThreadObject]
  
  /**
    * Create a thread and run it in one request.
    * 
    *  
    * @return RunObject Body Parameter   
    */
  def createThreadAndRun(): ServiceCall[CreateThreadAndRunRequest ,RunObject]
  
  /**
    * Delete an assistant.
    * 
    *  
    * @param assistantId The ID of the assistant to delete. 
    * @return DeleteAssistantResponse
    */
  def deleteAssistant(assistantId: String): ServiceCall[NotUsed ,DeleteAssistantResponse]
  
  /**
    * Delete an assistant file.
    * 
    *  
    * @param assistantId The ID of the assistant that the file belongs to.  
    * @param fileId The ID of the file to delete. 
    * @return DeleteAssistantFileResponse
    */
  def deleteAssistantFile(assistantId: String, fileId: String): ServiceCall[NotUsed ,DeleteAssistantFileResponse]
  
  /**
    * Delete a thread.
    * 
    *  
    * @param threadId The ID of the thread to delete. 
    * @return DeleteThreadResponse
    */
  def deleteThread(threadId: String): ServiceCall[NotUsed ,DeleteThreadResponse]
  
  /**
    * Retrieves an assistant.
    * 
    *  
    * @param assistantId The ID of the assistant to retrieve. 
    * @return AssistantObject
    */
  def getAssistant(assistantId: String): ServiceCall[NotUsed ,AssistantObject]
  
  /**
    * Retrieves an AssistantFile.
    * 
    *  
    * @param assistantId The ID of the assistant who the file belongs to.  
    * @param fileId The ID of the file we&#39;re getting. 
    * @return AssistantFileObject
    */
  def getAssistantFile(assistantId: String, fileId: String): ServiceCall[NotUsed ,AssistantFileObject]
  
  /**
    * Retrieve a message.
    * 
    *  
    * @param threadId The ID of the [thread](/docs/api-reference/threads) to which this message belongs.  
    * @param messageId The ID of the message to retrieve. 
    * @return MessageObject
    */
  def getMessage(threadId: String, messageId: String): ServiceCall[NotUsed ,MessageObject]
  
  /**
    * Retrieves a message file.
    * 
    *  
    * @param threadId The ID of the thread to which the message and File belong.  
    * @param messageId The ID of the message the file belongs to.  
    * @param fileId The ID of the file being retrieved. 
    * @return MessageFileObject
    */
  def getMessageFile(threadId: String, messageId: String, fileId: String): ServiceCall[NotUsed ,MessageFileObject]
  
  /**
    * Retrieves a run.
    * 
    *  
    * @param threadId The ID of the [thread](/docs/api-reference/threads) that was run.  
    * @param runId The ID of the run to retrieve. 
    * @return RunObject
    */
  def getRun(threadId: String, runId: String): ServiceCall[NotUsed ,RunObject]
  
  /**
    * Retrieves a run step.
    * 
    *  
    * @param threadId The ID of the thread to which the run and run step belongs.  
    * @param runId The ID of the run to which the run step belongs.  
    * @param stepId The ID of the run step to retrieve. 
    * @return RunStepObject
    */
  def getRunStep(threadId: String, runId: String, stepId: String): ServiceCall[NotUsed ,RunStepObject]
  
  /**
    * Retrieves a thread.
    * 
    *  
    * @param threadId The ID of the thread to retrieve. 
    * @return ThreadObject
    */
  def getThread(threadId: String): ServiceCall[NotUsed ,ThreadObject]
        
  /**
    * Returns a list of assistant files.
    * 
    *  
    * @param assistantId The ID of the assistant the file belongs to.  
    * @param limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20) 
    * @param order Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order.  (optional, default to desc) 
    * @param after A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional) 
    * @param before A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list.  (optional)
    * @return ListAssistantFilesResponse
    */
  def listAssistantFiles(limit:           Option[Int] /* = 20*/,order: Option[AssistantsApiOrderEnum.AssistantsApiOrderEnum]after:           Option[String] = None,before:           Option[String] = NoneassistantId: String): ServiceCall[NotUsed ,ListAssistantFilesResponse]
        
  /**
    * Returns a list of assistants.
    * 
    *  
    * @param limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20) 
    * @param order Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order.  (optional, default to desc) 
    * @param after A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional) 
    * @param before A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list.  (optional)
    * @return ListAssistantsResponse
    */
  def listAssistants(limit:           Option[Int] /* = 20*/,order: Option[AssistantsApiOrderEnum.AssistantsApiOrderEnum]after:           Option[String] = None,before:           Option[String] = None): ServiceCall[NotUsed ,ListAssistantsResponse]
        
  /**
    * Returns a list of message files.
    * 
    *  
    * @param threadId The ID of the thread that the message and files belong to.  
    * @param messageId The ID of the message that the files belongs to.  
    * @param limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20) 
    * @param order Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order.  (optional, default to desc) 
    * @param after A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional) 
    * @param before A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list.  (optional)
    * @return ListMessageFilesResponse
    */
  def listMessageFiles(limit:           Option[Int] /* = 20*/,order: Option[AssistantsApiOrderEnum.AssistantsApiOrderEnum]after:           Option[String] = None,before:           Option[String] = NonethreadId: String, messageId: String): ServiceCall[NotUsed ,ListMessageFilesResponse]
        
  /**
    * Returns a list of messages for a given thread.
    * 
    *  
    * @param threadId The ID of the [thread](/docs/api-reference/threads) the messages belong to.  
    * @param limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20) 
    * @param order Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order.  (optional, default to desc) 
    * @param after A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional) 
    * @param before A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list.  (optional) 
    * @param runId Filter messages by the run ID that generated them.  (optional)
    * @return ListMessagesResponse
    */
  def listMessages(limit:           Option[Int] /* = 20*/,order: Option[AssistantsApiOrderEnum.AssistantsApiOrderEnum]after:           Option[String] = None,before:           Option[String] = None,runId:           Option[String] = NonethreadId: String): ServiceCall[NotUsed ,ListMessagesResponse]
        
  /**
    * Returns a list of run steps belonging to a run.
    * 
    *  
    * @param threadId The ID of the thread the run and run steps belong to.  
    * @param runId The ID of the run the run steps belong to.  
    * @param limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20) 
    * @param order Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order.  (optional, default to desc) 
    * @param after A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional) 
    * @param before A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list.  (optional)
    * @return ListRunStepsResponse
    */
  def listRunSteps(limit:           Option[Int] /* = 20*/,order: Option[AssistantsApiOrderEnum.AssistantsApiOrderEnum]after:           Option[String] = None,before:           Option[String] = NonethreadId: String, runId: String): ServiceCall[NotUsed ,ListRunStepsResponse]
        
  /**
    * Returns a list of runs belonging to a thread.
    * 
    *  
    * @param threadId The ID of the thread the run belongs to.  
    * @param limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20) 
    * @param order Sort order by the &#x60;created_at&#x60; timestamp of the objects. &#x60;asc&#x60; for ascending order and &#x60;desc&#x60; for descending order.  (optional, default to desc) 
    * @param after A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional) 
    * @param before A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list.  (optional)
    * @return ListRunsResponse
    */
  def listRuns(limit:           Option[Int] /* = 20*/,order: Option[AssistantsApiOrderEnum.AssistantsApiOrderEnum]after:           Option[String] = None,before:           Option[String] = NonethreadId: String): ServiceCall[NotUsed ,ListRunsResponse]
  
  /**
    * Modifies an assistant.
    * 
    *  
    * @param assistantId The ID of the assistant to modify.  
    * @return AssistantObject Body Parameter   
    */
  def modifyAssistant(assistantId: String): ServiceCall[ModifyAssistantRequest ,AssistantObject]
  
  /**
    * Modifies a message.
    * 
    *  
    * @param threadId The ID of the thread to which this message belongs.  
    * @param messageId The ID of the message to modify.  
    * @return MessageObject Body Parameter   
    */
  def modifyMessage(threadId: String, messageId: String): ServiceCall[ModifyMessageRequest ,MessageObject]
  
  /**
    * Modifies a run.
    * 
    *  
    * @param threadId The ID of the [thread](/docs/api-reference/threads) that was run.  
    * @param runId The ID of the run to modify.  
    * @return RunObject Body Parameter   
    */
  def modifyRun(threadId: String, runId: String): ServiceCall[ModifyRunRequest ,RunObject]
  
  /**
    * Modifies a thread.
    * 
    *  
    * @param threadId The ID of the thread to modify. Only the &#x60;metadata&#x60; can be modified.  
    * @return ThreadObject Body Parameter   
    */
  def modifyThread(threadId: String): ServiceCall[ModifyThreadRequest ,ThreadObject]
  
  /**
    * When a run has the &#x60;status: \&quot;requires_action\&quot;&#x60; and &#x60;required_action.type&#x60; is &#x60;submit_tool_outputs&#x60;, this endpoint can be used to submit the outputs from the tool calls once they&#39;re all completed. All outputs must be submitted in a single request. 
    * 
    *  
    * @param threadId The ID of the [thread](/docs/api-reference/threads) to which this run belongs.  
    * @param runId The ID of the run that requires the tool output submission.  
    * @return RunObject Body Parameter   
    */
  def submitToolOuputsToRun(threadId: String, runId: String): ServiceCall[SubmitToolOutputsRunRequest ,RunObject]
  

        object AssistantsApiOrderEnum extends Enumeration {
        val   asc, desc = Value     
        type AssistantsApiOrderEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AssistantsApiOrderEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[AssistantsApiOrderEnum] = PathParamSerializer.required("AssistantsApiOrderEnum")(withName)(_.toString)
        }
        object AssistantsApiOrderEnum extends Enumeration {
        val   asc, desc = Value     
        type AssistantsApiOrderEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AssistantsApiOrderEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[AssistantsApiOrderEnum] = PathParamSerializer.required("AssistantsApiOrderEnum")(withName)(_.toString)
        }
        object AssistantsApiOrderEnum extends Enumeration {
        val   asc, desc = Value     
        type AssistantsApiOrderEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AssistantsApiOrderEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[AssistantsApiOrderEnum] = PathParamSerializer.required("AssistantsApiOrderEnum")(withName)(_.toString)
        }
        object AssistantsApiOrderEnum extends Enumeration {
        val   asc, desc = Value     
        type AssistantsApiOrderEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AssistantsApiOrderEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[AssistantsApiOrderEnum] = PathParamSerializer.required("AssistantsApiOrderEnum")(withName)(_.toString)
        }
        object AssistantsApiOrderEnum extends Enumeration {
        val   asc, desc = Value     
        type AssistantsApiOrderEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AssistantsApiOrderEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[AssistantsApiOrderEnum] = PathParamSerializer.required("AssistantsApiOrderEnum")(withName)(_.toString)
        }
        object AssistantsApiOrderEnum extends Enumeration {
        val   asc, desc = Value     
        type AssistantsApiOrderEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AssistantsApiOrderEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[AssistantsApiOrderEnum] = PathParamSerializer.required("AssistantsApiOrderEnum")(withName)(_.toString)
        }
  }
