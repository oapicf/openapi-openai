/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.CreateSpeechRequest
import io.swagger.client.model.CreateTranscription200Response
import io.swagger.client.model.CreateTranscriptionRequestModel
import io.swagger.client.model.CreateTranslation200Response
import java.io.File
import io.swagger.client.model.Number

trait AudioApi extends Service {


  final override def descriptor = {
    import Service._
    named("AudioApi").withCalls(
      restCall(Method.POST, "/audio/speech", createSpeech _), 
      restCall(Method.POST, "/audio/transcriptions", createTranscription _), 
      restCall(Method.POST, "/audio/translations", createTranslation _)
    ).withAutoAcl(true)
  }


  /**
    * Generates audio from the input text.
    * 
    *  
    * @return File Body Parameter   
    */
  def createSpeech(): ServiceCall[CreateSpeechRequest ,File]
  
  // file:File  -- not yet supported x-www-form-urlencoded
  // model:CreateTranscriptionRequestModel  -- not yet supported x-www-form-urlencoded
  // language:String  -- not yet supported x-www-form-urlencoded
  // prompt:String  -- not yet supported x-www-form-urlencoded
  // responseFormat:String  -- not yet supported x-www-form-urlencoded
  // temperature:Number  -- not yet supported x-www-form-urlencoded
  // timestampGranularities:Seq[String]  -- not yet supported x-www-form-urlencoded
  /**
    * Transcribes audio into the input language.
    * 
    *  
    * @param file The audio file object (not file name) to transcribe, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.   
    * @param model   
    * @param language The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.  (optional) 
    * @param prompt An optional text to guide the model&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.  (optional) 
    * @param responseFormat The format of the transcript output, in one of these options: &#x60;json&#x60;, &#x60;text&#x60;, &#x60;srt&#x60;, &#x60;verbose_json&#x60;, or &#x60;vtt&#x60;.  (optional, default to json) 
    * @param temperature The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.  (optional, default to 0) 
    * @param timestampGranularities The timestamp granularities to populate for this transcription. &#x60;response_format&#x60; must be set &#x60;verbose_json&#x60; to use timestamp granularities. Either or both of these options are supported: &#x60;word&#x60;, or &#x60;segment&#x60;. Note: There is no additional latency for segment timestamps, but generating word timestamps incurs additional latency.  (optional)
    * @return CreateTranscription200Response
    */
  def createTranscription(): ServiceCall[NotUsed ,CreateTranscription200Response]
  
  // file:File  -- not yet supported x-www-form-urlencoded
  // model:CreateTranscriptionRequestModel  -- not yet supported x-www-form-urlencoded
  // prompt:String  -- not yet supported x-www-form-urlencoded
  // responseFormat:String  -- not yet supported x-www-form-urlencoded
  // temperature:Number  -- not yet supported x-www-form-urlencoded
  /**
    * Translates audio into English.
    * 
    *  
    * @param file The audio file object (not file name) translate, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.   
    * @param model   
    * @param prompt An optional text to guide the model&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.  (optional) 
    * @param responseFormat The format of the transcript output, in one of these options: &#x60;json&#x60;, &#x60;text&#x60;, &#x60;srt&#x60;, &#x60;verbose_json&#x60;, or &#x60;vtt&#x60;.  (optional, default to json) 
    * @param temperature The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.  (optional, default to 0)
    * @return CreateTranslation200Response
    */
  def createTranslation(): ServiceCall[NotUsed ,CreateTranslation200Response]
  

        object AudioApiResponseFormatEnum extends Enumeration {
        val   json, text, srt, verbose_json, vtt = Value     
        type AudioApiResponseFormatEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AudioApiResponseFormatEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[AudioApiResponseFormatEnum] = PathParamSerializer.required("AudioApiResponseFormatEnum")(withName)(_.toString)
        }
        object AudioApiTimestampGranularitiesEnum extends Enumeration {
        val   word, segment = Value     
        type AudioApiTimestampGranularitiesEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AudioApiTimestampGranularitiesEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[AudioApiTimestampGranularitiesEnum] = PathParamSerializer.required("AudioApiTimestampGranularitiesEnum")(withName)(_.toString)
        }
  }
