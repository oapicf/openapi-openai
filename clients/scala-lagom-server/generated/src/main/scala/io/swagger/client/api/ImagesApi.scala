/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.CreateImageEditRequestModel
import io.swagger.client.model.CreateImageRequest
import java.io.File
import io.swagger.client.model.ImagesResponse

trait ImagesApi extends Service {


  final override def descriptor = {
    import Service._
    named("ImagesApi").withCalls(
      restCall(Method.POST, "/images/generations", createImage _), 
      restCall(Method.POST, "/images/edits", createImageEdit _), 
      restCall(Method.POST, "/images/variations", createImageVariation _)
    ).withAutoAcl(true)
  }


  /**
    * Creates an image given a prompt.
    * 
    *  
    * @return ImagesResponse Body Parameter   
    */
  def createImage(): ServiceCall[CreateImageRequest ,ImagesResponse]
  
  // image:File  -- not yet supported x-www-form-urlencoded
  // prompt:String  -- not yet supported x-www-form-urlencoded
  // mask:File  -- not yet supported x-www-form-urlencoded
  // model:CreateImageEditRequestModel  -- not yet supported x-www-form-urlencoded
  // n:Int  -- not yet supported x-www-form-urlencoded
  // size:String  -- not yet supported x-www-form-urlencoded
  // responseFormat:String  -- not yet supported x-www-form-urlencoded
  // user:String  -- not yet supported x-www-form-urlencoded
  /**
    * Creates an edited or extended image given an original image and a prompt.
    * 
    *  
    * @param image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.  
    * @param prompt A text description of the desired image(s). The maximum length is 1000 characters.  
    * @param mask An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;. (optional) 
    * @param model  (optional) 
    * @param n The number of images to generate. Must be between 1 and 10. (optional, default to 1) 
    * @param size The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional, default to 1024x1024) 
    * @param responseFormat The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional, default to url) 
    * @param user A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).  (optional)
    * @return ImagesResponse
    */
  def createImageEdit(): ServiceCall[NotUsed ,ImagesResponse]
  
  // image:File  -- not yet supported x-www-form-urlencoded
  // model:CreateImageEditRequestModel  -- not yet supported x-www-form-urlencoded
  // n:Int  -- not yet supported x-www-form-urlencoded
  // responseFormat:String  -- not yet supported x-www-form-urlencoded
  // size:String  -- not yet supported x-www-form-urlencoded
  // user:String  -- not yet supported x-www-form-urlencoded
  /**
    * Creates a variation of a given image.
    * 
    *  
    * @param image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.  
    * @param model  (optional) 
    * @param n The number of images to generate. Must be between 1 and 10. For &#x60;dall-e-3&#x60;, only &#x60;n&#x3D;1&#x60; is supported. (optional, default to 1) 
    * @param responseFormat The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional, default to url) 
    * @param size The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional, default to 1024x1024) 
    * @param user A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).  (optional)
    * @return ImagesResponse
    */
  def createImageVariation(): ServiceCall[NotUsed ,ImagesResponse]
  

        object ImagesApiSizeEnum extends Enumeration {
        val   256x256, 512x512, 1024x1024 = Value     
        type ImagesApiSizeEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[ImagesApiSizeEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[ImagesApiSizeEnum] = PathParamSerializer.required("ImagesApiSizeEnum")(withName)(_.toString)
        }
        object ImagesApiResponseFormatEnum extends Enumeration {
        val   url, b64_json = Value     
        type ImagesApiResponseFormatEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[ImagesApiResponseFormatEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[ImagesApiResponseFormatEnum] = PathParamSerializer.required("ImagesApiResponseFormatEnum")(withName)(_.toString)
        }
        object ImagesApiResponseFormatEnum extends Enumeration {
        val   url, b64_json = Value     
        type ImagesApiResponseFormatEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[ImagesApiResponseFormatEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[ImagesApiResponseFormatEnum] = PathParamSerializer.required("ImagesApiResponseFormatEnum")(withName)(_.toString)
        }
        object ImagesApiSizeEnum extends Enumeration {
        val   256x256, 512x512, 1024x1024 = Value     
        type ImagesApiSizeEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[ImagesApiSizeEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[ImagesApiSizeEnum] = PathParamSerializer.required("ImagesApiSizeEnum")(withName)(_.toString)
        }
  }
