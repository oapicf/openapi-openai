/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.model
import play.api.libs.json._

case class AssistantObject (
            /* The identifier, which can be referenced in API endpoints. */
                  id: String,
                  `object`:  Option[AssistantObject&#x60;object&#x60;Enum.AssistantObject&#x60;object&#x60;Enum],
            /* The Unix timestamp (in seconds) for when the assistant was created. */
                  createdAt: Int,
            /* The name of the assistant. The maximum length is 256 characters.  */
                  name: String,
            /* The description of the assistant. The maximum length is 512 characters.  */
                  description: String,
            /* ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.  */
                  model: String,
            /* The system instructions that the assistant uses. The maximum length is 256,000 characters.  */
                  instructions: String,
            /* A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`.  */
                  tools: Seq[AssistantObjectToolsInner],
            /* A list of [file](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order.  */
                  fileIds: Seq[String],
            /* Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.  */
                  metadata: Any
)

object AssistantObject {
implicit val format: Format[AssistantObject] = Json.format
}

object AssistantObject&#x60;object&#x60;Enum extends Enumeration {
  val   assistant = Value
  type AssistantObject&#x60;object&#x60;Enum = Value
  implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AssistantObject&#x60;object&#x60;Enum.type])
}
