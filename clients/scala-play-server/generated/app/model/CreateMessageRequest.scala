package model

import play.api.libs.json._

/**
  * Represents the Swagger definition for CreateMessageRequest.
  * @param role The role of the entity that is creating the message. Allowed values include: - `user`: Indicates the message is sent by an actual user and should be used in most cases to represent user-generated messages. - `assistant`: Indicates the message is generated by the assistant. Use this value to insert messages from the assistant into the conversation. 
  * @param content The content of the message.
  * @param fileIds A list of [File](/docs/api-reference/files) IDs that the message should use. There can be a maximum of 10 files attached to a message. Useful for tools like `retrieval` and `code_interpreter` that can access and use files.
  * @param metadata Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
  */
@javax.annotation.Generated(value = Array("org.openapitools.codegen.languages.ScalaPlayFrameworkServerCodegen"), date = "2024-11-03T11:15:39.331426426Z[Etc/UTC]", comments = "Generator version: 7.9.0")
case class CreateMessageRequest(
  role: CreateMessageRequest.Role.Value,
  content: String,
  fileIds: Option[List[String]],
  metadata: Option[JsObject]
)

object CreateMessageRequest {
  implicit lazy val createMessageRequestJsonFormat: Format[CreateMessageRequest] = Json.format[CreateMessageRequest]

  // noinspection TypeAnnotation
  object Role extends Enumeration {
    val User = Value("user")
    val Assistant = Value("assistant")

    type Role = Value
    implicit lazy val RoleJsonFormat: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[this.type])
  }
}

