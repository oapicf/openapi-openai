/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.CreateFineTuningJobRequest
import org.openapitools.server.model.FineTuningJob
import org.openapitools.server.model.ListFineTuningJobCheckpointsResponse
import org.openapitools.server.model.ListFineTuningJobEventsResponse
import org.openapitools.server.model.ListPaginatedFineTuningJobsResponse

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class FineTuningApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "FineTuningApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val cancelFineTuningJobOperation = (apiOperation[FineTuningJob]("cancelFineTuningJob")
    summary "Immediately cancel a fine-tune job. "
    parameters(pathParam[String]("fineTuningJobId").description(""))
  )

  post("/fine_tuning/jobs/:fine_tuning_job_id/cancel", operation(cancelFineTuningJobOperation)) {
    val fineTuningJobId = params.getOrElse("fineTuningJobId", halt(400))
    //println("fineTuningJobId: " + fineTuningJobId)
  }

  

  val createFineTuningJobOperation = (apiOperation[FineTuningJob]("createFineTuningJob")
    summary "Creates a fine-tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about fine-tuning](/docs/guides/fine-tuning) "
    parameters(bodyParam[CreateFineTuningJobRequest]("createFineTuningJobRequest").description(""))
  )

  post("/fine_tuning/jobs", operation(createFineTuningJobOperation)) {
    //println("createFineTuningJobRequest: " + createFineTuningJobRequest)
  }

  

  val listFineTuningEventsOperation = (apiOperation[ListFineTuningJobEventsResponse]("listFineTuningEvents")
    summary "Get status updates for a fine-tuning job. "
    parameters(pathParam[String]("fineTuningJobId").description(""), queryParam[String]("after").description("").optional, queryParam[Int]("limit").description("").optional.defaultValue(20))
  )

  get("/fine_tuning/jobs/:fine_tuning_job_id/events", operation(listFineTuningEventsOperation)) {
    val fineTuningJobId = params.getOrElse("fineTuningJobId", halt(400))
    //println("fineTuningJobId: " + fineTuningJobId)
            val after = params.getAs[String]("after")

    //println("after: " + after)
            val limit = params.getAs[Int]("limit")

    //println("limit: " + limit)
  }

  

  val listFineTuningJobCheckpointsOperation = (apiOperation[ListFineTuningJobCheckpointsResponse]("listFineTuningJobCheckpoints")
    summary "List checkpoints for a fine-tuning job. "
    parameters(pathParam[String]("fineTuningJobId").description(""), queryParam[String]("after").description("").optional, queryParam[Int]("limit").description("").optional.defaultValue(10))
  )

  get("/fine_tuning/jobs/:fine_tuning_job_id/checkpoints", operation(listFineTuningJobCheckpointsOperation)) {
    val fineTuningJobId = params.getOrElse("fineTuningJobId", halt(400))
    //println("fineTuningJobId: " + fineTuningJobId)
            val after = params.getAs[String]("after")

    //println("after: " + after)
            val limit = params.getAs[Int]("limit")

    //println("limit: " + limit)
  }

  

  val listPaginatedFineTuningJobsOperation = (apiOperation[ListPaginatedFineTuningJobsResponse]("listPaginatedFineTuningJobs")
    summary "List your organization's fine-tuning jobs "
    parameters(queryParam[String]("after").description("").optional, queryParam[Int]("limit").description("").optional.defaultValue(20))
  )

  get("/fine_tuning/jobs", operation(listPaginatedFineTuningJobsOperation)) {
            val after = params.getAs[String]("after")

    //println("after: " + after)
            val limit = params.getAs[Int]("limit")

    //println("limit: " + limit)
  }

  

  val retrieveFineTuningJobOperation = (apiOperation[FineTuningJob]("retrieveFineTuningJob")
    summary "Get info about a fine-tuning job.  [Learn more about fine-tuning](/docs/guides/fine-tuning) "
    parameters(pathParam[String]("fineTuningJobId").description(""))
  )

  get("/fine_tuning/jobs/:fine_tuning_job_id", operation(retrieveFineTuningJobOperation)) {
    val fineTuningJobId = params.getOrElse("fineTuningJobId", halt(400))
    //println("fineTuningJobId: " + fineTuningJobId)
  }

}
