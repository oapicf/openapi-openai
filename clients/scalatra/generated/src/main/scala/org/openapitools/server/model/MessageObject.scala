/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */

package org.openapitools.server.model

case class MessageObject(
  /* The identifier, which can be referenced in API endpoints. */
  id: String,

  /* The object type, which is always `thread.message`. */
  `object`: String,

  /* The Unix timestamp (in seconds) for when the message was created. */
  createdAt: Int,

  /* The [thread](/docs/api-reference/threads) ID that this message belongs to. */
  threadId: String,

  /* The status of the message, which can be either `in_progress`, `incomplete`, or `completed`. */
  status: String,

  incompleteDetails: MessageObjectIncompleteDetails,

  /* The Unix timestamp (in seconds) for when the message was completed. */
  completedAt: Int,

  /* The Unix timestamp (in seconds) for when the message was marked as incomplete. */
  incompleteAt: Int,

  /* The entity that produced the message. One of `user` or `assistant`. */
  role: String,

  /* The content of the message in array of text and/or images. */
  content: List[MessageObjectContentInner],

  /* If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message. */
  assistantId: String,

  /* The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is `null` when messages are created manually using the create message or create thread endpoints. */
  runId: String,

  /* A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message. */
  fileIds: List[String],

  /* Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.  */
  metadata: Any

 )
