/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.CreateModerationRequest;
import org.openapitools.model.CreateModerationResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-04-14T13:54:16.789070334Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Validated
@Tag(name = "Moderations", description = "Given a input text, outputs if the model classifies it as potentially harmful.")
public interface ModerationsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /moderations : Classifies if text is potentially harmful.
     *
     * @param createModerationRequest  (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "createModeration",
        summary = "Classifies if text is potentially harmful.",
        tags = { "Moderations" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreateModerationResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/moderations",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CreateModerationResponse> createModeration(
        @Parameter(name = "CreateModerationRequest", description = "", required = true) @Valid @RequestBody CreateModerationRequest createModerationRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"model\" : \"model\", \"id\" : \"id\", \"results\" : [ { \"category_scores\" : { \"self-harm/intent\" : 2.3021358869347655, \"hate/threatening\" : 6.027456183070403, \"self-harm/instructions\" : 7.061401241503109, \"sexual/minors\" : 3.616076749251911, \"harassment/threatening\" : 5.962133916683182, \"hate\" : 0.8008281904610115, \"self-harm\" : 5.637376656633329, \"harassment\" : 1.4658129805029452, \"sexual\" : 9.301444243932576, \"violence/graphic\" : 4.145608029883936, \"violence\" : 2.027123023002322 }, \"flagged\" : true, \"categories\" : { \"self-harm/intent\" : true, \"hate/threatening\" : true, \"self-harm/instructions\" : true, \"sexual/minors\" : true, \"harassment/threatening\" : true, \"hate\" : true, \"self-harm\" : true, \"harassment\" : true, \"sexual\" : true, \"violence/graphic\" : true, \"violence\" : true } }, { \"category_scores\" : { \"self-harm/intent\" : 2.3021358869347655, \"hate/threatening\" : 6.027456183070403, \"self-harm/instructions\" : 7.061401241503109, \"sexual/minors\" : 3.616076749251911, \"harassment/threatening\" : 5.962133916683182, \"hate\" : 0.8008281904610115, \"self-harm\" : 5.637376656633329, \"harassment\" : 1.4658129805029452, \"sexual\" : 9.301444243932576, \"violence/graphic\" : 4.145608029883936, \"violence\" : 2.027123023002322 }, \"flagged\" : true, \"categories\" : { \"self-harm/intent\" : true, \"hate/threatening\" : true, \"self-harm/instructions\" : true, \"sexual/minors\" : true, \"harassment/threatening\" : true, \"hate\" : true, \"self-harm\" : true, \"harassment\" : true, \"sexual\" : true, \"violence/graphic\" : true, \"violence\" : true } } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
