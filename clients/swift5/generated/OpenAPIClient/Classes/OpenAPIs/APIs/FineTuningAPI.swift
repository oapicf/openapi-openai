//
// FineTuningAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class FineTuningAPI {

    /**
     Immediately cancel a fine-tune job. 
     
     - parameter fineTuningJobId: (path) The ID of the fine-tuning job to cancel.  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func cancelFineTuningJob(fineTuningJobId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: FineTuningJob?, _ error: Error?) -> Void)) -> RequestTask {
        return cancelFineTuningJobWithRequestBuilder(fineTuningJobId: fineTuningJobId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Immediately cancel a fine-tune job. 
     - POST /fine_tuning/jobs/{fine_tuning_job_id}/cancel
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter fineTuningJobId: (path) The ID of the fine-tuning job to cancel.  
     - returns: RequestBuilder<FineTuningJob> 
     */
    open class func cancelFineTuningJobWithRequestBuilder(fineTuningJobId: String) -> RequestBuilder<FineTuningJob> {
        var localVariablePath = "/fine_tuning/jobs/{fine_tuning_job_id}/cancel"
        let fineTuningJobIdPreEscape = "\(APIHelper.mapValueToPathItem(fineTuningJobId))"
        let fineTuningJobIdPostEscape = fineTuningJobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{fine_tuning_job_id}", with: fineTuningJobIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FineTuningJob>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Creates a fine-tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
     
     - parameter createFineTuningJobRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createFineTuningJob(createFineTuningJobRequest: CreateFineTuningJobRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: FineTuningJob?, _ error: Error?) -> Void)) -> RequestTask {
        return createFineTuningJobWithRequestBuilder(createFineTuningJobRequest: createFineTuningJobRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Creates a fine-tuning job which begins the process of creating a new model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
     - POST /fine_tuning/jobs
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter createFineTuningJobRequest: (body)  
     - returns: RequestBuilder<FineTuningJob> 
     */
    open class func createFineTuningJobWithRequestBuilder(createFineTuningJobRequest: CreateFineTuningJobRequest) -> RequestBuilder<FineTuningJob> {
        let localVariablePath = "/fine_tuning/jobs"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createFineTuningJobRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FineTuningJob>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get status updates for a fine-tuning job. 
     
     - parameter fineTuningJobId: (path) The ID of the fine-tuning job to get events for.  
     - parameter after: (query) Identifier for the last event from the previous pagination request. (optional)
     - parameter limit: (query) Number of events to retrieve. (optional, default to 20)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listFineTuningEvents(fineTuningJobId: String, after: String? = nil, limit: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ListFineTuningJobEventsResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return listFineTuningEventsWithRequestBuilder(fineTuningJobId: fineTuningJobId, after: after, limit: limit).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get status updates for a fine-tuning job. 
     - GET /fine_tuning/jobs/{fine_tuning_job_id}/events
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter fineTuningJobId: (path) The ID of the fine-tuning job to get events for.  
     - parameter after: (query) Identifier for the last event from the previous pagination request. (optional)
     - parameter limit: (query) Number of events to retrieve. (optional, default to 20)
     - returns: RequestBuilder<ListFineTuningJobEventsResponse> 
     */
    open class func listFineTuningEventsWithRequestBuilder(fineTuningJobId: String, after: String? = nil, limit: Int? = nil) -> RequestBuilder<ListFineTuningJobEventsResponse> {
        var localVariablePath = "/fine_tuning/jobs/{fine_tuning_job_id}/events"
        let fineTuningJobIdPreEscape = "\(APIHelper.mapValueToPathItem(fineTuningJobId))"
        let fineTuningJobIdPostEscape = fineTuningJobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{fine_tuning_job_id}", with: fineTuningJobIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "after": (wrappedValue: after?.encodeToJSON(), isExplode: true),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListFineTuningJobEventsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     List checkpoints for a fine-tuning job. 
     
     - parameter fineTuningJobId: (path) The ID of the fine-tuning job to get checkpoints for.  
     - parameter after: (query) Identifier for the last checkpoint ID from the previous pagination request. (optional)
     - parameter limit: (query) Number of checkpoints to retrieve. (optional, default to 10)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listFineTuningJobCheckpoints(fineTuningJobId: String, after: String? = nil, limit: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ListFineTuningJobCheckpointsResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return listFineTuningJobCheckpointsWithRequestBuilder(fineTuningJobId: fineTuningJobId, after: after, limit: limit).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List checkpoints for a fine-tuning job. 
     - GET /fine_tuning/jobs/{fine_tuning_job_id}/checkpoints
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter fineTuningJobId: (path) The ID of the fine-tuning job to get checkpoints for.  
     - parameter after: (query) Identifier for the last checkpoint ID from the previous pagination request. (optional)
     - parameter limit: (query) Number of checkpoints to retrieve. (optional, default to 10)
     - returns: RequestBuilder<ListFineTuningJobCheckpointsResponse> 
     */
    open class func listFineTuningJobCheckpointsWithRequestBuilder(fineTuningJobId: String, after: String? = nil, limit: Int? = nil) -> RequestBuilder<ListFineTuningJobCheckpointsResponse> {
        var localVariablePath = "/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints"
        let fineTuningJobIdPreEscape = "\(APIHelper.mapValueToPathItem(fineTuningJobId))"
        let fineTuningJobIdPostEscape = fineTuningJobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{fine_tuning_job_id}", with: fineTuningJobIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "after": (wrappedValue: after?.encodeToJSON(), isExplode: true),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListFineTuningJobCheckpointsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     List your organization's fine-tuning jobs 
     
     - parameter after: (query) Identifier for the last job from the previous pagination request. (optional)
     - parameter limit: (query) Number of fine-tuning jobs to retrieve. (optional, default to 20)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listPaginatedFineTuningJobs(after: String? = nil, limit: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ListPaginatedFineTuningJobsResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return listPaginatedFineTuningJobsWithRequestBuilder(after: after, limit: limit).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List your organization's fine-tuning jobs 
     - GET /fine_tuning/jobs
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter after: (query) Identifier for the last job from the previous pagination request. (optional)
     - parameter limit: (query) Number of fine-tuning jobs to retrieve. (optional, default to 20)
     - returns: RequestBuilder<ListPaginatedFineTuningJobsResponse> 
     */
    open class func listPaginatedFineTuningJobsWithRequestBuilder(after: String? = nil, limit: Int? = nil) -> RequestBuilder<ListPaginatedFineTuningJobsResponse> {
        let localVariablePath = "/fine_tuning/jobs"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "after": (wrappedValue: after?.encodeToJSON(), isExplode: true),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListPaginatedFineTuningJobsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get info about a fine-tuning job.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
     
     - parameter fineTuningJobId: (path) The ID of the fine-tuning job.  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func retrieveFineTuningJob(fineTuningJobId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: FineTuningJob?, _ error: Error?) -> Void)) -> RequestTask {
        return retrieveFineTuningJobWithRequestBuilder(fineTuningJobId: fineTuningJobId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get info about a fine-tuning job.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
     - GET /fine_tuning/jobs/{fine_tuning_job_id}
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter fineTuningJobId: (path) The ID of the fine-tuning job.  
     - returns: RequestBuilder<FineTuningJob> 
     */
    open class func retrieveFineTuningJobWithRequestBuilder(fineTuningJobId: String) -> RequestBuilder<FineTuningJob> {
        var localVariablePath = "/fine_tuning/jobs/{fine_tuning_job_id}"
        let fineTuningJobIdPreEscape = "\(APIHelper.mapValueToPathItem(fineTuningJobId))"
        let fineTuningJobIdPostEscape = fineTuningJobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{fine_tuning_job_id}", with: fineTuningJobIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FineTuningJob>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
