//
// ImagesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ImagesAPI {

    /**
     Creates an image given a prompt.
     
     - parameter createImageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createImage(createImageRequest: CreateImageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ImagesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return createImageWithRequestBuilder(createImageRequest: createImageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Creates an image given a prompt.
     - POST /images/generations
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter createImageRequest: (body)  
     - returns: RequestBuilder<ImagesResponse> 
     */
    open class func createImageWithRequestBuilder(createImageRequest: CreateImageRequest) -> RequestBuilder<ImagesResponse> {
        let localVariablePath = "/images/generations"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createImageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ImagesResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter size
     */
    public enum Size_createImageEdit: String, CaseIterable {
        case _256x256 = "256x256"
        case _512x512 = "512x512"
        case _1024x1024 = "1024x1024"
    }

    /**
     * enum for parameter responseFormat
     */
    public enum ResponseFormat_createImageEdit: String, CaseIterable {
        case url = "url"
        case b64Json = "b64_json"
    }

    /**
     Creates an edited or extended image given an original image and a prompt.
     
     - parameter image: (form) The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask. 
     - parameter prompt: (form) A text description of the desired image(s). The maximum length is 1000 characters. 
     - parameter mask: (form) An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;. (optional)
     - parameter model: (form)  (optional)
     - parameter n: (form) The number of images to generate. Must be between 1 and 10. (optional, default to 1)
     - parameter size: (form) The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional, default to ._1024x1024)
     - parameter responseFormat: (form) The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional, default to .url)
     - parameter user: (form) A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createImageEdit(image: URL, prompt: String, mask: URL? = nil, model: CreateImageEditRequestModel? = nil, n: Int? = nil, size: Size_createImageEdit? = nil, responseFormat: ResponseFormat_createImageEdit? = nil, user: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ImagesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return createImageEditWithRequestBuilder(image: image, prompt: prompt, mask: mask, model: model, n: n, size: size, responseFormat: responseFormat, user: user).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Creates an edited or extended image given an original image and a prompt.
     - POST /images/edits
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter image: (form) The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask. 
     - parameter prompt: (form) A text description of the desired image(s). The maximum length is 1000 characters. 
     - parameter mask: (form) An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;. (optional)
     - parameter model: (form)  (optional)
     - parameter n: (form) The number of images to generate. Must be between 1 and 10. (optional, default to 1)
     - parameter size: (form) The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional, default to ._1024x1024)
     - parameter responseFormat: (form) The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional, default to .url)
     - parameter user: (form) A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).  (optional)
     - returns: RequestBuilder<ImagesResponse> 
     */
    open class func createImageEditWithRequestBuilder(image: URL, prompt: String, mask: URL? = nil, model: CreateImageEditRequestModel? = nil, n: Int? = nil, size: Size_createImageEdit? = nil, responseFormat: ResponseFormat_createImageEdit? = nil, user: String? = nil) -> RequestBuilder<ImagesResponse> {
        let localVariablePath = "/images/edits"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableFormParams: [String: Any?] = [
            "image": image.encodeToJSON(),
            "prompt": prompt.encodeToJSON(),
            "mask": mask?.encodeToJSON(),
            "model": model?.encodeToJSON(),
            "n": n?.encodeToJSON(),
            "size": size?.encodeToJSON(),
            "response_format": responseFormat?.encodeToJSON(),
            "user": user?.encodeToJSON(),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "multipart/form-data",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ImagesResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter responseFormat
     */
    public enum ResponseFormat_createImageVariation: String, CaseIterable {
        case url = "url"
        case b64Json = "b64_json"
    }

    /**
     * enum for parameter size
     */
    public enum Size_createImageVariation: String, CaseIterable {
        case _256x256 = "256x256"
        case _512x512 = "512x512"
        case _1024x1024 = "1024x1024"
    }

    /**
     Creates a variation of a given image.
     
     - parameter image: (form) The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square. 
     - parameter model: (form)  (optional)
     - parameter n: (form) The number of images to generate. Must be between 1 and 10. For &#x60;dall-e-3&#x60;, only &#x60;n&#x3D;1&#x60; is supported. (optional, default to 1)
     - parameter responseFormat: (form) The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional, default to .url)
     - parameter size: (form) The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional, default to ._1024x1024)
     - parameter user: (form) A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createImageVariation(image: URL, model: CreateImageEditRequestModel? = nil, n: Int? = nil, responseFormat: ResponseFormat_createImageVariation? = nil, size: Size_createImageVariation? = nil, user: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ImagesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return createImageVariationWithRequestBuilder(image: image, model: model, n: n, responseFormat: responseFormat, size: size, user: user).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Creates a variation of a given image.
     - POST /images/variations
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter image: (form) The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square. 
     - parameter model: (form)  (optional)
     - parameter n: (form) The number of images to generate. Must be between 1 and 10. For &#x60;dall-e-3&#x60;, only &#x60;n&#x3D;1&#x60; is supported. (optional, default to 1)
     - parameter responseFormat: (form) The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. (optional, default to .url)
     - parameter size: (form) The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;. (optional, default to ._1024x1024)
     - parameter user: (form) A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).  (optional)
     - returns: RequestBuilder<ImagesResponse> 
     */
    open class func createImageVariationWithRequestBuilder(image: URL, model: CreateImageEditRequestModel? = nil, n: Int? = nil, responseFormat: ResponseFormat_createImageVariation? = nil, size: Size_createImageVariation? = nil, user: String? = nil) -> RequestBuilder<ImagesResponse> {
        let localVariablePath = "/images/variations"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableFormParams: [String: Any?] = [
            "image": image.encodeToJSON(),
            "model": model?.encodeToJSON(),
            "n": n?.encodeToJSON(),
            "response_format": responseFormat?.encodeToJSON(),
            "size": size?.encodeToJSON(),
            "user": user?.encodeToJSON(),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "multipart/form-data",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ImagesResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
