//
// ChatCompletionTokenLogprob.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ChatCompletionTokenLogprob: Codable, JSONEncodable, Hashable {

    /** The token. */
    public var token: String
    /** The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely. */
    public var logprob: Double
    /** A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token. */
    public var bytes: [Int]?
    /** List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested `top_logprobs` returned. */
    public var topLogprobs: [ChatCompletionTokenLogprobTopLogprobsInner]

    public init(token: String, logprob: Double, bytes: [Int]?, topLogprobs: [ChatCompletionTokenLogprobTopLogprobsInner]) {
        self.token = token
        self.logprob = logprob
        self.bytes = bytes
        self.topLogprobs = topLogprobs
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case token
        case logprob
        case bytes
        case topLogprobs = "top_logprobs"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(token, forKey: .token)
        try container.encode(logprob, forKey: .logprob)
        try container.encode(bytes, forKey: .bytes)
        try container.encode(topLogprobs, forKey: .topLogprobs)
    }
}

