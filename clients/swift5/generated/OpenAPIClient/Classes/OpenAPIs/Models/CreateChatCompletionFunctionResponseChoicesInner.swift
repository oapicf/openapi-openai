//
// CreateChatCompletionFunctionResponseChoicesInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateChatCompletionFunctionResponseChoicesInner: Codable, JSONEncodable, Hashable {

    public enum FinishReason: String, Codable, CaseIterable {
        case stop = "stop"
        case length = "length"
        case functionCall = "function_call"
        case contentFilter = "content_filter"
    }
    /** The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence, `length` if the maximum number of tokens specified in the request was reached, `content_filter` if content was omitted due to a flag from our content filters, or `function_call` if the model called a function.  */
    public var finishReason: FinishReason
    /** The index of the choice in the list of choices. */
    public var index: Int
    public var message: ChatCompletionResponseMessage

    public init(finishReason: FinishReason, index: Int, message: ChatCompletionResponseMessage) {
        self.finishReason = finishReason
        self.index = index
        self.message = message
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case finishReason = "finish_reason"
        case index
        case message
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(finishReason, forKey: .finishReason)
        try container.encode(index, forKey: .index)
        try container.encode(message, forKey: .message)
    }
}

