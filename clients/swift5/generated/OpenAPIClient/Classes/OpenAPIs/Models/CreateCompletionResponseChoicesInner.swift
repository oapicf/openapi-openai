//
// CreateCompletionResponseChoicesInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateCompletionResponseChoicesInner: Codable, JSONEncodable, Hashable {

    public enum FinishReason: String, Codable, CaseIterable {
        case stop = "stop"
        case length = "length"
        case contentFilter = "content_filter"
    }
    /** The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence, `length` if the maximum number of tokens specified in the request was reached, or `content_filter` if content was omitted due to a flag from our content filters.  */
    public var finishReason: FinishReason
    public var index: Int
    public var logprobs: CreateCompletionResponseChoicesInnerLogprobs?
    public var text: String

    public init(finishReason: FinishReason, index: Int, logprobs: CreateCompletionResponseChoicesInnerLogprobs?, text: String) {
        self.finishReason = finishReason
        self.index = index
        self.logprobs = logprobs
        self.text = text
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case finishReason = "finish_reason"
        case index
        case logprobs
        case text
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(finishReason, forKey: .finishReason)
        try container.encode(index, forKey: .index)
        try container.encode(logprobs, forKey: .logprobs)
        try container.encode(text, forKey: .text)
    }
}

