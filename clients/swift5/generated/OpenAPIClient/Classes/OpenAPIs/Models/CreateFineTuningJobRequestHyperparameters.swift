//
// CreateFineTuningJobRequestHyperparameters.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The hyperparameters used for the fine-tuning job. */
public struct CreateFineTuningJobRequestHyperparameters: Codable, JSONEncodable, Hashable {

    public var batchSize: CreateFineTuningJobRequestHyperparametersBatchSize?
    public var learningRateMultiplier: CreateFineTuningJobRequestHyperparametersLearningRateMultiplier?
    public var nEpochs: CreateFineTuningJobRequestHyperparametersNEpochs?

    public init(batchSize: CreateFineTuningJobRequestHyperparametersBatchSize? = nil, learningRateMultiplier: CreateFineTuningJobRequestHyperparametersLearningRateMultiplier? = nil, nEpochs: CreateFineTuningJobRequestHyperparametersNEpochs? = nil) {
        self.batchSize = batchSize
        self.learningRateMultiplier = learningRateMultiplier
        self.nEpochs = nEpochs
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case batchSize = "batch_size"
        case learningRateMultiplier = "learning_rate_multiplier"
        case nEpochs = "n_epochs"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(batchSize, forKey: .batchSize)
        try container.encodeIfPresent(learningRateMultiplier, forKey: .learningRateMultiplier)
        try container.encodeIfPresent(nEpochs, forKey: .nEpochs)
    }
}

