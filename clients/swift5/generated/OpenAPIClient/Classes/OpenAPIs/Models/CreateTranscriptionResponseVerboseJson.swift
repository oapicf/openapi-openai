//
// CreateTranscriptionResponseVerboseJson.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Represents a verbose json transcription response returned by model, based on the provided input. */
public struct CreateTranscriptionResponseVerboseJson: Codable, JSONEncodable, Hashable {

    /** The language of the input audio. */
    public var language: String
    /** The duration of the input audio. */
    public var duration: String
    /** The transcribed text. */
    public var text: String
    /** Extracted words and their corresponding timestamps. */
    public var words: [TranscriptionWord]?
    /** Segments of the transcribed text and their corresponding details. */
    public var segments: [TranscriptionSegment]?

    public init(language: String, duration: String, text: String, words: [TranscriptionWord]? = nil, segments: [TranscriptionSegment]? = nil) {
        self.language = language
        self.duration = duration
        self.text = text
        self.words = words
        self.segments = segments
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case language
        case duration
        case text
        case words
        case segments
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(language, forKey: .language)
        try container.encode(duration, forKey: .duration)
        try container.encode(text, forKey: .text)
        try container.encodeIfPresent(words, forKey: .words)
        try container.encodeIfPresent(segments, forKey: .segments)
    }
}

