//
// OpenAIFile.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OpenAIFile: Codable, JSONEncodable, Hashable {

    public var id: String
    public var object: String
    public var bytes: Int
    public var createdAt: Int
    public var filename: String
    public var purpose: String
    public var status: String?
    public var statusDetails: AnyCodable?

    public init(id: String, object: String, bytes: Int, createdAt: Int, filename: String, purpose: String, status: String? = nil, statusDetails: AnyCodable? = nil) {
        self.id = id
        self.object = object
        self.bytes = bytes
        self.createdAt = createdAt
        self.filename = filename
        self.purpose = purpose
        self.status = status
        self.statusDetails = statusDetails
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case object
        case bytes
        case createdAt = "created_at"
        case filename
        case purpose
        case status
        case statusDetails = "status_details"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(object, forKey: .object)
        try container.encode(bytes, forKey: .bytes)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(filename, forKey: .filename)
        try container.encode(purpose, forKey: .purpose)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(statusDetails, forKey: .statusDetails)
    }
}

