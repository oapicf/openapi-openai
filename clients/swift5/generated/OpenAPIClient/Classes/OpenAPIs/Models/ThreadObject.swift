//
// ThreadObject.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Represents a thread that contains [messages](/docs/api-reference/messages). */
public struct ThreadObject: Codable, JSONEncodable, Hashable {

    public enum Object: String, Codable, CaseIterable {
        case thread = "thread"
    }
    /** The identifier, which can be referenced in API endpoints. */
    public var id: String
    /** The object type, which is always `thread`. */
    public var object: Object
    /** The Unix timestamp (in seconds) for when the thread was created. */
    public var createdAt: Int
    /** Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.  */
    public var metadata: AnyCodable?

    public init(id: String, object: Object, createdAt: Int, metadata: AnyCodable?) {
        self.id = id
        self.object = object
        self.createdAt = createdAt
        self.metadata = metadata
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case object
        case createdAt = "created_at"
        case metadata
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(object, forKey: .object)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(metadata, forKey: .metadata)
    }
}

