/**
 * OpenAI API
 *
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CreateSpeechRequestModel } from './createSpeechRequestModel';


export interface CreateSpeechRequest { 
    model: CreateSpeechRequestModel;
    /**
     * The text to generate audio for. The maximum length is 4096 characters.
     */
    input: string;
    /**
     * The voice to use when generating the audio. Supported voices are `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`. Previews of the voices are available in the [Text to speech guide](/docs/guides/text-to-speech/voice-options).
     */
    voice: CreateSpeechRequest.VoiceEnum;
    /**
     * The format to audio in. Supported formats are `mp3`, `opus`, `aac`, `flac`, `wav`, and `pcm`.
     */
    response_format?: CreateSpeechRequest.ResponseFormatEnum;
    /**
     * The speed of the generated audio. Select a value from `0.25` to `4.0`. `1.0` is the default.
     */
    speed?: number;
}
export namespace CreateSpeechRequest {
    export type VoiceEnum = 'alloy' | 'echo' | 'fable' | 'onyx' | 'nova' | 'shimmer';
    export const VoiceEnum = {
        Alloy: 'alloy' as VoiceEnum,
        Echo: 'echo' as VoiceEnum,
        Fable: 'fable' as VoiceEnum,
        Onyx: 'onyx' as VoiceEnum,
        Nova: 'nova' as VoiceEnum,
        Shimmer: 'shimmer' as VoiceEnum
    };
    export type ResponseFormatEnum = 'mp3' | 'opus' | 'aac' | 'flac' | 'wav' | 'pcm';
    export const ResponseFormatEnum = {
        Mp3: 'mp3' as ResponseFormatEnum,
        Opus: 'opus' as ResponseFormatEnum,
        Aac: 'aac' as ResponseFormatEnum,
        Flac: 'flac' as ResponseFormatEnum,
        Wav: 'wav' as ResponseFormatEnum,
        Pcm: 'pcm' as ResponseFormatEnum
    };
}


