/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateCompletionRequest,
  CreateCompletionResponse,
} from '../models/index';
import {
    CreateCompletionRequestFromJSON,
    CreateCompletionRequestToJSON,
    CreateCompletionResponseFromJSON,
    CreateCompletionResponseToJSON,
} from '../models/index';

export interface CreateCompletionOperationRequest {
    createCompletionRequest: CreateCompletionRequest;
}

/**
 * 
 */
export class CompletionsApi extends runtime.BaseAPI {

    /**
     * Creates a completion for the provided prompt and parameters.
     */
    async createCompletionRaw(requestParameters: CreateCompletionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateCompletionResponse>> {
        if (requestParameters['createCompletionRequest'] == null) {
            throw new runtime.RequiredError(
                'createCompletionRequest',
                'Required parameter "createCompletionRequest" was null or undefined when calling createCompletion().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("ApiKeyAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/completions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateCompletionRequestToJSON(requestParameters['createCompletionRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateCompletionResponseFromJSON(jsonValue));
    }

    /**
     * Creates a completion for the provided prompt and parameters.
     */
    async createCompletion(requestParameters: CreateCompletionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateCompletionResponse> {
        const response = await this.createCompletionRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
