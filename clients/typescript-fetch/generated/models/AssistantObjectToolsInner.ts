/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AssistantToolsCode } from './AssistantToolsCode';
import {
    instanceOfAssistantToolsCode,
    AssistantToolsCodeFromJSON,
    AssistantToolsCodeFromJSONTyped,
    AssistantToolsCodeToJSON,
} from './AssistantToolsCode';
import type { AssistantToolsFunction } from './AssistantToolsFunction';
import {
    instanceOfAssistantToolsFunction,
    AssistantToolsFunctionFromJSON,
    AssistantToolsFunctionFromJSONTyped,
    AssistantToolsFunctionToJSON,
} from './AssistantToolsFunction';
import type { AssistantToolsRetrieval } from './AssistantToolsRetrieval';
import {
    instanceOfAssistantToolsRetrieval,
    AssistantToolsRetrievalFromJSON,
    AssistantToolsRetrievalFromJSONTyped,
    AssistantToolsRetrievalToJSON,
} from './AssistantToolsRetrieval';

/**
 * @type AssistantObjectToolsInner
 * 
 * @export
 */
export type AssistantObjectToolsInner = AssistantToolsCode | AssistantToolsFunction | AssistantToolsRetrieval;

export function AssistantObjectToolsInnerFromJSON(json: any): AssistantObjectToolsInner {
    return AssistantObjectToolsInnerFromJSONTyped(json, false);
}

export function AssistantObjectToolsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssistantObjectToolsInner {
    if (json == null) {
        return json;
    }
    return { ...AssistantToolsCodeFromJSONTyped(json, true), ...AssistantToolsFunctionFromJSONTyped(json, true), ...AssistantToolsRetrievalFromJSONTyped(json, true) };
}

export function AssistantObjectToolsInnerToJSON(value?: AssistantObjectToolsInner | null): any {
    if (value == null) {
        return value;
    }

    if (instanceOfAssistantToolsCode(value)) {
        return AssistantToolsCodeToJSON(value as AssistantToolsCode);
    }
    if (instanceOfAssistantToolsFunction(value)) {
        return AssistantToolsFunctionToJSON(value as AssistantToolsFunction);
    }
    if (instanceOfAssistantToolsRetrieval(value)) {
        return AssistantToolsRetrievalToJSON(value as AssistantToolsRetrieval);
    }

    return {};
}

