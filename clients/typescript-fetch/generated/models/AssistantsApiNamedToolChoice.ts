/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChatCompletionNamedToolChoiceFunction } from './ChatCompletionNamedToolChoiceFunction';
import {
    ChatCompletionNamedToolChoiceFunctionFromJSON,
    ChatCompletionNamedToolChoiceFunctionFromJSONTyped,
    ChatCompletionNamedToolChoiceFunctionToJSON,
} from './ChatCompletionNamedToolChoiceFunction';

/**
 * Specifies a tool the model should use. Use to force the model to call a specific tool.
 * @export
 * @interface AssistantsApiNamedToolChoice
 */
export interface AssistantsApiNamedToolChoice {
    /**
     * The type of the tool. If type is `function`, the function name must be set
     * @type {string}
     * @memberof AssistantsApiNamedToolChoice
     */
    type: AssistantsApiNamedToolChoiceTypeEnum;
    /**
     * 
     * @type {ChatCompletionNamedToolChoiceFunction}
     * @memberof AssistantsApiNamedToolChoice
     */
    _function?: ChatCompletionNamedToolChoiceFunction;
}


/**
 * @export
 */
export const AssistantsApiNamedToolChoiceTypeEnum = {
    Function: 'function',
    CodeInterpreter: 'code_interpreter',
    Retrieval: 'retrieval'
} as const;
export type AssistantsApiNamedToolChoiceTypeEnum = typeof AssistantsApiNamedToolChoiceTypeEnum[keyof typeof AssistantsApiNamedToolChoiceTypeEnum];


/**
 * Check if a given object implements the AssistantsApiNamedToolChoice interface.
 */
export function instanceOfAssistantsApiNamedToolChoice(value: object): boolean {
    if (!('type' in value)) return false;
    return true;
}

export function AssistantsApiNamedToolChoiceFromJSON(json: any): AssistantsApiNamedToolChoice {
    return AssistantsApiNamedToolChoiceFromJSONTyped(json, false);
}

export function AssistantsApiNamedToolChoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssistantsApiNamedToolChoice {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        '_function': json['function'] == null ? undefined : ChatCompletionNamedToolChoiceFunctionFromJSON(json['function']),
    };
}

export function AssistantsApiNamedToolChoiceToJSON(value?: AssistantsApiNamedToolChoice | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'function': ChatCompletionNamedToolChoiceFunctionToJSON(value['_function']),
    };
}

