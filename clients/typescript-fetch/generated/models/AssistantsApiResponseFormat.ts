/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * An object describing the expected output of the model. If `json_object` only `function` type `tools` are allowed to be passed to the Run. If `text` the model can return text or any value needed.
 * 
 * @export
 * @interface AssistantsApiResponseFormat
 */
export interface AssistantsApiResponseFormat {
    /**
     * Must be one of `text` or `json_object`.
     * @type {string}
     * @memberof AssistantsApiResponseFormat
     */
    type?: AssistantsApiResponseFormatTypeEnum;
}


/**
 * @export
 */
export const AssistantsApiResponseFormatTypeEnum = {
    Text: 'text',
    JsonObject: 'json_object'
} as const;
export type AssistantsApiResponseFormatTypeEnum = typeof AssistantsApiResponseFormatTypeEnum[keyof typeof AssistantsApiResponseFormatTypeEnum];


/**
 * Check if a given object implements the AssistantsApiResponseFormat interface.
 */
export function instanceOfAssistantsApiResponseFormat(value: object): boolean {
    return true;
}

export function AssistantsApiResponseFormatFromJSON(json: any): AssistantsApiResponseFormat {
    return AssistantsApiResponseFormatFromJSONTyped(json, false);
}

export function AssistantsApiResponseFormatFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssistantsApiResponseFormat {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function AssistantsApiResponseFormatToJSON(value?: AssistantsApiResponseFormat | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
    };
}

