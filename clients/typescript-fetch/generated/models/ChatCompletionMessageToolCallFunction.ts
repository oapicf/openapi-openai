/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The function that the model called.
 * @export
 * @interface ChatCompletionMessageToolCallFunction
 */
export interface ChatCompletionMessageToolCallFunction {
    /**
     * The name of the function to call.
     * @type {string}
     * @memberof ChatCompletionMessageToolCallFunction
     */
    name: string;
    /**
     * The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
     * @type {string}
     * @memberof ChatCompletionMessageToolCallFunction
     */
    arguments: string;
}

/**
 * Check if a given object implements the ChatCompletionMessageToolCallFunction interface.
 */
export function instanceOfChatCompletionMessageToolCallFunction(value: object): value is ChatCompletionMessageToolCallFunction {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('arguments' in value) || value['arguments'] === undefined) return false;
    return true;
}

export function ChatCompletionMessageToolCallFunctionFromJSON(json: any): ChatCompletionMessageToolCallFunction {
    return ChatCompletionMessageToolCallFunctionFromJSONTyped(json, false);
}

export function ChatCompletionMessageToolCallFunctionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatCompletionMessageToolCallFunction {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'arguments': json['arguments'],
    };
}

  export function ChatCompletionMessageToolCallFunctionToJSON(json: any): ChatCompletionMessageToolCallFunction {
      return ChatCompletionMessageToolCallFunctionToJSONTyped(json, false);
  }

  export function ChatCompletionMessageToolCallFunctionToJSONTyped(value?: ChatCompletionMessageToolCallFunction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'arguments': value['arguments'],
    };
}

