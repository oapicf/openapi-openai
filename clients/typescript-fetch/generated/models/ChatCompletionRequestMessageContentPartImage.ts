/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChatCompletionRequestMessageContentPartImageImageUrl } from './ChatCompletionRequestMessageContentPartImageImageUrl';
import {
    ChatCompletionRequestMessageContentPartImageImageUrlFromJSON,
    ChatCompletionRequestMessageContentPartImageImageUrlFromJSONTyped,
    ChatCompletionRequestMessageContentPartImageImageUrlToJSON,
} from './ChatCompletionRequestMessageContentPartImageImageUrl';

/**
 * 
 * @export
 * @interface ChatCompletionRequestMessageContentPartImage
 */
export interface ChatCompletionRequestMessageContentPartImage {
    /**
     * The type of the content part.
     * @type {string}
     * @memberof ChatCompletionRequestMessageContentPartImage
     */
    type: ChatCompletionRequestMessageContentPartImageTypeEnum;
    /**
     * 
     * @type {ChatCompletionRequestMessageContentPartImageImageUrl}
     * @memberof ChatCompletionRequestMessageContentPartImage
     */
    imageUrl: ChatCompletionRequestMessageContentPartImageImageUrl;
}


/**
 * @export
 */
export const ChatCompletionRequestMessageContentPartImageTypeEnum = {
    ImageUrl: 'image_url'
} as const;
export type ChatCompletionRequestMessageContentPartImageTypeEnum = typeof ChatCompletionRequestMessageContentPartImageTypeEnum[keyof typeof ChatCompletionRequestMessageContentPartImageTypeEnum];


/**
 * Check if a given object implements the ChatCompletionRequestMessageContentPartImage interface.
 */
export function instanceOfChatCompletionRequestMessageContentPartImage(value: object): boolean {
    if (!('type' in value)) return false;
    if (!('imageUrl' in value)) return false;
    return true;
}

export function ChatCompletionRequestMessageContentPartImageFromJSON(json: any): ChatCompletionRequestMessageContentPartImage {
    return ChatCompletionRequestMessageContentPartImageFromJSONTyped(json, false);
}

export function ChatCompletionRequestMessageContentPartImageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatCompletionRequestMessageContentPartImage {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'imageUrl': ChatCompletionRequestMessageContentPartImageImageUrlFromJSON(json['image_url']),
    };
}

export function ChatCompletionRequestMessageContentPartImageToJSON(value?: ChatCompletionRequestMessageContentPartImage | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'image_url': ChatCompletionRequestMessageContentPartImageImageUrlToJSON(value['imageUrl']),
    };
}

