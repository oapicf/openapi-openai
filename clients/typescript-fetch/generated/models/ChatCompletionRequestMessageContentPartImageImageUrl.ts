/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChatCompletionRequestMessageContentPartImageImageUrl
 */
export interface ChatCompletionRequestMessageContentPartImageImageUrl {
    /**
     * Either a URL of the image or the base64 encoded image data.
     * @type {string}
     * @memberof ChatCompletionRequestMessageContentPartImageImageUrl
     */
    url: string;
    /**
     * Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding).
     * @type {string}
     * @memberof ChatCompletionRequestMessageContentPartImageImageUrl
     */
    detail?: ChatCompletionRequestMessageContentPartImageImageUrlDetailEnum;
}


/**
 * @export
 */
export const ChatCompletionRequestMessageContentPartImageImageUrlDetailEnum = {
    Auto: 'auto',
    Low: 'low',
    High: 'high'
} as const;
export type ChatCompletionRequestMessageContentPartImageImageUrlDetailEnum = typeof ChatCompletionRequestMessageContentPartImageImageUrlDetailEnum[keyof typeof ChatCompletionRequestMessageContentPartImageImageUrlDetailEnum];


/**
 * Check if a given object implements the ChatCompletionRequestMessageContentPartImageImageUrl interface.
 */
export function instanceOfChatCompletionRequestMessageContentPartImageImageUrl(value: object): value is ChatCompletionRequestMessageContentPartImageImageUrl {
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function ChatCompletionRequestMessageContentPartImageImageUrlFromJSON(json: any): ChatCompletionRequestMessageContentPartImageImageUrl {
    return ChatCompletionRequestMessageContentPartImageImageUrlFromJSONTyped(json, false);
}

export function ChatCompletionRequestMessageContentPartImageImageUrlFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatCompletionRequestMessageContentPartImageImageUrl {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'detail': json['detail'] == null ? undefined : json['detail'],
    };
}

  export function ChatCompletionRequestMessageContentPartImageImageUrlToJSON(json: any): ChatCompletionRequestMessageContentPartImageImageUrl {
      return ChatCompletionRequestMessageContentPartImageImageUrlToJSONTyped(json, false);
  }

  export function ChatCompletionRequestMessageContentPartImageImageUrlToJSONTyped(value?: ChatCompletionRequestMessageContentPartImageImageUrl | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'detail': value['detail'],
    };
}

