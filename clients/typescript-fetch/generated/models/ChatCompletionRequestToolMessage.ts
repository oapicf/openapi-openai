/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChatCompletionRequestToolMessage
 */
export interface ChatCompletionRequestToolMessage {
    /**
     * The role of the messages author, in this case `tool`.
     * @type {string}
     * @memberof ChatCompletionRequestToolMessage
     */
    role: ChatCompletionRequestToolMessageRoleEnum;
    /**
     * The contents of the tool message.
     * @type {string}
     * @memberof ChatCompletionRequestToolMessage
     */
    content: string;
    /**
     * Tool call that this message is responding to.
     * @type {string}
     * @memberof ChatCompletionRequestToolMessage
     */
    toolCallId: string;
}


/**
 * @export
 */
export const ChatCompletionRequestToolMessageRoleEnum = {
    Tool: 'tool'
} as const;
export type ChatCompletionRequestToolMessageRoleEnum = typeof ChatCompletionRequestToolMessageRoleEnum[keyof typeof ChatCompletionRequestToolMessageRoleEnum];


/**
 * Check if a given object implements the ChatCompletionRequestToolMessage interface.
 */
export function instanceOfChatCompletionRequestToolMessage(value: object): value is ChatCompletionRequestToolMessage {
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('toolCallId' in value) || value['toolCallId'] === undefined) return false;
    return true;
}

export function ChatCompletionRequestToolMessageFromJSON(json: any): ChatCompletionRequestToolMessage {
    return ChatCompletionRequestToolMessageFromJSONTyped(json, false);
}

export function ChatCompletionRequestToolMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatCompletionRequestToolMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'role': json['role'],
        'content': json['content'],
        'toolCallId': json['tool_call_id'],
    };
}

  export function ChatCompletionRequestToolMessageToJSON(json: any): ChatCompletionRequestToolMessage {
      return ChatCompletionRequestToolMessageToJSONTyped(json, false);
  }

  export function ChatCompletionRequestToolMessageToJSONTyped(value?: ChatCompletionRequestToolMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'role': value['role'],
        'content': value['content'],
        'tool_call_id': value['toolCallId'],
    };
}

