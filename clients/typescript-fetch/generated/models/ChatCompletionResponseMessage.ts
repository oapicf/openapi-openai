/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChatCompletionRequestAssistantMessageFunctionCall } from './ChatCompletionRequestAssistantMessageFunctionCall';
import {
    ChatCompletionRequestAssistantMessageFunctionCallFromJSON,
    ChatCompletionRequestAssistantMessageFunctionCallFromJSONTyped,
    ChatCompletionRequestAssistantMessageFunctionCallToJSON,
    ChatCompletionRequestAssistantMessageFunctionCallToJSONTyped,
} from './ChatCompletionRequestAssistantMessageFunctionCall';
import type { ChatCompletionMessageToolCall } from './ChatCompletionMessageToolCall';
import {
    ChatCompletionMessageToolCallFromJSON,
    ChatCompletionMessageToolCallFromJSONTyped,
    ChatCompletionMessageToolCallToJSON,
    ChatCompletionMessageToolCallToJSONTyped,
} from './ChatCompletionMessageToolCall';

/**
 * A chat completion message generated by the model.
 * @export
 * @interface ChatCompletionResponseMessage
 */
export interface ChatCompletionResponseMessage {
    /**
     * The contents of the message.
     * @type {string}
     * @memberof ChatCompletionResponseMessage
     */
    content: string | null;
    /**
     * The tool calls generated by the model, such as function calls.
     * @type {Array<ChatCompletionMessageToolCall>}
     * @memberof ChatCompletionResponseMessage
     */
    toolCalls?: Array<ChatCompletionMessageToolCall>;
    /**
     * The role of the author of this message.
     * @type {string}
     * @memberof ChatCompletionResponseMessage
     */
    role: ChatCompletionResponseMessageRoleEnum;
    /**
     * 
     * @type {ChatCompletionRequestAssistantMessageFunctionCall}
     * @memberof ChatCompletionResponseMessage
     * @deprecated
     */
    functionCall?: ChatCompletionRequestAssistantMessageFunctionCall;
}


/**
 * @export
 */
export const ChatCompletionResponseMessageRoleEnum = {
    Assistant: 'assistant'
} as const;
export type ChatCompletionResponseMessageRoleEnum = typeof ChatCompletionResponseMessageRoleEnum[keyof typeof ChatCompletionResponseMessageRoleEnum];


/**
 * Check if a given object implements the ChatCompletionResponseMessage interface.
 */
export function instanceOfChatCompletionResponseMessage(value: object): value is ChatCompletionResponseMessage {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function ChatCompletionResponseMessageFromJSON(json: any): ChatCompletionResponseMessage {
    return ChatCompletionResponseMessageFromJSONTyped(json, false);
}

export function ChatCompletionResponseMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatCompletionResponseMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'],
        'toolCalls': json['tool_calls'] == null ? undefined : ((json['tool_calls'] as Array<any>).map(ChatCompletionMessageToolCallFromJSON)),
        'role': json['role'],
        'functionCall': json['function_call'] == null ? undefined : ChatCompletionRequestAssistantMessageFunctionCallFromJSON(json['function_call']),
    };
}

  export function ChatCompletionResponseMessageToJSON(json: any): ChatCompletionResponseMessage {
      return ChatCompletionResponseMessageToJSONTyped(json, false);
  }

  export function ChatCompletionResponseMessageToJSONTyped(value?: ChatCompletionResponseMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'tool_calls': value['toolCalls'] == null ? undefined : ((value['toolCalls'] as Array<any>).map(ChatCompletionMessageToolCallToJSON)),
        'role': value['role'],
        'function_call': ChatCompletionRequestAssistantMessageFunctionCallToJSON(value['functionCall']),
    };
}

