/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
 * @export
 * @interface ChatCompletionStreamResponseDeltaFunctionCall
 */
export interface ChatCompletionStreamResponseDeltaFunctionCall {
    /**
     * The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
     * @type {string}
     * @memberof ChatCompletionStreamResponseDeltaFunctionCall
     */
    arguments?: string;
    /**
     * The name of the function to call.
     * @type {string}
     * @memberof ChatCompletionStreamResponseDeltaFunctionCall
     */
    name?: string;
}

/**
 * Check if a given object implements the ChatCompletionStreamResponseDeltaFunctionCall interface.
 */
export function instanceOfChatCompletionStreamResponseDeltaFunctionCall(value: object): value is ChatCompletionStreamResponseDeltaFunctionCall {
    return true;
}

export function ChatCompletionStreamResponseDeltaFunctionCallFromJSON(json: any): ChatCompletionStreamResponseDeltaFunctionCall {
    return ChatCompletionStreamResponseDeltaFunctionCallFromJSONTyped(json, false);
}

export function ChatCompletionStreamResponseDeltaFunctionCallFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatCompletionStreamResponseDeltaFunctionCall {
    if (json == null) {
        return json;
    }
    return {
        
        'arguments': json['arguments'] == null ? undefined : json['arguments'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

  export function ChatCompletionStreamResponseDeltaFunctionCallToJSON(json: any): ChatCompletionStreamResponseDeltaFunctionCall {
      return ChatCompletionStreamResponseDeltaFunctionCallToJSONTyped(json, false);
  }

  export function ChatCompletionStreamResponseDeltaFunctionCallToJSONTyped(value?: ChatCompletionStreamResponseDeltaFunctionCall | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'arguments': value['arguments'],
        'name': value['name'],
    };
}

