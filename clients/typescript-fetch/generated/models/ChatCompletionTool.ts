/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FunctionObject } from './FunctionObject';
import {
    FunctionObjectFromJSON,
    FunctionObjectFromJSONTyped,
    FunctionObjectToJSON,
    FunctionObjectToJSONTyped,
} from './FunctionObject';

/**
 * 
 * @export
 * @interface ChatCompletionTool
 */
export interface ChatCompletionTool {
    /**
     * The type of the tool. Currently, only `function` is supported.
     * @type {string}
     * @memberof ChatCompletionTool
     */
    type: ChatCompletionToolTypeEnum;
    /**
     * 
     * @type {FunctionObject}
     * @memberof ChatCompletionTool
     */
    _function: FunctionObject;
}


/**
 * @export
 */
export const ChatCompletionToolTypeEnum = {
    Function: 'function'
} as const;
export type ChatCompletionToolTypeEnum = typeof ChatCompletionToolTypeEnum[keyof typeof ChatCompletionToolTypeEnum];


/**
 * Check if a given object implements the ChatCompletionTool interface.
 */
export function instanceOfChatCompletionTool(value: object): value is ChatCompletionTool {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('_function' in value) || value['_function'] === undefined) return false;
    return true;
}

export function ChatCompletionToolFromJSON(json: any): ChatCompletionTool {
    return ChatCompletionToolFromJSONTyped(json, false);
}

export function ChatCompletionToolFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatCompletionTool {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        '_function': FunctionObjectFromJSON(json['function']),
    };
}

  export function ChatCompletionToolToJSON(json: any): ChatCompletionTool {
      return ChatCompletionToolToJSONTyped(json, false);
  }

  export function ChatCompletionToolToJSONTyped(value?: ChatCompletionTool | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'function': FunctionObjectToJSON(value['_function']),
    };
}

