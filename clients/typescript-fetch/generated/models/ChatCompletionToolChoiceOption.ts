/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ChatCompletionNamedToolChoice } from './ChatCompletionNamedToolChoice';
import {
    instanceOfChatCompletionNamedToolChoice,
    ChatCompletionNamedToolChoiceFromJSON,
    ChatCompletionNamedToolChoiceFromJSONTyped,
    ChatCompletionNamedToolChoiceToJSON,
} from './ChatCompletionNamedToolChoice';
import type { string } from './string';
import {
    instanceOfstring,
    stringFromJSON,
    stringFromJSONTyped,
    stringToJSON,
} from './string';

/**
 * @type ChatCompletionToolChoiceOption
 * Controls which (if any) function is called by the model.
 * `none` means the model will not call a function and instead generates a message.
 * `auto` means the model can pick between generating a message or calling a function.
 * Specifying a particular function via `{"type": "function", "function": {"name": "my_function"}}` forces the model to call that function.
 * 
 * `none` is the default when no functions are present. `auto` is the default if functions are present.
 * 
 * @export
 */
export type ChatCompletionToolChoiceOption = ChatCompletionNamedToolChoice | string;

export function ChatCompletionToolChoiceOptionFromJSON(json: any): ChatCompletionToolChoiceOption {
    return ChatCompletionToolChoiceOptionFromJSONTyped(json, false);
}

export function ChatCompletionToolChoiceOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatCompletionToolChoiceOption {
    if (json == null) {
        return json;
    }
    if (instanceOfChatCompletionNamedToolChoice(json)) {
        return ChatCompletionNamedToolChoiceFromJSONTyped(json, true);
    }
    if (instanceOfstring(json)) {
        return stringFromJSONTyped(json, true);
    }

    return {} as any;
}

export function ChatCompletionToolChoiceOptionToJSON(value?: ChatCompletionToolChoiceOption | null): any {
    if (value == null) {
        return value;
    }

    if (instanceOfChatCompletionNamedToolChoice(value)) {
        return ChatCompletionNamedToolChoiceToJSON(value as ChatCompletionNamedToolChoice);
    }
    if (instanceOfstring(value)) {
        return stringToJSON(value as string);
    }

    return {};
}

