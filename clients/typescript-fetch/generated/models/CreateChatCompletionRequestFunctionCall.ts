/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CreateChatCompletionRequestFunctionCallOneOf } from './CreateChatCompletionRequestFunctionCallOneOf';
import {
    instanceOfCreateChatCompletionRequestFunctionCallOneOf,
    CreateChatCompletionRequestFunctionCallOneOfFromJSON,
    CreateChatCompletionRequestFunctionCallOneOfFromJSONTyped,
    CreateChatCompletionRequestFunctionCallOneOfToJSON,
} from './CreateChatCompletionRequestFunctionCallOneOf';
import type { string } from './string';
import {
    instanceOfstring,
    stringFromJSON,
    stringFromJSONTyped,
    stringToJSON,
} from './string';

/**
 * @type CreateChatCompletionRequestFunctionCall
 * Controls how the model responds to function calls. "none" means the model does not call a function, and responds to the end-user. "auto" means the model can pick between an end-user or calling a function.  Specifying a particular function via `{"name":\ "my_function"}` forces the model to call that function. "none" is the default when no functions are present. "auto" is the default if functions are present.
 * @export
 */
export type CreateChatCompletionRequestFunctionCall = CreateChatCompletionRequestFunctionCallOneOf | string;

export function CreateChatCompletionRequestFunctionCallFromJSON(json: any): CreateChatCompletionRequestFunctionCall {
    return CreateChatCompletionRequestFunctionCallFromJSONTyped(json, false);
}

export function CreateChatCompletionRequestFunctionCallFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateChatCompletionRequestFunctionCall {
    if (json == null) {
        return json;
    }
    return { ...CreateChatCompletionRequestFunctionCallOneOfFromJSONTyped(json, true), ...stringFromJSONTyped(json, true) };
}

export function CreateChatCompletionRequestFunctionCallToJSON(value?: CreateChatCompletionRequestFunctionCall | null): any {
    if (value == null) {
        return value;
    }

    if (instanceOfCreateChatCompletionRequestFunctionCallOneOf(value)) {
        return CreateChatCompletionRequestFunctionCallOneOfToJSON(value as CreateChatCompletionRequestFunctionCallOneOf);
    }
    if (instanceOfstring(value)) {
        return stringToJSON(value as string);
    }

    return {};
}

