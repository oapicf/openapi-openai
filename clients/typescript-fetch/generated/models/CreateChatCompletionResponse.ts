/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateChatCompletionResponseChoicesInner } from './CreateChatCompletionResponseChoicesInner';
import {
    CreateChatCompletionResponseChoicesInnerFromJSON,
    CreateChatCompletionResponseChoicesInnerFromJSONTyped,
    CreateChatCompletionResponseChoicesInnerToJSON,
} from './CreateChatCompletionResponseChoicesInner';
import type { CreateCompletionResponseUsage } from './CreateCompletionResponseUsage';
import {
    CreateCompletionResponseUsageFromJSON,
    CreateCompletionResponseUsageFromJSONTyped,
    CreateCompletionResponseUsageToJSON,
} from './CreateCompletionResponseUsage';

/**
 * 
 * @export
 * @interface CreateChatCompletionResponse
 */
export interface CreateChatCompletionResponse {
    /**
     * 
     * @type {string}
     * @memberof CreateChatCompletionResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof CreateChatCompletionResponse
     */
    object: string;
    /**
     * 
     * @type {number}
     * @memberof CreateChatCompletionResponse
     */
    created: number;
    /**
     * 
     * @type {string}
     * @memberof CreateChatCompletionResponse
     */
    model: string;
    /**
     * 
     * @type {Array<CreateChatCompletionResponseChoicesInner>}
     * @memberof CreateChatCompletionResponse
     */
    choices: Array<CreateChatCompletionResponseChoicesInner>;
    /**
     * 
     * @type {CreateCompletionResponseUsage}
     * @memberof CreateChatCompletionResponse
     */
    usage?: CreateCompletionResponseUsage;
}

/**
 * Check if a given object implements the CreateChatCompletionResponse interface.
 */
export function instanceOfCreateChatCompletionResponse(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('object' in value)) return false;
    if (!('created' in value)) return false;
    if (!('model' in value)) return false;
    if (!('choices' in value)) return false;
    return true;
}

export function CreateChatCompletionResponseFromJSON(json: any): CreateChatCompletionResponse {
    return CreateChatCompletionResponseFromJSONTyped(json, false);
}

export function CreateChatCompletionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateChatCompletionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'object': json['object'],
        'created': json['created'],
        'model': json['model'],
        'choices': ((json['choices'] as Array<any>).map(CreateChatCompletionResponseChoicesInnerFromJSON)),
        'usage': json['usage'] == null ? undefined : CreateCompletionResponseUsageFromJSON(json['usage']),
    };
}

export function CreateChatCompletionResponseToJSON(value?: CreateChatCompletionResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'object': value['object'],
        'created': value['created'],
        'model': value['model'],
        'choices': ((value['choices'] as Array<any>).map(CreateChatCompletionResponseChoicesInnerToJSON)),
        'usage': CreateCompletionResponseUsageToJSON(value['usage']),
    };
}

