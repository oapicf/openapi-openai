/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateCompletionResponseUsage } from './CreateCompletionResponseUsage';
import {
    CreateCompletionResponseUsageFromJSON,
    CreateCompletionResponseUsageFromJSONTyped,
    CreateCompletionResponseUsageToJSON,
} from './CreateCompletionResponseUsage';
import type { CreateEditResponseChoicesInner } from './CreateEditResponseChoicesInner';
import {
    CreateEditResponseChoicesInnerFromJSON,
    CreateEditResponseChoicesInnerFromJSONTyped,
    CreateEditResponseChoicesInnerToJSON,
} from './CreateEditResponseChoicesInner';

/**
 * 
 * @export
 * @interface CreateEditResponse
 */
export interface CreateEditResponse {
    /**
     * 
     * @type {string}
     * @memberof CreateEditResponse
     */
    object: string;
    /**
     * 
     * @type {number}
     * @memberof CreateEditResponse
     */
    created: number;
    /**
     * 
     * @type {Array<CreateEditResponseChoicesInner>}
     * @memberof CreateEditResponse
     */
    choices: Array<CreateEditResponseChoicesInner>;
    /**
     * 
     * @type {CreateCompletionResponseUsage}
     * @memberof CreateEditResponse
     */
    usage: CreateCompletionResponseUsage;
}

/**
 * Check if a given object implements the CreateEditResponse interface.
 */
export function instanceOfCreateEditResponse(value: object): boolean {
    if (!('object' in value)) return false;
    if (!('created' in value)) return false;
    if (!('choices' in value)) return false;
    if (!('usage' in value)) return false;
    return true;
}

export function CreateEditResponseFromJSON(json: any): CreateEditResponse {
    return CreateEditResponseFromJSONTyped(json, false);
}

export function CreateEditResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateEditResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'created': json['created'],
        'choices': ((json['choices'] as Array<any>).map(CreateEditResponseChoicesInnerFromJSON)),
        'usage': CreateCompletionResponseUsageFromJSON(json['usage']),
    };
}

export function CreateEditResponseToJSON(value?: CreateEditResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'object': value['object'],
        'created': value['created'],
        'choices': ((value['choices'] as Array<any>).map(CreateEditResponseChoicesInnerToJSON)),
        'usage': CreateCompletionResponseUsageToJSON(value['usage']),
    };
}

