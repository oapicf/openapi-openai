/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateEmbeddingResponseUsage } from './CreateEmbeddingResponseUsage';
import {
    CreateEmbeddingResponseUsageFromJSON,
    CreateEmbeddingResponseUsageFromJSONTyped,
    CreateEmbeddingResponseUsageToJSON,
} from './CreateEmbeddingResponseUsage';
import type { Embedding } from './Embedding';
import {
    EmbeddingFromJSON,
    EmbeddingFromJSONTyped,
    EmbeddingToJSON,
} from './Embedding';

/**
 * 
 * @export
 * @interface CreateEmbeddingResponse
 */
export interface CreateEmbeddingResponse {
    /**
     * The list of embeddings generated by the model.
     * @type {Array<Embedding>}
     * @memberof CreateEmbeddingResponse
     */
    data: Array<Embedding>;
    /**
     * The name of the model used to generate the embedding.
     * @type {string}
     * @memberof CreateEmbeddingResponse
     */
    model: string;
    /**
     * The object type, which is always "list".
     * @type {string}
     * @memberof CreateEmbeddingResponse
     */
    object: CreateEmbeddingResponseObjectEnum;
    /**
     * 
     * @type {CreateEmbeddingResponseUsage}
     * @memberof CreateEmbeddingResponse
     */
    usage: CreateEmbeddingResponseUsage;
}


/**
 * @export
 */
export const CreateEmbeddingResponseObjectEnum = {
    List: 'list'
} as const;
export type CreateEmbeddingResponseObjectEnum = typeof CreateEmbeddingResponseObjectEnum[keyof typeof CreateEmbeddingResponseObjectEnum];


/**
 * Check if a given object implements the CreateEmbeddingResponse interface.
 */
export function instanceOfCreateEmbeddingResponse(value: object): boolean {
    if (!('data' in value)) return false;
    if (!('model' in value)) return false;
    if (!('object' in value)) return false;
    if (!('usage' in value)) return false;
    return true;
}

export function CreateEmbeddingResponseFromJSON(json: any): CreateEmbeddingResponse {
    return CreateEmbeddingResponseFromJSONTyped(json, false);
}

export function CreateEmbeddingResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateEmbeddingResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(EmbeddingFromJSON)),
        'model': json['model'],
        'object': json['object'],
        'usage': CreateEmbeddingResponseUsageFromJSON(json['usage']),
    };
}

export function CreateEmbeddingResponseToJSON(value?: CreateEmbeddingResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'data': ((value['data'] as Array<any>).map(EmbeddingToJSON)),
        'model': value['model'],
        'object': value['object'],
        'usage': CreateEmbeddingResponseUsageToJSON(value['usage']),
    };
}

