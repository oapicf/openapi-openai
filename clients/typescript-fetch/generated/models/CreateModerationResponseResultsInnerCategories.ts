/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A list of the categories, and whether they are flagged or not.
 * @export
 * @interface CreateModerationResponseResultsInnerCategories
 */
export interface CreateModerationResponseResultsInnerCategories {
    /**
     * Content that expresses, incites, or promotes hate based on race, gender, ethnicity, religion, nationality, sexual orientation, disability status, or caste. Hateful content aimed at non-protected groups (e.g., chess players) is harassment.
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    hate: boolean;
    /**
     * Hateful content that also includes violence or serious harm towards the targeted group based on race, gender, ethnicity, religion, nationality, sexual orientation, disability status, or caste.
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    hateThreatening: boolean;
    /**
     * Content that expresses, incites, or promotes harassing language towards any target.
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    harassment: boolean;
    /**
     * Harassment content that also includes violence or serious harm towards any target.
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    harassmentThreatening: boolean;
    /**
     * Content that promotes, encourages, or depicts acts of self-harm, such as suicide, cutting, and eating disorders.
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    selfHarm: boolean;
    /**
     * Content where the speaker expresses that they are engaging or intend to engage in acts of self-harm, such as suicide, cutting, and eating disorders.
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    selfHarmIntent: boolean;
    /**
     * Content that encourages performing acts of self-harm, such as suicide, cutting, and eating disorders, or that gives instructions or advice on how to commit such acts.
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    selfHarmInstructions: boolean;
    /**
     * Content meant to arouse sexual excitement, such as the description of sexual activity, or that promotes sexual services (excluding sex education and wellness).
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    sexual: boolean;
    /**
     * Sexual content that includes an individual who is under 18 years old.
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    sexualMinors: boolean;
    /**
     * Content that depicts death, violence, or physical injury.
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    violence: boolean;
    /**
     * Content that depicts death, violence, or physical injury in graphic detail.
     * @type {boolean}
     * @memberof CreateModerationResponseResultsInnerCategories
     */
    violenceGraphic: boolean;
}

/**
 * Check if a given object implements the CreateModerationResponseResultsInnerCategories interface.
 */
export function instanceOfCreateModerationResponseResultsInnerCategories(value: object): boolean {
    if (!('hate' in value)) return false;
    if (!('hateThreatening' in value)) return false;
    if (!('harassment' in value)) return false;
    if (!('harassmentThreatening' in value)) return false;
    if (!('selfHarm' in value)) return false;
    if (!('selfHarmIntent' in value)) return false;
    if (!('selfHarmInstructions' in value)) return false;
    if (!('sexual' in value)) return false;
    if (!('sexualMinors' in value)) return false;
    if (!('violence' in value)) return false;
    if (!('violenceGraphic' in value)) return false;
    return true;
}

export function CreateModerationResponseResultsInnerCategoriesFromJSON(json: any): CreateModerationResponseResultsInnerCategories {
    return CreateModerationResponseResultsInnerCategoriesFromJSONTyped(json, false);
}

export function CreateModerationResponseResultsInnerCategoriesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateModerationResponseResultsInnerCategories {
    if (json == null) {
        return json;
    }
    return {
        
        'hate': json['hate'],
        'hateThreatening': json['hate/threatening'],
        'harassment': json['harassment'],
        'harassmentThreatening': json['harassment/threatening'],
        'selfHarm': json['self-harm'],
        'selfHarmIntent': json['self-harm/intent'],
        'selfHarmInstructions': json['self-harm/instructions'],
        'sexual': json['sexual'],
        'sexualMinors': json['sexual/minors'],
        'violence': json['violence'],
        'violenceGraphic': json['violence/graphic'],
    };
}

export function CreateModerationResponseResultsInnerCategoriesToJSON(value?: CreateModerationResponseResultsInnerCategories | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'hate': value['hate'],
        'hate/threatening': value['hateThreatening'],
        'harassment': value['harassment'],
        'harassment/threatening': value['harassmentThreatening'],
        'self-harm': value['selfHarm'],
        'self-harm/intent': value['selfHarmIntent'],
        'self-harm/instructions': value['selfHarmInstructions'],
        'sexual': value['sexual'],
        'sexual/minors': value['sexualMinors'],
        'violence': value['violence'],
        'violence/graphic': value['violenceGraphic'],
    };
}

