/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TranscriptionSegment } from './TranscriptionSegment';
import {
    TranscriptionSegmentFromJSON,
    TranscriptionSegmentFromJSONTyped,
    TranscriptionSegmentToJSON,
    TranscriptionSegmentToJSONTyped,
} from './TranscriptionSegment';
import type { TranscriptionWord } from './TranscriptionWord';
import {
    TranscriptionWordFromJSON,
    TranscriptionWordFromJSONTyped,
    TranscriptionWordToJSON,
    TranscriptionWordToJSONTyped,
} from './TranscriptionWord';

/**
 * Represents a verbose json transcription response returned by model, based on the provided input.
 * @export
 * @interface CreateTranscriptionResponseVerboseJson
 */
export interface CreateTranscriptionResponseVerboseJson {
    /**
     * The language of the input audio.
     * @type {string}
     * @memberof CreateTranscriptionResponseVerboseJson
     */
    language: string;
    /**
     * The duration of the input audio.
     * @type {string}
     * @memberof CreateTranscriptionResponseVerboseJson
     */
    duration: string;
    /**
     * The transcribed text.
     * @type {string}
     * @memberof CreateTranscriptionResponseVerboseJson
     */
    text: string;
    /**
     * Extracted words and their corresponding timestamps.
     * @type {Array<TranscriptionWord>}
     * @memberof CreateTranscriptionResponseVerboseJson
     */
    words?: Array<TranscriptionWord>;
    /**
     * Segments of the transcribed text and their corresponding details.
     * @type {Array<TranscriptionSegment>}
     * @memberof CreateTranscriptionResponseVerboseJson
     */
    segments?: Array<TranscriptionSegment>;
}

/**
 * Check if a given object implements the CreateTranscriptionResponseVerboseJson interface.
 */
export function instanceOfCreateTranscriptionResponseVerboseJson(value: object): value is CreateTranscriptionResponseVerboseJson {
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('duration' in value) || value['duration'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function CreateTranscriptionResponseVerboseJsonFromJSON(json: any): CreateTranscriptionResponseVerboseJson {
    return CreateTranscriptionResponseVerboseJsonFromJSONTyped(json, false);
}

export function CreateTranscriptionResponseVerboseJsonFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTranscriptionResponseVerboseJson {
    if (json == null) {
        return json;
    }
    return {
        
        'language': json['language'],
        'duration': json['duration'],
        'text': json['text'],
        'words': json['words'] == null ? undefined : ((json['words'] as Array<any>).map(TranscriptionWordFromJSON)),
        'segments': json['segments'] == null ? undefined : ((json['segments'] as Array<any>).map(TranscriptionSegmentFromJSON)),
    };
}

  export function CreateTranscriptionResponseVerboseJsonToJSON(json: any): CreateTranscriptionResponseVerboseJson {
      return CreateTranscriptionResponseVerboseJsonToJSONTyped(json, false);
  }

  export function CreateTranscriptionResponseVerboseJsonToJSONTyped(value?: CreateTranscriptionResponseVerboseJson | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'language': value['language'],
        'duration': value['duration'],
        'text': value['text'],
        'words': value['words'] == null ? undefined : ((value['words'] as Array<any>).map(TranscriptionWordToJSON)),
        'segments': value['segments'] == null ? undefined : ((value['segments'] as Array<any>).map(TranscriptionSegmentToJSON)),
    };
}

