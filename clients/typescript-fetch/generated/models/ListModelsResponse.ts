/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Model } from './Model';
import {
    ModelFromJSON,
    ModelFromJSONTyped,
    ModelToJSON,
} from './Model';

/**
 * 
 * @export
 * @interface ListModelsResponse
 */
export interface ListModelsResponse {
    /**
     * 
     * @type {string}
     * @memberof ListModelsResponse
     */
    object: ListModelsResponseObjectEnum;
    /**
     * 
     * @type {Array<Model>}
     * @memberof ListModelsResponse
     */
    data: Array<Model>;
}


/**
 * @export
 */
export const ListModelsResponseObjectEnum = {
    List: 'list'
} as const;
export type ListModelsResponseObjectEnum = typeof ListModelsResponseObjectEnum[keyof typeof ListModelsResponseObjectEnum];


/**
 * Check if a given object implements the ListModelsResponse interface.
 */
export function instanceOfListModelsResponse(value: object): boolean {
    if (!('object' in value)) return false;
    if (!('data' in value)) return false;
    return true;
}

export function ListModelsResponseFromJSON(json: any): ListModelsResponse {
    return ListModelsResponseFromJSONTyped(json, false);
}

export function ListModelsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListModelsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'data': ((json['data'] as Array<any>).map(ModelFromJSON)),
    };
}

export function ListModelsResponseToJSON(value?: ListModelsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'object': value['object'],
        'data': ((value['data'] as Array<any>).map(ModelToJSON)),
    };
}

