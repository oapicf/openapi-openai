/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageContentTextObjectText } from './MessageContentTextObjectText';
import {
    MessageContentTextObjectTextFromJSON,
    MessageContentTextObjectTextFromJSONTyped,
    MessageContentTextObjectTextToJSON,
} from './MessageContentTextObjectText';

/**
 * The text content that is part of a message.
 * @export
 * @interface MessageContentTextObject
 */
export interface MessageContentTextObject {
    /**
     * Always `text`.
     * @type {string}
     * @memberof MessageContentTextObject
     */
    type: MessageContentTextObjectTypeEnum;
    /**
     * 
     * @type {MessageContentTextObjectText}
     * @memberof MessageContentTextObject
     */
    text: MessageContentTextObjectText;
}


/**
 * @export
 */
export const MessageContentTextObjectTypeEnum = {
    Text: 'text'
} as const;
export type MessageContentTextObjectTypeEnum = typeof MessageContentTextObjectTypeEnum[keyof typeof MessageContentTextObjectTypeEnum];


/**
 * Check if a given object implements the MessageContentTextObject interface.
 */
export function instanceOfMessageContentTextObject(value: object): boolean {
    if (!('type' in value)) return false;
    if (!('text' in value)) return false;
    return true;
}

export function MessageContentTextObjectFromJSON(json: any): MessageContentTextObject {
    return MessageContentTextObjectFromJSONTyped(json, false);
}

export function MessageContentTextObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageContentTextObject {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'text': MessageContentTextObjectTextFromJSON(json['text']),
    };
}

export function MessageContentTextObjectToJSON(value?: MessageContentTextObject | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'text': MessageContentTextObjectTextToJSON(value['text']),
    };
}

