/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation } from './MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation';
import {
    MessageDeltaContentTextAnnotationsFileCitationObjectFileCitationFromJSON,
    MessageDeltaContentTextAnnotationsFileCitationObjectFileCitationFromJSONTyped,
    MessageDeltaContentTextAnnotationsFileCitationObjectFileCitationToJSON,
    MessageDeltaContentTextAnnotationsFileCitationObjectFileCitationToJSONTyped,
} from './MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation';

/**
 * A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the "retrieval" tool to search files.
 * @export
 * @interface MessageDeltaContentTextAnnotationsFileCitationObject
 */
export interface MessageDeltaContentTextAnnotationsFileCitationObject {
    /**
     * The index of the annotation in the text content part.
     * @type {number}
     * @memberof MessageDeltaContentTextAnnotationsFileCitationObject
     */
    index: number;
    /**
     * Always `file_citation`.
     * @type {string}
     * @memberof MessageDeltaContentTextAnnotationsFileCitationObject
     */
    type: MessageDeltaContentTextAnnotationsFileCitationObjectTypeEnum;
    /**
     * The text in the message content that needs to be replaced.
     * @type {string}
     * @memberof MessageDeltaContentTextAnnotationsFileCitationObject
     */
    text?: string;
    /**
     * 
     * @type {MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation}
     * @memberof MessageDeltaContentTextAnnotationsFileCitationObject
     */
    fileCitation?: MessageDeltaContentTextAnnotationsFileCitationObjectFileCitation;
    /**
     * 
     * @type {number}
     * @memberof MessageDeltaContentTextAnnotationsFileCitationObject
     */
    startIndex?: number;
    /**
     * 
     * @type {number}
     * @memberof MessageDeltaContentTextAnnotationsFileCitationObject
     */
    endIndex?: number;
}


/**
 * @export
 */
export const MessageDeltaContentTextAnnotationsFileCitationObjectTypeEnum = {
    FileCitation: 'file_citation'
} as const;
export type MessageDeltaContentTextAnnotationsFileCitationObjectTypeEnum = typeof MessageDeltaContentTextAnnotationsFileCitationObjectTypeEnum[keyof typeof MessageDeltaContentTextAnnotationsFileCitationObjectTypeEnum];


/**
 * Check if a given object implements the MessageDeltaContentTextAnnotationsFileCitationObject interface.
 */
export function instanceOfMessageDeltaContentTextAnnotationsFileCitationObject(value: object): value is MessageDeltaContentTextAnnotationsFileCitationObject {
    if (!('index' in value) || value['index'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function MessageDeltaContentTextAnnotationsFileCitationObjectFromJSON(json: any): MessageDeltaContentTextAnnotationsFileCitationObject {
    return MessageDeltaContentTextAnnotationsFileCitationObjectFromJSONTyped(json, false);
}

export function MessageDeltaContentTextAnnotationsFileCitationObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageDeltaContentTextAnnotationsFileCitationObject {
    if (json == null) {
        return json;
    }
    return {
        
        'index': json['index'],
        'type': json['type'],
        'text': json['text'] == null ? undefined : json['text'],
        'fileCitation': json['file_citation'] == null ? undefined : MessageDeltaContentTextAnnotationsFileCitationObjectFileCitationFromJSON(json['file_citation']),
        'startIndex': json['start_index'] == null ? undefined : json['start_index'],
        'endIndex': json['end_index'] == null ? undefined : json['end_index'],
    };
}

  export function MessageDeltaContentTextAnnotationsFileCitationObjectToJSON(json: any): MessageDeltaContentTextAnnotationsFileCitationObject {
      return MessageDeltaContentTextAnnotationsFileCitationObjectToJSONTyped(json, false);
  }

  export function MessageDeltaContentTextAnnotationsFileCitationObjectToJSONTyped(value?: MessageDeltaContentTextAnnotationsFileCitationObject | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'index': value['index'],
        'type': value['type'],
        'text': value['text'],
        'file_citation': MessageDeltaContentTextAnnotationsFileCitationObjectFileCitationToJSON(value['fileCitation']),
        'start_index': value['startIndex'],
        'end_index': value['endIndex'],
    };
}

