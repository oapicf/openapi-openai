/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageDeltaContentTextObjectText } from './MessageDeltaContentTextObjectText';
import {
    MessageDeltaContentTextObjectTextFromJSON,
    MessageDeltaContentTextObjectTextFromJSONTyped,
    MessageDeltaContentTextObjectTextToJSON,
} from './MessageDeltaContentTextObjectText';

/**
 * The text content that is part of a message.
 * @export
 * @interface MessageDeltaContentTextObject
 */
export interface MessageDeltaContentTextObject {
    /**
     * The index of the content part in the message.
     * @type {number}
     * @memberof MessageDeltaContentTextObject
     */
    index: number;
    /**
     * Always `text`.
     * @type {string}
     * @memberof MessageDeltaContentTextObject
     */
    type: MessageDeltaContentTextObjectTypeEnum;
    /**
     * 
     * @type {MessageDeltaContentTextObjectText}
     * @memberof MessageDeltaContentTextObject
     */
    text?: MessageDeltaContentTextObjectText;
}


/**
 * @export
 */
export const MessageDeltaContentTextObjectTypeEnum = {
    Text: 'text'
} as const;
export type MessageDeltaContentTextObjectTypeEnum = typeof MessageDeltaContentTextObjectTypeEnum[keyof typeof MessageDeltaContentTextObjectTypeEnum];


/**
 * Check if a given object implements the MessageDeltaContentTextObject interface.
 */
export function instanceOfMessageDeltaContentTextObject(value: object): boolean {
    if (!('index' in value)) return false;
    if (!('type' in value)) return false;
    return true;
}

export function MessageDeltaContentTextObjectFromJSON(json: any): MessageDeltaContentTextObject {
    return MessageDeltaContentTextObjectFromJSONTyped(json, false);
}

export function MessageDeltaContentTextObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageDeltaContentTextObject {
    if (json == null) {
        return json;
    }
    return {
        
        'index': json['index'],
        'type': json['type'],
        'text': json['text'] == null ? undefined : MessageDeltaContentTextObjectTextFromJSON(json['text']),
    };
}

export function MessageDeltaContentTextObjectToJSON(value?: MessageDeltaContentTextObject | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'index': value['index'],
        'type': value['type'],
        'text': MessageDeltaContentTextObjectTextToJSON(value['text']),
    };
}

