/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageDeltaContentTextObjectTextAnnotationsInner } from './MessageDeltaContentTextObjectTextAnnotationsInner';
import {
    MessageDeltaContentTextObjectTextAnnotationsInnerFromJSON,
    MessageDeltaContentTextObjectTextAnnotationsInnerFromJSONTyped,
    MessageDeltaContentTextObjectTextAnnotationsInnerToJSON,
    MessageDeltaContentTextObjectTextAnnotationsInnerToJSONTyped,
} from './MessageDeltaContentTextObjectTextAnnotationsInner';

/**
 * 
 * @export
 * @interface MessageDeltaContentTextObjectText
 */
export interface MessageDeltaContentTextObjectText {
    /**
     * The data that makes up the text.
     * @type {string}
     * @memberof MessageDeltaContentTextObjectText
     */
    value?: string;
    /**
     * 
     * @type {Array<MessageDeltaContentTextObjectTextAnnotationsInner>}
     * @memberof MessageDeltaContentTextObjectText
     */
    annotations?: Array<MessageDeltaContentTextObjectTextAnnotationsInner>;
}

/**
 * Check if a given object implements the MessageDeltaContentTextObjectText interface.
 */
export function instanceOfMessageDeltaContentTextObjectText(value: object): value is MessageDeltaContentTextObjectText {
    return true;
}

export function MessageDeltaContentTextObjectTextFromJSON(json: any): MessageDeltaContentTextObjectText {
    return MessageDeltaContentTextObjectTextFromJSONTyped(json, false);
}

export function MessageDeltaContentTextObjectTextFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageDeltaContentTextObjectText {
    if (json == null) {
        return json;
    }
    return {
        
        'value': json['value'] == null ? undefined : json['value'],
        'annotations': json['annotations'] == null ? undefined : ((json['annotations'] as Array<any>).map(MessageDeltaContentTextObjectTextAnnotationsInnerFromJSON)),
    };
}

  export function MessageDeltaContentTextObjectTextToJSON(json: any): MessageDeltaContentTextObjectText {
      return MessageDeltaContentTextObjectTextToJSONTyped(json, false);
  }

  export function MessageDeltaContentTextObjectTextToJSONTyped(value?: MessageDeltaContentTextObjectText | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'value': value['value'],
        'annotations': value['annotations'] == null ? undefined : ((value['annotations'] as Array<any>).map(MessageDeltaContentTextObjectTextAnnotationsInnerToJSON)),
    };
}

