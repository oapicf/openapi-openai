/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageDeltaObjectDelta } from './MessageDeltaObjectDelta';
import {
    MessageDeltaObjectDeltaFromJSON,
    MessageDeltaObjectDeltaFromJSONTyped,
    MessageDeltaObjectDeltaToJSON,
} from './MessageDeltaObjectDelta';

/**
 * Represents a message delta i.e. any changed fields on a message during streaming.
 * 
 * @export
 * @interface MessageDeltaObject
 */
export interface MessageDeltaObject {
    /**
     * The identifier of the message, which can be referenced in API endpoints.
     * @type {string}
     * @memberof MessageDeltaObject
     */
    id: string;
    /**
     * The object type, which is always `thread.message.delta`.
     * @type {string}
     * @memberof MessageDeltaObject
     */
    object: MessageDeltaObjectObjectEnum;
    /**
     * 
     * @type {MessageDeltaObjectDelta}
     * @memberof MessageDeltaObject
     */
    delta: MessageDeltaObjectDelta;
}


/**
 * @export
 */
export const MessageDeltaObjectObjectEnum = {
    ThreadMessageDelta: 'thread.message.delta'
} as const;
export type MessageDeltaObjectObjectEnum = typeof MessageDeltaObjectObjectEnum[keyof typeof MessageDeltaObjectObjectEnum];


/**
 * Check if a given object implements the MessageDeltaObject interface.
 */
export function instanceOfMessageDeltaObject(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('object' in value)) return false;
    if (!('delta' in value)) return false;
    return true;
}

export function MessageDeltaObjectFromJSON(json: any): MessageDeltaObject {
    return MessageDeltaObjectFromJSONTyped(json, false);
}

export function MessageDeltaObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageDeltaObject {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'object': json['object'],
        'delta': MessageDeltaObjectDeltaFromJSON(json['delta']),
    };
}

export function MessageDeltaObjectToJSON(value?: MessageDeltaObject | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'object': value['object'],
        'delta': MessageDeltaObjectDeltaToJSON(value['delta']),
    };
}

