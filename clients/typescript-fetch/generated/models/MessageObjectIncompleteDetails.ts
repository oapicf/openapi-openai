/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * On an incomplete message, details about why the message is incomplete.
 * @export
 * @interface MessageObjectIncompleteDetails
 */
export interface MessageObjectIncompleteDetails {
    /**
     * The reason the message is incomplete.
     * @type {string}
     * @memberof MessageObjectIncompleteDetails
     */
    reason: MessageObjectIncompleteDetailsReasonEnum;
}


/**
 * @export
 */
export const MessageObjectIncompleteDetailsReasonEnum = {
    ContentFilter: 'content_filter',
    MaxTokens: 'max_tokens',
    RunCancelled: 'run_cancelled',
    RunExpired: 'run_expired',
    RunFailed: 'run_failed'
} as const;
export type MessageObjectIncompleteDetailsReasonEnum = typeof MessageObjectIncompleteDetailsReasonEnum[keyof typeof MessageObjectIncompleteDetailsReasonEnum];


/**
 * Check if a given object implements the MessageObjectIncompleteDetails interface.
 */
export function instanceOfMessageObjectIncompleteDetails(value: object): value is MessageObjectIncompleteDetails {
    if (!('reason' in value) || value['reason'] === undefined) return false;
    return true;
}

export function MessageObjectIncompleteDetailsFromJSON(json: any): MessageObjectIncompleteDetails {
    return MessageObjectIncompleteDetailsFromJSONTyped(json, false);
}

export function MessageObjectIncompleteDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageObjectIncompleteDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'reason': json['reason'],
    };
}

  export function MessageObjectIncompleteDetailsToJSON(json: any): MessageObjectIncompleteDetails {
      return MessageObjectIncompleteDetailsToJSONTyped(json, false);
  }

  export function MessageObjectIncompleteDetailsToJSONTyped(value?: MessageObjectIncompleteDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'reason': value['reason'],
    };
}

