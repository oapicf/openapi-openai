/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OpenAIFile
 */
export interface OpenAIFile {
    /**
     * 
     * @type {string}
     * @memberof OpenAIFile
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof OpenAIFile
     */
    object: string;
    /**
     * 
     * @type {number}
     * @memberof OpenAIFile
     */
    bytes: number;
    /**
     * 
     * @type {number}
     * @memberof OpenAIFile
     */
    createdAt: number;
    /**
     * 
     * @type {string}
     * @memberof OpenAIFile
     */
    filename: string;
    /**
     * 
     * @type {string}
     * @memberof OpenAIFile
     */
    purpose: string;
    /**
     * 
     * @type {string}
     * @memberof OpenAIFile
     */
    status?: string;
    /**
     * 
     * @type {object}
     * @memberof OpenAIFile
     */
    statusDetails?: object;
}

/**
 * Check if a given object implements the OpenAIFile interface.
 */
export function instanceOfOpenAIFile(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('object' in value)) return false;
    if (!('bytes' in value)) return false;
    if (!('createdAt' in value)) return false;
    if (!('filename' in value)) return false;
    if (!('purpose' in value)) return false;
    return true;
}

export function OpenAIFileFromJSON(json: any): OpenAIFile {
    return OpenAIFileFromJSONTyped(json, false);
}

export function OpenAIFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenAIFile {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'object': json['object'],
        'bytes': json['bytes'],
        'createdAt': json['created_at'],
        'filename': json['filename'],
        'purpose': json['purpose'],
        'status': json['status'] == null ? undefined : json['status'],
        'statusDetails': json['status_details'] == null ? undefined : json['status_details'],
    };
}

export function OpenAIFileToJSON(value?: OpenAIFile | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'object': value['object'],
        'bytes': value['bytes'],
        'created_at': value['createdAt'],
        'filename': value['filename'],
        'purpose': value['purpose'],
        'status': value['status'],
        'status_details': value['statusDetails'],
    };
}

