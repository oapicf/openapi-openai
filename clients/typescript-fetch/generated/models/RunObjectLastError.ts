/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The last error associated with this run. Will be `null` if there are no errors.
 * @export
 * @interface RunObjectLastError
 */
export interface RunObjectLastError {
    /**
     * One of `server_error`, `rate_limit_exceeded`, or `invalid_prompt`.
     * @type {string}
     * @memberof RunObjectLastError
     */
    code: RunObjectLastErrorCodeEnum;
    /**
     * A human-readable description of the error.
     * @type {string}
     * @memberof RunObjectLastError
     */
    message: string;
}


/**
 * @export
 */
export const RunObjectLastErrorCodeEnum = {
    ServerError: 'server_error',
    RateLimitExceeded: 'rate_limit_exceeded',
    InvalidPrompt: 'invalid_prompt'
} as const;
export type RunObjectLastErrorCodeEnum = typeof RunObjectLastErrorCodeEnum[keyof typeof RunObjectLastErrorCodeEnum];


/**
 * Check if a given object implements the RunObjectLastError interface.
 */
export function instanceOfRunObjectLastError(value: object): boolean {
    if (!('code' in value)) return false;
    if (!('message' in value)) return false;
    return true;
}

export function RunObjectLastErrorFromJSON(json: any): RunObjectLastError {
    return RunObjectLastErrorFromJSONTyped(json, false);
}

export function RunObjectLastErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): RunObjectLastError {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'],
    };
}

export function RunObjectLastErrorToJSON(value?: RunObjectLastError | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'code': value['code'],
        'message': value['message'],
    };
}

