/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner } from './RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner';
import {
    RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInnerFromJSON,
    RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInnerFromJSONTyped,
    RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInnerToJSON,
} from './RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner';

/**
 * The Code Interpreter tool call definition.
 * @export
 * @interface RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter
 */
export interface RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter {
    /**
     * The input to the Code Interpreter tool call.
     * @type {string}
     * @memberof RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter
     */
    input?: string;
    /**
     * The outputs from the Code Interpreter tool call. Code Interpreter can output one or more items, including text (`logs`) or images (`image`). Each of these are represented by a different object type.
     * @type {Array<RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner>}
     * @memberof RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter
     */
    outputs?: Array<RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInner>;
}

/**
 * Check if a given object implements the RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter interface.
 */
export function instanceOfRunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter(value: object): boolean {
    return true;
}

export function RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterFromJSON(json: any): RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter {
    return RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterFromJSONTyped(json, false);
}

export function RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterFromJSONTyped(json: any, ignoreDiscriminator: boolean): RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter {
    if (json == null) {
        return json;
    }
    return {
        
        'input': json['input'] == null ? undefined : json['input'],
        'outputs': json['outputs'] == null ? undefined : ((json['outputs'] as Array<any>).map(RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInnerFromJSON)),
    };
}

export function RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterToJSON(value?: RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreter | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'input': value['input'],
        'outputs': value['outputs'] == null ? undefined : ((value['outputs'] as Array<any>).map(RunStepDeltaStepDetailsToolCallsCodeObjectCodeInterpreterOutputsInnerToJSON)),
    };
}

