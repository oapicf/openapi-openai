/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RunStepDeltaStepDetailsToolCallsFunctionObjectFunction } from './RunStepDeltaStepDetailsToolCallsFunctionObjectFunction';
import {
    RunStepDeltaStepDetailsToolCallsFunctionObjectFunctionFromJSON,
    RunStepDeltaStepDetailsToolCallsFunctionObjectFunctionFromJSONTyped,
    RunStepDeltaStepDetailsToolCallsFunctionObjectFunctionToJSON,
    RunStepDeltaStepDetailsToolCallsFunctionObjectFunctionToJSONTyped,
} from './RunStepDeltaStepDetailsToolCallsFunctionObjectFunction';

/**
 * 
 * @export
 * @interface RunStepDeltaStepDetailsToolCallsFunctionObject
 */
export interface RunStepDeltaStepDetailsToolCallsFunctionObject {
    /**
     * The index of the tool call in the tool calls array.
     * @type {number}
     * @memberof RunStepDeltaStepDetailsToolCallsFunctionObject
     */
    index: number;
    /**
     * The ID of the tool call object.
     * @type {string}
     * @memberof RunStepDeltaStepDetailsToolCallsFunctionObject
     */
    id?: string;
    /**
     * The type of tool call. This is always going to be `function` for this type of tool call.
     * @type {string}
     * @memberof RunStepDeltaStepDetailsToolCallsFunctionObject
     */
    type: RunStepDeltaStepDetailsToolCallsFunctionObjectTypeEnum;
    /**
     * 
     * @type {RunStepDeltaStepDetailsToolCallsFunctionObjectFunction}
     * @memberof RunStepDeltaStepDetailsToolCallsFunctionObject
     */
    _function?: RunStepDeltaStepDetailsToolCallsFunctionObjectFunction;
}


/**
 * @export
 */
export const RunStepDeltaStepDetailsToolCallsFunctionObjectTypeEnum = {
    Function: 'function'
} as const;
export type RunStepDeltaStepDetailsToolCallsFunctionObjectTypeEnum = typeof RunStepDeltaStepDetailsToolCallsFunctionObjectTypeEnum[keyof typeof RunStepDeltaStepDetailsToolCallsFunctionObjectTypeEnum];


/**
 * Check if a given object implements the RunStepDeltaStepDetailsToolCallsFunctionObject interface.
 */
export function instanceOfRunStepDeltaStepDetailsToolCallsFunctionObject(value: object): value is RunStepDeltaStepDetailsToolCallsFunctionObject {
    if (!('index' in value) || value['index'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function RunStepDeltaStepDetailsToolCallsFunctionObjectFromJSON(json: any): RunStepDeltaStepDetailsToolCallsFunctionObject {
    return RunStepDeltaStepDetailsToolCallsFunctionObjectFromJSONTyped(json, false);
}

export function RunStepDeltaStepDetailsToolCallsFunctionObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): RunStepDeltaStepDetailsToolCallsFunctionObject {
    if (json == null) {
        return json;
    }
    return {
        
        'index': json['index'],
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'],
        '_function': json['function'] == null ? undefined : RunStepDeltaStepDetailsToolCallsFunctionObjectFunctionFromJSON(json['function']),
    };
}

  export function RunStepDeltaStepDetailsToolCallsFunctionObjectToJSON(json: any): RunStepDeltaStepDetailsToolCallsFunctionObject {
      return RunStepDeltaStepDetailsToolCallsFunctionObjectToJSONTyped(json, false);
  }

  export function RunStepDeltaStepDetailsToolCallsFunctionObjectToJSONTyped(value?: RunStepDeltaStepDetailsToolCallsFunctionObject | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'index': value['index'],
        'id': value['id'],
        'type': value['type'],
        'function': RunStepDeltaStepDetailsToolCallsFunctionObjectFunctionToJSON(value['_function']),
    };
}

