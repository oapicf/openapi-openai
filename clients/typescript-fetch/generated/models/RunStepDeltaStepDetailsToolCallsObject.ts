/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RunStepDeltaStepDetailsToolCallsObjectToolCallsInner } from './RunStepDeltaStepDetailsToolCallsObjectToolCallsInner';
import {
    RunStepDeltaStepDetailsToolCallsObjectToolCallsInnerFromJSON,
    RunStepDeltaStepDetailsToolCallsObjectToolCallsInnerFromJSONTyped,
    RunStepDeltaStepDetailsToolCallsObjectToolCallsInnerToJSON,
    RunStepDeltaStepDetailsToolCallsObjectToolCallsInnerToJSONTyped,
} from './RunStepDeltaStepDetailsToolCallsObjectToolCallsInner';

/**
 * Details of the tool call.
 * @export
 * @interface RunStepDeltaStepDetailsToolCallsObject
 */
export interface RunStepDeltaStepDetailsToolCallsObject {
    /**
     * Always `tool_calls`.
     * @type {string}
     * @memberof RunStepDeltaStepDetailsToolCallsObject
     */
    type: RunStepDeltaStepDetailsToolCallsObjectTypeEnum;
    /**
     * An array of tool calls the run step was involved in. These can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.
     * 
     * @type {Array<RunStepDeltaStepDetailsToolCallsObjectToolCallsInner>}
     * @memberof RunStepDeltaStepDetailsToolCallsObject
     */
    toolCalls?: Array<RunStepDeltaStepDetailsToolCallsObjectToolCallsInner>;
}


/**
 * @export
 */
export const RunStepDeltaStepDetailsToolCallsObjectTypeEnum = {
    ToolCalls: 'tool_calls'
} as const;
export type RunStepDeltaStepDetailsToolCallsObjectTypeEnum = typeof RunStepDeltaStepDetailsToolCallsObjectTypeEnum[keyof typeof RunStepDeltaStepDetailsToolCallsObjectTypeEnum];


/**
 * Check if a given object implements the RunStepDeltaStepDetailsToolCallsObject interface.
 */
export function instanceOfRunStepDeltaStepDetailsToolCallsObject(value: object): value is RunStepDeltaStepDetailsToolCallsObject {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function RunStepDeltaStepDetailsToolCallsObjectFromJSON(json: any): RunStepDeltaStepDetailsToolCallsObject {
    return RunStepDeltaStepDetailsToolCallsObjectFromJSONTyped(json, false);
}

export function RunStepDeltaStepDetailsToolCallsObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): RunStepDeltaStepDetailsToolCallsObject {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'toolCalls': json['tool_calls'] == null ? undefined : ((json['tool_calls'] as Array<any>).map(RunStepDeltaStepDetailsToolCallsObjectToolCallsInnerFromJSON)),
    };
}

  export function RunStepDeltaStepDetailsToolCallsObjectToJSON(json: any): RunStepDeltaStepDetailsToolCallsObject {
      return RunStepDeltaStepDetailsToolCallsObjectToJSONTyped(json, false);
  }

  export function RunStepDeltaStepDetailsToolCallsObjectToJSONTyped(value?: RunStepDeltaStepDetailsToolCallsObject | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'tool_calls': value['toolCalls'] == null ? undefined : ((value['toolCalls'] as Array<any>).map(RunStepDeltaStepDetailsToolCallsObjectToolCallsInnerToJSON)),
    };
}

