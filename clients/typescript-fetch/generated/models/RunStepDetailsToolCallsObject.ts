/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RunStepDetailsToolCallsObjectToolCallsInner } from './RunStepDetailsToolCallsObjectToolCallsInner';
import {
    RunStepDetailsToolCallsObjectToolCallsInnerFromJSON,
    RunStepDetailsToolCallsObjectToolCallsInnerFromJSONTyped,
    RunStepDetailsToolCallsObjectToolCallsInnerToJSON,
} from './RunStepDetailsToolCallsObjectToolCallsInner';

/**
 * Details of the tool call.
 * @export
 * @interface RunStepDetailsToolCallsObject
 */
export interface RunStepDetailsToolCallsObject {
    /**
     * Always `tool_calls`.
     * @type {string}
     * @memberof RunStepDetailsToolCallsObject
     */
    type: RunStepDetailsToolCallsObjectTypeEnum;
    /**
     * An array of tool calls the run step was involved in. These can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.
     * 
     * @type {Array<RunStepDetailsToolCallsObjectToolCallsInner>}
     * @memberof RunStepDetailsToolCallsObject
     */
    toolCalls: Array<RunStepDetailsToolCallsObjectToolCallsInner>;
}


/**
 * @export
 */
export const RunStepDetailsToolCallsObjectTypeEnum = {
    ToolCalls: 'tool_calls'
} as const;
export type RunStepDetailsToolCallsObjectTypeEnum = typeof RunStepDetailsToolCallsObjectTypeEnum[keyof typeof RunStepDetailsToolCallsObjectTypeEnum];


/**
 * Check if a given object implements the RunStepDetailsToolCallsObject interface.
 */
export function instanceOfRunStepDetailsToolCallsObject(value: object): boolean {
    if (!('type' in value)) return false;
    if (!('toolCalls' in value)) return false;
    return true;
}

export function RunStepDetailsToolCallsObjectFromJSON(json: any): RunStepDetailsToolCallsObject {
    return RunStepDetailsToolCallsObjectFromJSONTyped(json, false);
}

export function RunStepDetailsToolCallsObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): RunStepDetailsToolCallsObject {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'toolCalls': ((json['tool_calls'] as Array<any>).map(RunStepDetailsToolCallsObjectToolCallsInnerFromJSON)),
    };
}

export function RunStepDetailsToolCallsObjectToJSON(value?: RunStepDetailsToolCallsObject | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'tool_calls': ((value['toolCalls'] as Array<any>).map(RunStepDetailsToolCallsObjectToolCallsInnerToJSON)),
    };
}

