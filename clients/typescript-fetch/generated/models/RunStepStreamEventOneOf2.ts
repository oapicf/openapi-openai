/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RunStepDeltaObject } from './RunStepDeltaObject';
import {
    RunStepDeltaObjectFromJSON,
    RunStepDeltaObjectFromJSONTyped,
    RunStepDeltaObjectToJSON,
    RunStepDeltaObjectToJSONTyped,
} from './RunStepDeltaObject';

/**
 * Occurs when parts of a [run step](/docs/api-reference/runs/step-object) are being streamed.
 * @export
 * @interface RunStepStreamEventOneOf2
 */
export interface RunStepStreamEventOneOf2 {
    /**
     * 
     * @type {string}
     * @memberof RunStepStreamEventOneOf2
     */
    event: RunStepStreamEventOneOf2EventEnum;
    /**
     * 
     * @type {RunStepDeltaObject}
     * @memberof RunStepStreamEventOneOf2
     */
    data: RunStepDeltaObject;
}


/**
 * @export
 */
export const RunStepStreamEventOneOf2EventEnum = {
    ThreadRunStepDelta: 'thread.run.step.delta'
} as const;
export type RunStepStreamEventOneOf2EventEnum = typeof RunStepStreamEventOneOf2EventEnum[keyof typeof RunStepStreamEventOneOf2EventEnum];


/**
 * Check if a given object implements the RunStepStreamEventOneOf2 interface.
 */
export function instanceOfRunStepStreamEventOneOf2(value: object): value is RunStepStreamEventOneOf2 {
    if (!('event' in value) || value['event'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function RunStepStreamEventOneOf2FromJSON(json: any): RunStepStreamEventOneOf2 {
    return RunStepStreamEventOneOf2FromJSONTyped(json, false);
}

export function RunStepStreamEventOneOf2FromJSONTyped(json: any, ignoreDiscriminator: boolean): RunStepStreamEventOneOf2 {
    if (json == null) {
        return json;
    }
    return {
        
        'event': json['event'],
        'data': RunStepDeltaObjectFromJSON(json['data']),
    };
}

  export function RunStepStreamEventOneOf2ToJSON(json: any): RunStepStreamEventOneOf2 {
      return RunStepStreamEventOneOf2ToJSONTyped(json, false);
  }

  export function RunStepStreamEventOneOf2ToJSONTyped(value?: RunStepStreamEventOneOf2 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'event': value['event'],
        'data': RunStepDeltaObjectToJSON(value['data']),
    };
}

