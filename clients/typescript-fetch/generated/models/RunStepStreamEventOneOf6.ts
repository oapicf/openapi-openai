/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RunStepObject } from './RunStepObject';
import {
    RunStepObjectFromJSON,
    RunStepObjectFromJSONTyped,
    RunStepObjectToJSON,
    RunStepObjectToJSONTyped,
} from './RunStepObject';

/**
 * Occurs when a [run step](/docs/api-reference/runs/step-object) expires.
 * @export
 * @interface RunStepStreamEventOneOf6
 */
export interface RunStepStreamEventOneOf6 {
    /**
     * 
     * @type {string}
     * @memberof RunStepStreamEventOneOf6
     */
    event: RunStepStreamEventOneOf6EventEnum;
    /**
     * 
     * @type {RunStepObject}
     * @memberof RunStepStreamEventOneOf6
     */
    data: RunStepObject;
}


/**
 * @export
 */
export const RunStepStreamEventOneOf6EventEnum = {
    ThreadRunStepExpired: 'thread.run.step.expired'
} as const;
export type RunStepStreamEventOneOf6EventEnum = typeof RunStepStreamEventOneOf6EventEnum[keyof typeof RunStepStreamEventOneOf6EventEnum];


/**
 * Check if a given object implements the RunStepStreamEventOneOf6 interface.
 */
export function instanceOfRunStepStreamEventOneOf6(value: object): value is RunStepStreamEventOneOf6 {
    if (!('event' in value) || value['event'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function RunStepStreamEventOneOf6FromJSON(json: any): RunStepStreamEventOneOf6 {
    return RunStepStreamEventOneOf6FromJSONTyped(json, false);
}

export function RunStepStreamEventOneOf6FromJSONTyped(json: any, ignoreDiscriminator: boolean): RunStepStreamEventOneOf6 {
    if (json == null) {
        return json;
    }
    return {
        
        'event': json['event'],
        'data': RunStepObjectFromJSON(json['data']),
    };
}

  export function RunStepStreamEventOneOf6ToJSON(json: any): RunStepStreamEventOneOf6 {
      return RunStepStreamEventOneOf6ToJSONTyped(json, false);
  }

  export function RunStepStreamEventOneOf6ToJSONTyped(value?: RunStepStreamEventOneOf6 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'event': value['event'],
        'data': RunStepObjectToJSON(value['data']),
    };
}

