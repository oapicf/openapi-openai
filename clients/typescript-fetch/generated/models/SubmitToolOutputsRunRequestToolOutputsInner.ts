/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SubmitToolOutputsRunRequestToolOutputsInner
 */
export interface SubmitToolOutputsRunRequestToolOutputsInner {
    /**
     * The ID of the tool call in the `required_action` object within the run object the output is being submitted for.
     * @type {string}
     * @memberof SubmitToolOutputsRunRequestToolOutputsInner
     */
    toolCallId?: string;
    /**
     * The output of the tool call to be submitted to continue the run.
     * @type {string}
     * @memberof SubmitToolOutputsRunRequestToolOutputsInner
     */
    output?: string;
}

/**
 * Check if a given object implements the SubmitToolOutputsRunRequestToolOutputsInner interface.
 */
export function instanceOfSubmitToolOutputsRunRequestToolOutputsInner(value: object): boolean {
    return true;
}

export function SubmitToolOutputsRunRequestToolOutputsInnerFromJSON(json: any): SubmitToolOutputsRunRequestToolOutputsInner {
    return SubmitToolOutputsRunRequestToolOutputsInnerFromJSONTyped(json, false);
}

export function SubmitToolOutputsRunRequestToolOutputsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubmitToolOutputsRunRequestToolOutputsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'toolCallId': json['tool_call_id'] == null ? undefined : json['tool_call_id'],
        'output': json['output'] == null ? undefined : json['output'],
    };
}

export function SubmitToolOutputsRunRequestToolOutputsInnerToJSON(value?: SubmitToolOutputsRunRequestToolOutputsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'tool_call_id': value['toolCallId'],
        'output': value['output'],
    };
}

