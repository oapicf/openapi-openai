/* tslint:disable */
/* eslint-disable */
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TranscriptionSegment
 */
export interface TranscriptionSegment {
    /**
     * Unique identifier of the segment.
     * @type {number}
     * @memberof TranscriptionSegment
     */
    id: number;
    /**
     * Seek offset of the segment.
     * @type {number}
     * @memberof TranscriptionSegment
     */
    seek: number;
    /**
     * Start time of the segment in seconds.
     * @type {number}
     * @memberof TranscriptionSegment
     */
    start: number;
    /**
     * End time of the segment in seconds.
     * @type {number}
     * @memberof TranscriptionSegment
     */
    end: number;
    /**
     * Text content of the segment.
     * @type {string}
     * @memberof TranscriptionSegment
     */
    text: string;
    /**
     * Array of token IDs for the text content.
     * @type {Array<number>}
     * @memberof TranscriptionSegment
     */
    tokens: Array<number>;
    /**
     * Temperature parameter used for generating the segment.
     * @type {number}
     * @memberof TranscriptionSegment
     */
    temperature: number;
    /**
     * Average logprob of the segment. If the value is lower than -1, consider the logprobs failed.
     * @type {number}
     * @memberof TranscriptionSegment
     */
    avgLogprob: number;
    /**
     * Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed.
     * @type {number}
     * @memberof TranscriptionSegment
     */
    compressionRatio: number;
    /**
     * Probability of no speech in the segment. If the value is higher than 1.0 and the `avg_logprob` is below -1, consider this segment silent.
     * @type {number}
     * @memberof TranscriptionSegment
     */
    noSpeechProb: number;
}

/**
 * Check if a given object implements the TranscriptionSegment interface.
 */
export function instanceOfTranscriptionSegment(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('seek' in value)) return false;
    if (!('start' in value)) return false;
    if (!('end' in value)) return false;
    if (!('text' in value)) return false;
    if (!('tokens' in value)) return false;
    if (!('temperature' in value)) return false;
    if (!('avgLogprob' in value)) return false;
    if (!('compressionRatio' in value)) return false;
    if (!('noSpeechProb' in value)) return false;
    return true;
}

export function TranscriptionSegmentFromJSON(json: any): TranscriptionSegment {
    return TranscriptionSegmentFromJSONTyped(json, false);
}

export function TranscriptionSegmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranscriptionSegment {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'seek': json['seek'],
        'start': json['start'],
        'end': json['end'],
        'text': json['text'],
        'tokens': json['tokens'],
        'temperature': json['temperature'],
        'avgLogprob': json['avg_logprob'],
        'compressionRatio': json['compression_ratio'],
        'noSpeechProb': json['no_speech_prob'],
    };
}

export function TranscriptionSegmentToJSON(value?: TranscriptionSegment | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'seek': value['seek'],
        'start': value['start'],
        'end': value['end'],
        'text': value['text'],
        'tokens': value['tokens'],
        'temperature': value['temperature'],
        'avg_logprob': value['avgLogprob'],
        'compression_ratio': value['compressionRatio'],
        'no_speech_prob': value['noSpeechProb'],
    };
}

