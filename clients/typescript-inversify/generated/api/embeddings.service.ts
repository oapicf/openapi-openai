/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from 'rxjs/Observable';

import { map } from 'rxjs/operators';
import IHttpClient from '../IHttpClient';
import { inject, injectable } from 'inversify';
import { IAPIConfiguration } from '../IAPIConfiguration';
import { Headers } from '../Headers';
import HttpResponse from '../HttpResponse';

import { CreateEmbeddingRequest } from '../model/createEmbeddingRequest';
import { CreateEmbeddingResponse } from '../model/createEmbeddingResponse';

import { COLLECTION_FORMATS }  from '../variables';



@injectable()
export class EmbeddingsService {
    private basePath: string = 'https://api.openai.com/v1';

    constructor(@inject('IApiHttpClient') private httpClient: IHttpClient,
        @inject('IAPIConfiguration') private APIConfiguration: IAPIConfiguration ) {
        if(this.APIConfiguration.basePath)
            this.basePath = this.APIConfiguration.basePath;
    }

    /**
     * Creates an embedding vector representing the input text.
     * 
     * @param createEmbeddingRequest 
     
     */
    public createEmbedding(createEmbeddingRequest: CreateEmbeddingRequest, observe?: 'body', headers?: Headers): Observable<CreateEmbeddingResponse>;
    public createEmbedding(createEmbeddingRequest: CreateEmbeddingRequest, observe?: 'response', headers?: Headers): Observable<HttpResponse<CreateEmbeddingResponse>>;
    public createEmbedding(createEmbeddingRequest: CreateEmbeddingRequest, observe: any = 'body', headers: Headers = {}): Observable<any> {
        if (createEmbeddingRequest === null || createEmbeddingRequest === undefined){
            throw new Error('Required parameter createEmbeddingRequest was null or undefined when calling createEmbedding.');
        }

        // authentication (ApiKeyAuth) required
        headers['Accept'] = 'application/json';
        headers['Content-Type'] = 'application/json';

        const response: Observable<HttpResponse<CreateEmbeddingResponse>> = this.httpClient.post(`${this.basePath}/embeddings`, createEmbeddingRequest , headers);
        if (observe === 'body') {
               return response.pipe(
                   map((httpResponse: HttpResponse) => <CreateEmbeddingResponse>(httpResponse.response))
               );
        }
        return response;
    }

}
