/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AssistantsApiResponseFormat } from './assistantsApiResponseFormat';

/**
* Specifies the format that the model must output. Compatible with [GPT-4 Turbo](/docs/models/gpt-4-and-gpt-4-turbo) and all GPT-3.5 Turbo models newer than `gpt-3.5-turbo-1106`.  Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the message the model generates is valid JSON.  **Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly \"stuck\" request. Also note that the message content may be partially cut off if `finish_reason=\"length\"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length. 
*/
export class AssistantsApiResponseFormatOption {
    /**
    * Must be one of `text` or `json_object`.
    */
    'type'?: AssistantsApiResponseFormatOption.TypeEnum = AssistantsApiResponseFormatOption.TypeEnum.Text;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "AssistantsApiResponseFormatOption.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return AssistantsApiResponseFormatOption.attributeTypeMap;
    }
}

export namespace AssistantsApiResponseFormatOption {
    export enum TypeEnum {
        Text = <any> 'text',
        JsonObject = <any> 'json_object'
    }
}
