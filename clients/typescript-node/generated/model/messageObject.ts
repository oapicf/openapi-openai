/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { MessageObjectContentInner } from './messageObjectContentInner';
import { MessageObjectIncompleteDetails } from './messageObjectIncompleteDetails';

/**
* Represents a message within a [thread](/docs/api-reference/threads).
*/
export class MessageObject {
    /**
    * The identifier, which can be referenced in API endpoints.
    */
    'id': string;
    /**
    * The object type, which is always `thread.message`.
    */
    'object': MessageObject.ObjectEnum;
    /**
    * The Unix timestamp (in seconds) for when the message was created.
    */
    'createdAt': number;
    /**
    * The [thread](/docs/api-reference/threads) ID that this message belongs to.
    */
    'threadId': string;
    /**
    * The status of the message, which can be either `in_progress`, `incomplete`, or `completed`.
    */
    'status': MessageObject.StatusEnum;
    'incompleteDetails': MessageObjectIncompleteDetails | null;
    /**
    * The Unix timestamp (in seconds) for when the message was completed.
    */
    'completedAt': number | null;
    /**
    * The Unix timestamp (in seconds) for when the message was marked as incomplete.
    */
    'incompleteAt': number | null;
    /**
    * The entity that produced the message. One of `user` or `assistant`.
    */
    'role': MessageObject.RoleEnum;
    /**
    * The content of the message in array of text and/or images.
    */
    'content': Array<MessageObjectContentInner>;
    /**
    * If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message.
    */
    'assistantId': string | null;
    /**
    * The ID of the [run](/docs/api-reference/runs) associated with the creation of this message. Value is `null` when messages are created manually using the create message or create thread endpoints.
    */
    'runId': string | null;
    /**
    * A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
    */
    'fileIds': Array<string>;
    /**
    * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
    */
    'metadata': object | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "MessageObject.ObjectEnum"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "number"
        },
        {
            "name": "threadId",
            "baseName": "thread_id",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "MessageObject.StatusEnum"
        },
        {
            "name": "incompleteDetails",
            "baseName": "incomplete_details",
            "type": "MessageObjectIncompleteDetails"
        },
        {
            "name": "completedAt",
            "baseName": "completed_at",
            "type": "number"
        },
        {
            "name": "incompleteAt",
            "baseName": "incomplete_at",
            "type": "number"
        },
        {
            "name": "role",
            "baseName": "role",
            "type": "MessageObject.RoleEnum"
        },
        {
            "name": "content",
            "baseName": "content",
            "type": "Array<MessageObjectContentInner>"
        },
        {
            "name": "assistantId",
            "baseName": "assistant_id",
            "type": "string"
        },
        {
            "name": "runId",
            "baseName": "run_id",
            "type": "string"
        },
        {
            "name": "fileIds",
            "baseName": "file_ids",
            "type": "Array<string>"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "object"
        }    ];

    static getAttributeTypeMap() {
        return MessageObject.attributeTypeMap;
    }
}

export namespace MessageObject {
    export enum ObjectEnum {
        ThreadMessage = <any> 'thread.message'
    }
    export enum StatusEnum {
        InProgress = <any> 'in_progress',
        Incomplete = <any> 'incomplete',
        Completed = <any> 'completed'
    }
    export enum RoleEnum {
        User = <any> 'user',
        Assistant = <any> 'assistant'
    }
}
