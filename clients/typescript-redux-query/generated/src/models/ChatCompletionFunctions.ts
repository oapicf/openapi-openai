// tslint:disable
/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChatCompletionFunctions
 */
export interface ChatCompletionFunctions  {
    /**
     * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
     * @type {string}
     * @memberof ChatCompletionFunctions
     */
    name: string;
    /**
     * The description of what the function does.
     * @type {string}
     * @memberof ChatCompletionFunctions
     */
    description?: string;
    /**
     * The parameters the functions accepts, described as a JSON Schema object. See the [guide](/docs/guides/gpt/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation about the format.
     * @type {{ [key: string]: any; }}
     * @memberof ChatCompletionFunctions
     */
    parameters?: { [key: string]: any; };
}

export function ChatCompletionFunctionsFromJSON(json: any): ChatCompletionFunctions {
    return {
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'parameters': !exists(json, 'parameters') ? undefined : json['parameters'],
    };
}

export function ChatCompletionFunctionsToJSON(value?: ChatCompletionFunctions): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'description': value.description,
        'parameters': value.parameters,
    };
}


