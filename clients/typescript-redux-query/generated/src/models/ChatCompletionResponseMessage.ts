// tslint:disable
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChatCompletionMessageToolCall,
    ChatCompletionMessageToolCallFromJSON,
    ChatCompletionMessageToolCallToJSON,
    ChatCompletionRequestAssistantMessageFunctionCall,
    ChatCompletionRequestAssistantMessageFunctionCallFromJSON,
    ChatCompletionRequestAssistantMessageFunctionCallToJSON,
} from './';

/**
 * A chat completion message generated by the model.
 * @export
 * @interface ChatCompletionResponseMessage
 */
export interface ChatCompletionResponseMessage  {
    /**
     * The contents of the message.
     * @type {string}
     * @memberof ChatCompletionResponseMessage
     */
    content: string;
    /**
     * The tool calls generated by the model, such as function calls.
     * @type {Array<ChatCompletionMessageToolCall>}
     * @memberof ChatCompletionResponseMessage
     */
    toolCalls?: Array<ChatCompletionMessageToolCall>;
    /**
     * The role of the author of this message.
     * @type {string}
     * @memberof ChatCompletionResponseMessage
     */
    role: ChatCompletionResponseMessageRoleEnum;
    /**
     * 
     * @type {ChatCompletionRequestAssistantMessageFunctionCall}
     * @memberof ChatCompletionResponseMessage
     */
    functionCall?: ChatCompletionRequestAssistantMessageFunctionCall;
}

export function ChatCompletionResponseMessageFromJSON(json: any): ChatCompletionResponseMessage {
    return {
        'content': json['content'],
        'toolCalls': !exists(json, 'tool_calls') ? undefined : (json['tool_calls'] as Array<any>).map(ChatCompletionMessageToolCallFromJSON),
        'role': json['role'],
        'functionCall': !exists(json, 'function_call') ? undefined : ChatCompletionRequestAssistantMessageFunctionCallFromJSON(json['function_call']),
    };
}

export function ChatCompletionResponseMessageToJSON(value?: ChatCompletionResponseMessage): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'content': value.content,
        'tool_calls': value.toolCalls === undefined ? undefined : (value.toolCalls as Array<any>).map(ChatCompletionMessageToolCallToJSON),
        'role': value.role,
        'function_call': ChatCompletionRequestAssistantMessageFunctionCallToJSON(value.functionCall),
    };
}

/**
* @export
* @enum {string}
*/
export enum ChatCompletionResponseMessageRoleEnum {
    Assistant = 'assistant'
}


