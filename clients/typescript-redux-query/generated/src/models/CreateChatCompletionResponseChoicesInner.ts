// tslint:disable
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChatCompletionResponseMessage,
    ChatCompletionResponseMessageFromJSON,
    ChatCompletionResponseMessageToJSON,
    CreateChatCompletionResponseChoicesInnerLogprobs,
    CreateChatCompletionResponseChoicesInnerLogprobsFromJSON,
    CreateChatCompletionResponseChoicesInnerLogprobsToJSON,
} from './';

/**
 * 
 * @export
 * @interface CreateChatCompletionResponseChoicesInner
 */
export interface CreateChatCompletionResponseChoicesInner  {
    /**
     * The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence, `length` if the maximum number of tokens specified in the request was reached, `content_filter` if content was omitted due to a flag from our content filters, `tool_calls` if the model called a tool, or `function_call` (deprecated) if the model called a function. 
     * @type {string}
     * @memberof CreateChatCompletionResponseChoicesInner
     */
    finishReason: CreateChatCompletionResponseChoicesInnerFinishReasonEnum;
    /**
     * The index of the choice in the list of choices.
     * @type {number}
     * @memberof CreateChatCompletionResponseChoicesInner
     */
    index: number;
    /**
     * 
     * @type {ChatCompletionResponseMessage}
     * @memberof CreateChatCompletionResponseChoicesInner
     */
    message: ChatCompletionResponseMessage;
    /**
     * 
     * @type {CreateChatCompletionResponseChoicesInnerLogprobs}
     * @memberof CreateChatCompletionResponseChoicesInner
     */
    logprobs: CreateChatCompletionResponseChoicesInnerLogprobs;
}

export function CreateChatCompletionResponseChoicesInnerFromJSON(json: any): CreateChatCompletionResponseChoicesInner {
    return {
        'finishReason': json['finish_reason'],
        'index': json['index'],
        'message': ChatCompletionResponseMessageFromJSON(json['message']),
        'logprobs': CreateChatCompletionResponseChoicesInnerLogprobsFromJSON(json['logprobs']),
    };
}

export function CreateChatCompletionResponseChoicesInnerToJSON(value?: CreateChatCompletionResponseChoicesInner): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'finish_reason': value.finishReason,
        'index': value.index,
        'message': ChatCompletionResponseMessageToJSON(value.message),
        'logprobs': CreateChatCompletionResponseChoicesInnerLogprobsToJSON(value.logprobs),
    };
}

/**
* @export
* @enum {string}
*/
export enum CreateChatCompletionResponseChoicesInnerFinishReasonEnum {
    Stop = 'stop',
    Length = 'length',
    ToolCalls = 'tool_calls',
    ContentFilter = 'content_filter',
    FunctionCall = 'function_call'
}


