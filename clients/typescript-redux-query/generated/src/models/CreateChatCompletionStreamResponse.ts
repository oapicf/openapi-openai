// tslint:disable
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CreateChatCompletionStreamResponseChoicesInner,
    CreateChatCompletionStreamResponseChoicesInnerFromJSON,
    CreateChatCompletionStreamResponseChoicesInnerToJSON,
} from './';

/**
 * Represents a streamed chunk of a chat completion response returned by model, based on the provided input.
 * @export
 * @interface CreateChatCompletionStreamResponse
 */
export interface CreateChatCompletionStreamResponse  {
    /**
     * A unique identifier for the chat completion. Each chunk has the same ID.
     * @type {string}
     * @memberof CreateChatCompletionStreamResponse
     */
    id: string;
    /**
     * A list of chat completion choices. Can be more than one if `n` is greater than 1.
     * @type {Array<CreateChatCompletionStreamResponseChoicesInner>}
     * @memberof CreateChatCompletionStreamResponse
     */
    choices: Array<CreateChatCompletionStreamResponseChoicesInner>;
    /**
     * The Unix timestamp (in seconds) of when the chat completion was created. Each chunk has the same timestamp.
     * @type {number}
     * @memberof CreateChatCompletionStreamResponse
     */
    created: number;
    /**
     * The model to generate the completion.
     * @type {string}
     * @memberof CreateChatCompletionStreamResponse
     */
    model: string;
    /**
     * This fingerprint represents the backend configuration that the model runs with. Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism. 
     * @type {string}
     * @memberof CreateChatCompletionStreamResponse
     */
    systemFingerprint?: string;
    /**
     * The object type, which is always `chat.completion.chunk`.
     * @type {string}
     * @memberof CreateChatCompletionStreamResponse
     */
    object: CreateChatCompletionStreamResponseObjectEnum;
}

export function CreateChatCompletionStreamResponseFromJSON(json: any): CreateChatCompletionStreamResponse {
    return {
        'id': json['id'],
        'choices': (json['choices'] as Array<any>).map(CreateChatCompletionStreamResponseChoicesInnerFromJSON),
        'created': json['created'],
        'model': json['model'],
        'systemFingerprint': !exists(json, 'system_fingerprint') ? undefined : json['system_fingerprint'],
        'object': json['object'],
    };
}

export function CreateChatCompletionStreamResponseToJSON(value?: CreateChatCompletionStreamResponse): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'choices': (value.choices as Array<any>).map(CreateChatCompletionStreamResponseChoicesInnerToJSON),
        'created': value.created,
        'model': value.model,
        'system_fingerprint': value.systemFingerprint,
        'object': value.object,
    };
}

/**
* @export
* @enum {string}
*/
export enum CreateChatCompletionStreamResponseObjectEnum {
    ChatCompletionChunk = 'chat.completion.chunk'
}


