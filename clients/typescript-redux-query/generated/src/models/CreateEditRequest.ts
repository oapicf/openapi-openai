// tslint:disable
/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CreateEditRequestModel,
    CreateEditRequestModelFromJSON,
    CreateEditRequestModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface CreateEditRequest
 */
export interface CreateEditRequest  {
    /**
     * 
     * @type {CreateEditRequestModel}
     * @memberof CreateEditRequest
     */
    model: CreateEditRequestModel;
    /**
     * The input text to use as a starting point for the edit.
     * @type {string}
     * @memberof CreateEditRequest
     */
    input?: string;
    /**
     * The instruction that tells the model how to edit the prompt.
     * @type {string}
     * @memberof CreateEditRequest
     */
    instruction: string;
    /**
     * How many edits to generate for the input and instruction.
     * @type {number}
     * @memberof CreateEditRequest
     */
    n?: number;
    /**
     * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.  We generally recommend altering this or `top_p` but not both. 
     * @type {number}
     * @memberof CreateEditRequest
     */
    temperature?: number;
    /**
     * An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or `temperature` but not both. 
     * @type {number}
     * @memberof CreateEditRequest
     */
    topP?: number;
}

export function CreateEditRequestFromJSON(json: any): CreateEditRequest {
    return {
        'model': CreateEditRequestModelFromJSON(json['model']),
        'input': !exists(json, 'input') ? undefined : json['input'],
        'instruction': json['instruction'],
        'n': !exists(json, 'n') ? undefined : json['n'],
        'temperature': !exists(json, 'temperature') ? undefined : json['temperature'],
        'topP': !exists(json, 'top_p') ? undefined : json['top_p'],
    };
}

export function CreateEditRequestToJSON(value?: CreateEditRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'model': CreateEditRequestModelToJSON(value.model),
        'input': value.input,
        'instruction': value.instruction,
        'n': value.n,
        'temperature': value.temperature,
        'top_p': value.topP,
    };
}


