// tslint:disable
/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateImageRequest
 */
export interface CreateImageRequest  {
    /**
     * A text description of the desired image(s). The maximum length is 1000 characters.
     * @type {string}
     * @memberof CreateImageRequest
     */
    prompt: string;
    /**
     * The number of images to generate. Must be between 1 and 10.
     * @type {number}
     * @memberof CreateImageRequest
     */
    n?: number;
    /**
     * The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
     * @type {string}
     * @memberof CreateImageRequest
     */
    size?: CreateImageRequestSizeEnum;
    /**
     * The format in which the generated images are returned. Must be one of `url` or `b64_json`.
     * @type {string}
     * @memberof CreateImageRequest
     */
    responseFormat?: CreateImageRequestResponseFormatEnum;
    /**
     * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
     * @type {string}
     * @memberof CreateImageRequest
     */
    user?: string;
}

export function CreateImageRequestFromJSON(json: any): CreateImageRequest {
    return {
        'prompt': json['prompt'],
        'n': !exists(json, 'n') ? undefined : json['n'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'responseFormat': !exists(json, 'response_format') ? undefined : json['response_format'],
        'user': !exists(json, 'user') ? undefined : json['user'],
    };
}

export function CreateImageRequestToJSON(value?: CreateImageRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'prompt': value.prompt,
        'n': value.n,
        'size': value.size,
        'response_format': value.responseFormat,
        'user': value.user,
    };
}

/**
* @export
* @enum {string}
*/
export enum CreateImageRequestSizeEnum {
    _256x256 = '256x256',
    _512x512 = '512x512',
    _1024x1024 = '1024x1024'
}
/**
* @export
* @enum {string}
*/
export enum CreateImageRequestResponseFormatEnum {
    Url = 'url',
    B64Json = 'b64_json'
}


