// tslint:disable
/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FineTuneEvent,
    FineTuneEventFromJSON,
    FineTuneEventToJSON,
    OpenAIFile,
    OpenAIFileFromJSON,
    OpenAIFileToJSON,
} from './';

/**
 * 
 * @export
 * @interface FineTune
 */
export interface FineTune  {
    /**
     * 
     * @type {string}
     * @memberof FineTune
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof FineTune
     */
    object: string;
    /**
     * 
     * @type {number}
     * @memberof FineTune
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof FineTune
     */
    updatedAt: number;
    /**
     * 
     * @type {string}
     * @memberof FineTune
     */
    model: string;
    /**
     * 
     * @type {string}
     * @memberof FineTune
     */
    fineTunedModel: string;
    /**
     * 
     * @type {string}
     * @memberof FineTune
     */
    organizationId: string;
    /**
     * 
     * @type {string}
     * @memberof FineTune
     */
    status: string;
    /**
     * 
     * @type {object}
     * @memberof FineTune
     */
    hyperparams: object;
    /**
     * 
     * @type {Array<OpenAIFile>}
     * @memberof FineTune
     */
    trainingFiles: Array<OpenAIFile>;
    /**
     * 
     * @type {Array<OpenAIFile>}
     * @memberof FineTune
     */
    validationFiles: Array<OpenAIFile>;
    /**
     * 
     * @type {Array<OpenAIFile>}
     * @memberof FineTune
     */
    resultFiles: Array<OpenAIFile>;
    /**
     * 
     * @type {Array<FineTuneEvent>}
     * @memberof FineTune
     */
    events?: Array<FineTuneEvent>;
}

export function FineTuneFromJSON(json: any): FineTune {
    return {
        'id': json['id'],
        'object': json['object'],
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
        'model': json['model'],
        'fineTunedModel': json['fine_tuned_model'],
        'organizationId': json['organization_id'],
        'status': json['status'],
        'hyperparams': json['hyperparams'],
        'trainingFiles': (json['training_files'] as Array<any>).map(OpenAIFileFromJSON),
        'validationFiles': (json['validation_files'] as Array<any>).map(OpenAIFileFromJSON),
        'resultFiles': (json['result_files'] as Array<any>).map(OpenAIFileFromJSON),
        'events': !exists(json, 'events') ? undefined : (json['events'] as Array<any>).map(FineTuneEventFromJSON),
    };
}

export function FineTuneToJSON(value?: FineTune): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'object': value.object,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'model': value.model,
        'fine_tuned_model': value.fineTunedModel,
        'organization_id': value.organizationId,
        'status': value.status,
        'hyperparams': value.hyperparams,
        'training_files': (value.trainingFiles as Array<any>).map(OpenAIFileToJSON),
        'validation_files': (value.validationFiles as Array<any>).map(OpenAIFileToJSON),
        'result_files': (value.resultFiles as Array<any>).map(OpenAIFileToJSON),
        'events': value.events === undefined ? undefined : (value.events as Array<any>).map(FineTuneEventToJSON),
    };
}


