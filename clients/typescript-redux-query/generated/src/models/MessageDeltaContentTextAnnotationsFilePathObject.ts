// tslint:disable
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MessageDeltaContentTextAnnotationsFilePathObjectFilePath,
    MessageDeltaContentTextAnnotationsFilePathObjectFilePathFromJSON,
    MessageDeltaContentTextAnnotationsFilePathObjectFilePathToJSON,
} from './';

/**
 * A URL for the file that\'s generated when the assistant used the `code_interpreter` tool to generate a file.
 * @export
 * @interface MessageDeltaContentTextAnnotationsFilePathObject
 */
export interface MessageDeltaContentTextAnnotationsFilePathObject  {
    /**
     * The index of the annotation in the text content part.
     * @type {number}
     * @memberof MessageDeltaContentTextAnnotationsFilePathObject
     */
    index: number;
    /**
     * Always `file_path`.
     * @type {string}
     * @memberof MessageDeltaContentTextAnnotationsFilePathObject
     */
    type: MessageDeltaContentTextAnnotationsFilePathObjectTypeEnum;
    /**
     * The text in the message content that needs to be replaced.
     * @type {string}
     * @memberof MessageDeltaContentTextAnnotationsFilePathObject
     */
    text?: string;
    /**
     * 
     * @type {MessageDeltaContentTextAnnotationsFilePathObjectFilePath}
     * @memberof MessageDeltaContentTextAnnotationsFilePathObject
     */
    filePath?: MessageDeltaContentTextAnnotationsFilePathObjectFilePath;
    /**
     * 
     * @type {number}
     * @memberof MessageDeltaContentTextAnnotationsFilePathObject
     */
    startIndex?: number;
    /**
     * 
     * @type {number}
     * @memberof MessageDeltaContentTextAnnotationsFilePathObject
     */
    endIndex?: number;
}

export function MessageDeltaContentTextAnnotationsFilePathObjectFromJSON(json: any): MessageDeltaContentTextAnnotationsFilePathObject {
    return {
        'index': json['index'],
        'type': json['type'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'filePath': !exists(json, 'file_path') ? undefined : MessageDeltaContentTextAnnotationsFilePathObjectFilePathFromJSON(json['file_path']),
        'startIndex': !exists(json, 'start_index') ? undefined : json['start_index'],
        'endIndex': !exists(json, 'end_index') ? undefined : json['end_index'],
    };
}

export function MessageDeltaContentTextAnnotationsFilePathObjectToJSON(value?: MessageDeltaContentTextAnnotationsFilePathObject): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'index': value.index,
        'type': value.type,
        'text': value.text,
        'file_path': MessageDeltaContentTextAnnotationsFilePathObjectFilePathToJSON(value.filePath),
        'start_index': value.startIndex,
        'end_index': value.endIndex,
    };
}

/**
* @export
* @enum {string}
*/
export enum MessageDeltaContentTextAnnotationsFilePathObjectTypeEnum {
    FilePath = 'file_path'
}


