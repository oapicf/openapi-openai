// tslint:disable
/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RunStepCompletionUsage,
    RunStepCompletionUsageFromJSON,
    RunStepCompletionUsageToJSON,
    RunStepObjectLastError,
    RunStepObjectLastErrorFromJSON,
    RunStepObjectLastErrorToJSON,
    RunStepObjectStepDetails,
    RunStepObjectStepDetailsFromJSON,
    RunStepObjectStepDetailsToJSON,
} from './';

/**
 * Represents a step in execution of a run. 
 * @export
 * @interface RunStepObject
 */
export interface RunStepObject  {
    /**
     * The identifier of the run step, which can be referenced in API endpoints.
     * @type {string}
     * @memberof RunStepObject
     */
    id: string;
    /**
     * The object type, which is always `thread.run.step`.
     * @type {string}
     * @memberof RunStepObject
     */
    object: RunStepObjectObjectEnum;
    /**
     * The Unix timestamp (in seconds) for when the run step was created.
     * @type {number}
     * @memberof RunStepObject
     */
    createdAt: number;
    /**
     * The ID of the [assistant](/docs/api-reference/assistants) associated with the run step.
     * @type {string}
     * @memberof RunStepObject
     */
    assistantId: string;
    /**
     * The ID of the [thread](/docs/api-reference/threads) that was run.
     * @type {string}
     * @memberof RunStepObject
     */
    threadId: string;
    /**
     * The ID of the [run](/docs/api-reference/runs) that this run step is a part of.
     * @type {string}
     * @memberof RunStepObject
     */
    runId: string;
    /**
     * The type of run step, which can be either `message_creation` or `tool_calls`.
     * @type {string}
     * @memberof RunStepObject
     */
    type: RunStepObjectTypeEnum;
    /**
     * The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.
     * @type {string}
     * @memberof RunStepObject
     */
    status: RunStepObjectStatusEnum;
    /**
     * 
     * @type {RunStepObjectStepDetails}
     * @memberof RunStepObject
     */
    stepDetails: RunStepObjectStepDetails;
    /**
     * 
     * @type {RunStepObjectLastError}
     * @memberof RunStepObject
     */
    lastError: RunStepObjectLastError;
    /**
     * The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.
     * @type {number}
     * @memberof RunStepObject
     */
    expiredAt: number;
    /**
     * The Unix timestamp (in seconds) for when the run step was cancelled.
     * @type {number}
     * @memberof RunStepObject
     */
    cancelledAt: number;
    /**
     * The Unix timestamp (in seconds) for when the run step failed.
     * @type {number}
     * @memberof RunStepObject
     */
    failedAt: number;
    /**
     * The Unix timestamp (in seconds) for when the run step completed.
     * @type {number}
     * @memberof RunStepObject
     */
    completedAt: number;
    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
     * @type {object}
     * @memberof RunStepObject
     */
    metadata: object;
    /**
     * 
     * @type {RunStepCompletionUsage}
     * @memberof RunStepObject
     */
    usage: RunStepCompletionUsage;
}

export function RunStepObjectFromJSON(json: any): RunStepObject {
    return {
        'id': json['id'],
        'object': json['object'],
        'createdAt': json['created_at'],
        'assistantId': json['assistant_id'],
        'threadId': json['thread_id'],
        'runId': json['run_id'],
        'type': json['type'],
        'status': json['status'],
        'stepDetails': RunStepObjectStepDetailsFromJSON(json['step_details']),
        'lastError': RunStepObjectLastErrorFromJSON(json['last_error']),
        'expiredAt': json['expired_at'],
        'cancelledAt': json['cancelled_at'],
        'failedAt': json['failed_at'],
        'completedAt': json['completed_at'],
        'metadata': json['metadata'],
        'usage': RunStepCompletionUsageFromJSON(json['usage']),
    };
}

export function RunStepObjectToJSON(value?: RunStepObject): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'object': value.object,
        'created_at': value.createdAt,
        'assistant_id': value.assistantId,
        'thread_id': value.threadId,
        'run_id': value.runId,
        'type': value.type,
        'status': value.status,
        'step_details': RunStepObjectStepDetailsToJSON(value.stepDetails),
        'last_error': RunStepObjectLastErrorToJSON(value.lastError),
        'expired_at': value.expiredAt,
        'cancelled_at': value.cancelledAt,
        'failed_at': value.failedAt,
        'completed_at': value.completedAt,
        'metadata': value.metadata,
        'usage': RunStepCompletionUsageToJSON(value.usage),
    };
}

/**
* @export
* @enum {string}
*/
export enum RunStepObjectObjectEnum {
    ThreadRunStep = 'thread.run.step'
}
/**
* @export
* @enum {string}
*/
export enum RunStepObjectTypeEnum {
    MessageCreation = 'message_creation',
    ToolCalls = 'tool_calls'
}
/**
* @export
* @enum {string}
*/
export enum RunStepObjectStatusEnum {
    InProgress = 'in_progress',
    Cancelled = 'cancelled',
    Failed = 'failed',
    Completed = 'completed',
    Expired = 'expired'
}


