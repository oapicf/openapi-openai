/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MessageDeltaObjectDeltaContentInner } from '../models/MessageDeltaObjectDeltaContentInner';
import { HttpFile } from '../http/http';

/**
* The delta containing the fields that have changed on the Message.
*/
export class MessageDeltaObjectDelta {
    /**
    * The entity that produced the message. One of `user` or `assistant`.
    */
    'role'?: MessageDeltaObjectDeltaRoleEnum;
    /**
    * The content of the message in array of text and/or images.
    */
    'content'?: Array<MessageDeltaObjectDeltaContentInner>;
    /**
    * A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
    */
    'fileIds'?: Array<string>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "role",
            "baseName": "role",
            "type": "MessageDeltaObjectDeltaRoleEnum",
            "format": ""
        },
        {
            "name": "content",
            "baseName": "content",
            "type": "Array<MessageDeltaObjectDeltaContentInner>",
            "format": ""
        },
        {
            "name": "fileIds",
            "baseName": "file_ids",
            "type": "Array<string>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return MessageDeltaObjectDelta.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum MessageDeltaObjectDeltaRoleEnum {
    User = 'user',
    Assistant = 'assistant'
}

