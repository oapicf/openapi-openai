const utils = require('../utils/utils');

module.exports = {
    fields: (prefix = '', isInput = true, isArrayChild = false) => {
        const {keyPrefix, labelPrefix} = utils.buildKeyAndLabel(prefix, isInput, isArrayChild)
        return [
            {
                key: `${keyPrefix}project`,
                label: `The name of the project that the new run will be created under.  - [${labelPrefix}project]`,
                required: true,
                type: 'string',
            },
            {
                key: `${keyPrefix}name`,
                label: `A display name to set for the run. If not set, we will use the Job ID as the name.  - [${labelPrefix}name]`,
                type: 'string',
            },
            {
                key: `${keyPrefix}entity`,
                label: `The entity to use for the run. This allows you to set the team or username of the WandB user that you would like associated with the run. If not set, the default entity for the registered WandB API key is used.  - [${labelPrefix}entity]`,
                type: 'string',
            },
            {
                key: `${keyPrefix}tags`,
                label: `A list of tags to be attached to the newly created run. These tags are passed through directly to WandB. Some default tags are generated by OpenAI: \"openai/finetune\", \"openai/{base-model}\", \"openai/{ftjob-abcdef}\".  - [${labelPrefix}tags]`,
                list: true,
                type: 'string',
            },
        ]
    },
    mapping: (bundle, prefix = '') => {
        const {keyPrefix} = utils.buildKeyAndLabel(prefix)
        return {
            'project': bundle.inputData?.[`${keyPrefix}project`],
            'name': bundle.inputData?.[`${keyPrefix}name`],
            'entity': bundle.inputData?.[`${keyPrefix}entity`],
            'tags': bundle.inputData?.[`${keyPrefix}tags`],
        }
    },
}
